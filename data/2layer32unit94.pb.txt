node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\035W_\276\367Bb=V\323\273?\320\333\252\276\350\303\273>\016\222}\276V\324R=\323x\321\276/&-?\224$5\277\333\223\257>5\362I=\234\034e\275{\204p\277OT\213\2763s\032\276\342\373F>xS\207\275\220R\310\275\337\024\261>\366\020\016\277\320Y\212>\332\2038=\337\036\254\257\002\320P\277V\332\252\276*\037!?r\"\034>i\3476>3^\351\275\300J\317\277Q\334r=s\3329>\203\024\036\276\351L\200\276\251\241\246=\316$F\276\003\032\016\275\300\350\224\275\251I\235>u\267\356\274~w\223=\225\247 \276\223\014\013\275\314u\014\276\034\367\222>rV\371=].\276\276ObZ<7\261\207\275zyq=\216l\'>3zh>\245\037\223\276\245\"\020\276\234i*\275B\016J\276\374Uk\275\353\205\263\274\274\255r\276\374\235\261\275+\213k\275\237\347\336>\240\352F\275Mqn=r\021\003>\n\344\000\276\256\305\302=\210\2203\275<\034\013\275T\027\225\275\253\273\372\274a\240*\274\2668\013?i\215\204=L\305\213\273\326x\274\276\020\363\275<\2340\236>\321\354N=wk<<R[\362\276\244x*={\346A>\245Wl9?\215C\276 \254\260\276\227\313\322/q \336\275\261\241/=i\271\372=\263(G\276\027WZ\274\241\274P\275\302\346F\275\305|\226\275\305\017\215\276ac\330>\'>\">\\z\203>Q\024c\277\267\r\276\275\320;\034\277\231\014\224?\362Y\222=?I)\277\030\205e\276Y\271|\277EK\346\276^\340\010=\306}\"\277\'\023\375\2768\313\022\277{qG?#\212\250>j\224I\276]G\257\276\245\273\221>{6%\277\325x39\004M \277\227\017\305?\212<\261>\202=\025>\036&\312\275\034\000\252>~\362-\277\253\033h>\365\322\275>.\271\000=\t\205M>\034vp\276\275+\233\276\235{\321\276f\366\213\276\300G\000\277\325\3610\277y\302i\277\276+\312>>1\227\275\014f\350\275\234\272q\277\256\251\311\276\023\313\037\277Bm\205\275\241=\226>\210U4<\032%\021\300h\322\220\276\276E\275?\330d\220>%\201j5g\022\207\277\232g\225\273\336\250\231\275\"\212\354\274\227\034\001\276\252\323\322>\245\314x>\324\326\330\276\352\353\236=,8>>R&\203\276x:#\276\005p\335\276\030\315-\275.c4\277\316p\304\276\213\r\233?d\217Y=@\344H?\205\233\356=U\030\267\277\014_\226\276\002\367j>|\273\277>\324]\313>B\332\342=q\225\034<U\272\022>7\201\340\275\360w\346=R\247\225>Y\005\3340\262g\000\277\\r\243>\245\030\013?\254\001\323>\372F\204>\344\203;\275s\244]?\241\007\364\276\310)\306?y-\032?\223ys?\315\356\333\2752\352\222\276Pl\202?\253\377\r\276O%\"\277\227\213\204?;\263\225>\271o\345\276\317\264\315\277\3276\222\276\217p\n>8\020D>h\323\035\277K8(\277t\371*>W\204\020\277\346\361\327\277\377\377\224\277z\347&\277\214\273\275?\235\016Q\275(5\225>\345Z\262>F\205\231?Q\356\214>_[\361\276\316\276\032?\364|Z\277\333\241\240\277\340Ek>\364\\\333<\267.w>\202\272\212\277\371\241\222\276\223\275\254?c6\025=l\026\314>\205&\247\276!\361\225\276\341\350\235\277\241D\244?/o\234>\353\3416\277t\3404?\250\205\305?\271\315\224?\250_\000\276\334\211G=\014Z\016>\020\265\033\277\251N&>\331(\250>\350\375\3706\2071\214\276\271ZK\277\"8\230=\313\237\206\2747\302b\277L$?\275\363\345\226\277\325`\006\275\007/\303?\244\372\323>-\376 ?\372\346\203?\326\354$>?\206\342= \374z>$\253\252\277w\002\340\277\310\312J>\241\337b?\326\020U>\357!#\277\3101\213\275\345\357\241=i\335\255?\375\206\366\277NsQ\277\322k\036\275\233\314\232>g\336K?\0073\016>\254Y\247>\376\370*\276\340\306e\277&V\177=\"Rt\276\201\013_>]E\217\276:\250\374\276\302\217\363>\333\004\200\277"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "H\325\310>)lU=\363@\275?\225@&?\373\177r?-\030V\276\013\243j\275\262\274\274?F\032\276?\211\265A\276\260i\215?\210\352\013@.\262\264>\341\030\236?\251\336\035?\241\036\025@\3522\'?\357\322`\275<\004\305>A\317\016@rR0@-<8?`M\013>\3552M\276W\346\r\276\201\240\252=|\266\036?\032\254\267?\245\222R>[=\264?\376\3103@J#\226?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/Shape"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\355jY\275\027lE\275\022\235\246=\215\221\237=\216\230\331\275E<\332=\350YR\2756T\211\274\034\250\261\275A+z=\330{H\275\016<\377\2758U\304<\263\314\375\274\350\322?\274~\032\251\275\314\3239=\303\026\250\274\355[f;\353\357\233\272f@\202\275)\314\334\273PN\037=p\013\365\275\201\217*\275j`[\275%\0346>\'\016\234=\t\256\301=\376!\215\275\261\360\201=1\\f\274N\317\030>\375\360$<\233\202\301=\000\347\027=\322\266)\276.\272\024\275d\t\366\275\361J\002\276h/\220\275\3701\264=\277\000;\276\303r\007\276\342f-\276\221\"w=\340\242\023>y\016\200\274\336\365\335\275\005G\243=\260^\256<\253\r\371=!W\035=X\004\235=~o\353\275\274\226\024>\271<\357<\022\254\261=\032#\211=\304t\272\274\3544)\276\247\001~\275\323\362\023>\205%\206\274\312Di=\333\306\241\275\266\373\005\276i\315\351\275\025TW\275I\rP>\006\203k\275\325:\"\276.c\265\2759<\216\275C?\'>\333\270\244<\3259\242\274\323\260\375\274\004^\272\275\314\315\020>\337\030A\275Q\221\022\274\344\253\"=\216\341\365\275c\304F>\005t\272\275\352\304\347<\257\020\202\272\320\"N\275=a&>4\247\032>\256\221\014=\303NJ=\240\337r=\361\321\200\275\331H\317=h@\257=\020N\264;D\231.=)\220\241\275-\214\013\276=\216(<\351\252\330\275.\315^=\240Q\000>\362P\255=\227\265\314=\3457\344=T\357\201\273\035(\345\275\035o?>\177U\360=\343\033,\276\202S\003>\370\376\217=8\366 \276b\270\310=\3511\374\275AC\030\276/l\350<\262\346*=\324&\016>h\367\010>%T\326=V\355\n\276AM\205\275\236\036\237\275Ee\303=\0253U\275X\030\273=(\347\220=Y\306\236<\306\311\306=\032\216\275\273\227\2652<\254p-\276O\276\020=\3134\326\2746\016\271=\026Q\337\275\370sL=j\226\262\274\017]\230\275\374V)>\000\003`</.\300\274\206\272\245=/\357\223<o:\351\274\017>%\275i\216]\274,K\261=\021=\231=F\230M=x98\275\321z\024\275\271\204\354\274 \216\036\2747\033\265<\340\036\010=$H#\2754/]=`\306V\275{Q\245\275t\nc\275\300r\352<\261t\266\274\340\003|<]\3728>\371\2762=\235\024[<\210\346\357=\334\351\277<L\024\213\274#\004b=\262\327$;\306\314\271;\004\375\207\275\270\002\317=d\326\342=\271\225\r\275#\326k\2752S1\274\276\362\255=#@/\276\320\213\004>\010P\243={\221%\275\215Ya\275\336ck=\35377;\177V\324\273\004\271\322\2733Z=\275\216\n\325\275\316\366\232=:\227\340\275\227\360\202=R\335\352\275\232\321g=\000\006\353<A\240\006\275\2011\031=\344p\216\275\336\374\336;\372y\304\274Ej\016<SY\247\274\376X\300\275\003\257\252\274\226\\\262\275*\177\317=\344$u=~\017|\275\'\360\231<\357Mz=\312\246\302<\331\300\260<uk;\275\322 \320\275d\330\302\275j\361\311\273\203\212m=j\264\237=7\\\246=f\350\246=\224u\332<\354w\323\2754dY;+\362h\275MT\t\276D\335\200=[U\207=?\327\362\273d\312+=#S\004\276\320\341z=\373}\270\275\337Y\325\274\213t\272=\341\2110\275\275\035e=\202\031\227\274],{<\264Z\207=b\257n\274\027Z\316=r\020\023>\272\306\234\275\345\225\252=\240\254\033=\335G\031\275\030\355\001\275\250\315\330<D\264\004>\357M0=\242;{;\211f\225\275(\006\244\275Ed\312\274m\235#\276\255\337z=M\',\275\035\004\325\274\366(\032\276\327\350\367=H\345l>*\232\240\275\315\230\326=M\301\351\2741-h\276\212\002i<*\010\266=X\205\001\273j\357S\2753\032J<\313H@\276\201\005\224\274\272_\217<Zm.>\"\367\256=);\037>\377L\352={)\n\276\226\367\211=\260\213\212\275\240\272\367=\256\336\022=G4q<\374\341\346=\277\226\351\274\003\336&\274\202\212\037\276\326\321\271\275,.J=z\212\031>W\326\243=\000\034\231<\'G\031\276C\201+\273\377\343\001\273\273C+\275\373\2768\276\332\035h=\260S\314=(\245\346=\033Nu\275w\037\213<\2278\243={Z\217\275\347\374\216\274\003\263\251=\206Y\227\2756\202\341=\204+T=\260\021$\2753<u\275;5\002>\032\232\313=\261x\357\273\254\n\n\275pK\376=fT5\276\375;\366\275\020\200\242\275\310\370\220=\333\205\016\275C>A=_\266\252<\235\250U\275\005\301\201\274xa\323=\260%n\275\177V~\2740\233\371\275W\204\003>\271\016\022\276\3163Q<m\tM\275a\301\221\275\202\353\365\275_\274\221\275`\342C\2724\036$>\013\031h\275\036\340\336=\317]e<\364\352R=5]l\274#\034\232=\031\365\032\275\030\331\222=\326\257_\275\260[\214<\214D\251={j\266\274\3441_<!J9<Q<.\275\224*S\275\342\232\200\275\365\227\323<~\247l>D}\020>\021\370\034<\276x]=\031\212\031\276h+\376=\\\334\032\276$:\013>\276\271\030\274}.\274\275\235\264\377=\031\215Y\275\006\031 \276\272\237+>r\365\001\276m,\373\275\"\253\007>d\225\000>\037\221\313\273\327\233\226\274\352\034)>\215p\277=\335\350\355=2b\266=\3462:\276.C\032\274\374\021\252\273@2\025=\365\216X\275wu\225<X\032\202=\016\356\t>\315\312\306=\352\005%\274\371u\227=\363*\335\274\315f\224\274\260\370\r=V\220\352<\005\337\034\274\215\021U=!\326\032\275s\332\375<\221\n\352\273v\275#\274\316\324\315\275;\267>\274\313\276\035\274\241cA=`*\032\275\000A\304\274\242\235\227\2738V\304\273\224\2436<\276\206\360\275\367\217!>Q\256\374\275\336\276\275\275\"\272p\276\264\347\216=@\252\216\275\326&:=\270\2141>S\371z=\213n\200=\027\316\274\274\255@0>\276\364)\273gw\034=\230\265\223<\356\013\366=\360rh=\010\014\325\275\014:$\276\020Qv=\010\263\330=\203\371\203\274\322<\035>\215\346\212=W\377\017\274\267\251o=\327\363\301\275\374\212 >\323\353\302<B\000@\275\365\376\357\275%\373\274=\232\366\321=):$\276.\255\024\275G[\200=}\232m\275}\213\254\274Y\235 >\200\311\357=\364\216\025=n\002.>;\304\030>j\266(\275\245\244\365\274?\303\366=\225\321$>\223h\207\275\343\326\226\273\313`\307\274\276\302O<\221\267\234\275\305\205G<\312g\334\274\'\037f\275{T\366<|\275\236<s\022\253\274\206\205n=\270\340\320\275\221\003\223\275^\004\t\276_\261*=\t\345\035>\307\346\001>\3117\343\274\371\247\302=N\030^\274\006zy\270\364}\333<\016i\326;9\3503>\201\364\237=\255\"\353<tI\231<\327\307\273=\243\214\201\275\264|\000>1g\353\275\267\336\245;\244\334%=\020\255\006\275\251\317\350\275|aS\275\200\362\\<f\333\013>\324cV<\215\026\007\276\240\256\202\275\312F\031=6A\311=\242E&\275:\242V\275Ex\341<\310\033\006<\007\317\205<h\265-=\2561\331\275\356\340\203<\360Y\353\275\tU\355<@\241\364\275\355\177B>\256\014\362\275\361\317\031=\245]\230\274L\256\302=04i<\270\374\212\274\303\321\017\276\356nA\274l\177\222\275,\323\272\274$!\262\275f\213\002=0D\032\276\',q\275VW\251<\337\000O=c\312\207=\033\035\\<c\304\003=\314.\215\275\010\330\005=\274\327\226\274:nh<=\372\315\274\304\031i\275\272\000\275\275Or\312\275\263\335\350\275\351\301\333\275qe\363=?\215\264\275C\361\362\275\256b\213=#V\020\275\030H\337=\324cL<\2754R=9\177W\274\301\014s\2758\244\205\275\006\350.>\234\002\317\274\224HZ<\331\347\005>2\357\332\275\3358u\274T\331\203=\021O.\276\'\226p<\014\"\005\275F4\361=\340\027\325=\372k\257\275\317\352\370;\347\350q\275`\306\253=/5\343\275e\035\366\274\245\356\235=\335@]\274]\326\206\274n\325\201>^\177S\275\322yV\275h\3310\274\303\001\204=,\256\235;\204<&>\017\330\204=[!\246\274\"\rv\275\355D\001>\222\262\262=c\356\226\274$Q\025\275\262\266\315=&\246\030\276>\302B\275\362j&\275\002a\006\275\254\201&=\250]\252\2751\202&=~\276e=\341\375\324\274-\355\216\275\306Q\227\274~\352i\275\014\274\234\275\311\'i=\007\341\241=\315\245\334\275+\334\333=<1\\>\007_o\275\204}\250\274`\372\226=w\373\200<\013\336\372<\226\356B<\013\263C= \253b\275\036\233\325\275\316|\347\275\341\275\223\275\361\323.<\"\007\231=\034\306\036\275\367\212c\274?\3077\275\3552D\275\224\311\304=\3409\252=\023\374\323\275\242\274\010>;\263\275<|U\t>\264\027f;\201+\215=\344Ao\275\274\3256\275\004\3379\275\300k\371\275y\177\203\275n\026\270=\276EU=\364\377|\275p\'M\275\217\360\000\275\262\233\245<\322\002\262\275\322X\220=b>\215<1p\201\274\312\276\277\275>d3=\216\221\220\274\3567%\275\224Qz8At\t;y?\311\275;\037_\274\002V/<\305R\236=\026\357l=\236\006\325\274\244\034S\274\243\022\371\275_{&<\022q%<\307\222\034=\0340\024\274\227\246U=\"\035#=\241$+<\300\240\376\274\313\005\302\275%fh\276\347$\'<\344\236\335<\276\3237>\'\302\325<djq==Pk>\223&\320\275yW\210\274H\213\010>\361.\204=\224+\250\274\223\177\232:\3745\236\275\3149\220\275m5?\276\027\335\252=+\361\036=-\305\352\275\355\307\252\274{\251\010\276[\332\\=\016\347p\276\035v\330\2755&\222\275\333\247\033>\220\210t=:\n\325<\320\361\206\275\245\225\350\273p.\232\275\277t\036>w\357\347<\247v\207\274\3368S<J\213\232\275\200\257\272\274\317P\203=\274\332z=7\006\030=\373l\240\274\337_2\276s\312,>0\257\020=\356d\035\275\212\353\262\275[\243\233\274\352\340\243\274\333/\311\274\210\215\026<}\nK=X\222y=\360\"\377;Tp\345=\321\037\021\276\317\304\234<P\222\\:\332\250+\275\253\346R\275}->=\343;\222\273k\375z=f\000\t\276\275\026 >b\325\025>\342+\277<3\352&=\212\216;\274(8\214=q\314\'=\013\267\035\275\233U\227\273\027\303\330\275?\003\017=\357\255\241\275\346\0307\275OS\351\275\364C\273\275\314\365\227\275\326g\353=4s1\274\345R\206;\021\351\344\275O3.<&B\237<\244ZC<\226\303\202=\342Z\215=\272\320Q\275\005\356\340=P\353d\274~\177g=<l\206\272\356y\255\275\241\004\343\272.\353\220\274\213\034!;\007\211\013\273M\210\306=\026\346\002\275\031F`\273I\";;\276\316\031=\307A\227\273Y\337\206\272\202\254\206\275\343\361\205\273\227\207\356\273\234\':\273\002\364[\273\205w\030<\246\036\370\274\213\00439\311\335E\270\025$\027<v\177\206<\226w\225\274\235\202\370\2748\220\242<\267\2770;\024\032\035\273u\177\004\274\022y\352\273\0079\227=\321\336\000\275\236\016\231=y\212\370;\311\247\007\274\356+\'\276V\226\273\270\302\275g\276\346O\376\275\307::\275\342\371D\275\254\202P>\222\365\020\274\320\022\232\272LAT\275%?\006=z\"^;\242%\272\273\030\313\210=\216\346.=Vs\317\274\253\275\264\273\322\322\005=\3120\261;\233\302\301=\301oP\275\240&\203\274r\230\355=\020\n \275\205\370!\275\006\334C\275\353]!\274S\322\341\274\240\255\2308\250\332\303<E\265\000\273\203\324]\273\326g\016=\277d\2669(K\217\275p\000\210\273\351\275V\273:\320\355:;iv<\230\257(<\370\225\345\271\246\340\037<o\231\225;\223\303\276;\001\267\002\274_k\335<+\022\206<\205\001~\275Jg\021\270r\222@\274>\3505\275\263E\212<\277\005\254<\223q`\274\311\t\t=\237\327Z<\302\020\'\273\325z0\274#\200G;3f\036;(\347::2j\317;EC\275\273\217\016\336\273\321{\301<\354\250\233\273\231\001\000;N\213\2318>KV;\240\244\374:7L\321<fj\340\273KD\016\272\264f\276;B)\223\274\304\r\006;\252\320\321\273\245\331u<\243k\323<\253\252c\274\266\341N\2673\256\362\274\3719\206\273\313\340\267;y\275\323;&\346,\274\223\314\325;\272\"\210<\305T\221\2733\217\341\273\204/[;\274\305\311\275L\277V<0\033\306\275\264ud=~\363\267\275>q<=\246\005\307\275e\343W\276\364e\347=x\007\341\274\207\271\373;\331\360/>\240\200\374=\215+\243\273\254\217s=a\334\343=*\005\004\275m\323\257\274h\322{\275\3435\311=_,\002>\006l\034\273\266\264s<\234\360\276\275\033\274\275<\272\010\352\273\214\244\361\275\372\223x=\351\244\020\275^\363-=\233\204\371\274(VX\274\275\265\247\274\301q\371=\327?\220=\252TC\274\262\331\246= \013\025\276\213\332\324=\013\016\025>\360D_\276\341\270\346\275\257\310\013\276c\236\002>\243\2228=\260\316\214\274\014Y\277=2r\033>\205\017E;e\321\336<\013\253(=e\331\320;\212\207g\275\203\344(\275\255\323\354=j\250\220=\271\2063=nD\270\275/z\305\275\332\367\364\275\267\244\023=\360z\352\275W\374\021:\275(5>\241\025+=\260lo=\010\237\035>\312\036\232;-\340\311\274I\354\233\275\253\351\202\275\320\222*>\230\306 \275*z\014=\265\210D\275\357%\267\275\205\363.>r\325/\274\274Jp=x\215\344=\227\325\017\274\342\014\230\274^\244\275\275|\361@>\377\315\313=\261\347;\275\245\330\200\275\273*`\275\376\375\n>hEI=\363/\034=B\376\200\275\316\264\350<}\263^=q>.\275\260k\242=\027w\263\275\221t\\\274@\205\355=\000\255\016\2765\224\000>S\203\\=\244\0358\275]j/=\276\210!>\315\315.=\307\'4\274l*\006>I!\t>?8c\275\2567W>\201\243\332<~\267l;\314}\002\276\353\024\332<\n\334\031>\034\210k=\3248\316<\203\224K\276\370c\356\275$\244?\275\r\324\313=\366s\206\274\034\231\273=:3\201=I2\003\274\337\203\035\275q\370\342\273q\276\237\275jV`<\274\\\330=\253\337G\275\230\023\n\276\016\253\355\274T\373\213;\304\031*\276\325\314\036=3]\025\276\036\000{\274\350(=\275\223b\202<\260\327d\274&p\231<z\021\233\275\216l\030=\251\335}\273\256X\270;\n\225\010\271\315\0069\276@/\251\275\326\017\\\275\375\203y=\303\375p=\330}#=,\345%=&\360\354=o|\021>m\275d=%\346S\275#W\240=\304\223\273\274u\304\235\274F\234:\276\265\227\371=2\306\205=z2[\275\234\226\271=\303\260\356=N\025\236\275\323\233\001\276\360N\027>\257G\250=\343F\266\2755kN= \304\026\276<X\030>\232m\005\276$B\022\276oT$;\315\031c=\232\337\363\275\020\014\210=\206\355O=\337H<\276+\016\204\273P\203T\275\030\355.\276v\r\033>\265\262\316\273}~\251\275\204^\025=\031\342\006\276\257~\362\274\206\\4=\361^\026\275\343\257\217\275\252\034\206\274\003\031\363<\032\316u=\215u\353<\267*_\275\016\361\250\275\'\016\250=\026W\333\275* \002\276\030]=\2741\205W\274=\005v\274\272UD=\227Nd<y\213\276=\240h\377\275\207.\016\276\0032 \275!\310\264=\330\365\232<\021\005\361=\243\252\034=L\016\272\275\334v\320=s\230%\275o\211\205\275\270\023\336=U\233l=r\363\300<\272\340\037\276u\374\325=GH\201\275\374R\000>\255\326\022\275\323\225O=\345\370A<+\241g\275f\035\231=\363\027\362\274j\222\244\275uu\016=\313@\"\276\005\\\003=uB\371\275\3562\243\274\200\372=\274\331\246\267\274\340\254\204\275\2771m=\232\0305=\030c\002>w\014\021=\230=\267=\t\030\002>\274\247p\275\275\371\273=\036p\326\275\237 \306\275\324c.=X\";<\207{\310<S0\020\275\215?>\276\305\360\203\273\334\247\251=\356\314\253<qC\331\273$\314\026>K\362O=\216\321I<1>\364\275\305sF<[\244\372;1\'\324\272L2\244\275\277\tk=\331N\016<\2062t\274\220Z@\2732.<=^\327\316\274\335\257\362;\204\035\021<\030\371\210\274+},<\360\022\220\275e\254\325\274\202\364g\274\276JO<\236\202\302\273\333^;;I\336\300\274\001\246q=\341\020\202\275*y\373<\016\242\340=\337\333\345=\205_R=N\032\033\274`\304_\276\327i%\276\311\301\201<\333Mj\275\317\234\245\274\224\016s>{\264\251\274\r\030\035>\204=H>\250\232\035<\215\363?\275P\2630>\237\375\r>_\372J>\000\275\230;9\352|=\037y\362\275\2259q\275E\373\025>\265cv\275\327\010\305<\014\223\364=Hb\245\274~\372\213\275\260\301g\275\210\233\215\275\\\335k\275\366\037\315=\201[\255\273_\277\242=\024\016\204=iMq\274\344\201Y\271&n.=\306\331\253\274\354u\007<\262\261\267<\000:\273\274l\312\231\273\335\325+\275\240\367\276=8\357\255<\215x\250\274\363\233\212=\356\335f=;\252\302\273\206\315\254\273v\346\306\274\313v\332;\314y\237=\342\236\034;\360W\360;N)\241<\021u^\274\337a`\274*0\260\275\205W\202\275 \017\312\273\200<\341\275\261Q\021=\245G}\275\237 \351</,\"=j0\334\274\241Y\247=\356\375\307=\0062\223;i\335l:\326d\300<\300\200\254<\372/x\274\003\341a\275\251\317\\\273\354\027\277\273E\201\367\273\366\340<=D\271\264=\004\307?\2754k\243\273=\344\223\274a\356\371<\361\343\277=+\227\002=&\242B\274\200\316\311<U\370\010\274\334\3624=\230fD<n<\364\275\"23\276\215\214\024=W\207\235=\256\256\032;T+\256=\252\r%\274\303\346\324\2750\nA<r\226(>f\265\000\275E\216\020=x\321T\276$g<\275\217\342\322\274F\331\016>\216\303\030\272D\001\004\2769\224\031\274\313\243\316=?\r\323\274\271\365\305\275\216v\205\275\377\024]<\013\247\227=.\261Z\275g\2346\275Z\277z\275\344\236\017\275\214\340\246\275\350/A\275\0019A=RWF=,\225\204=C\272\272\274<\355X>\345\231g\275\223\270\311\275y\027n>>\325,\274c;\010=\320.\000>G\252\024>\304\305\210=\350\350\227=#4\024<\373>O\274\302\362\274\275U\"\341<cZ5\276\016\204\256=\030\236p\274\2022\204\275\272\364\235\2750&\362\274gI+\275_h\232\275[\2417\276\301T\010\275\322\313\214=U:\016>R\273\362\274\310\265\200=\257G\366=s\036\255=\354\364\272=\360=\227\275xX\247\275\300[\220=W\245\314=W\243\373\275T~\252\275r \340=\233\350\214=\317S\241= \365\331\275\364\360\233=f\362\031\276\311p\354\274\270\337p>\222\016\017<Nrh\275L\207\355\272+l\356<\211\205\372\275\371\315\377\273\371\025\272<I\275t=\253|\026>\360~\353=\350vh<\357/\225\275\200\311\332=u\352D\273m\217\240\275\206\033\'\274\221\256\016=\201\201\027>\007\320\023>\220vr=\263\221T\274\212\3625=A\032\222=\201{R=f|\271<\3431\372=Z \013=\270\366\243<H\331\255=\260\337\275=,e\364\275\000\306\\>\350\250\001<\306\310\337\274\377`\364=\214I\307:\336\361\264\275\\#\311=\032?\200<M\336:>)\017\003>Xo\006>\033\225\333=\027\277\002=\036\220\274\275m[\377<\033\212\204\273\275\024\221=:i\220\275a\2469;J\357\252\275\337\207\212\275?%\203<1\010\246=+B\271<\361iZ=\335\343\017=,t\022>\306\365\215=\336\002\303\275\303\177\260=\306r%=\333\t}\273\010\256!=3\366\214\275\013\350~\275\376,|\274\372\034\206\274\312\366\356=\370\353\222;\036\037\306\273\337\226\t=\372^\003\276O\\U\275\302X\204\274)\177\247\275\376\'\316\275\372\351X<\375\326\373<s\335}=\240Z:\274\311\3736\276jF\337\275\2778\027=\351\346\"\274\245j\021>p\325\312<\350\301\274\273\213\310O\276\201\316\007>\353\353\313==9\341\275<\257\274=\365uE>\001\334\253\2754\026\343<\303v\316=;\344\000>\014\272V=\262\316\024\276\237\254\373=\3277\033\276i\216\241=\t\270U\275\357\342g=\305i\240\275\273WW\276}\227\347\274\333aw\2764\244\222\275\351iK<\340\320\346\274\223\254\211\275\357\371\302<\230J\303\274\214\276|>\240\007\301<-\261\010>\223\347I\275\020\005\252=\351X\001\276\023\315\241\275\345\234\016\272\253\215i=\262\250\222\274\257uU=\375\376\367\273Xs\004>\206\300\240=n2\334\275\376~\355;Zr\245\274\241\220\310=F\215\260=\020z\224<\231\222W=\030Tf\275\245\362\'>\223\231t=\303~:=\324\277\361<W\346U<\270\370\224\274\227\205(\275hB\261=\213n\275=t\177\257\275A\256\316=-{\306;a<\n\274\004\'{\274\001\177\201=\306`\310\274f\237\371<\250\245\016\274\331\261\2259\241Wl\275E\3731=\037\361\335\275\\\343C<\016\354\226\275\267\270\234=D\332\231\274\363\235\020\276\362\022G>x\247\234\272\300D\020;\265}\030>0\303\264\275\3232\026=\276t\360=\262\254\210=\256\364\033\275\204\341\275\274f\215\303\274\020v\n>.\230\231\272qZ\257=\027\263\002\275C\352\300\275t\022\246\274\350H\033\276*\253\207<\357\355\352\274\257\026\004>u\n\201\275\027\317\320\273\206\007\220=\261\255\335=\034\234\263;\300F\312;\033\210\264\276\2452\000<K\376\313<\030\372\214\271\235\271\274;\335\345\265<\034t6\275\216\205\035\273\032z\030\273\024H\363\275-\220\231;\225\253\340\273\2239\251\274h\344\345<\262!\207<p\325x\274\214v\274\273\017\0311\275\005\007\014>\253\336\210\274\335\345L\2764\351r;\341i\200=\024\r\267\273r\236Z\273\r~:\276d\261H\276\253=v\276\306\235\372\275>;\260\275\357\002n>\346\231\307\273\010\343<\276Bpa=\254\232\277<\327\256\214\274\255ZV\276\360*&\275\357n\030>\245\256\024\275u*\275\274\350J\264\274\322\333\264\274\257\206\337\275908>*\243\353\275\322W\354\275W\313j\275\363\313\337\275\037W`>\223\026\034\276w\303\036\273\263z\215>\2362\311\274\336=\220\274\302\315\025>\316A\226\274{\n\224\276\253\351X=\030# \2752\366\016<M^\300=\213b\320=+}\261;`\217\376\275<\213\036=\024J\313<d\225#\274\257I*=\263\222\r=\217p\024\276\177\022\2028\215\303\377\274zN\024\276\037\211!;W\025]\275\364\267\305\274\307\200P=\013Y\351<A\240\341\272\341\r\241\2750\300\267\274P\251M\274\237\303\014<5\210\210=\303\r\242\275\233\365A=\210p ><\027\300\274\351\243\t\274\222\3323\275\244\377s\274\323\004b;\316<2>\276V\026=V%\265\273\017\301@\274\'G\255\275+\202f<\312\'_\274\310\235\203<U\361\274<l\211\335\274]\204<;\001\303\"\275\r\372\321\275\353\372\262=\"\000\324\275k\356\223\274\260fl=!<\331=\366\234\371;;\331\260\274*\010h\275~\254\025>S\336L:\"\037\267\275Ra\274=\216\241g\275H\221\225=_\312\330\275&\035\360=\265y\333\2756\301\363\274\005\224\002\276\276\257\274=\247\315\005>\275\200\244\274J4\313\274\263f\241=b\r\026\2768\352P\274\332\003B\275\275\356\240\275~X\213<^\307\201\275\341Co<y<\302\275\321\216\'=\336\374\r\274a\237%<~\372*>&\r\235\274\227\025+\275\2359\354;\244\355\004<\177\350\330\275\254\307\017>\031\027\235\275\230\267\001>\363\006{\275\330\t\232\275y\\3=\324\3564=\307b\365\273\0360\336\275\270V\222<+\256\206<MU:>\021,\336<X#\004>\321\357\306<\205\310\240\275\252 \364\275\373./>o\265\024\276\022\001\314;\251\022(\276\347O\272\274B\221\233=\221q\026>\327\365\367\274v]\235\275\210\201\326\275p\036\244\275mK\033\275\346/\364\275\326\314\024>\\\330\032>\221\017\007;0\366E>=)\344=\022B\001>\375\245\206=\177\244L\275\325\272\303=\371\014v\275p\341P\275Rz\013\275b:\027\275J$\n\275\206`\266\274s\220@>b\357\257\275\021\356r=M\\\213\273\032\030\336=\r\013\r\275H\200\371=\014>\302\274\332\350\203\274\256\274\027\276\256\036m>^rQ=[\237\237\275\023\366Q=\\A\252=\317\244{\275\367,\"\276^\033\370\275\356\242\\\275\021\345\022\276\344\330\254<\267\r\213\275\376u\262\275\037\277\364=8\263!\276O\342\004>\344\360\010<\215\350\275=C?\033>\207\227X\275\352\313\302=-:\000\275\222$\374<\201\010\214\275\205\337|\274\013\035\216\275\256r\267=\225\241n=\371\341\365<\346^\212\275)2;\276H\016\350\275\263[\000\276=@\003\276\221\304\335=\214\230\027<\377\031{<w\330%;f\337\001>\322;\204=\277\317K\2759%q\275 \030F\275V\333\210\275\254\321\224\273\200x\203=4\365\364<H\263\334\275=\360\032=\t\300\216<i\274!\276\271/2=*\336d=\263;^\274\246\216\203=\243]\225\275\341\224\243<8\221\363\274M\022v\275\217`\001=\nr\201<\213\276~\274,\262\370<\302%\360\275\001Lr\275\025ML\275\210\267\277=\206\2130<\3663\214=\250\214\261\274\2379t=\253\347\272\274v\352\302<\230\300\261<\016\202\305\274\016\335\222\275\007\245\362\275\370\376\013\276\324-\246\274<\340\323\275b\372\237\275\033!\331;\0148\t=>\360\212<\235\025\376\275l#J\275p\374\000>\000k$\276\372\331 =\357\226\364<\205\311\003\276^\366%>+\353\271\275\335\244t\275\252v/\275\371\003\003>\01038\276\241\273$\276\316\0222>V\312\n=\225s\207\274@s\324;\022Y\314\274\002\340\001>d\224\346\274\022\3675\275\t \006>Z+\241\275l\204x\274\025h\r>\003\325\034\275q\207d>\177\331\310\272\035\3034<]\032t=\024\370|\275A\354\345=\017\354\215\274\013\307R\274\376\352\024> \002\216=\362q\315\274\214\034\346\275\241\365\246=*\2574>\240\3421\273$\276\326<!\233\004>[\2774=$\227\336;\017\367\361<\335\2534=\311\357\272<:\266T=6I?\275\362<\372\274_Y\314\270Y\201\324\274\347g\272=&h1\275\304\303\243\274\233`^<\235\006\225<\2427\243=\221\373\276<\355\375\236=\330\370\341<\205\310\224\275\345\365f=?z(=l\240\276=\211-$\275\035^\277\275Q*\353\2753\364[\274\305\026\024>\244\356\000>\233\033\331;\320\327\233=A\316{;+P\037>c\343=>\233\307\232=A\277\354=k\347\316\2740<\331\274\3524{=\247X\237\275\264h\276\275P\223\344;J\245Q\275LU\366\274\324\314\n\274za\006>#\240\005\276\326\244\372\275\223\364\340\273K\252\332=\275\264\252\275VT\006=\353Uk=0\004\275\274!\256!>\311U\211\2754^\324\275{&\333\274\351|D\275\267O\024\275\337\227\330;\370\031\211\274\303\321\256<x,n\276e\376\203;\376\243\203=V\330\255<\240\274E\276\007\315\013=\200\315\006\275\207\220\374=\230t`;y\266\231=\330\\\334=1>C\275\311\260{\275A\233#>\0325\223\275\353\253\037\276U\026\020>\300\\\270=\264\367\003>\264V+=\"((>\007\177\332\275\221\373#\275I\242\344<\276\375\253\274t\315\200\274\337\240\255<\217=\200\273\'>\022>w\2735\276ku$\275/?\215\274\374j\231=o\207+\275\245\204)\275\233\352->\255k==\350}\257=\315\232\022>\341\367\310\275=\001\003>\327/\007>\304\302z<\034\256\313=\262\255\225\275\355\\\233=\246d\302=\2432\272=\365\tP>\324P\317=\233K\361=\366\275q\274\332\365\020\275f\037Z\275\036t\261\274}\363r=\206=\365=!\225g<cuF\275\204^\243\275\220\0135>\245?\313=\211G\350\273\'\"\225=\2174\310=\202\260R>\203\212\203\273\316\000\010>>\270\250\274U\020\205<\322\030\244=uX\231\275\031\030\246=-\277\304=\251R\230=\024\006\275=\331\225\247\274\266\255\366\275\234Sm\275!!d\274\024\237\264\275\350\207\240<\272i\264<\027\002\247=*\255b\275S\221\332=K\211\270\275]W\006\275\0033{\275\234\314k=\001\024\202=\237\341\236\275\201 \353=\273\3144>9W\353\273\232\373F=\\t\023\274\373\334\261\275\023{\321=\326\322\001>}\010\364\275\274Ux\274U\030!=\375\034\022>\252\345\262\275]k\'\273^)\327;{\251B=\177\340\314\2749 \004\276\212\211\301\274q\346\255<Z*Y>\222!\311\275\3246o\275N@?\276\223\314\257\275\013\231&\271T\317\223<\276\222\320\275\006\200\272\274\272\220\376\274\334K.<\225\336g\2741\025\237<\033\365\302\275\330\230\315;p^\026=\033\014\210\275\002\232`<\340\334)\275\001\251\317\274\261\025q=\200\220|;\254p\034<\266q\352\273\2417\'\275^\2706\276\361  \276\230\331\326<\234:q=\377$\212>\357\260\323=\032\252\226\275\205\3175\275\207S\304< 9\232=\237&\316\275\217u\303<u9\004\276\257\323\r\275\343\302\021>^d\r\273;\331\022\275}\363[==\016\330\275\270\256\336=i\237\r>\365\306\310=\254\253\372\274K\374h\275z\317\242\275\240\332\271\275!\247\221=\272\016\003\276\315\2365\275\336\254\230\275\023G\n>\323\376\365=\254{\204\275]W\204\274#\242\033>}z\010\275\231\215\210=\374\305b\274\367u==\252!!\2751O\327\275\007\270\366\274\235\340\014\276S\207\301\275\325I\231<\313r\220<,\t\225\2740M\203\275\236J5\273,\271J\273\365,\214<N\256D=\004\214n\275a;\302\273(Yd=z\364\234\274\225z\272\275\262\367\253\272\333B\257=e\347\234<\006l\215\273V\347\035=\220\022;\275\301}\217\275\000:@\275k\365\205=M\310\211=W\244\360\275\261\302\347=rg\305<\354R\214<\314\316\201\274\016r\231\275\240\264\345\273-\252z\274\234\276l=\371V\241\2732\311e;KJf\275\372P\202\274\034\243\020=de\000=U\260\375<l\342\220=j\036_\275\010t\270;\'j\370=yX\226\274W\260\005>r\227$;\202j\321=:\365\027=}\344\216=\313\200n=XB\267\274.Vh;\324\2370=\374\257\365\274\033\373\002>\257M\016\274$=\t\275\205\201n\275\023T\237\275\3266\351\274\207B\313\274R\324\250\274\0342S=\347\232-<\303[\305<\024\322\205;Si\211=E\301\357=\276\274\222<\363jH\273\236U\'=^\ny=r\037\375\275i\323b\274\317\025R\274 \325\324\273\022\354\014\275v)\t=V\261\207\275\2071\007>\215.\022;\226\341Y\274\206\356\263\271.@\310<\221V\356<\335\003\207\275J\026c>\346\000V=\365t\215\275\227\016\'\276@\004\004=\022\222C\275\tc%\271\361\200\356\272_\007\253=&\244|;{\025\332=\323\371\265\273^\221\365\274\373\220\027>\300;\036\276n\252\307\274\311%\017=\017\022P\275\013\223\030=\013v\336=$\210\212<\010\024U\276\347n\021>\202\375z\275\317s2=PS\245\275\242m\333\275xC&\276\326.\202=Vqd\274\200\037\343\274\236\r|\275\234N\326=Z\276E=\261.x:0\004\303\275\354\2408\275\376\026&\276\203\371\035> tB\275\034a\257\275\372q\325\273\345\214\351<\025}\032:\313\230\241;\000$\200\274\327\255z\274\273D\r\274_\200\216=,\274\307=\020\032p\274\306\306\216:9\337\301\274\201\202T\274A\333H\275 \274g\274\254O8\276o\230\024>5\314\240\274%H\216\274\235\311\376\274\302\321\332<#\301<\274\341\n\332\275\243\327\353\273\307/S=\321\341J\274\240c\370<1\203\250\274P\r\233=\017D\266=K\036p\274\026\253\201<\006\221\252\275\363\215\373<\233\312\376\274\247\247D=\247\003h\275\0313\024\275\2446\230\275\264}\305\274\\s\031>\002o6\274\221\347\003<\004U\205\275\331\034\022\274\214q\002\275#\251\203\275~\267\034\275\312\037-=\217\267\207\275V*v\275[\324\177\275k\236\352<?\350><\361\032\244;p\232\221\274h\332\372:\237\251.<\"\226\210\272\237\235U;\253\342_\274\035\2446\273\026V\271;V\177\330\273ap\036;|7(;\234\246\2437\317\356\340<\021\325r\273\363\333\221\273V\030\002:\323 \026\273\243u\032;\245]^;\236d\000;d\320\034;\3769q;2\355\024<\006\252\372:p\223\264\273\"\r_\273\224.x\272\"\036\t<qx\211;nl::1\033\014\276N*\323\273\005\310\316=\\\207L;\305@\250=\016ER>\177h\337\273\304YT=h\241\226\275\246\227\331<L\006\037=\255_=\274\350\233\255=Fo\327\271u\273\025>\336\352\326<\245\226\036\273R\306/=\340E\270\274\274*G\275\245>d;*H\247;\001\025$\274\335\023\223\274I\200\367=^\242\237\275\n\231<\274\022\302\010\275\372%\271\274\222$w\273#\234\231=\325{\227<\3178\006<\275<\276;\215@\267\274r\364\035;\005\274\261;4e\224\271St:;\231\323\247\274\245\275J\274\315\251\022<p\256\261\272\372\210\321\272\205\315\264<^\261\\9\363$\217<\236\230\352\272}R&\273\332r\t\2722\t\304\273\337 \024:]^)<\3072\305:\337\252Z;\355\336\210<\301\256\235;\\\356\202;V\210\214\274\0073\005\275j\337\314:\221\351><\262\277\225<\230\'\261;\350\353\031;\262\n*<\227g\002\271\000\273\200;\225T\332\273My\003\274#lD;\223\374\365:\272*\241\272\005Z/<\227\276\253:~\370x:a\370\257;\034\250\371:\262]\260;\037&\000<\247U\026\273\227d\237;\3323\363\273V\000\351<\235\226Z;\312\326\001;7\032\017;u\201\333:H@@<\257(\204<\342\273\027\272Vs\236\273\202\n\025\272a(\224<O\030\t<\360m\034<F\330\215\2752\272%=\231\217c\276\276\354n;]e\010>\261U]=+\263\327\273\235\005\016\275\2314\264=^\226~=\251\362Q\275\264\311\373=\027n\301=\364\007\002\274\'V&;@\361\207\275Q\361\210\275F\177\014\275\317+G\275e\323\220=t\247\310\275\301_\032<>b\025=C\333\267\275WC\257=\366\031\035\276\371g\203\274\363\"\240=\233\247\252<\304T\035\272\344\202\305<\211\246\364\274\275C\276\275s|\352\274\373\371>=P\316\017<\326\227\370=I\373\365=\313\177z\274:j\010\276\025\365\023\275Z\021<\275s\235\376=\2210\007\275\306\370\331=\017+\246\275\022\361\033>\213\376\260\275\225\302\320=*Z\321=x\027\243=S\327\343\2755\272 =\207\324o<\234\362*>E\343!\276RA\202<\225\257\371\274_\220I>\300\003\027>D\234\264=;\224T>\216$\272=\n\310\343=/\2676\275\325\026\t\276\2668\205=\221\323)=\250\344\246=:\375\343=\3726\005=\333\267\264\274\017(\021\275;\326\243=VZ\032=%\315^=\304\267\014\275\030(y\274c\373\277\275F\001\236=\001K\221\275}F\026\275\231\340O=\t7\200\275\342a\330=\304*\022=C\216\262\2754\227\243=N\215\003>\326az\275\354\334\352=\035\326\273\275I\262:\275\316\023?<\337\230\347\274\301\235\345\275\027\261\225\273:L\003\275&\031\255=\310|\351\274\370\226\354\274\3136\003>.j{\275\317\357\000>_v\033>\004~\366=xH\376\274\374[\371=\236\025\233=4[P\275W\200?=|`\212=r\347\312=THu\274\211\257\232=l^\375\274\276\200\257=\233\363\203=\315\315\222<<\327$\276\243\035\033\276\355\222:;\356[\257\273\2414\230=\347J8\275u\3043\274\370W\203;\307\275\315\274\325\000\023\275\2457\263\275\263\343)\276z,]\275%\312\017\275eP\023>\324\034\014\276v(\235\275\370\255\t>\306)3=\345\352\250\275\t\362\027>\232B\205=\254o\313\274/.D=\031\215&\276\375\267\263\275\306q \274\304\222\002=\264\263\350\2746\231\205\274\255\027%\274\370\352\351;\366\376Y\276\004\262\036=\230\303\027\275V\212\232\2755\034\343\275\305\250\255\275\263\261\224<\343\224\227\274\223R\220<\353<\374\274\322/\n=\311\275$\276\021-\006>\357J#\276\233+t=\273\226J\275\247\004\332\275\024\031(\275\'\314\030\275(\241\024>\331\034\256\275T\n\020>\205\303\224\275\'\017\205<\222$8;X\346\232\274|\007\027\274H#\032\276Kf\003>G\3449=\250\017O=,\330\270\275\317T\203=\340\363\016=\361Y\246\274\3243 \276n\233\037\276\265\335\273=tT\230\275\201L\231=|\344\246=>\232\334=N\224\201;\303\237\354=HZ\267\274{d\236=Q\321\343=C<\340\275D\0073>T\261\312=\225\214u\274L\n\375\274\207\331\026>\\X\275=J.\304\274\000.\226>\235\034\225\275\202\254\203\2739\016\305<Z\001\352=\243XW=\346\003o=.\224\223<\016\310\375\274no\336=\\N\034>\226\3662\275\003\326\247\274\303;\361\275aR\025\274\232\201\224=\014r\320\275\366\277\327\275h\331\246\275\237o\234=S\210\007=x\017L\275i\375\374=\357\234j=\315O\017\275\351L5>g\016W\274\017.\026>\260!\271=\352\256\'>d\323\t>\260\030%\275\0164\027=8\237\230;5\375\206=\\\325\300\275\373\365\244\275\025\354\307\275!\337\242<\374?\337\275\242\302\022\276\310\356\355=\035\301\306\274\262\325&>\264\2731>)E\322\275|\024\023=\374\237\305=\340\351\023>\262\207\264=R\271\302\275\305Fc\274\312NY>\014\031\032<\364bU=\323\225\304\274\305\323.\275\270W\212=\024;\"=\3667F\275\332\317\373=5Bo<z\321\351;\201\037\205:\\\223\020\276\312\220\355<\261\332o<\321\006\235;\221Z\246<8\241y;]\367\340<\246_\227\271\377\006\233\273\317\305\326\275+:\233\275\\g\214=\001\006\202\275R\251\250\273@\313\216<\367\002M\273\304\262\251<t\202\344<N\006\220\275I\236>\276\225\322\214>\025m\331\275!\313\207=\365B\223\275\010?\017=\276Zz\275\250<\342=\03587=\242\232\341<\242h\223\275DF\237<Ea\021\275\250\223i\276\267\234\305<$\271y;\226\021\003\274\351\244\027\275\351B\000\275X,L>1bE\275\237\026\r\275Fl\264\275EeG>(\254j=\01015>\013;\333\2754\025_\274\354\332(\275\020:\003<rk\016=\346>5\274\032\006\375\274\327\376]\274\213~\224\273\265\233\311\273\347y\007\276|\327\025\273w0v\276-\366)>\225i\027\274\364!g\273\374\271\030<\311\205\\=\362\374W\273s\205\225=\367m\344=\324-^\273vl\023;\223\205\234\274\345\316\363\274\347\r\343\275\031\354J\273\270\266{<\034\316\341<q\306K\272\351j{=\201D\004\276f\347\3509I\034\021\275\220\027\327\272Lk\335;\272\325S=\354\236\026<\024a\213\275\036\030\010\274\034B\345\274<7I\275z\210\376<\351A\225<\027\246\010\275\213r\236=\373\000\236\273\367p\003<\344\206\032\273kDl<\2347^\274\0049\351<(KW=\201\233\374\274-\036\353<\'\222\313<\036\t\023>\337=9<\223\231\252:\324\377\345=\262\310\306\274\277\022\030\275)\031\013\276#\216~<\360p\343\274\360&\307\275X\331\204<\326\355\230\273)(\004>\345\023G=\344\376\003>\221\260\346=\3413\342\275\277a\003\276ef\226<\212\331\200\275\327\r\032>(\330\013=\254\326\027\275\3758\211\275O\207\017\276\004S\230=\303\\\331\274r\216*=\\\366\022=\320\253\327\273\313\346\251\274f\013!\275\363?\277=$X\216\275\343\245\013\276\377dK<\213Q.\275c\221\243\275\003\026\243\273\340\242\264\272\276<\025\276\022\373\240\275\231\207\271\275!^_=\362\352\202=k&\252=\270\337+\274\243\226\240\275\244\350&\276P2\220\275\205\334\362=\262<\267\275\334\334\245\275\326K)=\031:R<\214\364\036\276\372\207\330=\013&\007\276\313\206\356<s\006\033=\307\301\010=\257N\026>\253\254\377<\234\n\212\274\336MB=n\266\010=\226\031\325<\310%\034\275\010[\177\274\263c\242\275\346\026\035>\366\016k=\315\036\257=\364\245@\275v\375\216\275\204\365\270\275\2003\260\275\376\323T=\351X\332\275R\324%\275\n\261\253\275g\247\216=\306\226\350\274X\026\325\275\344\223\236=\3379\336;\006\2131\275\367.8=\230\250b\274\215q\030\275\217\267\361\274DB\300\275\253\016G\274Ej\260=\001fB\273\230\271\376<\333\214\301\274\237~\314\275\257\tX\275Vo)\274\003\351\037>\2629\244\274& \207;o$\024<\350\205\233=\010\020\016>Y\336\020\275\364\345\027=\333\211\224\274(\002h=T\257\277=\034\233\003>\256\266l=\301\236\022>\005c\222=\264t\336<ei\366=\035\274\024>\316`\204=\326\310\254<C\245\346\2754\224\210=\035\372\025\276#\026\315=3\325\006>\025\205v=\264\353\024\276_\337\363\275\273c\320=\314\354\223\275\356\231\247:\264\303\003>,=~\274\203)\356=\035\036\265\275\313\314\010\275\267L\213\274 \205\336\275i\033\336=bu\235\275\242\004\202=\314\252\0212+#\2641\000\031\255\262Dq\225\260\200\371_2\202\277\327/\202f\220-\361\214\030\261]/\343\262y\007\344\261\021QX2\r\n\355\262\360$L\261\232k\250\257/D\0033\305\201\214\256\372\"\340\262\224\271H0\"5\3642\333\347A0\203\340\264/\333w\241\261%\370\2031r\355\3363\260\217O\263\264K\333\260<\200\2742\016\214\033\264\230f\031\257F\004\3631\320L\2571\004\315\342\256\3277\2312 \270\201\263\300@\271\263\375\207\200\260\333\025\327\262\273\004\354\261*\272~\260\272\265\363\261\314\232r2\371\000\204\260\237n \263U\035\210\264\254\254\2223\006U\275\260@\233d\2605\261\310\2543\231\300\262\370K3\262\300\335L\264#\240h1:\013H\262\224\363\223\261\245\352\0052.\034b2\313Kc\263\024\241}4\303\356\2643c\032\246\2630G\2202\260\251}\261\372\313\3224n\"\214\262\353\205c1\201W\\0:.B\263\014\342\2320\224\265\2563\204\351H\261\336V\025-\365\301\2073\205Q\005\263\325\254\201\260l$\2341\267\313\3754p7\253\264\002K\251\261\224X]5\272u\304\255\017z\2251;Rd2E\215@1\3326\2560\206\332g0-\300\335\260\r\207Z0\200T\204\262\370\204s3\204w\202\261%\277\2533\324i\2453\276\377\250\261\236&\\\260\243&\3453!b\2570\202\216*/|AY\262\314\300S1\n\006p\261\200jx\257\304Z\t3\352#\370/\376 \2100\250z\374\261%N\0161 !\2471#_\0352\304}\1770\025\310-\260\216D\22438_a\2614LC\262\320\312\314\261#\277$2\330\375\0372U\345\235\257V\346&1\020\233\226\260\347\027\'\2620\216A1k{\033\262cY\002\262\272V\0243@\246\005\260\277\245\247\2612\006\0022\032\365\r\262\250Z\375=U\247\267<.A\347\275\235\253<\274\247\311\266\275&\r/;X\325&\275P\213x>\'\356[<\014N\036\2759\204\356\275O\333\314=\242\035\332<hE\005<\'9B\276\256\322<\275L\005\211<3\317\031\274\275\236*\274\301\304b<C\023\322\275\244|\247;\336S\241<\355\227\355\275\343\314F=Z\020\275\275\232\351\263\274;\020\325=\357l\037=\233\275\343\274h\207\236\274\202\371\\\275\355\333\020>\267\335\247=\371}\344\275a(\270=J6;>\244f#\275\257\360K\274\315D^\276\203\261R\274\010\216\204\275\307E\030>}I\215<t\266\023\275\314\006\247\274\034\334\300\275\2263>>\020w\213=*.\250\275<L\304\274\024\253\333\275\325]g\274\350\202\351<\332\r\226=5T\273=\242\367 =\226\037\024\274\306n#\276=r\002>\030\036\346=.TN\276\246\346^\276wV\324\274*\342\226\275F\252\256;\277\314\222>/X;\274L8\227=8^\325=\220+\356\274dl8<2PT=\252t\\\275\355\370\026\274v\027\013>H\352?=\217\215\243; A \275\276\261\025\275`9\236=\010\316w\274\024\323T=M@\n=\213M\000\276\321p\247\273\242\270:\275\003\316\031\276\361`\370<\233\222\242\275\031\367\004\276f& \275\316G\"=\216o\216\274\"\010r\275\303I\353\275\027V\255<\201\027K\275L-\357=\371\326\207<\272\002\231<GwG>D\355\213\275\230:\246=\007\203\220\274\n\233\200\274\202am<\026/\366<\372\243\203=#t-\274\202\351a=\257\355J\275\301\021\213=\252Gh=\344\366\301=\227\254S=\002\001\345\274r\216)\273i\3036\276\362\306\331\275\344\343\212=\260K\340<p[V\275\320\3409=\311(\212=/(|\275\024h\356<\232r\347\275\264\266\262\275_\213)=\272\n\244\275b\371|\272\273x\331<m`\227\2749\231\274\275\273\340\211\276\276\002\305=\305\274:\274\005#B=\327\313\231;\363\224\327<\230\000\205\274\2645\326=\014\253\214=&C\273\274Z\263\"\274T\371u\2746\373W=-\341b=\204\nu=\373m\346\274\324[\267\275p\300y<\0263\225<\341O\341\274{\341s=\304n><O\272\352\274w\261%<4\313\022=\030\3331\276\024\204\271\275\366~_>/\312\222\2756\253\357=\r|C>\001\020\226=\005~z\275\212x\312;\233\241\035\276\300P\262<e%\272\275\000\271\257\275\3360\311;?\316\323\275ng\021=\304\256F\275}\317\363;\361\264\353\274\215\327\201=N\033\223>\037\\`\275\325\030\211=\031\353.\276\t\246\035=p%\240<\235\336\025\276-\375\306=\317>\377\275\241\0070=\017 (\276\020\036\335\274\200\336.\275\036\304\362\275\346\021\272\2758\270\266=\013h\2219\362*\002\276\002s\225\275\306\252\327=Ch\351=\342\365\031=,\325\313<\250\311\367\275\267\363\343=K\031\252\274\264!\027>`\364->\247\250\025\275\256\3239\274\230 \331\274\201\251\305=T\263\313=m\236\024<\370\037U\275\207\265\361=\300\377\265\274\352\007b=\356\242\361\275@?\321\274A\314O\275\354\276\262:\242kx\275\314BS=\022@\202;\203\251\002\2767A\223\274A\266\244=\213\355u\275[gZ=Wl\221\275\326\236\016>K^8>\341\217\016<$\3240=\334\342C=J&\200=\t\306\235\275\275\346\026>\317%\220\275\334t\377\274\262\375\250\275\240P\323=\0324\036>\225_\361;\274\0350=\330\'\255\275\027\'\002<\270\3055\276|::\274\231h\216\275\031U\304:\276\340\032\276\324\177\216=\207Y\200\273\322\006\276=\275\365,\276}\014\021>\330G\323\274KMl=\306\323M\274\302\220I\274W\203\216\275`\363 \276\334\331+\276\215\230k=Eb\272\273\024\321B\276sB\207<\020\277\262\274A\302\272\275.\237\233\275=\030\014\276\376\261\244\274\357v<=\024\301;\275\024\311\023\276\224A\350\275\007k\014=\017)\212=\272\207\033\275\006\334a\275OC\251\275%\325\352\274\272+\345<f]h\275\034d$\275\23407=/\311\212=\202?\004\276\363\231\006>ct\244=\267\332\252=\236\016\302\275\001h\344\275\3320\013>\253\277)>\367T\003>\351.(=\370=\247\274\314\261&\276\313\013\206\274*\265\210=e\334\237=\323E\216<\227\336\320\275\236\030#>\200\020\201\275Ee\264\275\236\364\227\275?\215Q\275\354\354\t\274\036\354\344=4q\312=\324\316\213\275\226\256\317=\256BY=q\357\016\274\213\313\315=F\034\357\274v\362\347=\251\010)\275[\345\204=a\201\320=\215\214\002\276s\001\024=\357)\324\275\030L@\275\".\261\275\251\211\350\275\367\261 >\317\260\020=T!\242=6=\257\274\224\nZ\276\320\331\205=\367\023G\275=a\026;\232O\205=?xn<H \242=\265f&<3\203\375\273L\342\206=\355\\\276\275I\351 \275\377\351\252=S\3352\275\266\250c<\370\242\323\275\377\350\337=\2676f\275\206\324(>\331\023$\276\323\277\213=\241\006\225\275\372\233;=\360\220\001<\362\313/\2757\200,>\310\304\006\275\362t\216=p\267\353<\277]\023>T\241\017\275+\033E=X \027\275\331t\355=11\024=A6\227\273\356a\232\275\016\211\200\275L\342\365=\205\254E\274\340\033\003<GWz=@\220\265\275\221\235(=9\355\357=\2213\242\274\204\337\000\276O\005\261\275\3319b\275;\013}\275m!N=q\326\346\272w\030\276=p\211A<F\"\356\275B\364L=.\354\331\275\323\273\322\275\t\316n\275z\235\224\274\201\032\202\2752:8=\311\237}=\221g\276\274]\224\337\275\200\264\345\275\253\375\211\275h\362\212\274\036\330Y\275\267<\037=\336\023\340=\211\002\205\275~\261\023\274\273\342\254\275\263O!<\262\300V=\310\245%\275\366w\000\276STJ\275\313\204F\274W\216\006>\232ia;\360\323)\275\024\234n\274xD\005>\030Z\177;)\353\357\275\331\244\301\275\202\277\016\275\202\017\353\275\256\027\002\276\002~\024\275\354\202{\275O)\237\275-\253\314<\324F\275\274\344M#\276\375\210$\276b\034\277\274\333p\232\275\213\253N\274j\331$>\367Xk;\034\037\372<n\375\r\275\020\351\004\276c\0306;\2072,=3\214\341\274}J\205\274dk\247\275\336\335\022>\243:r=S+\033\276\210\355\023>8\311\n>X\373\034\276\2367G\275Y\301@>\200o:=\204\310\025\276b\177H=\275\267\305=\216\026g\275\242W;\275A2\323\275\351j\257\275\013\262\260\274\217\024\250\275\366\243\200\271\252\313\204\275q\267\010<*T\256<\255;\034>m6\034\275X\211\036\275;\016\316;\372\326\203\275\034h\272=_U\t>\355\325-=7\"\345<\335\035\250=\307\206\250=\231\347Z\275&\330\027\275\032\327\022>\311\302\330\275\217\234O\273\354\243\327=?\243\235=\271\2336>w\375\230\275\027\321Z=6\326n\275[\236\005>\376\265\320= \004{\274\361\230*>\016Z\350\275\321@\272=\347`\305=>A|\275\r\241\233\274x(\313\275\312?\370\275\275\013\026>\373\256^\275G\364z<\3377\363<\030\250\t\276\224\036\037>}7t\274)\257)>\020\224\205=\236xD\275\254\034\'>\224\006\303\275\322\037\324\273\334\256U;\007\207\006=[\240\027;*\251\302;\314\265\264\273\221\005\313\272\010.\032=\320,\310;M\001\351;Q\303\205\274i\362W\275&\224\025\272\305K{:\2010\263\274\332m\325\272`o4\271\035\2206\273\341}\232;Q\331`9l\256\034\274\311\305\3309v\033\306:\353\372j<O`\204\2746Gu\2732\320\037\274\262u\260;\210,\023\273\346\253\301;\177@j\272X\335\255;vH\004\276\254\220\313\275\305nD\275S\262\321\274]#\261\274\234\305E>\027\264F;[{\221\275\255\217\016=ie\224\273N\275\304\275C\2012\275\270\262.=\3334f\271\241+\221\275\363H\036\274\220[\350\271\205R\310<H,(\2757Q4\273\206x =\021\335\362;z\234V<\225\007\225\275\300K\354<\361Bo=54\035>:Y\007=\245t\001\274:\323\216<zi\302\273\277\005/;\202\301\362;\001\271\004:Ws\317<\215\001\017;\177\254(\273\'\277\007<@Mx\272Mq\277\273\327\243\230<\247&\273;S\3102\275n\366\212\275\210\361\210\274\326\013J\272*@\221<\347\362\222\273\347\360\346\272\376\331\256\272\025\371\t<\363F7\273\024\267\272\274\226\371\2339\\\204b:H\372K\272f\300\225\274^\332\305\273\255\236\256\274\270z\377\274\211\256\356\271\3207\352;\346[S;\3146\017;\277\211\266:\000\376\"\272\010&\225;)\2206:\365\024\2719\336\177/<\304\354\030\273\\\227=<\334\272,<\274\232\244;\316\326\325\2721\310\321\274\253;\314\271^\017~:\014\326\036\273V\302\250;\"\366\347\272~/M<\362\237m\273hS\271;\010\027\334\273\016\373\3159\266\n\342<!\006\303\273P\255\256\273\256\010\236\274\234\031\364\273\255\3139\274\013Lm\273\321\364!<\375\262\257:\355\316\225\273\304\305\365\275`\360\275=\215\364\331=V\345m;%\236\362=n\370F=\354X\002\275^1\007=\370J(=]Y\360\274\242\344\233=\2742\002>\352]\361=\221\246\252\274v?\333\275:a\352=\305\237\332=,\021\373\273~\027\206\273\251\240==\\\264\310=\312v\312\275C\017C=.\002\030=a\027[\275$\002\304<\032\273\377=\316o\024>\2058\245=\253\271\305\275\"-\336=\244\211\246<P;,<\374\031\342=p\277t\275\212\210b=\300e\204=\027\206\364=A \004\276\236\354\243\275\0303\320\275\370L\211\274\007\020\020\276=\340\247=!\256\273=C\342\224\275w\370\242\275\010\372\200<fa&\276K\273\001\276W\316P==\337\311\274\207\300\203=9\237\027>\301\335~\275\362\"S=\036\002\034>=\311\325\275g\3732=\242\251\226=\003\236\333\275\212\323\346\274\333\te\274\337\206\017\276\'^W=\022!\276=\026\016\224=\'+\230\275\370^[=\243A\213<\3338\323\275\034\036\251=u\327f\275w\226G\275\312\332\324\275=Gr=w\'\"\275\261\375\265\274\346\374\254=\350\345\005>\017\016\330\275\022g\232;D\271\017>/]\226\274\305\251\261=9\350\212\275p\263\224=\246\234Y\275\005j\232<\327\016X\274I\022\211=\273\0104=\326m\271\275kH1\275\370\364s=\r\202\326\273\264\200\205<m?\320\275R\257\024>\316\271:\275n\265\255;\345\201\374<\2002\335\275\245\003`\274qw\n=\250\272\235\275d\233\022>%\373\003=\327\242d=;\013=\2768\273/;p\303\240=\343#\361;\361\207)\276\216\346\237\275R\376\t\276\274\251\222\275\264\326\273\274\353\250\020\276Odf=\325<E\275\315\3706=\025\002\356\273\002\222\033>\205u;\275W\323\013=\250\355\304=\342M$>FA`\275X\2166=k\203\231=\310\2130\275\204{\325\274\333\204\261=3,\315=\266{\216<[\316J>\343\361\250\275\ti\247\275\207\037\007>\3368\241<3#\311\274\300Ck>>\343\244\275\217h\253\274=.t\273%{.>8\314t\275\216\252\265=\200\355e<S\263\251=lq%\275%\343\355\275\234\221\247\275\274\034\204=^\217\245=\240\204s\275\204\300\336=\343\252\032>d\220\177<?0\255=\213_\354<0\347(>\242\r\021\276\205b\201\275p\245\332=\374\203\243=\322f\274\275\265\236\333\275\311\214\025>x0\030>^\237\357\275\274o\300=q#G<^\032\355=\373\331\260\275\260,\004>sj\"\276k\365\n=@\006L=\312/3>\266\242\031\276jF]\275\0232\032>d\001\340=\250\267\027>\270\307S<R\367;\275M\023\243=\271\372\325\274\177>\033\275c\035\337\275\377\354\021=UM\365\275px\306=\024\037\030=N\214G>\352\211\315\274\355\037\372=0=\375;+1->\222\257u\275T\342\342\275\241\023\371=@z8<\0132\237\274\312\362\212>\307\227\355=\327\215r\275\030\327\017=\277\203\344\275\203k\003\276\203^A\275}Y\201\274:\241t=\032nu=S\221)>\307\021\224=y\364\t\275\242\335$=g\327\354<\n\267\367=\260\n\246\275c\215\346=[,\016=\3532\214=\251\214\035>5\227\000\275_\023\n\276\'\307D\275\314h\305<\361\027\345=\203\351K>C\024\256<Na\232=\002\311\243\275\266\372m>\342\014\376;,\022\204>KG\364\273m\n\227\275\276\373\001\276\324\\\213=\006i\354=\363W\246\273Y\212\377\275\221\227\314=\314x\233=\330\032\007>\272\307\343\275\252\236\274:\302z\214=\332\357\331=\245\023\230=\0325\246\275\t\232\203\274\204-\007=6\337\3429!&(\276\310T\211\273\323\004\302\273\210\3264\274\366\035\026\272\333\224Q=\346\210\271\274*>\010<\303\302\200\275\303\255\020=o\264\007<Z\205\037<@=S=\177\354\007\274\233\263\247;*bf;\016Bk<0\371\002=\225\273\362\275\021g\217<\231\004c<\351\362\377\275\206L\t=\325\036Y\275\266\221F\273\327\021\034=\227\214\003<\264\365\016\274\277u\321\274\001\316U\275\211Pv=\02393=\203#\220;\317B\220<\243\3215>1Qt>\300\031\177\274\022i\030\276\036\215\001\276\307\3043=\034{?>#\027\336\275D\024\377=X\364P\274?\356\357\275^*E\275\260D\360\275\035H\001=\371\236<\276\276\016`\275\030\t`>\3044\214\275F\242?<\375B\220=t\010\'>D\300\252\273\002\350\267=P\331|=\270\335\235\275Jl\237\274*\315\214\275!\255\214=\017\336O\2752E\375<\021P\007>\241\274\247\273\177\376\233\274\321\320$\275\364\244^;\341\221\212=;\004\210=\355\245\305\274\004\357*:PPL\274\244\243=\2744\031\026<\273\230\205=q\326\177;\221\276\340:\010?\311\271K\355\300<\035\271\216=\351#\016\276[\243\025<f\007\253\274\340F\256\275h1@<\353\351\235\274\033\177\232\275\020\331\324;\240\270K;\270h\002<\002\377\020\275b\2351\275\263\256\332<\002OO=\241\0165=1\246S\275\003\340\201=\000\236\231<_\341#;\236w\332<\020\331D;\237\0239\273Z\033\303;\240\364\024=*\233\271<\236\003\312;\244T\216=\331\224\211\275oU\255;\375V\001=\373[\355;\244\374\002>\017\021\014\275\224\301\213<j%#\274L\014\223\275b\324\217\274}DY\275\336\016\225;\345\013\035=y\220,<4\240\265\274\202:Y\274\na6\275\334e\207\275y9/\273\023`<=\221\323Z<\375`\007>G\240\n<\243\253?;]\310\350=4\373+=9@\007=@0A;VK-<\334\224\246<\025%\312\274\256\300\"=\340M?=\206\214\234<I\025\370\274\263\363\025\275W\256\351;8\2144>\253q{<\345\014\324;8\004.\272\310\37539I\350\263\274\302\023\232=\314\237D=\366\"\200<\225U\374\274\271\035`<\272[\255\271\232Q\201=c\204Z=\276\216k=Q\021w;\337\\\017\275F)\250\274l:g\274\003\277\264=\2559\017=\246\301\000=tt\225=C4\255=\3128.>\010\220!;\\\323)=\026\325\340\275\361\265\262=\r?\262\274\2437%=Q2B\273\332HF>\224\264\370\273v#\324\275qu}\274)\221\023\276\306\323V;\343\313\025>\217\255\205=\304\037\301<a)#\275\365\350\272\275\035\006\241\275\035\210\354\275\307\310\265\274\337\247\206\275B\236\204<\320\322\033>c=\352=\370\354\344\273\220\241\215>k2\215<\301\372c;\347\277\\\275m\336\246\275m\033U\274\363F\342\274\267\273\335\275\233\252\201\274cZ\325\274S&#\275\312<\177\273d\223v=\355\344\034>\253=\230<h\201\241<\301xX=\025\332\021\275\231\227y\275\3274\037\275\326s\232\275\301\234\320\274\341ua\274\216\224\361<)\223\235;\256\376\357<\311QV\275\273\020\025<\000\t1={J!=\270\263\350=\201\331!\274\003%\270<\222\3250=\315\215\002\272:\315D\274\017.\300<@\266\213\273\222\r\031\275\252\271\212<A\016.\275%q\010<\311\235M\2754\350\377\274\007A\250\275\022;\311<\341Z\250;6J\210\274\2013\317=\311\352!=<\322\">D\036S=^\000\212<#\311\306\274#\270\220\275\262\313\277<\010\301~=\2123\035\275e\263\t\273K\306\001\275K\231\270;x~\274<r\341|<\337X\221\274\371\035{\275\316\024\260\273\326\350\206=sd\320\273J\335\203:z\230\326<\"3\025\274\033\303\207<\367\222#\274q\022\245;\247l4\274\027g\266\274\327\272\261;\273T\267=:\302L8o\226\016;(\237\300\274\351\030\321\273\007Z?\274\3014\332=lXN=\364w:<\215\261\353\273\250\216k<PT\230;\303\345\t\274\327\376\340\274\024\243!\276C_\260\274/A\371\274\013,\201=\335:\262<\020\317\303=b\036\264\2751\007\001=C\350\016>\354\227#\276\017\032\365\275W\220\204\274W\257\263;\263nS\275\361In\275s/y\272\365\320\260\275\371\243+\275\202\253\031>\245\313\320;\260{\202\274\021U\r>\002\314\005=\013\307@\275\t\000}<\235\256\266\275S\027S\275\236\344\242\275Q\233`\275\017h\002=\331\276|\275ST\206\275\346\336\220\274\344\\_<{>\033=\370\325\034=\237o*\274\230\245\261\274\013_\267<\205\267\226;w\003\227\274~\317\221=\321\350?=\373\024v\274<\344\236=\367\014\331<\334\257\322\274i\321z\274j\'\266\274\214\265q\274<\334\352=Rq\346\273}\007\335\2734\246\242<\222AJ=?\214\305\273WJ\377=P%\365<\304s\327\273\365\006\374\273\367\3734<LI!<@z\014=\347\354\270=\317\334\232;\257\002Q\274\333\232\006=\035\351\267=[\016\271\274I\263\035;\201\244\325<V\266\204<\315\246U;\275\036\206=\2217?=\313\222\214\274\250\362_=\226 \347\274\013\036\306\274,WO\275\314\363^\275\237l\253\275t\322\r<\313\332\255:\242\251\255;\024\010\333<P\177\206\274\032\214(\275\'U =wb\310<\262\345\001<\261V3\275\274\227\311<e\0027=\327,\r\276\2035\022\274H\021\014\276\273+\347<\213\347\355\274\343\257\304;$}\251<wF\204>\316\0162\275T\237b\274`\233\251:#5\006=\216\261\016\275\370\211\217:6\322\003>E\301\313\274\0148\324\274\310\335\375<H\344\274<\rB|\270}\354,<\320\271\305:\267\307\341\273\330O4\275\302\002\020\273\266u\357<\'\231\000<\334\241\031=\346\031\257\273\"\306k<\307\211\365\274\307\030\315<\365N\032>\035\006\224=\216\342\t>E\010\233\275\265\236\006\275\307\316u<\237\337\003\275\365\266H\276u\035T>\301\347\'>~z:\274\206\321\013=\023t\252=\375\035\221<\037\303f=L\263\314\274#\225\257\275\204@\030\275D\347\032>\023\305-\275\004d\300<\n\324\300\274\2321\023>\263=]\275m\311F\275 \016\336\272((\205\275@\2076>\034\275\344\274\206F\037<L\0227>M\023\004=\242\255\316<4\241O;\212=\223=*\377\025=&\300\262\2754\302\235\276\272\211\242;\024u\202\275\023\226G=.\235\264;\3256\201=V\2639=x\177\000\276\221\377\233;\366\342!>~>\026=\032\tw\273-\255\"=]\262\004=\330\373\242;\323\263\263\275\301\317k;d`u\274\362f\224\273\317M9\275J\tE=f>W\276\247\334\231=\004Nz\274\013\355\005<\rBh\275~\366\341<D\225!=\230\202\224\271\273YX\275\334\302 <\334\341c\274-l/\276N\267\"<:\346\215=\217h\220\274\246&\023=\311\223\025;\001_U\275\354\274Q\275DG\010=\330,X=2\'\315=n6\332\271)N\245=\003v\377<\263\365X\275\215v\377\274\363\002\n;|D\253=6\226\271=\002\355\204\275e\317\245\274\002%\306\275\306O\006=e\330\311\272\036ad=\360\331\245\275C\002\376<#\250\000=\357\\\002\2719\273\\<\370\021:\273\313E\267\274T)%\274<\360\205\274\330\221v<\3279\206\274Q\033\343\273T\270K\274h\300\362;\270\342\231;\322=\034:Y\020\025:\377;\274\273\216\342\307; \300\246\273\306\024m;\300\307\2449\272\275\311\274:\t\222\273JZ\316\270\232qk\274\n\025P<\371+\031\274nZ\023\275\0131\261\273%T^;=;\025\274\217\220%\273\013\271\034\274uD\227\275\363.\224=eEE\274\247\373\243\274\0068\302\275\221\371\376<s\\\330<q\372\224=*yA\274(\212\372\272\030\205<=\302q]=\366\200\014\2765\334\357\272\227\344\334=k\354t=\372\303~\275X1\365;\300\263\250=\017\215\314<\2537\246\275\223tw\274t\346\233\272G\r\006\2754\021Z\275E\270\373;\227\360\371<`A\253\275\2261\276\274`}\250;\242eD\275\270\006\344<\373#\371<2_\345<\300\010\016=)8\345\273`\376\034=\236\252\357;\2206\250\273\303\261\031\275+Y\350\273\n\241\363\273\335yY\274\002\251\034<\214G\242<^|\230:)@\341\274\037\223\211\274\030\"\001\274\220\262\210\273\353\333\006=\rP\263\274I\360\260\272\333T\230\273\302\001\310\272\333\273e\274*\307\006<\027\357A\274\017\355\377<z2\027\274\226\273\252;po*\274;\212\366;\336\370N\274\310%\352\273\221\027,=\320\221\006<\340|\303;\313\342\035=\343\325}<|1{\274\010l\371<\344A\330<\2024\323\273:9\364:\344\335e;`\2433<\320\326\350\273\354\232\201\274\013\206\311:f\3715\274%\361\210\273\246\r\213<#n\025\274r\303\304;\"\037\373\272$\214\374<V\367\016<\003a\250<\020\275\275;\275)\304<\031\356\326<\324\376\037\274\352\205r;\"x[7\261\024^\274\235\030\262=\325\030\333<\223\275\242<\363h\213;\371\232\006\275b\331\036\275cH\221\274y\232\352<0 ]\275\345\230\027\275\336L@=v\236i:\366)\270\274\231\335\243<\202d\207\275\2225\262\274\337^\234;\001\301\233<E\306\354\274\225\3570\275\320\004\305\2742f\020=\360u\022<\277Yc<c\257\377<|\204\000\274\365\027\3119\032\304z=Y\035~;\203>\350\272\"\021N\275\025\323\273\274B\274\017=\nT\240<\033}6\275^b\310\274Q\332\271=\264O\360<\276\374Z<2\231\026>k\310\240\275=^\351=\364\275\351\275\002\033\037>\311\376x\275\255I\241\274\357i\016>S\025\021>\303\263\357;6\304\225=S\226\267\274\206u)=/C=\275\014r\255\275\267%)\275!f\257\2750\260S>k++\2764r\357\275gP\267=\262\n\347\275CJ*= \024T=\345\0145=\004\263\274\275\312]\300\275jM\352\274\305\212R;\"F 9W3<\273@\210q<\323\021I=\202\030\356\275N\357\254\274\254\256:\273[\246\367\275\253`\354\274\363K\267<1\230\342\275\363\017\006=L\207C<\024\307\316<\365ft\275phP=\266\001r\275\305j\362<M~\000=\177\037Z\275f\001\r\275@\371\362\273\264\354\223=3\346\324\275\326\375r=\233!\365<M&W\275i\243w\274\351\360\357\273&\354a=\357\256\237\274\376B\027=\217\276\230=\277}&\276\200\336\276\273\315`\342\275\205\240\027\276h\360\014\275\206L\350\274\245\261T\275\240\241\004\275\267\346\214;x\311\246\275B\200\216=I\347\\=\312=\347\273E63;\242\2505=<\364\017=zj\247<v\3369>o\216\016\275\027~\037\274l\301\271=\345\310\340\275\236Ed\273\352\371\207<4\266\203\274&\323\335\274\027\020\353\275y@H\275:\272_<\331V\037=\310\240\350<\232\214\253<\306\005\244<!\362\267\274\306\265\217\274\310\221\314<he\313\274:EP=pB\302\274.\177\345:A\303\353\274\221}\220\276\360c\317\274Y;\205\274\372|\030=@\036e<\364$A\275QX/<\024\023\271\274\r\276\216\274k\222\021=\330\3724\275V\314j<\243\310\366=\241\030\242=q\026\330\270y5\275<Z\026\237<>u\002=.\226\007\276\006\332)\275\336\341\202;\330>(\273,]x\275\\<\304=\351\301D<;\232%>\220!\317\275\315\324C\276r\326\336\274\304|\r\276\207\313C\275\223\247\375\274\035\262\340\275\352\336\234=\343\035)=&D\017\275\016\265\226=\271l.\276\254\335.\275A<\220=\207\255d=5\316\231\275\330CW\276\230\273\210\275\002\3106\272m\266\325\275c1\222=\270\233\273<g8\014\275n\032R<N\032)\274\024\364\322;\214\354\005>A>\341<\204\354\313\275\023);=z\224\262\274\307{\031<\312X&>\274\237\307:H\3427\274W;a:si\013=\260\376\367\274)\311\024>(\271\005\275Yf\320\274\267\n\032=\320.\020\275\366\004\235\275\236}\210\275\274\3017\274\220[g\274\256E1;\302\330M\276g\322\243<A(\314=\032@\205\275\227*\375<\222ds9^\361\204<{?\211;l\201\316\273;\304\t>j\235\231<\027f\303<m\206\000>\356\301\320\275\323\242\315\274?\375\033=Z\234\004>g\201\314;\277\242\331<&\245\253=\025Xr=H\355;\275\232/\335<r\251\365<\243\347\032\274\026z\231=\253\330\235\274\351\236t\272w)\277<>y\202\274\024\332\367\274\236\333Q\275,\342Y\275\340!4\275\363\340\233\275\341j\344\274\000\373\252\274\343\314T\275\2260\344;\251\336\202\275\244\032@<\273\347L\273\324\303\265\272\254H\242:0=\274\274\276R$\273g\013l<g\322\027\275\256\352j\274\271\276f<\375\3723<\314\265m\273$7(\272\261\375\030\272a\005\326\272\327\370\336;\301-V<\243\232\021:\241\3136;=\177\246\271\234\206\006=\356x\342:\005\255\334\272\260\340\243<\372N\270;t\342\220\267V\241\2039\337\021\004;Xn\265\272!\224\t;\371C!\273S\376\2349{N\002>{e\032=D\220\227\275\224;\214=\340xv\275\r\326\222\275}\324Y\272\314\035\300\275\312\246\220=\303&!\275\304\314\335\275\313\337\237=\031\t\352=<N\215;\2468\277\275\242q\205\274\213B\210\2753fS=4s\235=]\225\024<\357\255Q=\226\342W<\023\243\340;Om\316\275I\331=<%e\253=\340\203C=\306\223\350<0\325\221\272K_H=j\350g\274q\325\202\274\247\213l\274O-\317\273\020i\263:&U\371:^r\270\2747\333.<\217#\306;jJ\234\275\n\227\214\273W\364\314\273\366!\253:Du\3319\314\006\226;\272\352\261\271w2\214\275\350\373\323\274*\213\366;\004\266s;M\353\274;#\2378<+\223k\273\242\014\306:1\023H\273\313\'\330;<ur;\274\245\322\273\031\235Z\275J\317\212;\312\353\342:V\255\241;\034\2329\273\330<:;jp\312\272\225\312;\275\006\340Y\273\212\0363<U!=\274\244\220\353\271\355c\020<Akj\273\240/\030\274\214\010\253\273&\010\367\271\373{)\275\255\275o\273R\250\356\272u\267\006\275\206\271\013<\303p\326\273A\265\353;Q\274E<@\326\204<\204\360\2438\217L\215:\346\030\033\275\212\252\010=!\023\007\274w)\277<\023T\204\273\334\344:\274\r\306\001<\337~d\274\207}R;\334\034\247;\023\271^\274\232\310\237\272e\247\372\2734wG<#*\364=\252\t\261<\207\225\335\274\372\0166>\217\277F\275vQC\275\\\366)=\264\243\356\275^ \272;6\301\227\274\t\006\332=uo\014\276dy\023\275lm\310\274\\\312\203\275\032\003\224:Kb\334=\020\000\257<e{\016<\225w>=S~O=~\313\'\272\222\021n\275\206:\r<\320\377\2529\261.\002=_\303o\273z\t~;T\241X=\252\373J\274\340I,=\276\000\262=\034\206\020\276k\035\342=\005O>;\305s;>oB6\2756h\245<X\312\310\275g\307|=\354f\267\275\033\234\227=\034y\374=\324\021=\276=\351\202\274c\344\216=E\340\365\274\033\336Z=\204\231\204\275\224\034u\275\373_\351\275\326#\265=\241\315|<\306\246\322=\211F\371\275V\327\t\276\357\210\000>c\013\026>\351\365\315;\314\255\232=\226\n\337=\000v\275=\203\242\004\276\340\366\002\275n\013\016>\324m6=\255?\'\275ai\352\274\365qq\275\203\272v\274[\270\311\274\206J,\276\277\255-=\032\242\225\274}\314\273\275\006\253\341\274\313\246\372\272\360\342+\275-\223\235;\036\302\352\275X\031N>g|\332<AG\271<\247F7<UC\235=j\320l=\245\\\316;\263k\267\275\253\233\203<\225s\302<\331\257\200\275&x\342<\016\373\022\275i\303*\275\027\207\200\275\374\371\247=\213\335\213\275*b\232\274\250\030%=.\233k\274\032\0049\275\323\206\032\275\232\304\027;\013\247\213\274\310\213\264<N\217\031=\322\003\004=\255T\237\275\314)/\275\375\266\304\275E\004/=,z\250<W\262\030=\247\326m<\332\347\351\275\3777\347\274V\320\253\275=\205\037>\234\310\007\2751qX<\202\337\340;\270\017\246<k\033[\275\344\206\303=|\313\225\275\332\343\023<\362O\313<>w\233;\\\266u=\250\355\204\272\250\360\205<\"8S>w\310\'\275\3676\013=\346^\244=\230\375\204\275H\260)\275$\346\233\273\027/,>\276\005\006\275\261%\016\274\353\262\347\272\334\227\217\273\341\031v\274&kW<\371\227\326;\253\354:\273\203\375\000>`\037\017<\270\2230=\265\036\307\274\335C\272\275\t\225<\274\027\3127\274\227\036\002\274-Q\370<^pr\275N\342\036>k.m=\311\253$\276\177\222\327\274\372\3071=V\322\332\274$,k\275\350zd>\001\370\262=*\017\030>^\346\343=\334\364\340\273\347@\351\272\340C\363<Q\340\206\275\355B,\275a\005\177\274*\256\217=\262\231\014<s}W\275\231\267\211\275\275\0334\273d\311\213\275\337\351\002\275\240\222\017\275\255PE:\366\027:\275\317\307\273\275B\241a>\037\024==I\002\327\275i\342\203<\267\271\370<$\374\365\274\000\014\231\271\312Y\235=j\245\223\275\243\000\205;f\271\025=N\310\370\275l\215\'=\300\346e=7\260\243<W\206 \276PT\026\2734=\023\276\322\020\225\274\227d\r\273\260\212\216:\316\335\253<\355:\222\275\214\232\245<\224\007\021;\235\037\242;gq\362=\301\333z\275\317:l=\327\202\214=Q\356 \275\335\025\030\274\354\250\305\274\267\020\246\275\250x;=\361~\343<j\272\227\273a\323j\274\203!5=\247\325R\275\023C\025\276\202\317\364;J(\214\274\330\202\310\275h\276B=\371\203/;)\205\024=.\255\240\275\n\033\245<\217|\r\275\'^\217=\274\204f\273\321\346\345=T;\321<W\255\206\275yM\023\274\311\355\"\273\246B\036=\257HG<\232\341\037<H_\203\2753\200\335<\365\262\\\275\242\355;\273\362K\006\275\272\346[\275\016^\235\274\032\276p\274|J:\274G\253\376<\274\301\233;\213[\374=\230\315\t=-\232\014;\006KZ=U\023\253=\010\033}=_`\320<p{\217\274\343\345\263;\244\344\225\274T{\252=\3303N\2751\'\024\275\026\315\323\274\t\317\006\274]\017\267\274\007\247\202=\336\177\243;\001\332\326;h\306R\275/\307\204\275.\306W<\351.\313<\304\014\313\275tE\347;R\231\216\2736r\327< \000\253<W\347\032>,\3435\275\316a)<\324\023F\275r\r\351\275\320W\310=\335m\245\274\334\245\013<\311\013\003\274\333\347==D=2>\265v\360=\241\271:;\032\022\216\274\005|\245=}\364\255<ssa<v\373\010\274e:\000\276\277|t\275(0\031\274\003\200|=\236\205g\2753G\242=\230\225\251=N\367s\273\200gw\274\0327\321<\243\034U\275~\244]=V\257\365=\314\004l\275|\240\211=\306\252m<\346\325\031\273\025h\013\274\000\324\006>\255^3\274\264\226\352;q\3040>\344d\272<]r\330\274\2028\177\274\306\246g;\024\246\017\275\212\371\277\274\343\010\354<\023\274N<\306\310\206\274Q\327\360\274\255\034$\275\350\026;\275\2565\002>\375\0239:\327\016\261<\216f\210=MpZ=\217\250d=\033\231\010>s\261\017\275\317\351^<\307\t\205\274\250\034\021=\034\230\023=gY\343<u\340\314\275{l\240\274\354B*\275\252L\265\274\370\376\322<\214l\'\274\351\3221<\215\300\363:\273{\030=U*\371:\005b\302\275\372\271\031\274-s\353\274\247\344\315;\037\350\213=\344\203\351\273\331\213\233=\020?\237\275^\327\216=\323?\237=\326+A:-nC=\2656f\275\270\021\004>$j =\375@\020=NG-;f7]\274*~\210<O\342\000\275\005mF\274\343\034\217\275\275\316G<\247\315\245\275c\002P;\273\030\367\274\332\350u<e\312\357;\204\341\276\275\204C8=\241K{=\255\371\233\273\374#R=\353\010\240<\232\235\373;\344\246\223\275\337\232\256;\250\360\2349e\206\265<o\035\026<\200\346^\274\367\177\316:m>O\274\215U\213\273\004\t\026\276>!V\275S\320\216;w\273\354;\264\004M=\200\226\325\273v\311\267\274$i\276;\031ub<\024\211\362=\375a\031\276t\342\021\276\257\371_\274\021\\\306<\344\320\353;x\025\222\274\037~P=\312\364\006\275\332\316\207<\260\003\017\275&\230\256\272\261|-=\261\276\221:\351d\177\275\365\r\351=\251\034\250\275aN\242\274\\\246\235\275U8\001\274sk\216=j\211\034\275\035\301\272<\374=\232=\256\"q>2n\253=\371\276\211\272\334%\237\274\325\315}\275\275_?\275{c4\276\266.\304\272\310\256~\275\206\223\3268\'\273K\275\310\223\321;B\322$\275\274\003X\273\021\200\315;\317Y\202>\272uw=%\273u=x \327<<\313\217<w\342P<\201\251H<+\314\256=\322/\206\275G\261D;<\203#=\033\177\320\274\370\353#\274-\222\227=\270^\327\273\215(\022<y\342L\276\242b\273\274r\203\r\274\305\244\215=`e\266\275[7\226:\345E\234\274\\\250o<7:\006\275B\025Q\274\240\013\265=\346\322{\274\315\021\354\273\262>\341\275\243\366\326=;\005_<\202<\327=Ew+=\341\320\026=\177Y$\274\201\0262<)\037\265<\241q\035\273\310\246\321=f_J\274o\310`\272\325\013$<\343\264\233\274\267Q\231\274k\243\247<\230r\372\273y)\000\275\320;\006\276S\211\236\275\304\325\250\275\236\317\334\274>\323\035\275h\300$\275\375\rT\273\271\324\206=\277\211f<$\324\004=\032\311\030=\234w\033=\022v\002\275\220\365\350=\320\333\214\2725\177\332\274\255\231\341\274\020$\367:L\220\273<T\037\252\274\201\n\355\272\313b\214;JY\245\274\000\364\244=\323\303\332;\0073\027\275\347N\277\274\037\222;=\230\266\202<\213\303\271=\r\215T\273g\035\"<Nh\244\275\024\202\254<$A\220\274Fg\034\273K%\371\275\337\017\363\273\215G<\275\010E\262\273i\330\204\274R\311\376=z%\225<\023\017\233\275x\370\3657wi\343=\034\217\331\275\216F\227\274\004\270\211=p\313\356\275$&\355=\2218\342\275\306_\220=\2053\377;\360\272\202\273G|m>|e\220<\250\216\312\275\217V\215<<c\'>\351\006\257\275\201a3\275\215\251\032=Tm \275\251@\215=\211\274\256=\316\211\313\27599,=\303|\n=\276\346w\275\306#c=Q\323\r\275\324M]=\306\354\214\275\314c\024\2757\374\276=*\r\017\275?\343\007>\276\024\002\275\206\003\n\275\032a#>\337\221L<\252\001\222<\236Rm<\376\253\217;3\332\217\275\365;\313\274X\324\335:hA&=\260\221\270<\001\374\346\274\306\313u=V\007\332\274Y\227\020\273\241/\312\272\304\343\213<8\362\245<\262{\312;wg\305\274\374\3532\275kq\340\275Y\357`\274\270\233\220\275IU\203<wT\243\274\215\351v=\232\005\250\275\272\007\377<\363Q(\275\202\336\276=\030\351Q\275\344v*\275\367\361\032=\023\\\250\274\272y\013<n\0134<\245\201\230\274G\326\206\274\346\376I\272\3625,\275\034\256\361\275\322\001D\274\360\323\334\273*\376j\273\024\246.=\223<\301;\242\353\020;@\254A=\252DL\275\317}\003\275`\233\\\275\364H\221;\262\224U;Z^\203\275\207\033<\275\273\r\000<\t\276\247\2748{\025\275\247,\267< \340=\276\177\325\253:\375\241\360\273\214(\341\273$\2100<\326\3468\276u\256B=\235\021\226<\341\243\350<\000$\347=\377\203\270:-E\247<\021\345>\276\004\350\307=\034\252_<[\340\260<\246\\\244=eIp<\204\304\336\274\\\205\261;9\013\206;\333\333.\276=\033\006=\000\026\335\274\007\024f=?\371\020>\335?\024\274B\177U<=d\215\274\373\315c\273\267S\222\275d\264\300<\312\254\225<\033\001\005\275\027\334\027\276\245\"h=\331\000\014\274\252,\215=O\010G\275\0174\000\276\262,\213\275\026c|\276\350\021\214=\033H\022\275\276\330\216\275\310\305\007=\364\022\333\275-g\241<\300\357\352\274f\344\265\275\376\010Y=\354$0=\207v\203=*2M>\240\204]>\267\200^<\313\216\247=\344\305\034\276k\013J>\245\017\330\275\237\270j\276x\244\215=\345\365\320\274\364\222!\275J>\276\274\215\314\017<q\017\006\276\203\322\264\274|\300\273<\353\262\277<Y\220W>\205\314\260<\377\371\304\275\355)\312;%\025+>\317\331\276<Gx\024>\242\310y=!\343K<\301S\364<\224\357\226\274\2037z=R\372|<Y\017\331;\257\222\254\274\243)U\276\256\333O\273~oc\274N\311\335\275\326\030\331\273\237\361\034\275\001\311\006<lOr=\254\027\022\275v\032\200\275xm\361=:\321\005<\271f\226\274q\334U\275\357\000>=a@9=\321\271F=\350]\033>\216Q\032=\272\021$\274\026<\204=\271\025\205=\220\253\202=\370\016\266<3&\\=\3312\316<\365\354\n\275r\3069<\226#\331=\235\301L=(\256\215;\343\322\234=\314\237\352\275\263vn\275-\345(\275\215\310\001=puI<\227\037K\273\256p\217\274\007\213L\275%\256\244\275=\275\005\274e#L\273\254\211\204:\315\314H\272\312\237S;\347%\204:\003\317\032\274\334z\345\274\034\214\315\273x\221\256;\372\022_;2\305_:S\027\260;\310\304\2149\323\002a\273\221\325\244;\331\207x\273\304\375\260\272\327\226\371\272fMq\271kZ\251<\265\037\223\272\034\300!\272/\320\203\274JF\331:\211\364l;ef=<\252\237\320:\034Z\n:\252\002\337;\031\316\337;\314{\233:\250n\234=\323<\027\275x\361\236<\273\177\200\274\030\225d\2751\022]\274\230ys\271\361}r=\240W\216=\260\340%\275w\014\356<\240{\354\275\372\307\314\275\355j\024\274\321\020\376=\007\265\225=iL\273\274m\275\025<\374G\223<\003v\334<\236m\033>\355d\311<\022\231\372\273d\246\361<\244\336Q\274]\363<\273[\201\307<\317\317\014=\'\223)=\276\372\267;\337\322\252\275Qd\256\274H\333#\274k\262\202:[v\252:dvd\272\330G\206<\007T\243<`\351\253\273\301\327\307<}^\213\273\026\362\020<m\376q<t\223\216;(7q<*\323\2059\202\303\361<\003)C<\340\271\"\273\014\371>:\332\234\225\273\tB\334;\214O\036=7\360\222\272(\263O\272\352\313\r;gC\266;\264\317\2469\212d\324<P:M;\366\263p\273\263\024\346;\341\230\231;\222\221\214:\351\220\000\274!\016\257;h+\343\272\306?\326\273\000\304\242\273\255\307I<b8\035\274x!\023<\277\353\225;X*\010;/Nc;\346\316\236\274F`%<\337\247\030\274zHp<\256\374\267\2730\366\301\273\017YK\273\217R\306\274-\306\221<\344\224`<\326\373\341\271,-\013\275\321\327\370:*^\026<E\377\341\272c\2102<k\343\2009\244\334\330:-\337\r\274\017C1<\2510;\2749\270\026=u\354-<\217\213\203\274\262\310\361\274\010RE>@\r\375;:\340e<\343K\356\275\240l%>G\213\377<Q\264\351\274\310o\260\274\203\223\261<e\261\264\274\350a\205\273\271\235\"=\234\237\367\274m\375\030\275\205u\230\275Q\031\245<\311\235\202\273gs\256<\341\306F;\030\010;\275k0\314\2754\235\361\274\341\214Y<\356\036\014\275\375\307%\273\005\354\325\273\005\3724=\372\335\030\272\347\372\030>\253\334\326\273\207.\r\276\361\263\260=\276\263\201=\246a\r>9\300>\275\2630\265\272\027\371:\276\250\332\351<\374o\007\276\346\271\362=\026\353\225>l\352\0359I\221\206>\254\334\361=\356V =LX#=tT\301\275^+\220<\256\207\'=!\377\343\274\n\272I\275\340(5\275\230\375\203\275xn\374<\253\242\177\275\276\204\263<\325\213\374=5~2>\203\030\031\276\304<n\275\237\211\316<\236\237\001=\240\232\221\275\371]\007\275$\035O>2^j<\241\356I<\003\215\002>L\021h>{\363g=\343|\215\275\367X5\276\261\375\316=\374\002\233\274\335\371.\272\371\252\375<Z\304\334;\207\306$\275\240\033\251\275\213\241z=\224\315\323<\237\216\207<\255\274\201<q\215\331=\364\351G9\030\216\351\272\260\222\251=\360Q\220\275k\263\001\275\237\260\234\274\220\030m=\230\214\201\274\246\355\227=\243\360\205=\004\206i\274\311\2673<\257o\346<\227+\203<\232\360\t=&S\211\274.\205\372=.\274\020=3\326\333;6\007`\275\251J\311<\034\366\037=\360\236\264<\374(\022\275\002\020\203\274\356\r\221<k\365\270\275\245\2766\273GV:=\344d\220<\311Q\252\275\310{\331\274|> =\330\367\323=\024$\252=9^+\274\361w\003\275t$\213\274D.\'\275\251!-\275X0\371\275\301\306\261<b\037\242\275\244.\210;(\310a=0Y\220\274\022x\250\275\3048\243\275\032\341\367\273\201\206R\275\211@\007\276\005\247R=\t\214\014\272>hc<\267\277/\276B\247D=\3073\r\274\234\024\376\2721\241\016=s\212N;\322\254\326\275]\330\320\274)9@\272\010p\035\276pb\032;F\252\311;N:0\275\260!\221\275\340Y\206;\334\341\"\275e\232:\274M\274\212\274ta/\276\326\'\325\275\027e\315=\277\365\355=\t\247\341\275\246\302\273<Vk\247<\334Gw=2\250\310=\206\277\254\275\026\265,>\2645\367<\256\257a\275AI\243;\300\263\304\275\272\0244>\202\303\342=\312\200\274\275+\272;\275|s!>\363\353\255\275\351v\344<r\211\373\274g\037J\276\203Q\t\275\202\217\005\274\316\200u=\305G\255\273.\336\226\275\201/\240\273~\014\201=\022\016\207\275\310\343b=\343\2257\275\244\215\370\274\345S\037=\205I\r\275Y\225\033\276\372\260\251\274(\034\016\276\354Zs\275o\352&\274\264\004\244<\376\002\231;\256\'m<,\373^<\034\177\302\274\017\0256\273\243\374\222\274\357L\241;\336\002\210\273\207\345\203=\347\357\365\274g$\315\273\243\354\215\2730\020)\275\225\2576<\330 \210<U[m\275I\r \272\301\354\233\274\317\2351\275\203@\023\275)Q\007\275.\237\021\274\177\352\217\2750F\031=\263\003\200=\\\023\316\2743\273{<\033\021\016\274=XE=*C\214<[)\224;\252\205\317;04\003>\013\375\037=\006\211\313\274\246*\322=~*\027\273\326aD\275,\366\261<\021\027\207\275\375 \020>\271(\265<\314\260\341\2748\017\222=\251\306\226\275\260\231\311<\3063\037\275\246\356,<i\335\313<3n\231\275ZQ\023\275R\256\'=\201\345\031\275\234\257\211;\315l\357\272\350\326\374\273\354\214\205\272u\307\234<$\034\037;\\9h\272U\241p\274:g\205<AH\000;\034l\345\274E)\027\274\026\017\220:E(\017:8\243\204;J\265M\272\364f\265\272\2157{\272\215L\024\273\356\3014\2733\340\323\273\342\020\3078\375\222\262:\027\235~\271\244\227\000\274!\214\206\273\315\243*:$r\335\273\205rW:A8\273;\206\203f\271h\010\227:\032l\342=\221c\004\275\302\304\032\275\357\310\267\274P\305o\274C\357\210=\224\351\214\272\020\250\247\275\202%\241<r\305H\275\\\231\210\274T\001*\273\033\366s=\004Q\317\271\007\n\301<|\230@\273\001\357J\274\221\312\266:\212\313b\274\372\021\242\272\274p\353\275]mi;S\207N\273\300v\025>Jw\236\274\254\207\364\273C#\363=O\230\214\275\026\265K\274\201\222\304<\026\377j\275\275\275\204\274\035\010\013\274\235\256B\273\311i4<\311R\003\273\210\342\264<\206D\023=]n \272\007,=\274S;\256;OK\000\273\262V\255\273\344\354\032<\002\356\313;$\270s\271\346-\324;G\223O\2721\177;\273\307j\366\2728S\374;\371\317g\273\032\373\235\274\262\237\002:\0341s:\345\313\367\273\024\331\023<i8\014<\027\303\303<<AB\274\225\252\363:8\001\006<\244\363\362\272\370\225\203\273\330b\204\272p\035\313;<\006\332:1\233\214\273\335:\215<\351s\302<\324\027\263\272\322\233\027\272\252\222\003<\307rl:\2014\322:|\254\006=\013\375#;\010\177\3639\030\374b\274\247\20319+V \273\360+\323;T9\206;\332P/\275xS-\273\322e\2429*\331\205:\t\344\211\273)\355\274<\217\323\271\273\351\000\350;\253\006h\271C:\202;g\371\375;\005/~;n|\364\274\272\322\237=f\nE\272[o\373<\316\366\027\273\330\315\326\274\n\346\217\274v{\374<\014\354\274<\216\341\007;}\333(\275Py\034\274\252\216\265\274/Nc\274\034:\t<Y\227\027=\2565Y\275\006\024\276\273\365@/<\261\337\002=\254\305\017=\016\220O=\243\274#<\341{\212;\036]7<r\356F<\030E\362;E\223\244\275d\360V=\0001\212\273i\221k<\353\377L\274\343k\253:\253\326!\276cB\235\275\224\355.>W\323\220=+\324[<i\244\016\276\337\222e<\305nG\275\343\226\337=X\315\340\274:\242\"\275}\326\370\275N]B\275W\324\037<\333B\357=U\227\366\272>\n\301<\311\303\r\275\355\313\245\275\236tF\275V\336z\275w|\260\275\'\r\007\274\031\322\215\270\245\366\264=\357\014\022\276,\305\264=\200\327\226<\010b!\274<\265\036=t\0326\275l\2128\275\223\251k\2747)\334\274\352\314\363\274\2518?\273uL5\275}\033\202\275\322a(=\325?\234\275\033Q\204\274\201n\016=H\323e\275[\365\307<a\237\272<ZS}<\033%\276=\375\307\277;\224\324t<\342$W< ~{\275\262\305d<\202\253\372\2744\215\276;j\256\035<\031\022\260\274\332\331\255<4\032B<|h\230<g^\206\275u\037\336<\235\222\306<\201\206?<\007j\346:\021\320\205\274\027\302I;F\374F\274\367+\017\275QR\237\274.\362\312\2756\377\213=\234\0028\275F\327\024\275\314\007\n=J\224C\274\236\324\032\275j\021\357\274\024A\016=\022\355h\275\235[)\275e\247\256\274\271\364\224=\327\031(\273>T\022>|r-\275@\360\227;\244\201\325=&w\262:\020\221\204<\035\0349=\205x\213\273\006$\243<\357+#\275\010\305c=p\020\341\274y\320\243\272&,\261:\224\302V\274\330\035U\275b\327\327;\345\374\267;\035\254#;\266\246\206\274D\343\221=/\357\311\273d\322\316\274\375\230\357<\343\232/=;\375\331;B\375\267\273)8&<\224u\023=\020\002,\275\212\027\023\273\002\214\371;Y\316\211\273\264G{=`i59\214\203\r\274\001\312r\274\330?H=\364\202\202\2701\207\004\274\0148\357<\352z\230:\336\253k\2744\316\347;-@\242;\202\223\014>T\352\230\275M\261\005>\301}\326<y\224\361\274\344-\237=\302\255\256;Ya\234<\214\205\325\275\262t\245\273\375}+>\204\216\013>;\265\002\275\233\361\200:\272\324\372\275e%\341\274\367\035\010<\266\242\036\275Z\rl\275s&4\275B\270\350=g??<\271\032\277<\330\225\372<\206\223\233=\312\330:\275\026\205\357\274\010\217V\273\213\227\004\276\240\274(=\237\333\252=\224P1;s\231O\275\021|\353\274\221uq\274h\244J;\276S\001<\030\356\002\275\346\370\312\274\255\375\020>\343vo\273\034\3623;4\262\032=\2614,\275\261\310S\275\001\"\"\274\372*L\275\240V\022=\211o\234\274\240\236\001\274\2612\206\274\027\342\310<\377\260\033=w!\017\274\2600W\274\361!&8\234\332\244<\315\240\014\275\211\263\306\274\003\r\023\275}\254\027\271\0003\323\274\254\233l<\322\346\273\273\200,\017=\345\311\277\274dq\332\272\034\3520\275\017\003(<\361R\"<N\370\212\274\304\327\212=\242\311\016\274id\236;\372\032y<\343!\277\2732\331Z</\211\252\274\356\204\203=\224\3627\275\221\206\013\274\361]A<\326P\"\275?\257\236\275i\376P\274c\273\273\273\315\217\235\275\036\230\202\274w\214\242\275Wh\262=\310@2\274~\340]<_M\r< \320\253\275\271\017\031;\304\004^=\013\317\271<\313\270\213\274gK$\275\205p\263\274\237\300\316<\250\357\205<\026\210\200\275\230\265z\274i\230\206<\221\246\332<\201\006\3408)\250\024=\361\261\232<\013\276\203\272e\025\337\275#%S=F\204?=p\246\216\274*\032\330<\214|l<\016\225T=\351p\260\274\326nL<_\362\274\275\247-H\274\307\327\222\274Z&{<C\034\324\272\005^\342;\262\355T\274p\364A<1\243\362\273\376\257\032\276S\312\356\273#0\025>\221\260\004\274\010]\020>\231\244\270;\331\331-=P\245\226\275\202\321>=\212.\275\273\317\250\337;\023\360\302=\017\000\245\275\344I\330\274\003\033)>\277\267x=\013\275\302=\341\247\001=5\230\302\275\"[\251=\263\376\034\275 \325\302={\001\202:\327\030~\275p\330\331<\036\351\007=\312\034\025>\005w\001=(\016\350\275P\351\252;>]5\276]\023v\275\327\256\352\274\320Gs\275\3228\034=\212\245\004\275\227\031\205<\003/\302<\375W\2258 \374\330=\006\022\202\274\317\353\200<\332C\353<\377\276\225=\333\225t<\023\336\352\273\242\331\013> \000\205=\022*I\274\271 \266\274\025*b\274$\323\357<\277\332\234\275|\237V\273\320\233\216<\265\211+=:\314\316<\372\303\244\2744,\222\274\323#+\275$\3554\274\265\032*\273\330\320\033=\237\313)\273\027\255\373<\032;);\307\356\323<\003\265\005=\317&\243<\365d\270=*`\274\273\350\203\261=\016;\232=\351\264:<tJ/<Lq\324<\256\300$=\264\032#\275\203\213\253<W\356\003\275\260z=;\254\232\372\274\"\031\224=\271x\266\275\370\027\255<\377\356v\274\364\342\347\275\010\201\273\275\275\374\246;5V\316\274\001\216\003=\266\t\223=\345=\221=W\327z=\021\217\260=C\213$=\246\265\202\275\266\362\030<W1d\275\234At<\240\366\013\276P0\304\273\306\307\"\274\177\014c\275\367\322\016\274\313\222\226\274\2268\227\274\377\037\220=\033\337%\274D=\r<\325\037K\276CyK=[(]<p\255?=\263\211\211;\013pG<\363\216\373\275\260\346\216;\210/\303\273J\355Q\275:\004\004<\360\2639\274\311\254V;\321\230w=3\203\037\274\010\302.\272\\\342\357\274u\177F\274~\257w\275>\242\305\274\322\r\272=\206\352\222=\231u\023\275w\212.>\3211\020:\271fc=u1_\272\226B\257\275\354\273\213\275\231\026C\276s\255\307=?V\335;\215\020@\276n\3378>D\355\270\275O\364\212\274*\212C\275\252x\035\275\352\300\245=\320\220s\275\005\362\371<\277\354x\275\230\023\333=^\017\356\275\\\367\337\275e\373\346\275X\352\013>C\254f\275\337\340\203\276O\251;\275\372a\320\275\322\026\242<\310JZ\275s?\277<\275\240\352\2751\004\303\275\005\350q\273\353XD\276JJ\016>\003\333\246<\337\232@=\214\374a=^WL\275\273\2574<\027\246\336=\321\020\354<\251\361\034\274\246Bh=\225\304\030\274\032\267\n\274\303\244\204=)S\222:\017r\237\274_\354\"\276\251UM\274\305>\250\274\215\344\234=\202\363\242<\330\036V\274*9@;p\213\264\275\rF\224\274\304\'\226\273\364\306^\275\355B\264\272S\226\000\274\351\276\353;S\'J\275\372w(\274\"I\030<h\020\312=$`5<\332\356\027\272\n\3060=\027d\033;\260\273\240<rB\300=\240\343\321<\221\007\302\274\r\030\352\274\325,\3429:\323\300=\343S\226;\335/\355\272IFJ=\212\3070<\213\246\323\275\240\310\251\275\341\220\n=\201\360\215=\334@4\275?\2005\274\024\227\177\275 \254!\275\215\253\276\272,\033\031\272\001hN<\202\036\201\271,\324\331:\324\235\376:\360QG;\351\036\213;\017\\\262;\350cp\273\213\2409;[\365+\273\214|\2369S\2009\271\374\207W<\350\302\n\272^\316Y\273@\";;gn\307\272\253$\205:D%\3548\0002\017;\177\310\033:\237\312V<\351\323X\273\217\251\221:\353\264\242\2739\017\035\272\245u\2479\260n\265\267\234m ;\303\365\267::o\204<B\353\006\275,9\372=d\364,;\227k\202=\003\n\027\276dM\202\274\313\245\316=\232uZ;\263C\022=(\333v\275\244\254\306\275E\315\253\275\212\373\277\272\037x\310\275\374\305\275\274\302\277H\275\004]\214\273\004BN=\242\007\376<\363^|=\344}\210\274UD\326\274\007\351\207\275z\001\036\275\2607\032\275\334\341\363=\220\273`\275\305\346\257<\365\325\362<\"\226\374;\221\313\263\274a\224d\273\252C\363\271\311\027\253<\334II9\301\014g;r\326l;-*\342:2\277 \274e\025\212;z\214\257\273\374\314\r\274\013\332\316\272S|?\272\340\327\355\265F\3255\275\274\272\361\272\3209S7\213t0;\225i*\273<\3656;f\301\010\274\002h%;]\035\234:\213\205\260<\214\370\236\273 \236\360:E\310\003\274$5\033<\374W!\271\364\347\2217\351q\267;\016\373\207;\231\\.\273b\316)\274E\267\351:\326&\217;\235y\003\273\342\235\3449\246]\206;\201\252\206\273\317X\\\272\353\363\374\272\351\226\235\2713\005\226<\326\354\3349\344 \376\271\037!\215\274\300\347\313;\324\373\007:\253\316\t\272Vd[\274\014\353\216;\375vy\273\n\277\350:bjm<\254\031\332;\200L\274:\2305\307<?\223-:i\301\003;5FS\273\315\225\276;\232\331\000;)\330D<N(\240=/\217\274<\034$R\274\276\354\227\273\351y\200\275\247f\027\274\346\347\324\272\327\336\203\275O1l\275\311 \260\274\254 n=\036\324\217=xC\013\272?y\223;\224\204\031\275\0105\003\275aP\010=M~\032<7\306\357;\n\\q\274\244|O=\006\240M<\'\341\323\273\236.\202=\244\"\006=\363\017\314\273ce\234<\263\3055\275\216\362\023\274\334_\226<&t>\274\0257D\273\267U\000>\331\232\322=}F\344=\320\3115<\rM\326=\236\001\013\276\nR\205\273\252\226\277<\277\277&\276\313\221e\275\215\0304=\275\241\274=NO\236=\nM\247<e\235B=\2407S=\024s\300\275\031\262+\275\370\224\237\275\357wf\275\375\000\274\275\265\354t<\315\2625=\316(\250<K\327\230\274\025\027\210<\014\302\340\2751e\266\274V\331I=\367\341f\275ee\271=\330\324\243=\036\274\2338e\226\205<\010\202\\\275\222\336Q<P\014\t=t,\354<Z\352@\274\236r_\271,\277z\274\027\303V\274\303\3056\275bg\036\275\242\317\370\274\t/\032<\261\215u<-\237\271\274\373\317\034=\211\345}<\377\272\336<5+\n=\214&\254<\326\241\'\272\251(&\274\370/\233<\301\234b\275\363\032B<\351S\301\275\222R}\275!\025\232<\010\371\300<\225p\310\274\231\013\340\274\006l\317<u\030\304<\224\230\206\274\356\275\003\275\264\377\262\275\257\353\202\275/C\261\274W\333[\274-\311\\\275T\263\371\274c*\200\272*s\363<\2737\221\274W\364\002=;>1\272\276Y\004:6\353s<\037\206|<S\336\203=s\267\226;\341qf\274\254\334.;9\201\212=\360\022\022<\213%\251\2745\204\266\275s% \275\202\006\314<\003\2665<;\251*=\206\360\035<\352\224\240\275\243\030\364< l\\;\334x\355<\325\331g\274Zl\364=E\264#=\265\374\315\273\036\223\217\275|\342\270=M\245\265=)bK<{\275\234=\022\265\263<\332\023\250\274\022\301\324\275JEF\274\270W\276;\264\275\217\274\371G\373<+\215\010==\031\222=iMa\273h2\306;\224\334\274<x\257\237\275G\2047\274\332\217\321=@,F=\300\272\252\273\034\277\213<\032\315\341<@\346\244<\312\227\252<\301X\230=R\317\364\275\232\232w=\271\246\r\276]\210\021>\345w\211<\212\202\001>9z)>:z[\274m?!<\020\365;\275\316\242\003\276pAY\272\311\231\351\275\327\215\005\276\\\217S\275r\365&\275\343%\274<A\300\021=\353\207\353\275\0133\251<\301g\021\275\276\255\211=)4\336=\314$\263\275B\263\320\275\275\312\022>\233mc=s?\032\275\017\223\330=Q\312\344\275\224I\263\274\237\306S\275\213\202\016\2752\270\335;c\334\371=\375~\216>D\236\035\273\031\300\226<j\204\310=>6\277=\255\037\350\275\025=\341=n\361\324=+\021\305\274>\005z\275\360d\361<\323\200\036\274\010F\240\2745\242\213\275eH\216=\221{\020>\206\246G\273G\031\275;g\211\207\275\255 \341=J\n\367\273\2641\240=>\347\324=@7\"\274\036~3<\302\365\240<\240\3371=\3020\350<\263\266\323=\37622\273W.\201<\363\ng\275\336L\333=\202ky\2744\342\262\274\000\254\224=\032\306\010=\275\244=\274\226\326\020\275t\321&=\036\005\014\275\003\205\326\275*i\025<(\005\314\274*\324\303\2750\350v=\"D\260<pdJ=\005\004V\273\226\321#=\314\357%\275\034LU=\315\250\220\273\354D\226=\234C\026=2\267\032=\261\'2=M\026\031=w\263X=\220$<\2744m\353:x\276\027=\243V\305\273XBa;\270\323.\274\270\323\233\274i\201\314\274\242\342S\275\232\241\314;\346\300\216\275(\364Q<mL\236\274j\0222<\005d\370\275\233*\222\274\007\253\326\272J\252\203\272XsZ\273Z#\255<a\215\212\274!\002\273\272\360`y<\3603a\274\264U<\275[\326\277\2746j\310\273#\353-=\033B{9J\323#\274l\334\206\274\227X&\275%\353\323<43I\274\243\345\312=\250\261\n=y\330\341\275\351\203\336<z\t\364\274\247\254\n>\325Pi>\002w*<~\344\025\2766X\222\275q1\346\2749\373/\274I\210!\276\205\303\004>\312\223\276<\271\022K=#\025t<\321\210\320<\222\250\001>S\227X\275CI\207\274\024/\257\275\323\233\'>v\260.\276\214\006\031>$B\330\275y:\203=\364i1\275\006\302\306=Xj\003>g!\207\273\006\276\026<\275\244B>t\357\004\274\323\247\203<\205\277\301\274\351\332N\274\273\007\256=\364\021x\273\204\352J=\3279/\2752\257\322=\226yq=\025[\324;\373\274\201\274\317n1\274$\323\204\2730f\032<:\000\205<P\257\202:\263\344g<c\177\267\271n\221\340<`\205@\275\276\3164\274\313\247{\2758d\227=\235\345\214=KZ_;W!:;\023\237\021=\376_Q\275A\014I<\370\2432\275\216XX=\0253\244\273[\372k<\307\234k<\234\020\201\274\253\024\206=\353\022\371\274=\345]=\231\002\216\274\004\376h\274\343\027\373\2730L\034<\211 \276\272\365\213\221\274\377M\004\275_ar\2746\203\026\275W\377\230=\226\361y\274\022\2027:\207\240\t\275\237\014\017=1\314\212=\331qQ\274\226\314\314<\235~~=\310e\266<aQ8=\003z=\274\247\327\344\274\255\016\261<AL\376\274OA\252\275F\367D\275N\001\025>~\350\020=\217\014\216\275Q\034\020\275\364\307\000<9[\016=O\254\207<\241o\322;6}-=\336\267\332\274F\224\205=\210\023\276=\236\362\245<\252*\013\275W\303\212\275\0377\230<\357\337\004\274\355\214I\275\003\345\203\273\274J\342<\236\':;;W\252\274\221\027\257=\216\260J=\263\303X<\215`\031\275a\232\024=\256\322\212;]?5>\342\247\370;(n\376\275\3341\337\275\242\324\242\275\234\312\232=\344\327\031\275\263T\025>\3159c=*r\361;/\"6\276\326\307\315=n\257\310\275\357m}<\260\221&>\211\3035\276p9\370\275\202\355\303\275\0210\210=\212Q\001\276\370\306\001\276&\266\023\274\235W\033=\222\240\030=\342\224 \276\304\020\335\275\336\346\237\275\027\007\204=\217\177\030=\001=\301\275\r\314\230\275\002\252\220\275\010\341\230\275\274\325\316\274/&\213\274+\344\023=\002b\231=\221q\354=\372\020f\275{\206\014>\232\227n\275\223\330\236\274\374\357N\275\306\3418=u(\267=\026\272\344\274\250/7\275\265\206\021=\025<}\274}C\035\275\251\"[\275\266\377\240=GiA>\362=\374\274\276\336j:\333\362\234=)W\307=\321h\325\274eM\251\275\236\363\222=\302\354\221\275{\2566\275c\2626=A\023>\274\350@S\275U\003\271=\242\326\t= \353\232=/\324\242<\227\001\356=\321>j;\313\036\303=\273\267\327;\336\365\211\274)\020\215<\312]\200<6\271\366<O&o\275\266\374k<\001-\337\274\204T^\275\276\272\025\276\224N\'\275\213,\260=\r/\002>S\372\256\274l\273C\275\204\213\213=L\261\234\2753\225\237\275\253\022\345\274\335\374\'=\346\334\222\274\270[\230\275\326\276n=\231\221\302\275\'B\276\274\231\273\363\274u\020S=h\254\235\274\300/v=\310c\350\274\r\273\026=\225\343\035\275\014\366\026>[X#=\017k,<\r\356W\275\016n\320\273\003\221o\274\007\243\355\2742M\324=z\206%;\2264\r\275\006\355!\275\237\371\241;\361\302\026=]f\010;\016\n\306;))\247=_\243\243\275\203\000\24693\257<=\366\345\276\273\315\222\207;\021\3456:\263\352\222<,\366\013<\236K\031\276|\363\322\275\377d\024=Y\377\001\275v\225+\276Rp\325=\\\343\231\273\332\237\263\275J9@>\311\005\365\274\272\210\325\275N\227d\2756\364\214\2758\365\272\275IK\340\275<l?\275&\251\241=\323\277\210=X\324\006\276\020\024\200=Z\ru;\253V~=\255\374\201;\376\321\211=m\003\263\2752\370m\275\362\351\307=\016\3330\276\266\232\214\275.\t6>\224B\343<q\277\036\275\r\223\274\274Iw\250\275<H\327=\021\013\200\272:\377]\274}\276\231\275ze\2319J\256S;\367B\014>\206\326\221<m\231\250\274\034P\024\275c\217!\275\307\233\245\274\334\252\022\275\245\373\302=\340\034\317<\275m\360\274\346z\322<\250\212h=\250%\302\275\020OM;\350\002o9f8\207;\2624\002\275\270\204\r\274\367W\324=\230F\323\274i\305\230\274:\tf\274\204\021\237<\024G\274\2729l4\275MEB\274\264\017\215=\357\312Z\275\242O\270=\324xD\275O\305\032\274\300\267\213\275&\330\307=\230\237\342;E\177\311\273\363`\254\275p\246[<\241\201\206\274\2010c<\013\326\307=\373:m=&\256\014=\311\314\350\274\0275\031>\3771\264\274,\344\202:/(\032<k\001\205\275\256J\000>\265\237n=-\344\211=\371a\374\272\324\221\027=\340m\344=\326\3147\274\022g@\275\002\242\344\275\373\205p\273^\304\002\274]\267z\274\3734\304\274\217\224\205\273\3710\024\275\027\267U>\357\263\360;\370K\254\272s\317F=\213\230Y\275:g\n\274R\311\025\274\365/+\275\260\\;\274\013%\226\275}\303\340\274\026\375\226<\246\236\304<\214z\233\275\021\377!:q\343\035\2745\010\002<o\212C=\264\022\360\273\361\205(=\017\335r<\314\312\241<\036\027,\275\334S\365:\234a&\273jv\225=\335?\314\275\3752\247\273\225G~={\246\000\276\330{\314=~\010e=\205\234\217=1\324@>6\272\274=F\277E>-`K>\004\222E\275\207\247\277<:8\017>\202k\027<\350\234S=\020\036|\275\225%\023>1b-=\254\257\271\275\332\212\024\275\227\303l=\235\272\205\275\260\3607\275\3473\'\275&\222\003\276\260\270\215=_\334!\276\335_\017\276\353\2472=E\267\225<U\271)\275\250\210S\275N\303\243=\235O\r\274\'\214\216<\322\003\251<?\2723\275Lx\222=\"\275\271\275\024\373Z\275\203\347\371=\005\016\024=x\262(\275\3668Z\274\215\206\321\275\225\0167\275Z\t\013\275\023\177\022\275\365Qa<\365\007\t=m\227\351\274\027\3070\274\010\030\325;s\212\204=\362\366D;yg$\273i\250Q==Z\233\275X\224\2639\223|\203\275H\342C<a\257\007\274\240\263B=&\007N\275 \317\177<\275\037O\275#\t\254=\016\222\320=.b\247\273\036\020\020>f\354\354\273+\316g\274yM\370<\271\010\363\275H\221\201\273\3706\347\274s\375\006=\320J\202\275\300\270\235\274\332\335\234\275X\312\220=\244\324\323\275\356\267\323\273sG*\274x\203\342\274Q\201;=\\\330\246\275t\006\206\275\233\246f\273\352\305\021<\216\3737\275kH\232\275w\217R\275.\263c\275\206.\255\274D\177\014;=\244\016=\374\037\312;\010R\316<\013\220&\274\022A\252\273\340M\324\275\2041\027;\n\017\377;\365\350\001=>\317\255\273\033\2310\274\n\257C;\217l\205\275j)=<\267\235\314<\263\330\213<\244\223\264;\2077\203\274\265C\023=\373\342\304\272\273M\222\273-l\334<\005\017\270\274\250\032^;\2615\362<\252\222\242:\254eR:\365\324\252<\1774\353\272\341\217O<N\211\335\275\237\245[\273\006j\027=\307C\222\274\022;\207=W$\271=C`\304<3@\345\275\250\3235<\371\214\357\275r\026\371\274\031~\245\275f\210\255\275\3016\232<2\376B\274\217\23439\211\2065<Z\301\246<\2610\366=\200\263.\274XX\371<;\006\014\275\314K\375<\312\266\221\275\313\020\276=3\016l=G\304\312\275w\350\r=\321\370\014<\342\316\033=G$\314\275\323GB;\264\013\010=\346\341`\273J4\200<>\250\374;\377L{\275\2064)\275\234x;;\005\355\214;\0058\r=\037&\322:t\306\214\274\203\267\016\275N\324\210=\3502$<\273=q<\300c\257\274?vS<\217*\310<\267O\270\274=dn<$\356\341<\230\345\222\272\224\254\266\273\2710:\274\2407K\274\304%\310\272\27351=Z\243\206<{u\246<%\307\224<\225\240\265<\362\3744\274\034\363(\274\322\241\224=\323\266{\274\327\304\262<\362i\247<\215\244\332\274\314e\001\274H\2266\274NN\355<\205\353\311:\351_6\273C{\235\273\266s0\274\251\340\276<\370<)\275z\346\021<D\323\000\274Y\204\006=\262\235u=\010\323%=\205\206Y<\222\320\370\272\375\035\002=r\263\003<\271\005m\275\331\2165\275B9y<^\240\211\274Ph~\273?\357\034=\354\371\201\273V\367\230\275\272\354\262<\220\347\316\274\032$8=\342f8;\363\362\333;\271\232\004\274w\355L=\336&\247=\207\266.=Or+=\200m\311=Fk\341\273\306\275\315\273\324G\374\273\177\"\237=*\365\230<\256x\237<\340\236\230\274\021\237\327;\\]\320\274]\231k<\330\302\215<\36753\273&\315\245=\2447,\272&0;<\246m\220\274\002\"\225\275X\006\000<\016\342W<C\275|<\236\276\336<\274\271\251=\223\030\013\276\363\275\257=\024W\203\275eN\312\275\310,#<\027\236\337<\337\346\303\274\030\207\022\276S\317\315=\373\340k<j\233Z\275a}\260<v[\313\274\345,\241\274\206\321\302\275FW|\275\204\014D=\202T?=!\223\317\274\341\010\203:\335\331\250=\300\230\260\274N\177\"\275\236\232\374;\275\265\374\275\360\254\357=Z\262\225\275\310\330\004=Pq\243\275\335\345\340=\363\273\236<bDN\275\301\232\005=\217k\246\275\210\302\200\274\321\224A\274\304\356\031\275f\014\351<=d\361=}\352W\275\210\271x\274\230\362\230=2o\273\275\236J\276\274\354\257\'\274=\3752\276\362\000\227\275\302V\031\274\000\013\310\274\013*w\274\212\266,\275\304\361\004\274(\343g<\267hh;\303(\013<o\004\350\274?\374\300<\232\371\200\275\350\350\\\275)\334\373\273\312\356Z<+1k=\rO\016=\3629\202<\226\335\226<\341\321\311\274\266d+\274\257\r\324\273\331v\205\275%\357\"<\215\236\223\275\273q\264\275\363\376\342;\370\t\350:`\024\377\275V17\274\200P\n<\3170\254\275\003\010?\274\217\274\344\272\364\032\022\274\355\204+\275?6\222=W\271 <\233\2527<U\252\251=\001\211K\275s\347\322\275\246[\361\274U\\R\275\372s\226\272\367\272j\274\260\020$\2744\324*\275s\203\302=L&\226\275\362\341\242<\n\325\272<:u\303\274K\310\332=\300\276\302<\217kJ\275>\226\252=\377\3205\2757\271e=G\335>=\036\032\324\275\362\261\033\274T\220\260\274\260uh>\227.\203\275\232\352\033\275@ \265\274o\005\206\275*\267\236\274\253\007\213\274s\033\005<\266\337\333:rr-\275hz\200=j.\231<\n\262\343\274\326y\r\276:\242A<\224\010\363\273w\226\245;@\327\333;\347,\376<\310\275t;\036\344\331=\237\213\326\275\030\350\177=\274\344\255\275\252\352\313;#1\025>\235a\224=\331\024\243\273\362\302\002=\263\\%>\372\014\215=\250\255\024<s2\371=\274Y\033\274d\030z\275\312NM\275\331\022\307=\235<\342\272I&\377\275Y\322e=\370\255Q\275\373\206\362\275\323\021,\276\215\034\345=\2727\204\275\332R\360=\\\332\211\275\230y\007\275@\211\335\272Y\022\237\275u\303\001>\244\230w=\306\330k\275p\320\314\272A\356\341=\024\333(\275A\022\270\274\370m.=\376\320\272\274b\374\244:\205hY=f\307c=O9\366\275\365\324\301\274R\344\240\275d0w=\022M)\275\027\313\316\274\364X|\274:VE<\035g\">?\333\212;\3632\304<>\270\"=2#\224=:oT<|\335\253=\310\344\272\275\341\223h\275t:\001;\227l/\275\232\202+=\362\233\212=\226\235==\215\342\342\274@\206\030<\235\304e=}\234\246=\004\204i\275\204\202\232=\250\315~\275\333\003\362<V\252\356<\306\326\003\276\310^+\275g\007\033\275\374\252\262=\203=2\275\220\230=\275\253a\213=\037\331\327\275\201/\324\275\244\0358\274t\341\211;U\024\244<h\001\320=K\006\013\274\035\310\021=\304A\002=\022l\n=\371\001F<\016\302\220;\030\241\206\275\362~m<s\257\226;\241\372\364<\tW\370\273\242\265\030\274\016J\307\275+\026#\275/\370\212=I\007\264=\301\323\021<\t\022,=\304\217\203\274\035\240\302=\203\367\366\273\374g\261<Z3\344=\312\271U=F\222W\274\201\323\223<\340\337u\275q \310=d\265\254=W\2578=J\315\034;\267\013\226;*\222G<\256\320%\274\003\344\027\275\200\343\351\275\272\331 =e\216\253<\262:\030\2759\243\254\273Z\030\267\274W\\G;\355\037\006\276c\002\276\275\234U\324<<~\357<X;\254\275\327[@\274\311\036\274=\t@\347<\227\375\007>%\275\"\274\330\263[=\024\210h\274\340\202\303\275\213\3534\274\3667K\275qv\262=\222\030\244=\210\317\215;$\330\326\273\364 \237\275\304\305\223\273\317Y\036=$+\234=\366\253\031\276\307\322\007>\021\301v\2750\203\236\275\300\352m<\366\363\202=\313\266\360<\"\004\225=\351\002$=(\"\225\275+k\250\274)\026\357\275\261\036\373\273M\371\251<\306\262\332\275k\317\313;\014\024\262=4\026\333\273/g\331\2752n =%\272\305<\373\270O\275n\314S=(\276s=*\310\235<X\260^\275\376\361\341\274\323S\362\275\241\007\322<\23288\273\263\024\310;G@\326\274\265\332\242<\t\327m=\'\241\333\275[\222K=ddH=T2\261;\332\362\351<O=\304\274_\362}=\'\225\365\274\365`\321=\316~\321\275\316\3345\276Ip\271=\356\315\014\274!\022\021\275lz\034<q\246\'\275\315G\256\274Um\207\274\233\275|=@\261\177\275tC\343\274\272\005\223<4\241\205\275cp\004=2\000\225\275\333I\214\275\232,\022=\003\352\252<Tqd\274\020_\250;7\026\375< B\221\274\255\270\226\274\364!)\275s\245\002>a\2726=\022X^="
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\013C\r\275\372\362\327;\007{2\275C\250(\274\266\346-;_\260\031=;\225\035\275\376\272G\275\014f\215;\026\315\177<\n\273\246\274~Z\203;#\213^=\323\241\247\274\201\364B\275D\241\024\274\353\006\262\274\022\263\256\274\360\341\020<$v0<\\\274T\274\271\r\321\274\212`\006<\212\366{\275\273\r\370;\250\252\031<\267\3427=\230\314\220\273g\202\206<?I\004\274H\027\033=yl\226;\352\021S\274<F\327\273\344\271};\270\306k\274\013\356\016<~}\307;\242DB:\023\216i;\331Y\002=\204})\274\237\246\350:\234f?\273\016\357\024<S\250\267\274\370\323\t<\272|\337\274\261/\277;\034\177\216\274ug\037\274\2648\206<\272\345\357<\226T\006<k\237\025\274FI\241\274\201\203\022<\313\320\322\273Sp\022<\233\372!\274%\227C\274]\220\037\274\004[\237;^\265\342;oM\030\273$K\020;\2317(=i\223$\273\224\022\027=D\007D=`\001\002\275\2137o<\376\347\363<\000_\324<Lu\'=\323\320\375<q\322\005=q\351\275\274Q.1=\271\004\030=\333\246\273\274F\233]\274\341+&<h\247\253<E\230\262<3*\004\275~\353\001<\352\256\327<\200_2=\313E7<\220U4;3\2556<u\013\336\273\354O4\274\n\026A\274\305f\014<g\265\006=\216CS\274\253B\204=m\230\303\274z\034\321<\036\263\304=L\260\357\274\210\201b=3\222\202=\376\244\024=o\005R=\326\000\317<\360\255\234=ng4\275\345E\217=\rU\031\275M\226\326\2744\242q\274P\213\356\273\177\030\231\272\323\027\026=\201h\303\274\366!\225\274\0337V\273\334\323I;\314\351\330<\350\363%=\025\315(=U\214\206\273`~\274<;ME=\264`\326;"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\000H\213\274\244^\323;b\372\007=g\266Y\275\213k\300\274\357\277\023=D\364\243<K\236T<`\321p\274Sv\355\271\"!\362\274\021\020L<N\324\201\272\334\306@=x-W\273\220\263s\273\356\255Q\275\005]\032=B\364I\275\377\264\310\274=2\246<\371\325r\275\017\227V\274\206\325\227=\307y\235=\013t3\274\201\n+\274\326$2;y\261\203\274m\375.=\374-z:c\370\233\274\355W%=\337q\024\273W\262\004\276\020q\300;/\235\017\275W\243\320=\000Y\362\275\214\333e=\274f\241=T\2174>\026\237\347=cqx<\247o\3659\261\324\013>V\221A\276\"df\274\330\262\222\274\r\247<\276\274\323\t=5h\346<*\340q<\033\337\277\275\260Q\373=\377\233\217\2749\243\007>8\253K=\266\317\252;J\3575\275A\204L=V4\252=\327\377\344=s+{\274\330\261\212<\240&\214\273\362Ef\274+\257*=\374|\023\275\370\233\273;\r\357\260<%No;\3411\254\274\341\030\315=nF\314\275\004z\311<bB\234=Ru-\275\237\013\252<[H&=+\330\233<\214\230\036>\3545\335:+ n=\2367\200\274\247^c;D\242)<c4}\275F$\321=E7R\274.H\222\274\020Mc<\375\211{<;y\212=N\235\373<\212\356\214=\257\353\237<\330@Q<m\224\002=\222\031\\<\355s\227\275~42=\215\341\241\273\334\304d\275\367L\306;\211\263s=\000\321\263\275\247\370\274;Z\007f=\362\335\260<\352\310\350<T\270\337\272t\330!>\023M\351=9@\316\274\364\233\321=\222q\275=\266\221\215\275\237\tG<x\374\037=\211\247\362<\262\361D\275\030\313T\275#\\I\273\307\n\243<\036\353E;\322\260*=vI\013>\355\360\343\272\300\357n<\360\372\346\2740\026\341<\316\000\213;\215\272\017=V\350\223<\244\254?<\275\264\000<\t\233i;\217\357\207;\254e\266<\277},=\222\277/=\376\360[<)\241K<\2251\251=\335r\226<\273d\261\274{y\250\272ZLd<\177Y\217\274\255\320X<%h\337\273\017-o=q\360\346;\303\306\302;*\nE<\314\313\252<\203\230\203</A\262<\326\033\260:\350\320\222<\256\004\220=\035\000\360\275\321m\311\275\252v\323\275~\254y<z?\223\275\3408\261=\024\352\036:\365u\202<|)\t>B\033\263\275\302\006\360\275[\321\025\276\326\260K=\2378\334=3\202\207\275\2745*\2764<\003>\320m4\27496\301=\243\314i\275R\316\r>\346\363\236=\202\374)\276s\326\331\274(\243|=\037^@=k^\246\275P\304\005>\224($>\203\257D\273J:\004=\276&q<\200\333\005\2751<\310\274\243\021\300<\261\212\237=\261J\337<h\r\005<\342\231\263<Oc\204<\222\260\270<L;\001=\354A{=\346\270\227=\370\230\353<h\277\254=\222\201\202=\241\363\200=/\314,\274\020\261\'=\021\211\021=a\031\021\275i\001\224<\333\036\021<\377\302\370<\247\021 =%\032\203\272{\373\234<\335\254\021=FQ\230=\007d|<\2206\031=F\343\357<\240\246Q<\357\347\205\274\245\337?=\242f\355<\277\371\202=\202\305\213=\225\227&=\253M\033=\364\343\035=\315\374\013<\365\016E=\314?\214=\252\377\267=S%\003=\361\232\304<C\322(=$\031x=\375\324\210\274!7\034\275\177\"\272=U\230F\272^\024p<z+2<\005\025r<R\327\t=YT\\<g\250\214<\245\221S=\303Aw=U\331\255<\217\300\307=\316\274L=\221_>\273IG$<\260\013\002=\346C\023<\315\227\350\274\356\331\204\274\341\337\270<_\365,=\257\261v\275@\002x=u\tn<6\177\351;D\354(\275Rf#\274#[\006\275\2756$<4\003\356\273\226i\034<\260\203\212\274\332\270l=\r\006\004=M\177\257\273E\342\350\274\324\214\014=\014\371\r=\365\016\344<J\303 \273\'\227\305<T\267I=\342\300\2709\255\204\246;\320\262]<\030\364;\275y*\300\274$\345\230\275\300.\306=\322\261\013\276z\311;\275f\325\031\275\3127\240=\256\035\020=\335}{\275\037\361v=\221\235\310<\004\231\250\275e\331}\2752W\323=\022\211\227\275\330q\017>I4\233\274Y\3033=Fr]>F\226\247<\333\306^\275m\226\346\271.\313\267\275B\225Y\276\265o\226\274\355\245\313\275m8W<\021\241\017>%8v\274\227u\021>\241\367\020>\024\217\007\273\270\227\341=*\024\031;{\320$<\r*\353\274\334\301\367\2746\'\253=\345\202\233=\344K\331=\222\027\350=T\206\013<>)X<\327\243+\275a\342\345:\033s]\275\177}0=\307\274`\275\377\233\206>Lh\242\274\251\265\007=K\265\001>\255\032\237\274f_\024>\014l\227=Y\341\352=\214R\021=\234\305\215\273m\341\267<(\206 \275\303\274\343\271\333mk\275\311\204\014>\340\226\035;\224\351\331<fP\351=h\340\310<\010~&=#\213\312\274\204[.=\205w\305=\362rE\275CN\t>\2248;=\310\335a\2758\272\201\275\276\274\r\275\341C\233=,\341U\274\353\261\272\274hy,>\"\023\307\275[9\336=B\n\025>`\013\201\274\3306\252=\025.\026>\222\237\327=&\310\237=\223\375\\\274\222\267\345<^\367\211=\264h\236<\2466\003\275\242\247f\273|WS9\025 !\274\350\032\364<T\307\325;\370mY:\205\227\033;jy\207<K\035\210\273On\222<.\350\n\2747X\033\273\362\t\305;\234\"\n<+x.;\326\252\202<\326\320\264\274i\0232;\221\360\224\273\237X\250;\273\226\001<\006\206=<i.\021\274\241\236\225<Sp<<BR\215\271\220z\206\273\177\021\316;\276\302\3608\365\275>\273\255#\251\272ng\017\274\263S\242<\312\200:=\035*\220\2750\316\367=\003@\236\275\001B\240\275FL\245\275\035\311.\275\356:\251<\357A:\274E\256b=\312\343\031\275\000\333\201=\000\345\010\276\354\020i\275\362 &>\253\215#\275fC\315=\241\321\211;\026~\235\275\350^\002\275\227BX\274\373W\227=\275t+\276OB\001>\r\275\254\275)\375&\274\310\200\314\274\231\313\'=\311\326\241\275}\322\035=\250Y\233\275{\375\213<\352\030\316\271W\377\005<gjG\275v\022\031<H\230\332<ll/\272\320`\261<\204\346\216\273\003Y\364<71\334\273s\256\344:\022}\336<\304\232\035=\322\034e<\231/\217<\311\013\005\275\3748\014=|6P\274j\213\376<\255\337\024=C\205\213;p\343\210\274E\344d=\036\326d\275A\315\273<2\004l\273Z\260*<\376\n\017\271%\'8:\367\273@\274w\356<=\230\375\004<\020\301+\2733w\275<\021\017\335\274d\325r<m\353><\030k\n;\235\010\314\274\t\254\035\2750H\025=\3142\255\274\356\344\376<\373\277+<\006,\320<\212\314\235<(\366\035\275H\352\227<\216\240H<\353\032\355\271\250\371\266<\177PP<\222AR\2708\216y\274y\236\235=x\003d\274ECe<m\025k\274\242\231\207<@1\016<\tC\247<\363\'\247\273\275K\332;\335\247\232\273\241\'\330\273,]F<^/\205\274\272|\207;\035\020N\275cg\367\273)\020U\275\236\237\206<z\2758\275:0+\275\362\010\010\275H\255\232=\214\354\215\275<\353\251\274uW\335\274\227\212\343<\001\\\021\275\264\235T=\244\336\332\274Y\312\307\275\251\036\266<\3711\344<$\211\3119dt\214\274\306\221\207<6\253m;n\367\245\274\004\035\306\273\261A3\274\274#\261<\357\004\260\275\3300\000>\306N\210\274\303\021\366=\213u\025\276\263>\334<\2627\360=\nd\014>W\257\032\275%>\241\275]\215\251\274\344\201)\276\245%\025>\276R\r>h\034\377=\201F[>\314+\232\275\270g\372\275x\376b=\241\"\347\275|\340\216\275\201t\024>T\300\307=\013\211_\275\260\367o\275;\352R\276\331\034c=\303\234\246\275\230C,\275\016G\372<\213K\036\2764\220\241\273nZ.>\273C\255\274\021\236\226\273\2367\'=\007\377M\274\263\002\014\274t L\275f\360W<{K\025\274\357\330B=\177 m\276\263\236\'\275\251\372\367\274\177\353\206=;9\235\275w\256\347\275\233(_\275\030\240\273\275\355\311\345\274\036\221x=\"\214\232\272\213u\316\275ET\253\275\013\214w=\215\266\244\275e\231\024\274\360zk\275\025\263\027=\341B5\275M\022\005\275eY\007\276\207w\210\272\260^\367\275n1\351\274\032\253e\274\275:0\275\302\225\230\273\310\331\266;%\030-\275$\034\202\275\361X\237\275G\333\337\274\264\300\304\275\262\200\2558\330ov\275\230\337\031\275|\n\037\275s\320l\274P\025\306=\010?\201=\257\372\361\275PD\330;n\2300\276\000\354\000\276\211\3630<$\3519=\341\315\027\276\002r\203\275\300\371c\275\300\033|=p\026\331\274\337j\344;(0\342\275_[r\275\242\335B\276(gb<n\214\013<Q\235\302\274\314\321\250=\333Hs;(\370\260<B\005@\275\005\016I=\200\031=\272I#g=\006\353\331<\r\004\361<\221\327x\275\256Vp\275~?#=\307\221h\275\313\025\332\275\270f\034\275\214\276%\275\353\0038=h\017\007=\272\021N9\206[\345\274p!\257\274\014H/\275nn\215=\317\200\254\274\320_\342<\214B\322=\316\202)\2757\275h\274\233\305\022=%\245\350\275|\370,=Tg\020\275\236\2207>\3069\236\275\347\251I\276\330\031\t>\317\244\205\275\325\225\200=C\203\022\276\325:}\275\311N\215\275,v\034>\305\361f\275d\263\334\275Hoz<\227q[\276\375\321\331=|\250\002\276\276\336!>\314>P\276\212\001\t>h\251E=\275\242i\275\224\370\332=4\242\373=(\235\267\274p\271\201=\242Jm\276\335\262\341\275g\270\r\276\214\374\266\275\240\217\277\273\014\030<<\357\253\253\273:$\237=\r\342&\275W)~=Vo\260\275\271n\006>\231\342E;0\255G>\223\0368=\201m\203=\030\230\305\275k\264\000\276`P\317=8\263\267\273T\010\222\276\211I{\275\010\0039=\214\275\234=\317V\200=\032_\340<w\326\207\274\257V\014\2759B\274<\245\310\320=S\005\032\275\036\375$=\351\3231>\307\217\301;\215n\r\275\260G\215=\332[\n\275H\234K<\311/0\275%Q\226=\354\202!\274\323\253U=\265\273\326\275\377\311\254=\3168\005\275\307\'\321=0u|=j\203\300=\034\264\271:\224\231\027\276\222&\n>\270\375\002\275\242\326\226\276\021\202\355\275;\262\031=7\2756>\254]\003>\201\261\376<kd/\275\260-M<\334\310\227\275\227\005\332=\242\034\326\275\302)\225=\334\3460>?\210t=\354\322c\275<b\211=^;\2129Du\342\272nfT\273\237\267#\274\353\354\305\273\264\027\006\274\334\005\325\273\036\233*\273p\211\270\273W\347\032\274\346w\274\272\025\304\360\273\367\223U\274\006\022\341\272\311n\251\2726\377\204\272)\031\235\274$\030\311\273\355\023\3279-\276\232\271:7\314\273G\243\261::\037\267;\231m\272<} Y\274\306\\z;V\357\276\273\373\342\'\273\n\227\235\273wu\235:\254\312\202\273q\227\237;@\0261\275R2\026=?\016\005\276\3644\323=\022a\255\275\230\000]\275l\304\320\274\300\361\310=<;\322<\3277,=\226\327\230=\275\334E<raL<\256\007\013>[l\247\275\"^\350<\332\205\240\275\002\345\311\2754\244\013>\3023\277\275\356\223u\275R\2626\275\372\313\036\275\r\033\267\274c\233\206=\017\346\\;f\206_\274\"\257x<e&\300\275\253\376\310\275\344\210e=;r\257\274\236\366\325\273,\362\005;\262zE<\0033\021\275\334L\277\273\301F\235\273\017\354?\274Xg\255\274H\242\202\274\017\r\343\274\202B\240\274\026\323v\274\r6(\275:\265\005\275\246F\354\273\343\374\344\274\233N\232\273\216\235\242\274\262\316\342\274\360r\030<\322\262\017\275\274\363\352\274io><t\364\215<\211\014n\274\3607M;\237\357o\274\007Lj\273.F\355\273\212\257\220\274\333\244\021\274\00376\275\346p\235\272[]\037;\314\322\352;\377\277\226\274G\240\315\274\234mE\274\327\306\270\274\222\312\255<\231pW\274\016\246\243\273\032\337o\274\001\227/\275\212\030\232\275+\210\001\274\3307\271\273{\307|\274\333L\220\275r\317\277\274\016\317G\274\201\\+\274S\375\030\275\315w\001\275\313&!\2719\201c<3\226\266\274\327\367\213\274nm\232\2742sD\272\317\203\210\274C\227\324\274\034y\232\274\333\034\245\274*\236\234\274\235\242;\273\2529\243=\361\270\317\275X\330\311\275-b\006=\000\264(\273\311\345\020<\346`^\275<%\t\275\202\375\220\274\326\005w;\266l\223\275\252\277\327<+!\357<va[=\320\342\341\274\023\266\240<:\335\357<v\366K=sPe\274-\343\240\275+\203~\275\0218\024\275\212\3004\274b.\270;\321\360\337\274f\344\272<n\211C\275@\300_\275\372\3479\274\215\031\010\275\362\340v=\3770_=\257\025\277=\214\341J=\355\357\306\275\356\230\375\275#^\250\275Np\275<:\216\321<\365&\277\275/d\345=\003*@\275\262\266:\276J\034\017=\203\260\217\275\325)\372=\314\005\321=\247O0\276\004\226v\276\307\244 =\3544\003\276\213\314\201=\341\007\276\275R\007t\276\321\362\035\275U?*\2757t<\271E-\232\275M84\276n\026\222<\022\031\263=\256\\\n\276\014G\260\275\354\353\273\273PB\013>\274\021U\274\210m\032\276@\344\325=\317\322\010<\375\230\347\275+&\303\275\213\254\307\2755\265\375<1\355\023=\257\251\024\276\367GB=\307\001\r=\334A\\\275\325!\000>Z\260W\275\341H\305\2752\224\027><\2168\2735\215v\275Ix\303\275\255\255b\275\016\256\331\275f\347\304\275\201bC\275\260\005\313<\335&\013\276\347\354=\276\266\272\"=\003Q\316=*\020\340\274\030\027\223<\331\345E=L\177\212\275e\257\345\275\024\313\225=\265B\320\274\3510N\275u\004\324\275\213\213\331<BO\347\275\374`n=<\205+\276\206h8\272\\\302v=`\377\375\271\200\372\202=\306\324\355\273\220W\010\276C\340\014>f%\001\273\274\353\004\276a\3176\273\223\2672=\205\3430\275I\347\262\275\237u\006\276w\037.=`M\026\275\265\227H\276\257\030,=F\334C\274,\300_<\367\024\345\273\201\232\036\274\222\265\354\274\300\200\207\274\016}x\275\2548\310<(\323\271\274\366\230\333;w5\342\275\366\241\036<\316\325\361:l\350\337<{8\260\273\007\230x\274\314o\031<\214\361\273;dOx\274d\347\342<\'\017\t\275\244`n\273\240\014\227<!\221\013=!\203\315\274\242\224\367<\242\373Z\275\332\225\266<\224\345#\275;\237\010\275\354\371\002=\007\324\205<\205\233\004;C3\315\274]\3543\276g\231\372<\207\204>\276 K\333=\210\307|>\206FU=r\333S\276\233\335\255;\325\357D>\206mR=\n\2468=\311;\256\275\347\373\375=\000\301\307\275\007f\003\275\303\372\203=I\225$\276\364\270\n\276,\233F\276\025\374[>\320\315\353\275%\376\206=]\005?>;\357\376\275\275\007&=\340\325\007\275\020\301\252=l\333K\275\237V]\275\266\305w\274`B\016>\324\317\335\274\321\255C\2742\301\277\274\tR\242\275j\211\346\273g\336:\2750\0060=\3039\203\275\227<\326<\240\307\322\267\245\325T\273\264\315H<\270|\225=]\350\006\275j\026D\275.\350\213==a\214=\224A\331\274\032-\034>\211\251\200\275\364\263\024\275\0067\235=\277\254y=\004\303\235\275\331\313\347<-\370(\276\232F5=\351\323T\275:jZ\275\277\341\354\274X\"B=\377\207%\273\201\237\272\273>*\367\272\235\363\025<\2306\313\275\0333\364\274c*\225\274a\253\313=\037C\264\275A>\"==\317\361\2752T\016=\177^\036\275\323\365\334</hk=\000W\303\275\337\017\020>\300f\231<\235O\374\274\002\016J=\304Y\004\276\023 \227\272\371z\204=\350P\211=\332\342\210\275\341Lj>\300T\247\275]C\330=\020<\342\275y\227\245\275\210\024c:z\306\273=&\267\247\275\tcC\274?j,<7\233\253<\026$\212\273>\203\"\274\341\3107=c+\225<\302I\360\273\026}\023=Y%\247\275\2648\022<\2276\002=\027K\377<\210\340B71\253\033\274?\370\001=\305f\036=\277\276\034=?\276\257\274\300\"N<\360Z\273\273fS\370\272\260ez<;e|\275\346H\215=\306;6\274\345<\366<L\"\226\273\311\214g<)\203o<\243.\201<\231\345\r\272*&\237=\032j\267\275\217\212O=\036h\220\275Ai\255=\373\227\257\275\207h\260\275\007\343\340\275\030\250R\275\373h\225=\241\247\305\275\033\215\017\2753c\031\276\2605\256=\253\313\032\275\262\233\r\276\2520i=\341p\254;\177\361\274\273\351\372\252=\n\276@>n\nw=d7\001\276_e\246\275\317\333\200\276\001\367\224\275/\373\322<y:,\273\367\216X\275b[\036\276\'\304\232\274Lu\035\275\211\305\271\274q\360F<mEI=\023\226\325\274\224\336-\275\361{\271=+r\346<\363\241=\275\027\325\204=H\215$=\251\331==\177PQ=\223P\307=\211\014X=\362r+\275\262\315\032>\233\333=\273\375\271\236=\353-\030=\345\225\317\272\017\316\220=\263\221\243=\337\255\342<p\275\301\275|e\276=\262C\226\275\255\347T=u\226O\274\004\0356=x\330\257\274f\347\027=P9\204=\235\367\306\273\265\227\207<\236\371\230<\266\2020\273\022\345\313\274[Jd=r\212\213={\017\\\275\021\326\302=\277\371\007\274g\253\367<\317\223\016=\022\233\t>\375\371\241=/g\026\275x\'\376=mI\205=\371\205\353=\361\232\316\273\276\364@<\226\322\003>\215?\225=>\270\027=\231\026\206\275[\2705>\367\016+\275\311w\264=^P\273\274SF =\347\304\375\274s\363\237=\232_R\273\366\375\031<~\260\233;\215\237\r\275Y\255D<\327\335p;\000\316J<\r\256\022\274\207t\361\272\242\277+<\326\260\234\275\036\244\201;e\306T\274\0317\262<\ng\027:\216\207\274\273\350\324\270;\3079\267<\027\210\356\274\310\311q\274\350\277\275\273\372\320C<\233\001\210\275\274\337\026=x\252/=\331U\330<\273\007f=|\030\2169\361\227\251\274F$$=\203*\210\274\377\204\357\273\263\350\243\274.\222m=\336m\013\275\362\013\225:K\3778\275\214\022\255=N\315\"\276\207\357\032=<\346\035>62Z=\300\270\232\272\371\302\370=5G\216=\214\344!\275\376\373L\276\006\304b\274\266\242\345=o\n\013\276\332|\222<u&a\275\256\306\">\301\354(\276\342B\"\275\013O\272\275\303sD>\354\263\253<s\276\277\275\250\211\231=\002A>\275\2163\322\275\225k\r\276G\330\303\275]\223\024\276@\023D<2 \001<\253\232\372\274`\031\n<\276\'\301:6\351\000\275\323l\001\275\321\035g\275\007CZ;}\306+\276\343\221)\274\264\202\033\274\324\237\010<s\034\365;$\274\275;\306a[\275x62=7+\255\275\366\362H=\222&\270\274\370\355.=wA!\275\022\202\006=h\210\177:\352*\361<\275\035\213=\311\354\352\272\037\021\326\274o\241\207=\302C\276=>=m\274d\365\'=\227,\014\274\0351@<\263~L\273\317\014\240\275}+\311<\003U\262<\333\3177<-6\303\274\345\337u<\235\244\036\276hRf<\255\274?\275N\274\221=\035\363\004<\3718\234\274\001\326!\274q\316\217<\243\366\203\275\272_h;R\225\230\275\331\374\207<\217xs\275\367\377(=\010[\\\273\263\327\254=N\327\n=\300(J=\276FL\275\274\036\217=l/K=\004\346\022\274\323\275*<q\321\237\274\201\255\244;d\rJ\275Fp\257;\204\3208\273\233\350U<\"\316\034=\237\276\n\275\331>\027:\334d\271;\002+_\274O\273R:\267\256\006=V\303\313=jr4;\252\005\263=d\343\211\273?bI=\030\311\026<\236\303(=F\323\033=pC\315<\212\335\240;\273\211\205\273X\371\311=\210\237E\274\363D!<\342\225\216\273\200Kx<\024\204\032=\301\016V<\230\341\327\272\300\272\370\275\240\016\362<n[\361;\335:\252\275\353#6>Jhy\275m7\342\275\0378\000\276\252P\241=;mQ>Imd\275\201\372\223<$\204\344\275\303H\354\2749.\013\276\204\232\031>\220\365\014\276\202T\036\275\273\232\266<[UQ\275$\204$>9\201\335\275tq\321\275\017l=>p_\223=\350\302\225\275\230\343\027=\030\023\314=%\211\022\276\231yk;\000\276\230\275\204\337\377\275;Pr=\231\n\207;3\210L=\204\374\206<\014w\032=\332 \003\274\373\306 =\215mB\275S \005<\033\274\004\275\342^\214\274\364\262\314\273\353\252\"<\270\"\270=\002&7\274\231\224\365=d\033]>\311P\321=\2351\022>\r\212q<\\ \213;\002\273 =\023\244\243<\006E>=\027W\337=\214\331\334\274\2322\320<\215\r\221;\334\000\343<\277\331\251<\237\254[=\246|\020=\030\221\241=\246\366\013\274\235\205Z\275#I\244=\204\004\220<F\r\332\273]\216\326=\375\006\210\274D?\365<\3701\265=\350\335\010\274\037\371\223<3i\304=a\260j=\013$v\274\234\277\377=S\274\365=\332Iw=5\245a=\346\037\275=\335\232\303=\225\361\231=\037h\305\272\325\\\272<4\004G>\350\2120<\233\326\\\2735<\3379\311\304\036=\321q\305\273\332\372\321<\331\247\214=\316\246\314;\232rc<\304Og\275\344I\337<\002\246t=u\342K=Rm*<Q)\224<\002\350\022:\016%F;\237\034\004=\330\007P<\256^?=\020\025\204\2742\260\263\273I \310\274\035xQ\275\2116\'\274U\301\202\275\256\353#\273\352p\354<\'\0211:|\204!=\245\202\307=\336\344\376<G$}=\301\254\022=\n\337\342;\331x\023=%\177]\274\376z\'=\311\327d\275wV\326\275\222rK\274\211Y\223=\313\033a\275#*\347\275\315t\023\276\003v\222=\350T\236=`d\343=I\024L\276Ga\257\275<w\217<z\223\246=??\001\276-\017\303\275(\235\325=PlN=\216\310L=\014\262%>\2729\363\275\256N\370=\016\256Y=\206\307\002<n\033\n\275{\002\351=\221\036\376\274\343\020\237=\224\266\201\275\207\203s=\267\213v\275\345\374\240\275\351\256\010>W-\354\271^\261\254<\205\217\370\275@\201q\274\362\326\266=8\217\220=[+F<v\272 <\2025\340;\245PR\275\260h&=\302\275G;\300Y#\267\211\245I\275\004\306\024\274S+\237\275\356\313\t\276\360\020\t\273\224\350z\275\354\316 <\237\261)=q\267\255\274H]}=[b\027\275\303\343\263\274\305\226\366=v!]=\332\220S\273\2673\017=M\277\005>\3220\350;2\271\211\275K\303\245\274Z\007\003=\036\265}\275 \254[=.\205\002>\227\336\341=Es-=\035\022\261=\302d_=\033\366\226\275{\230\206=\000\'\026=\233\323I=~|M=\330\224\231\274\330\3306<7\333\340\275d\357f\275\344\020\\\274Q\276\353\275\316d7\275*\340\234=Xp\231=\267Y@=\255\362\232\275\304R\264=\326\346i=\271|\240\274}7\307<\216\006\004>U\227\327;\272\205<\276y]\314\272\334.\231\273\224\200G;C\206\3339H};\273\231\335\235\272\324F\223\273\250\361c\272\266e\002\273\003oT<\265\340\235\273t\003\267\2723\240\274\272\000\n\266:1\305\351:\001\335\026\2744`\242\267pN\2429\333P\006\272\007~\246;2`\214\273r,\035\274\272\245\014\274\360\354\214\274s\373\355;\362a\365\273\352\316\247\273+#f\272rao;\336\220\337\273\324\000\266\270O\324\370;~p\350=Z1\244<\311\261N\275\276P\225=\274S\000=\003M`\275\024\241w\275\237$\325<\277Pr<\004\025\246=2\270\203\275\323\265$\275PQ\216\275\006\3221<\0260\315<\247v\030>=\321\003>\366j\341\274\2525\266=\234\335\216\275+\256\310\275\026z\314<\024\027\036=\227\277\354=\344\330\346=ofp\275\310\323\202\273Z\325\303\274r`\240<)_B\275-\222\324<\021\214\322=nO>;\365\334\001\274\364%Q;\351\361\343<\203l\242\273\010\032W; R\347\273v\322\025\270v\r\270\273\244\372D<i_s\274\277\022(9\023@\223;\372\337\035<\260\306\324;\r\251\310\273mJ\245<\345\232\013<1^\014<PY\346;;(_<\222\346\212\274t\337j\274\373Z\376\274&\210[<wP\206\273\215\215\366\273 3\352\270d\342\265;\030y\006\273\014\360v853\007=\255\233\237\273\317F0\274j=\303;\210\371\333\272V\254\305\273PR\307\273\206\326;\274)\236}\274\355\016\200\274\024\213\300<\330\250\223\274p3*<K\3726;\244\315\230;9f\342;\220Eq\274\307\315\271<\200\000v<\250f\304:\375\005;<\317\300l;/\355\320\274\243j\216\274F\326<\273o\230p\274\273\226\035\274G\210_\274\210\023\303;\2660I;\331vQ\274a\364\216\273\206$\031=\210\223\r\274\372\367\302;\310^\265;s)V=\034b\347\274!\375\n>}\325\326<\337j\244<\031Xp;\371\203<\275\207\017Q<\004\354\033=\243\200\353<9*\221=\036za<<z\010<\\\266\225=\034\252v=\214I\010\275\024\r_\274R\357\225<\320-\027=\266I`<\375\273\235=\357\204\351=\307\277v=\223}\322<NX7\273\306g\023;\255d:<\301\220\016=\262q\017\275\205\315\356\273\0243\002\275\314\367\233\275\271\202\230=\034\245\036\272w,\233\275\261\2176<\017q\004\276}k\251=W<\004\276\003F:\276\257\2307\275\251\007\300\275\275\315?>9\371?\276Dz\273<\023R\240=\377\231<\275(\205J>c\275\343=\371\255\000=\201T\361=\035\346\243=\"\305\200\276\0248D=\323\277D\2766X\221=\371\n\260;\335\026\204\275\217.1>\233\374\203;\361\317\304\275b\025\322\272\t\2210<\270Z\347\273D<g=m\016S\275\'\030\002>\']Y=\243\200\246;%\311\367;\343Q\317=q\233\023\274\373\273~=\351\214]\274b\265\340=\307\327\003\275\014\366\266=w\357\334\274\373/\262=\310N\266\275\235>R=\256o\021=q\364\210=\3340\343<\222\0317=\310}\326=\244\266^\274\234\356X=\373\"f\273\352\274!=\214\211\037=\263\206\022=\302\302\361;\212\370\242=\245\376\037<\231\000/\274\r|F>s@v\275\233\377\360=\360\364\206=8\313c=\246\353\014=\014\\?=\364\256\331<\364\033\004>\002\355\314;X\214I=\316\226\014\273:\351\n=\353\246\231;7\330\342=\177\223\321\275\254gB=\231.\364=\030\336\017>\017c\371< \\\273=@di\270`\220%\275f\214F=m.<\274F\006\211=\260\034\013\275i\222\263<\333((=\305\337\314<l\261V\274\026W\271\274\377\261L=\225\241\357<\250+\251<P4!\275\017\276\331=\207\304\202=\355\317W<\244\235]\274\324\224y={\177(;\\\3151=\033\362\034<\273\355\220;\235\360\261=\'\236\365<\202\3731=\032\333\254\274\347\016|=\000\261\220<\330lt\275\230&\251\275\356v2\275\000\373\001=N\331\271<\341\232\213\273\374\225\007=\222\241\256;\030\343\215\274\017\034.\275-\377\003\276Ur>=H%L>;;\200\275+\331\301\275\241\376\211=}:\223\274G\215\361=\360\203B\274s\345\256\275\000/\221=e\260\340\275\332\265X>E\254\325=u\326\237\275\013L\356=\263\251\220\275\212\231O>\263s\251\275\274\337\360:c\270\271=\337p\007\275\201s\353=2\006\002>\235\324:>\020I\024\274y\n\274=\223\234\340\275\nn/\275\022>!>\204\327\330\274:\251\017>G\211\r>\327E)\275\263\345\346<\247vE>\217\305p=\320\354\247\275)\023\352\273\212\307\314=\214*\355=\204\035\262=3\361\234\273\005kA=g}Y=\372\242\374\273\177R\200=I\337\245\275r\0258\273\341p\263<\205p\315=N=\344<7\036\333=\254\020\000\275Y\337\367\274s\246\327\274\356\334\253\275A\260\005=\232\020F\274d\352\302:\\\007\t=\352m\276<\324V#\2758R\000\274\243\232\001>F\362\t\275\212\036S\275\311\325\362\274\0361\'=\373\017\231\275\301\377K<\242\212\266\273\037S\334=\'\320\315=\331M\213=\236\211\210\275\256\242\025=\260h\265=\030\367\254<@\310u\2753\022\225=\260\366\242=\325I\320=Hx\252\274{3\017=\345\352\n>\273v\223\275\374\333\036>\031;\256=\244d\311=\024\230-<sc\370:t\210 =\307:1=be\206\275\372\tc<Q\266a\272\377\310\3459\224-\347:\017v\265\272\n\332\246\271LEG;0]4;(Cy\272\205\r\004:\362\326\242;C\007\031\273\034\217%;\321u\001\273\212_\361\272\244\366\024:T\313O\273\223\000g;~,\332:\276P\t;\201&\006;\027$J\274e\017\217;\252i\221\271\225\317{\274\335\324\357:\0221\362:\2604\2229@\375\313:PH\212;:\252\276\2730(P;\rIU\2733\005\034\275\014\036\355;\204*k=\310{4\275\363v\315<\224q?\274\007\264\345\274\032\210\244=\036\270F\274\337\227G\275k\377\352\275%x\212<\217H\230=\213\363\266=\264\331\204\275^\315\204\275\216\232/>#C\227\2750\232\275\275\252Xz=\215KS\275\330\233\272\275%\261\247\275\350\363\234\275\264\356+=\324\360\231\275e\343\027<\360I\013=\361\222\227=U\202\217=\375\257\334<\337<\217<\037\253q\274#\226\344\267\315\327\001\273W\364c\273\337\340\021<\014)e;\223\227\212;\303\236\347\273k\3236:\342l\224:\352\275\365\273\355\027\016<J\305\3559@\246\030\274\202) \273*>i<\303Y\021\274\007_0<\343\261\272\273o\200\022<\014\251\235\274\214m\250\271\210\245\257\272&\372U\275]\010{\273n\227\'\274\355 |;\217E\334:>\370\004<\363\272\257;\367kb;\333\247\032:d\344\227\274\037V\304:\330/\310\270\030\2401\273\363\003)<\014\177\253;\341\202\377;\013\217\004\274\302\373U;\020\205X\273\315(\211\273\345\007\306<J6\276;\026A~\273\232\337\022\274\271\264$<R\347\350;ZtS;&\363\034\274\271\253\312:\014\300h;\356\366m\272*7\370:0\305\005\275m\253\341\273\211\373^\274\223\364\354;\351>9\272D\372\010<\217\243\255\272\273\036\022<\020\253\263;\270\221\375;\231S7:\014\200\303\273\244t1\275\220HK\274a\344\226<\253\303\201\273\317\223\363:\0357g\273\274\326\263<\225&M<\345\220\234:T\214g\2742\217\330\274u\251\336\273\003\002G=\003E\352;\257\010\207\274\327\313><\2462\265\274\317B$=\213\010\024=X\336\301<t\271\t;4\3344\275\307\254\204<\177\032H<\244\353W\2741\235\264\273\\\"u\274ZK\'<\332\247\023\2745\271\021=\267\274\326:\343\006\345<\\\322\010\276\003\262\\\274\327O\n\275%\207\305=I=\341:{\215\224=0\323\235\275.\253]=\364t#>\nb.\276\207\272\036\276\362!\256\275c\227\275\274\341}\212\275K2\372=\007\355e\275\205\260$>+,\232=\300\314\373\274\211-\214\274<Y\203\275\362\217\320=\200\006\336=\243\357$<aE\215=n\346\t\276&\t\337<t\037\204=\206\330+\276\351J$\275\235\"+<\223Sx\274\230\022\224\271\211\317\221<\254\350a\274\232\371\272\273-\024\311\275\226(\301\274\262(\363\275\214\023\337\274\273z\302\274e\017R\275Z\202\303\272\016A\324\274\375B\377<\216A\364\275\314\036/\275\024I\207\275\277Q\341\274\000\374\372\274\225\010W\275\221\327?<\363lh\275\300\271c\275\366?7\275!\344g<\241\312\303\274r\335\306\271\264&\266\275\010\177\226<\317,j\275~(\022\275\247\217Y< \\\244<E\207\275\275\346\267\t<\210\341\033=\020\340h<\357\020\024\275gR\315<\271\037\026\275M\n\014=l\253\037\274\357\251\002\275\021\027M\275\363,\247\275jk\310=\240\310\213<\227\027\256\275E_d\2757i\234\275s\322\';\273n2<\244Gg=F\017\264\275\202dR\275\341\214\347;\365\216\346<\204r\245\274\032\372\202;U\025\261\275\343\2466=\005\031\036\276\237\203\215\273\\\035l\273H\362k\274u\273f\274\207\330\264\273\243\240\251\274\014\316\253\273\353,\261<\322 \006:\374\363\224\274\362\375S;\254Cc;P\316\202\273\360dg=\334m\016<!\2221\274\330~\251\274Q\320\006<\370I\362\274\301\341\277</\365><!\366\325\274$\222\312\274\032\275\224\273\3120\017=\222\373\260\273\2353\313\273\321\234\002:\374~\017<\305\343\243\273\225M<\274%\315Y=\022%0=\336\034=\274wl\256\275%\242\n>G\321\024>\035j\005>\004\254\342<\361\376\367=C$\366<\203\215\331\275\362+e=\333\016\220\2752+\022>\t+\250\275\033C\003\276r\034\233=Wc\014\276\277\266\211=\370f\312=\305\235\264=\311\355\017\276*\204\332=%1\231=\3675\372\275\247\322U=\245t\376=\265k\242\275A\212\232\275\260\236\343<\314\272\207=\205\227\243=\326-\237\275\221\264u=\225Z\016\274\311\034\217\275\220\010\r\274\010e\366\273\010\024\227<\326\332\366\274B\315\330<\221\036\014<\267\204E<@W\333<\177\343\231<J\002\242;\014\377\t=wA\361<\352\027.=\014\356\357=a\035\017<\373s\204=\177\t@=\332\207[=U/\271<\234\n\251\274\303\311\030=\007J\246=ku\276<w\264{\274h=\314;\020\270w;\250\327\020<\030T\215\274\256L\267<\331em=\275\300\200\274\274\251\323;\245&\366\272\350O\273\274\360\243\373\274\307\217o:\243\205$<[\356\317<\253\017\225<\265Z\023:D\020\365<\021\220)<A\304\231=:g\360\271D]K=\241)\257\274\366\345\212<\255\030\314<Z\023\233;\252\350\236=\351\031\027<j\327A\275\031\257k=\036\r\320=\312n\322;\352\017\200\274\206\275\037;s`\255<\326I:=\213\327J\274\210Zv=0/U<,\035w<\242\0033\274\275\376C=\324\217\303<\263\271\262<\312\020\033=k\275\262<\0130\333<\t\202~\274\n\227\221\274\376\254\333<\0327\205=\022\277\367;\030\301\320:\307\240\266<\275\324\325<s\025\024=q\026\201<\274\241\356\272\033\332\253<\244\344\234=<f\365;\rGs<\036\200\272<\217q\236<\347\276\276<<\006}<u&\371<\235\356\356<\nn\201<\023\256\t\274\354y\245=\225\315\346=uC\375=\221\354\026=\240\371\362\275v*\237<\323\217\n>S\210\302\274\277Ql=\3357\025>\262\321\363\274\317{=\275t_\271\275\023_\337=\005$\353\274\341\0073\276\307\206W\275!g\336=\223\264\261=0\313\207=\024\221\235=e\234\354=\242i\370;\360\252d\273\231\330\214\274C\340\344\275\017&\320\275_\'I=\226\203\340=\334a[=\230\3207=\032\033\372=v\035\325=rj7<\2178A\275\340\215?\275a\030x<\273gq<\211D\204=\335@\177\275\250\215h=\247\267\376<\217 \212=7\344\267=\000\261\352=/\356\262<c{}=\365/\277=\314e\224=7\025w=\346\026\322=\354\301\374;\017\245\267=\311h\201=\235A\217\274\231V\252=Eo/\275f\2150=\263\337\007<\372\204\262<\261[}=\311\313\352=\023\235T=\374\316\n>\325p\214<\242\243\237;\rV\314=\243\000\030\274x\274\256=wK\313=o\'\275=T\255\334=\364-\211=\022$U=\002/\300=\000n2=B\207\352=\233p\256<AK(=0A\355=r\262\311=\370s\">\006\302\204=Z\302\250<\210\253\313=>\301\036>0\205y<\202\307\021=jdM\275\350U\016=B8\017=\301\177\217<\254V\257=\346\306\020>\2541~=\303o\212=#.F:\261\230\350\273\221\2612\275\355kL=\330\347\017<\002\344>\275>\234\004\275<\031(=D\330\223;\203\232\200=U\021D<\3530\000\273O\317\344\274\202\211Y\275?\244\017<\2602<\275^\315\324;\336l\244\274\021u\002\275$\340\301\272\330\017\250\274\311\365\275\274h\232\253:\226\216\030\275\337\233\201\274\002O\237;[\2101:\222\206\023\274$\037\216<\273+\201<w7n\274B8\305<\320\232\202\275\"\363>\273\261\277\010=%E\002>\000\267\343<\311\214\211\275\017\374\002=\371\315\001>\225M\246\274\3746\002\276\243\277\346;\210k\367<Y\333\366=GT\r\276)Y*=T\036\317=\234\013\352<\346!\027=\204\267\302=\217t\253\274\033\\\330\274\323\020\271:\316\233&\2748\330\260=\2007\235\274j\016\336\275j\017\240<\242\210y\275)\307\325\275\236o\214\275\216\232\267\273\360\205x\275\025\331\344<\024\256\240\273\254\344\207\275\352xd\273\236\031\367< D\254\274\034=\211\275J#\231=\243\252%\273\256\004\216=\310\230\265<A\245\266\274\356\307i<\3766\266\275\360$\341<]N\255\275\347T\007\274\014\303\216\275\002\014\241=\352N\220\273\204\250n\275\266xO\275up\362\274x\375\017=\001\231:\274.\240f=t^I\273\210\024\375\273}T)\274\'@;=\376@G\275p\236l\275\013>\020=\237\374\243\273;\251\'\274%\307R=\t\027\344<;\023U<\241\211\206\275\017\021\010=\312\241[\275\314E\216<V<\301<X\275\275<\n(\247\27551\027\274\272\332\344<\235\357\215\275P\216\035\276\370\270Q\275\332\037\223=B\231\305<\205cs\275\225=\304\274\232\373l\271\035\331\374<\260\335\210\275\035\360t=\014\230\257\274\202=\241\273\274\207\264\274k\240\236=q\204`\2753\226v\272\356\300\2477\316\332\237:M8\373;\237D\2169\024\251\202\272\277\001,;AQC;\221Vb\272G8:;\003\231\270:3\n\310:\340\227\017;\245\323\236\2727\350\344\272\210\222n\2724\344\n\273\364r\024;\275\3302;\213NV;+p\245\272P4\361<\304j\'<\376\346\350:\317\236\300;p\334)\273\335\204>\273\033S\212:\242{\2559\266V\210:f\334/;\225F\3629\240P\2109\'-#<7\000\t\274y\226\215<\242S\372\274\300\213\270\273z\273\244<\206\007\025\274\265l\204\275\242(\000>\033\227\230=!\014\225=\002\343 =\225\265\205<\003\327\327=\253/\342=\232\324G\275\036,\006\2752\220\366=\260m\033=\362\211\230=\026EQ=\372\333\270\275\243h\206<\365\342\354\274\017BJ\275\335\035\\=\034h\010\275\213^\343<\316\321\237<\370K\211\274O\004\263\275\372\337<\2756\320\206\2733\016);\240\227\n\274\230\360\177\273\332^\273\273\235>\266;!o\261;t\023\000;\330\264@\274a\373\004;Cx\247<\301{\320;\2425:\273\255>\000\274\201\241^\274\204\205 \274-\n\377\272\357\177\3279\235\250\226\273}\330w\273v-J\275\265Y\203<ww\222;\237\242];~\264\002\274\025\271\202\274\3521\301:\203\216R:}u\374;\271\253\004\273\344\234\237:/?\006;\370\'y\271\343\251\203;\223S8\273\353&\270;`\224\240\273\"\202\301;G\231\275;TP\331:C\267^;\340\001\245<\337\003\033<\026T\264\274\316$\254\273\035N\\\274\310\332n\274\002\"2<\336_5\274|\216i\271\177oZ\272\035WW;\314o\026\274\032\031\274;\036_\257;\204\361\347\273\242\373\205\273\217\205v\273\2438C:\202\246\2429\254\273\212;\025\201c;G\211R;&\3312\273\t\324\274\273S\255\207\273|\2435\275]\352\211\275]\030\343\273\033\242\317\274\322\203\236\274u\3618;\000\r\372\274\225\274t\275D\341\256\274\037\352?\275v\356\207\274\1774\330\274T1\331\273B2\004\275Z\354A\275\247\245+\275\302\265\013<\014s\266<\322^\217;\003Iv\275\325\273\202;\000|\334;\317\352\213<ew\314\274\225\037\277\274>\244\235\273\235{\222\274\351\307\251\274z\3258\2744\306\233\275tUG\275\354\226\352\274aL\000\276\362\032\347=f\211\237\275\235\013[=\314\253G\275\2714\024\276\224\n\245\275]\345\220<\0026\236<\325\246\207=3\360\306\275\356\032\326=Y\236J=d\261\262=-uJ=\306}\324=\327.\261;A\255\002<8\325\023<l\266\005\276\345C5=\244\274\034\276W\255\r>o\241\203=\326\262\355\274\0220}==3\302=y3\001>\225\224\334\275\246w\356\275\341Z@\275\307\205h;\332>\250\275\317A\332\275\352\244=\275x\261\247\275Z\303\223\275\344\305\362\274\335\200,\275B\307\277\275&-\363\273S\255\014\275\005\032V\275\321\366?\275\210\200\001\275\262\020\016=L.\233\275\225\030W\275\314\013\324\275\322\027\325;\020\311\327\275\363V\261\274\"\376\236<E\355\252=U\033D\275\376\203\272\275\207\354\241\273.\212\024\274\234\340(\275\237\037\373\275S\341:\275\222\022\034\275\213\021\026\275\023\024\030\274\214\213\025=g\271\034=\'\375\014\275K=\n\274L\312T\275\301\004k\274\364gp\275_\207V\274p+\244\274\216\326\325\275\241r\035\276~\343$\275\221\303\204<:\323@<2\274P\275L\337\234\275\035\206\031\275\216\321p\275\006\375\304\275a<O\275\255\253\177;\255^\302<&\316\304\273n\030L\275\312]\217\274<sU;\372T\234\2758\367\243\275X\242|\275\350\031\027<\263`\304\274\3565\226<\0346X\274\331*\013\274\031A<<\306NM=\372\261\275<\021^\333\274\206y\274\273\233\001\177\274\377p\271;Q\203\022<\315]r<\247\250&=`\366\203<\344g\224=\376\021\245=\356\025\323;\nR-\275\310\251\002<\313\2027=\326\357\242<\335\027\010=\3451T=??>==\357\367<AI\271\274qtw<\202\253M;j\373p<\367\312\270<r\271\005=\230\037@\274\0067\254\273@\306\307;\273v\350\275;\332\377\275\262\334`<.\346i<\323\307$<\356-\254=d\303$>\365\202\207;;\361T\275\350\357\233\275\033\004\301\275S\242\253\275K\253\t=\013\236\307\275Lj%\276\211\277\224=;\345Q\274#G5=~\274\021\275L\035\300\275S3\334=\226q\300\275w\332a\275\013\361^;\241\026\274<W\026\005=\344\024\221<t\241\014=Z31\276\264,z\275\026R\220<\350N\014\274\357\226`\275h\t\230<Y\3433<\206\036u<~<%\275\320C\302\274\027\314\035=b\312\003\275\324n\257\272\355\360^=[\364\212\274\017\324\335<\2760\n>\244Q\211<\3453\246<&XP\275x[g=\331,\n\275\307hW\275\361g\232<_\013\350=L{3=\313\340)\274,\250\270<\216\362\207<\325J0\272\365P\223=\033nJ=\200\341h\275\223\312e\275\036\337}<\334\344c\275m\323\005\275\264\276\235:A$\030=\013kt=\341\201~\275vS6\275\231\030\275<\364\334\202\274\245\230 <\320\255\005<bye=#\330\r=+S\236=\\\276~=}\320Z=\246\"`\275-M\304<\334U\301=\010\030\212\275\215\2722=Rd\327=\363\024\210=\004@\366\274\250\025\022\275\306\010\327<\tv\r=0\246w\275Tn\240=5\014\203=B\350\255;b\321\304;\205#\255<o\210\254;}-\036=\204\265\272<\317]@=q^\261<\317\007q<\3433\335;\226q\257\273\274\2578;#\240\217=\350\3374=\237\344\323\274\242\320j<\016:\244;\201Q\305\273\277I\330;\336Vb\273\353:-=H\326\271<\037\002N\273S\016\n=\365b8=8\264\211\274\025\350O<\243\010\251;t=X9\325\022\234\273w\032%<m\306\206</\005\327;\370\244\3268R\265A>\336\226L<\241b\370\275\212%\345\272-\260\327=\3257\360<\004PB\275\211\262\337=\351#\337\275p\274.<_\272\025=\234>\255\275\273\373\255=s\227^>\350\206\205=J\303\017\276RZ\006\275\334\344g\275\000\2425=\303\322\024\275\006l\201\275*\361\321=)\341/=BT\003>\3750O\275z\233\010\275\332\243\003>\372\367\340\275\275(\275\275\246U\"\275\217r,=^K\252;\230d\337\274{\213\264\274\225\022O=\210\032\345<&\367w=\013\241Z=Aj\304;q\345\317<\'\264%<\270\306\267<\'\364\256=\247H\322=\241XU\274B\322T\2756\321\302=)?\234<0\270\216=\023\301\035=\344I\033>_\234\035=_s\222\273F\351\323<e\256\013<_d\017=\240\004\350<\022\217{<\014?\306;\211\357\234\274\330\262\371;\036~9<[n\"<s\316\332;q\327f=\"\217#=B\026\273=\312\213\037=\tL\246=\330\327%=\366\3775<\355mW=\022\233\355:X\272x\275\243\030\207=\362`u<hK\272\2742\317\004=\210\022S=\005\014\035=4\274\037=v\311~;\334W\267=S;x=\323\026i\274\312^\222=\214F\330;\\\230\214=:h+=}[\"<;\030\031=\337B/=g\301\026=nHk=\327\277I<\376FC\2749\271U=.\'\275<f\010`\271L\235V<y\022\310<B\225\257\274W\372\210<\345\276\024=\010\346\025\275\343\270\347<r\225v=\271x$=\007\036\234<\274\326\036=Dc\343=^D#=B\330\252;\324\272\025=V\021\347;\036\204\006:)\033\023\275\322\027[=\036\025\r\275\034\006\203=\305\254~\274\376\317\212<T\017\323;X\232\242\2732\277\321<\337\332\'=@\370\243\274b-E9\252n(=\337dL<\216\323*=w1\321<\373\335\036\275\307n\035\276\017\023/\276vq+\274B\304\222=\010\200 \276\367\204\305=\312.\257\275L\306\000>\273M\236=`\207\007>\010q;=\342M\026>\312\204\245<4\303\021\276t\320\267=&\325\355\275-\2073\276\002j\004\274O3a=Th\226=\261\363\357=\363\353\325=\rl\304=\232V\310=\013\007\005>D\177\345=\013\320\337\2745\355\177\275\233T\244\275\226v}<v\262\213\274\006\314:=_\217\351\274\366Cu\271;+\243;\343_i<W[\224=ok}<5y\371\273\351\323\375=\360N\342=\335\243\025=\2148\004>\376C\301=<\023\204\275=\016\264=\207\362\306<\342\321\255\2755 \243\275\215S\200=U\026\r>\017N\004\275\244\346\007=\324\212><I\370\340=\331\221j=g\005\361=\353\036\221=\255)6\275G@\360<\275\367\022=+\226\351\274( +\274\311\372\026=A^\317\275\302\025_\275\372\320\024>kL\204\275\002\336\004>\357\004\204=\007\250\023>\317\370\262=W\200\003\276\351\226\316\274$\257.>\252g\212<q\205\234=\256V\273=B\236*\275\323\357\342\275\276\254\371=7g\306;\327\306\247=\257\252\n=\335Y\346<F\245\t\275x\261\374=\354\256+\275h!\200=\277\023b\2748\277.<$x\317<\002\355\255\275.t\355<\300x\365\274\331\356\033=\177\360I=\001\226?=\010L\265<\301Z\261;\3203.=\251G(=D\242y\274N\346\037\274\214\323\361<\201\250b=\231?\232;\355\266\250\274\362 7\2756\306\351\275 \263\315<$\023\003=\305X;\275\374f\022=\352W\275\273`\225\311<\207\351\227<F\235\216<kG\213<B\201\372<h\372\254<\266\237\016\275\013\340\350\275~U3\276(\344\017\275b\216\276\275J\n9\275\347\177\353=\020\216\224\274\370U\334<\020\254\372\275\267\014\322\274^f\271\275\340\037\314<\253\273#>d\\\000\276[v\334\275\334{->\'\200\244\275d)\'=\342\342q\276L~f>\322A\275=\002)\321\275\374\211\243\275\020\234\326=v\225\007\276\321\313\202\275\304c\'\275\266\245O\275\211\247\356\275I\250\304<1X\353=?\277Z\275\'9\r</\3216\275\321\001\366\274s\256\214=tT\225\275\010\265\221=\345\250\335=d\266H=\341qM\273\264G;\275\370:\377<O\247\236=N$\304\275\177\335z\274\357N\r>9Fb=\256U\205=\260\344\022=9\022\'\275\341\213\217<\263\327\026=\363|\213=\215\344\323\274y\300\232; \273p\275X\221_<[\251\303<\031!;\274a\021\255=\200%)=iJ\301\275\227\201\004\275\036d\211<\367\275\230<\201 \263\275\274-\000>*\0377=\036\300\347=\257\217\320\274\371B\036=a\027#=\262\333\n<\365S3=\305\3261=\030\376\"\274\035\332~\275\246\252@><\344\370\274\313\263\024<\370 !<\271\355\265\275{f\203<\267\036\263=\253:\222=\253U\"=R$\307=d;\211\275\235\002\375<\362\246\232\274\225(^=\0343&>S+\263=\032\005\007=&l]\272\266\320F\270\033;3\275\"Dy=R_\337\273\2644n\273\345\240\247;\214\254\330:\270\365\360\273\344\005\034\275V$,\273-\005\313\272\t%\021<\276\036\225=UX\273\273\271\2610\273\333\363\315\274\226B\353<S\365\301<\034mQ<PmV=\255\221\330;5g\315\274\203\230\243\274j\327\003=\345\223\017\275=\367\222\274\'O\023\274\027&\321;\020\205>\272\353\033\341\274E\005Q<\222N@\275K\210\030=\263\220\004\276\270>\210=l<\272\275\002\367\030\276\255\234\372=s\031};\026H\257=\353\312\252\275nau<u\310\\\273fV\001> \242\007=t\250\270<,\374\207\275P\251`\275S\014\221\275\244\367\'>!\037\361=p\351\332\274Z\027C=\200\264^\275L\340v;s\017\345=2,\271=\201\322\273=\301\017^\274\266\315\275=^,\306=\373\346\242<V\004\247<\316=\330=\347\021p\274\362\307\017=\352\302a\275\222\237\017\275\375\215\202=\027\216\265<\373\233\266=\366\3328\274k,\300=\3358z\273#\322n< \204\005\272\232\215\037>\241,U=\206\346|\2755\327?>r5\276=}<\371=z8\301=QG\257=\217B\366=\356\344&\275O\263&>\263\311\271=\276;\277< \036\261\274\377\265\002\273\237q\301<\342N\267\274n\245\326\273]\305\216=\036\033\240=9 \251\274<\t\014=\377X\234=\230\376\200\274G\0147\275\227\372\213<I\354\232\275\370\215\212=\312\226\004>t\327]\274\322$I\275\335\3271=O\324+=\03691=\022\2552;0\036\243=v\030\002=!\316\246=\024\333\232=\277\026\020>2\330T=\333\305F\275?\373\351=\013c\202=\325\204%=\311\321\325\274`*\3167\346\177@;\303y\345;\312\002Z\275\223\316\234=\"\350\232<\270)g\274\255\250\265:R\342\250<\271\265s\274\232#\253\274\r\317\003\275\320\036\207\273\316\370j\274\367\205\364;kV\257;\253{\212\274?Ok\274\226\300r\275\365>\200\273\005\t[\274(\266\252\273\272\277\022\275\262}\017;\302}\021\2745\177\r\2741  \274\336\023E\273\340\\^\274tf\025\275=\245\214;\262+\2049\325\356s\274K\317\334\273\217\374\017\275s|\235\272\201Z\232\274\276\352\221\275\371=\240\274`\r\273\275\r\212\211=\205l\207\275\026\203\243=\361\351\215=*\010\373\275^~\263=L\2152\276\262b\307\275\317Ri==\305^=\264\031\266\274\301\272\007=3\335c\273AN\271\273\234B\253=>\264\244\275\265q\315==\203\2729\372\251\221\275~\352\373=\035\261\236\275E\205\341\275c\366\354\275\017J\342\274R\034\273\274S\263\261\275\316\227\302=\316\351\355\274\202\2063=\241\347\227\274\364\257\177\274a\371[;:\346\344\274{V\354\274\035UK\275\322\356K\275y\3249\275\317\311#\275&\353\206\275\216A:<p[\025\275A\275\254\275\340~!\275&\203\266\274\325;\233\275z\032\"\276f\347\251\275 \036f\275\006\000\301\274`\364\202\275\033\340}\275\335\243\205\274\240-C\275KKn\274z\213\024\275\010u\311\272*-\325\274)cg\273\245\303D\275\006N\313\273\252B\346\274_-\303\274\2753\204\2741]D\275|5\026\275E\220\033\275 (\322\274\332\251=\275\226e,:d\207&\275\367^V\275\231z\307;\014\356j\275 \354H\275\257\300\233\275i\237\301\274\177\235\222<\271\307\215\275\246\254\326\275\346M\023\275#\221[\275C g\275cn\257\275\315\275L\274e\236\201\275\354a\203\275\323<\002\2756\035\207<\366\305\322\274\033\276\340\274/#\220\275\336\026\225\273Mt\004\276Y\201,\274P\220\003<O\274\014\2757\331Y=\025\347F\274Z\255\213<\231R\005:\213\'q<)x\354;\t\331\275\274=w\221<\257Io;\374\327\256\274q\006}\274\003q\001\275\312\373G=,\210\030\275~Z\311;#t\344;]u\020\275V\316&\275 \270&=\"\302\023=\251\311\000=^\262\037=\307\247\021\274Dz[<[\321B\274+\273\001<\023\001!<`\231\213<\373\\\325\273\3506\272\275\305\375!\276\3765\014\275\242\223\244\273\007\350\036>\370{l=\255\225T=\000\344\352=\272x\016>(c\215\274\024\262\034\276r\307\225=\345\317,\276)\025\027\276Y/U=\202\272G\276\314\223\\\274W[\225\271\206\363\001>\341s\022\276\370\227\037\272Jg\300=\275\321\220<}\304B=mj<\275\371\034\255=\252\030\210;\221D\307<\251\002\313\275u\206\340;\371\330\350;\014\237\235\274:un\275Y\216s<\245F\206\274\306\3774=j\277g\274\313\227\314\274;>\245<a2Z\275\3435s<\355\236\033\276\251V\033\275;\372;\274\277V\013\2758`4<\0177\200\275\221\336\341=\2268\346\274/a\323\274\343\355\272\275\024\014\204\275\356\375\322\275!4U\274|]\001=\346\236\353\275E\310x\275\335\215g;\305\303x<\242!\242\274\330[\217<\323;\"\275\245c\345<\351\356\265\275\363\014\205\274\237\203X<2\304p\275\273\345n\275q\316>\275\243\315\347\274\240\326\241;-\227N=r\270&<\004\200\236\274\213\253\036=\025\350\017\275\327#\210<\254\311Y<i\027\243\275Hn\372;\351\216}=B\345\204\275\354\342\224\275#8*\275C9\237\274\300r\025\275\363fq=lu\215\275\255\005\320\274\330N_\275\364\"\357<\271\275\021\275J\003\236<\033\016`\275#\335t=\257~/\276.9$\274v\205\325\273-\024\025=OTo<\365\273C\275\r\274W\274\251\370+<Wt:\275uO\n=\347\320\335\274\220\356\273;\006t\312<\336>q=\0238\373<\3144R<\341Z!=\0364<=\353\350\377<\304k\337\273\031oJ<)\330%=j\344\333\274\275\337\026\275\236\256\004\275\216\217*\274\366c0\275\261;\264<e\3562<;p\032\273\355\023\222<TU\240<\002F)<\250\326\025>%\300x\275\007\235\373=\0205c\275b\034\314=\310th<\271\241\265=\375\372\034\276\267\001\315\275=\266N\275I\320\224\272?\306\267\274\n\271\323\2743\216\023>\266\313\001=\352r\320\275\373\243\003\276\032\345\024>\035\340J\276\241\"\362<\2772\352\275\002\341\001>\310P\"\276sy\366=\240\205f\276\260)\244=\026\265}=\363\037\224<\266U\355\275j4\315\274\214\370\237\2735\023P=\243\307N=\310~\200\274\332\002\355=\311\211)\274\010JT\275vJ\205\2748\340T=\325\034)\275{A\202=\227T\260\274\022\355\021\274\376.@=\342\014\221=pJm\274!#\330\273\211\314!>\343\345D>\320\334\000=\'\234\236=\321\266\246\275\253\025\'9\271\356\364<\033i\224\274KB\224\273\324\\K<\216\266\245\275/s!=*U\235<\314L0=\320,\351<\276>\r=7\320\\=\246b\271<\001\377W\274\350\335I\274&\312\272\275v4W\274\t\210\210<~TB=\337$\265\275\3611\277<?j\233=\213\252\207=\014\354m=\354\014A>da\352\274_\222\216=@\277\231=E\240\234\274\t\022\366=\365\305\001=\2410\257=^\366\006>\341\242^=\233%\375\274\0256\301=v\251<>\201\026\247<\030\023y;\377C\300<\277\322\\=s\006\016<\304\321\021=\230c >\2632\244\272\260W\010;\034\323\027\275% \333\273%9\230=[v\'\275\017q\206<\206\354>\274\222\305\212<S{\253\275\240\221\222<6\354\243\274\t|@\275*-\326\2750wY\275\330;\334==o\374\274JPh\275f\200\246<\023\320\205<F\344C\274\245\274\000\275\310\310\212<\343\315\367\273y\034&<\007\272\256<v\t\341\272\225\264\250\274\251>\201\274$\357\366\274A\205\232\274\365\206\022\276\357.I\276\264b\003<a\020]\275\314\223%\276Dd\257\275\007\263\036\275S+\377=\3050\221\275J\303\362=\026\2147\276\212\327\022\275\245@G>\010O\320:\027\335#>\335c0\275\365\374\373=B(\r\275\367\016\005\274\365\275\035\275\200\232\242\275%\022\005=\205q\350<8\036\270\274\244\032P=/\257\276=\210.\027\276 p\t\2760\2502=\006\233\014\274\301\263\343\275]\t\275\275%\031[\275l\304\003\276\'b0<\345\336\243:n?>\275`SW=e{\250\275\221\335\001\275\227\307\361\274W)\027\273\377\370\305\275\233\227z=\365\300W\275%5\n\275\242\235\t\276\017\354\357\274\265\272s\272@!A\276W\021\343\275\321\333\356\275\354\305\231<R\242\371<\277\342\364\275\3567\254=\333\340\243\273\264\214\027\276\210\372\337\275\3119\274;\277Z\231\274d\342\330<\231\267\207\274\224\331\215=\312\251H\275_-\355\273\345\'\353<\273\224\034\275\364\300\017\276[\\\003;\3670\274\275`w\347</\254\231\275\247\371\240\274\277m.\275b\237\362<!D\000=HW\037\276\342*Z\274\\\221\331\273\373PQ\275\000L\021=Ns\211\275\202\nT\275\320\261\025=N\032\323\275\035c\346<\253!E\273\340\306\211\274\311\215.=]\210o\275\206L\025=\320\021\027\275\206\371\353\274\222\247\014=\326M%=\337\267\353\275\233)\376:\230\032\210;9\361%=\356DU<[C\370\2742\272\030\273e\204/=\210]\212<p\267\212\274\032\0375<r\355D\275\206\242\227\272\244\366\244<\355\276,\274OF\225<E\n\026<C%I<\342s#=\245\3123\273_q\214\272\254\306\300\273\333\253P\275\224\257#=q\0264\274\256\250\010=\240Q\305<\343\342\225\273I\240]<\250\246|\273\261R}\273X\003\010\272G\025\323;\217|Y=Uy\273\275\363\354k=\033\005\'\276\240\266\237\275\'4\243<]$ <\304I\274\275U2\234=\034>-<\223\233q\2751\247\304\275u\226%=A\r\232\275%G\327=\317\364\333=\036\301?> \365\343\274\007Z\305<\270\031\025>\210\0315\276\237\344x\275\342\222!>\211&\325<=f\212\275\347#\322=\031,\241=\200\354\223<\335\217\334\275\2740\206\275K%\215\275\347\221!\276U\'u\274\201\267?;\243 $=n\014\035\276oQ\204\275p\257\005=\225IL=\301\233\\\273\026\037\353\274T\312\013\276^\251~\275\3011\275\274\236\274@\275\302S\212\275\374\016\251<\213\007\016\275\347\301\210\275\364\343%=T\266\310\274\356\256L\274`\271\362<\261\261a\275\2767\272<:n\247\275\304\303\215\275\237\000\204\275\027[\237;\2430\277<\\\357E<4\351\347\275\275h\356\273\340\376\222\275*\216\034\275\3032\201<\005A\025= \017*\276\317\352\253\275N\342>\275E\210A=\220\306\277\275\255\262\204\275\247\272\303\275.uW\275\325\365N\275\340\361\242=\211\000X\275\240\006\306<\276+\264\274\305\216\013\275D\363\271<[~\302\274g\232\243<\200Q\260\273\004\024\036\276\352\215\237;;!\004=\315\026?=G\021\306<\251\264D<>\327\325<\357\004/<\315`\211\275W\021\n<\327Oh=\356\206\311\273\343\263+\274\306\272\207\274\250\261)\274!\356\365;Y\362\323;\332T\037;QX\256<\304=\341\272\244\212\300<q\034\220\274\007F\';0o\215<\020\374/<)D\014<V\231v\274=\236F;\333\000L;2\220@\274\203L$<6\017[<\370\267\303\274G\334\020\275\"\355^\274\326\235\267\274<\021#\274\027\370\352\273\233\256\177<p+0;e\220\262\274\305\345\034\274\374\341\205=\327\304.;M\'U\275D\"l<f\345\370\275\373k\342\274\223\224\220\274#\245p<\241\316\242\275\'\274@\275\213\340\363\275\200-\013\276\243\352)\275\356}\202;O\262\004\274|Qo\275]\344z=\274\021\010\276\366\272\271\275\206l\241\275}\024\227=\256\204\330<\331\201\226=\340M\"\276Zh\005\276\007h}<\350\006\237\273\362F\254=]~\211=v\031\257\275\202\013\016=\350\324\215\275\010m\355\275\234\t\035=\372 \232\274 Y\331<\361\201\003\275\205}\r<\340\014$;v\020V\273\311\'9=\031\"\005<\020P\220=_\377\300:\322\265\225;\001\367/=\333\262 =_\360\260<\032\035\203<NM\225=\032Y\357<\t\335\300\273\370\014\340<2\030;=\r:o\274\333\251\036\275Z5M\275X\036g\274\362D!=?\035W\274\234\262\326<C\224\021;\301x\276<_`\244\274K\030\317=<<\205;hd\256\274u,\004=\374\333\005=\243\362\003=b<H:\333\260\250\274\"g\025\274`\331\000\275\356\021\254<\002+\206\274\274\032\021=\243&\222=3\273\236<\270m<=\216\337\020\275\320\273Q=\201\014+<\035\003\237<\224\024\005=\211\266\231<;\032(\275\030<Z\275\355\023I=GV\274\275&\374\024=\374\035(\275\260;\352<@\024\253<~}\010=\';&\275\031\325\375=b\237V<\356\231\274\273A\t3<\227\210\207\2738\225\020<\232\010\240\272\362\214\001=\353\247==\341\203\270;\201*\r\275>\252\372\273\374\360\271;\016\331==U\020\320:i\005\273;\265d\034<\231\237\211:?\255\337<\333\035\n=\267\302p<d\243!=\036\227\007\274*R\203\274\344i#\275tk1=\002K\317<\317:\210\273eb\023<\030\2208\273\000X1;\254r\023<\274\333=<\255\303\207\2752\370\361\274\230\250\330\274+\315,\275;cq=\"\201M\276\\fz\275 u\363<9\n\267\275#\366&\276\247\367S=l\244\003\275\'\304\245\275/\304\004>\351\256\020=#\253)>\344\003*>\256v\375=[\273\022\276f\232}\274\263\336\205\275\"\\\010\275\334-\210\275\230\235\024\275b\214\006\276\3161\266=\266\346(\275(d#=\2645\310<\3773\225\275\311]\321<\214\271\010>)\311]=\277(i\274a\324\210=^\360\303\274\235\311\231<\260b0=\210\2600=\271T\327<\037\0141=\236[K=M\200\315;B\324c<k\203\241=/\273z=F2u<\364\\\274\274\251ON=\023g\212=@\007\344= _&=\311s\235=\262D\377<\267#\337\274\331.\222\272\330_~=\322&\017=}]0\273\375f\223<[\253\027\273C\272\343\274\244\276\234;i\217$=.\226\331<\220\030A\274 MA\274\366\371V<@\263\277<r\033\2258\347\260\004=\245\222\237=\031\336\222<e\021\344\274.&\207\274\300\310\225=\336\255\n=8\331\357;\314E\264<\274\003\310:\222av=\265\013\035=\260$\210=\3352N<\340\200\006=yB\273\273\237\257\322\274\244K\347<l\324\346<uQp=3\243a;\311>\310<\305,G\274ox9=\250\243\367;\311|U=p\312\227;\367\227\016\274\266\306\214\275\036\2074\274\316\203\212;52-\275\3255\355\274\033\022\007=\035Z\034;\2528\314=\312\344\231<g4\221<\335M\241\273Z6\222=\311\006\262\273\235y\213\275\324\232I=\313_\025< 8\252<\231\303\200<\037\376\207\274A\372\237=\320t\251\274`y4=\234\261t=\231\316\336\274\255\233\003\274RV\206;\375 !\274\212\025\216\274\257\350|\274\270\275\365\274]\372\025\276N\222b=~x\272=\342\014\274\275\270M\013<-G\004\276\346\367\230=\200\202\361=\257\353\346\275~\343r\275\002\261\265\274~\236\002\275\243\362\222=;>\034>-=2\275]/\362\273\327\226\013\275Q\"\205\275\246\206 \275\3452\220\2757V\002>G\364h=\362%\323\274\314\303\367\275\371\271\345=\236\242\374<\276!k\275\334\323\022>\n<\014>\034\267\267=\332N.\275\236gH\275\247\260?=\227\374\021\275v3c=\211\243\024=\361\362l\2735\016\274;\340\364\341\274^x\210\275\243\256D\274\200\277\020>D\301\224=\231\303\300;\240\266h\275\007\245\013=\036A\216=\276\302\032;\260z\260=\332\177\274<R\036\207=\001\315L=!\255\274<8\243\201=\226%\n\275\221\277\207\275;\021\223\275\017#I\2740\324\203\274\334t\354;\355c\244<\256\373\030=\346a\242\273H\273\335\274\033uA=i\326\324\274\325\202\366\274\016\322\236=`Bl\274\006\214\006\275|\356,\275\302\323\303\275<\244\247:_:\010>;\300\351<K\377\345\273\025\013\205\273\004\317\337=V\366\n=V\'\243=G\203C\274ORy=\263Y\330<y\014\210={\245\005=\363K\355=\370\315\245\275\310%\265<MU\020\275\345\354i=\313\214C\275\302\002h<+1\202\274\274\221\322=\210\257a\274\035\227,>[C\324\272E<}\274\265\255\343\274\221,\323<\020\236@\273H\373g\274`\220\326\2741]\340\274\257\325\n=\357B\005\275\210\312\305<X\330n<x\225\206\274Pa~<\372\027h\273\232\\\343;\342\021?<2\215\254\272c\2321=S,L<\314\276\256;!\231A=\320\035\241\274L{^\275\246l4=\224~\235<\245{V;\300g\243\274\241\352-<@\022\000=Q\243\016<\2154m<u9\234\275F\241\034\274\215md=\tQ\247=\255\372\r\275\215\251&=\213\013\033\275F\330\n>\214/z\275\\5F\274\307\374\316\275\322\325\253=\032\234\377\274[F\022\276\360\206\030\274\217\323\030>o\235\002>\022P5>q?\";(\355\270\275\365i(=\016\204\240\275\330\255\202<\252\000%>\"\024\326=\205F\347\275Q\215\017\275\024\377\227=#\027\234\275B\177\210=\2074\002\276\314\t\372=\\m\000<\225o\323\274rU\301\274R\376\312=\301\024\261<\361Q\314;\034\312\013\275AV\275<s\240h=\260\205\273\273Q\240k=\023v\353<,\242`;`\312\210=\022\016\236\274\332G^<\371\246\262=\225Q\204;\232@\003>\206&l;\350\216F<cd\360=<\364\352\274{\'\241:\033\254\277=\327\020\364\274\004\227\237<n}\307\274J1e<\226\310\322<\321\365\305<*\266\277\274f\210j=\375m\327\274N\035C\273P\017\310=bP\203;\312\202\032=x\tB\274?\345C\275\336W2=x#5:\356\203j=3\216\225=g\307\350\273\340\362\264=:M2\275\341G\223=+J\252<\026\262m=}\252\250=\216\326\250\274\231 O=d\370\030>:d\324\274\271\371>=\r\242#>k\376\342<;v7=\214D\026\275}\253<<\030\220==\177\342=={\253\253\273r\361\207\274\t\027\236\273UA ;\352\344g\275\033\342\305\274\224wX\275`pt\273J\240\366;{\207\266\274\300\351&\274\217\335\000\275n>\324\274\364/\t\274\243D\020<\332\000\201\273\357\277\304<\\\327\241\273\353\"\264;\001D\317;\016\017\2668\243\002x\274\334\342\'\275Zmq<N\346~<\214\370\2219\367]\266\274\325,^\274&@[\274\301\313\302\274%t\010\274\340\033X\272U\206\210\275,Q\0169\377\331\256\274\237]1>?jr\2750\214\264\275\261\261S>\030v%\274e\277\017=\301\032\267=\321\320\014>A\314\237\275chR\274\241f6=F\363\243\274\004-.\274/i\210\274\276-\240=\347\246\347\275\234\026e\275r@\"=\004\252}\275vb\342\275o\177\035\275\365\'\326=\266\367(\276\006\013\360\275h\350\017=n$\235\275T\363\341=A\307\235<\026\273\264=O%\360\275\"\206\263\275\375rc\274\350\324z=jt\304\274\257\353\006\275\204=\352\275\321\344g:\017\336\n\274x\237r\275\026\022\223\275\332[(\275G\332\036\275\310*.\2755\204\003<\361\313\032\275\211p\2109wy\037\275\254\263\365;T\361\224\275\255?\361\271\207\007\355\274\324ka\275T\020\236<\220\020\214;\023%\217\275jA\353\275\347\206\263\274\200X\266\274>\266H\275\377\324P\275_ZM;k(y;\017\306\357\274\014\377\362\273\356\337\353\273y\002\235\275\006C\202\275V\340\002\276\335\006\021\274\211L\330<\260$\202\275s\341]\275\221\306$\275H\330\215\275P\016\325\275\303X\365\274q\324$\275\267\263\026=\330\277y\275]l\016\275\005P`\275\206\215\214\274Z\364\270\275\255\331\230\275\007\332c<\370`\217\272Q\272U\275<\333\n\276\025j\016\275\240\244\266\274\234_d\275\371[\351\275\020\374\224\274\215\250\303\275\r\035\"<o\277/;\242\266\247\273Y\210\354;\356\267\205<\230\261\225;p\373y\273vO\376;}\251\307<\316*;=\314\314\000=\005a\326;k\204f\273\304\323\"\275\366\'#\274p\307U\274\311\225\231\275\313\235\030\275\025\350\316<\357\261\257\271\201\275#\272\010\003$=\236\350\000<\n\357\254\274\365 B<\242v\037;\263\354\225;\n\230\330\271\243c\337<\312\301B9;\330\033;%.\341<Y\022\327\275\013g\352<9/\016\274\206\316\271\274,\330\306=\315\365\246\275B/0\275\000\215a\275+i\031\275\204\027n=g\354j\274\3703W=\355\206\035>-\201\336=\275\337\302=\261\342\263=\034\350\'\275\370R\\\275\275Kx\2737\3409\2750\300\024=\353\033\350=\236\333\337\275{\330\t>y\340\n\276w\020\034\276\006\370\225\275j\333\323\275\017\326\340=\374\002s\274\354\3669=\031\366\215=\030{\214<\2663\353;\342\216~\274[\007j<\216X\273<y\251\333<\3553\'<\251v6<\324\261<=BDq\275\026U\236<K\371p\273\2703\352<\220DQ\274\267`\020\275\265\037Y\2755\375\014\2769\344\332\275\\Yu=\241\245\316\275\254\177;\275\274\342@=y\312K\274(^\231\275R\267\245\275\344\247;=\213R\216<\216D\317\272\250\263\022;\220o\346\271jG\005\274\256\205z<\016-\301;\023\252\320;_\257\244\274\354\365\256:\210k7=\275A\276<\325c[<\244D\240<\200\226\021=_\314\214\275\202\n\216=\263\357N;`\231\'\275h\276S<\000\nI\275\3567\r<\210\233\010=;E\357\275[\000k=\322\216\312\274\357\034\236\275c\330\267=\007o\247<)\215y\275 \225\020=\246\373K=y\336\363;G\2104:b\022\255<^zu=\336\263\020=\231\350\002\276\353\212\036<h(\310; \252\373<\362\242\231<\251\351g;\250\232\347<S\335\252;[=\005\273\313\270\353<\256\262\027=\026\361f:\351\035#=I\311u<\347\010\177\274\0222\347;\311\035\205\275\357\025\005\275\204n\345;\217\317\r;\273\233\003<\321<\207;\221\265-<Rd4\274+\025\002\275xq\"\275;\3170\274\274\256X<+\205\252<=\362x<\242<\352<\241\214\257\271/\251W=&\2247\275K\326\210=+*\243=\233\356\t>3Bm\275\346\3763<6}P\275\301\211\003>\216h\002\275\021W\'\276uU\244\275\214\374\264\275s\212\345<\031\324\026>\264e\004\275\202;\351\275O\244\232;\365\303\332=\030\331\257=z1k\275\341X\260\274\224&\252<+\034\330=\350q\311\275\342i$\275\216\013J={n\017>\233\223g\273\205\231\273\274sm=\276Z\360\217=2\330C\275\232[\211=\262p\203:\243($\27442\314=\026\033^<\017\260f=\237\262\004\273.\252\010\275\t\333n=O\224\210<7\324\263<.\275\227=\234\246\317<\373\212\213\274Cp\\=[\274\274\274t\361\233\273\014t+=\377;b<\3650\360;\243\022\202\274\350\313g=\236\330\235\274\036v\014\274\346\3748<M1>=\276\021\242<ZF\364<3\024\013<\220\033\357=\022\222]\273\032V~\274\221<\211<j\304\223;/Y\036=U\t\024>v|\370<\006\377<=&$1\272\032\225?<\370\271\335\272\262\246\354\274\247J&=x\'\360=\301V\243<\302q\032<\344\275\347<\313-\200;Q9\206\275\355\372;=\3528U<\226\266T\274\006\332o\275\264\375\177=\216\013\343:\024^R\275\002\035q\275\262\336\246=\252\273\344;QN\302<S\263\303;u7\376=\305\310!\274\335\322\260\274\256\335\234\274\245\354\245;D%9=\277\023\033=\371\243\311\274&z.=\332\225\326;\034#7=b\307\374\273\211;\345\273\000\036\275<\226C\352;p\273\313\274\263\007\036\275}\214\230\274\005\201\254\274\277V,\274\241\265\037\274\r\273~\275\316\010\035\274\320,\006<\304\231\210\275\205(\336<\221\202\321<)~Y\275I\335\320\273\004\351[<jS!\274\206(\n\272\005\312\203\274\'p\352<\312\360\234: \004p\275\016\023C\275\016Z\000\276\246N\321=`P\025>\223\033\354\2758{\216\275\t\336Y=\327\231\314<Dh\345\274N\257\322\273\224\207H\274\350\273\354\275\306\005\272\274[\024\347\274(\032=\276Q6\357\275\337\374\004=z\262\253=\027\346\224;\272Nf=\267\022\233=\230\263,\275\205\242->\021K\372<\372\306\274\275\317\323\227=\360\344q\273`\215Q\275\016\030\255=\343\324\002\276\\\224!\276\006\210\265\275\357!\260;N\200\316:\344y\206\274yW\267\274\026U\210\272B.\304<)1\205=@\001%\275\017H\007\276\013\347\273\273\\&\223<\261\200~\275\233o\334\275m\350\207\275\355\311\224\275\254Y\274\275\300\200k\275sc\021\276Fe\267\274\261-v\275\271\223\337\275\326\206\312<\206\251c\274\262;\270\274\221\364\252\275\237\241\235<8\321\237\274Y\003(9J/\221\275\345\307?=B\237\365\275.\025z\275\020\224\204;\311\005n\275\'\345\267\275J\010\206\275-N\243<\377\t\033=\314[\237\274\23707\275\305\016\t\276)\351\030=\214;S=W}\305\275X+\370\274nHG\275H*\200=W\310\265\274\221\315M\274S\017\236\275\250\266\257\274\245\322\305<\260\243\303\275n\323f<s4%\275\224\206\370\275\013\2401\275i\207\267<\361:\224\274\375B\213<\270\357\240\275K`\222=6\224\n\276%\271_\274\211D\310;\2260\343<@\247h\275\246\035?<\031\222\373\274\325Q\342<\247@W\274N\010\205\274?B\364\2747L6\275\202\373\010\275\037B\215\274\301\214\302<\314\017\376;\356\031\233=\307\024\202=\275\325F<EZ\335\273\367\230\342\273p\364\"=\3313\222\275\177)\322\271\311wU=X\353e=B\361\2759\323\007:\274*q\244\272E\364\037;1\313\313\274,\274\307\273_\224\332\274!Y\276=\306\023\365\274|\253\032=\036\366p\276<\255I<y\342l\275\345b\241\275Hqc\276\346v\352=\277C\204>\344\315Q>[R6=H\254\364\274\320\340\002\276\204\001B\274\177\335g\275\310\274\323\275k\364\216\274\347\221\004>w\274\302<\036\336\257\274\301\2126\276\314\353\307=u6\230=\337\034/\275j\313<>\221\251\315<\227\330\201\273\256\347\373\275\205b\244<\323\351(=l\004\211\275\205m!\2754,\241<\'6\367;~\314\200\275\271\245\373<\276\333i\271\\\\\305<\274\253W\275\032\315\374\274\306\214\241\275U\275\302\274u\227C\275es\321;m\006\272\274\232U\236;\364\004\227=\"\357\250=\216)a=KA\247<\201<\021=[x\257=y\004/;%\301\037<\363N\355=\332\254\026>\365\033\222\274\031\367S\274\262\361\321;e\025\323<?\\G\275\013/\360\274se&<\347\342M\275\361\253\337<\210\272\221<\316\3240\276\216\213\250\274\220E+\275xX_=D\204\231\275\364\267\371<\327\233\030\274\342\226\213\2753\020\311\275\227\335\007\275\372B\362<\236V\037=\226D\304\271F\341\\;+\266\003\275\326\320y<\324\374\227<\233\217\371=$u\221\274\345%\245<\3238\300=2\t\006>\325K\263\275\207e\342\274\216N1<-E\315<\223\022\367\275&\224\357<9s\373=\200\000~\273\036\023-<o\251I\274\346o\207\274\250l\023<\025:8\275&^\316\272\343\354\274<\335\363z\274\217\370\316<\001\252|\273\007\031\036\275\262\352\202\274\260\276D;f\235\367:]\230\030=\030\030 =\377\002]\274`K8\274\257\237Y\274\210\217\261;\363\237`\275Qz\270<m\250t=\001\364\014\274\2553\200;\212\016\366\274\267\264\023\274\023e\307\273q~\322\272)%\356\274\211\274|<\007\253\304=\022XR=q\276\226\275\035D`\275\021\225g\275\326@g=C\322F:\345O\003\276\346\362\270<\026\315\025\275g\345\024>NV\311\273\205c\236=S\275.\276\303o!\275:d\203=\2207@\274%\343\223:)0\370\274}\376\335=&\341\230\275\021\027B\276\025\271S\275\315\236\345\275\t\250o\275\330\341\276=mu\331\275{S\207\275\006\007\345=T\376z\275\333l\004>\266\223\227=S\300#\274\321\027s<z\216\240\274\316i\203\275\r\374f\273\370P\223\275Y\312\246\274q\017\352\274\366\213\344\274\226\270u\274\332P!\274\253cs\275\356\375\356\274Y\3118;\016\\\014\273}\257[=\177\246\270<\230\237-\275\213\310\277<>\031\271\274\210\344#<b\370\372\275\371\020\016<He\247\275K+\253\274Bp\2439\271MY\275k\345*\274;\374\236\271\321V\235\274~\020:\275\r\004\"\275\032\035_\274aP~<\273\324\231\273\036\376\264\275\200t\264\273\220\263?\275\2154\033\275\351\022\222<NSc\275\373\215\030=\200\027\305\274O#\003\276*\373\364\274\213\363+\275\257\306\255<\375\\\200\274)\217\006\274\310\204\225\275\351\317\365<3\204\203< Y\217<\235\275\212\275F\202\2058|\302x\274$\232\370\274\373h \275\234\332p\275 \344\t\274\253\014\217\274\256u8\275\371\337\225\275\234e\341\274\256\233\020\274\014\247\031:\330\000\212\273,`\177;$\241\332;\243\rO\275\226Kf\274\373+\230\275\372\255\253\274w\363\363<u^\316\2739\324\016\274\266E5\275U\014\361\274\213\203)\275\303J&\273[\374\261\275\237`R\275N\0370<\020\245;\275W\223\036;\230*\326\274\274\252&=\234\225=\275$\000\006\275\361\320\227;y\016\270;\212\254\365\2745\3474\274M\226j\273o\206\312;U)S\273\242+X=\nV\274\275L7\271=\215}\362\275\300\200\026>\350\367\344= \016\001\275*\242\224\2758\270A>\035\356;\276\343\212]=[\325\361=\275\333q=\177\025\316\275\3318\370\275af\232\275\341\247\013\276\326\035!\276\304\370\314<?US\272f\225\022\276\330\375\305=XcQ\275`\375\200;\001\235\223=\321\244\025\276\201q\360\275\207\216\002\276\3611\334=\014U\362<vC\230<\350\333\324=\035\022\372\275\246\211\225<\243\225\033\275?\261\260\275Rl\246<\304E\024\275Vt\020\275\235-\257\275\261}j\274\000x\377\275D\242R;\254n\210\274\017\257\264\274\327,\376\274\'b\263\275hQ\262\2756\314\355\275\004\317\311\275\336\201f\275\013\236\314\275c\2722\275\366\202\225<!\300\221<\360OF=\364\305#=*E\304\275&$3\274D\245\034\275\371\3779\274\220\221\023\276\316\221\356<4\217\016\276^\252\274\275\330\032\370<+w\027\275Nw\002\276ge\227\274\316V>\275\355zm\275\265Sg=$\031\366<W1\347\275\272-\361\274\371\325D\275\204\364\264\274\257-\004\275F\243\226\275\242z\233\275\026\003C=\232\004~\275\351b\240\275\001\335\274\275\326\n\242\275\'\325\334;(\232\226=\201\305\210\274z\032\253\275\351\203\217\275\313\347}=\302\'\360\274\226\007\361\274N\370\306\275\031\2274=\254\036\035\276\272\340q<*\'\235\273Zmi\275\247?\316\274\2312\243<\3046\201\2752\326\330\2746\254)\274\316\312\267<y\240\315<\364\324C\274\005\033\304\272\256\"(=7+\346\273e\312k<\331D\255\275\021\010R\275\371\360\246\274\003-\320<I\032\347\273\010\314\035\275@-\322<Q\021\217;b\220\371\274bL\203=\211E\364\274\004\256y\274\301\334\r<\3263}<y\371\206<\315),\275J\377_\271\365\304\013\276\177\335N<wgp\275\234\200S\273iF\236=\335T\365\275\336O\020\275\346[7>bR\"\2759y\r=\301L\370\275l,\004\276\007\025m>`\327\215\275Vt\303\275\316\037\024>$\255\322=\234\271\316\273\010T\026=\331<\311\275}C\233=\251\334\027>\2029\217\274\315\'3>\301U\324=ZK\221=u\231\033>\333\021V\275\330\267]>Y\263\006>\016\007q\275\n\334\354=\305\005\361=\220\342\240<F\367\224\275TD\366<\377\217D=\027\r\271\275\231\363_\275\032>\025>\240\001\263=\342\226\337<\357v\210=\003\002Q=\204\342\305=M\374\262\274hD\225=Y\007\354;\2650W=\266\020\205<\344\303`>\2016(\275\023\271\240<\314\262\275=\220\334\261\273\271\313\314=\336|\204\274\026\334\245<F\334/\275\363]\235<\231c\303<\201\252\027=B\341\267\275\254\023\013=\364\275\263=\267\361?\274\363+U\274u\020*>\010\024$=\217\262\212\274(\245\315\275\255\036\303=\206\225[\275\036\212\016\275\204h\310\2744|\274<\013\3208\275\000\245\331:\310\003\273<\033`\214\274\340\371\266<yY\227\272o3\364=\345>b\275?\231.\275\357Ba<\373\036\275\274\304\367F=x\233\301\274\266\026\307=\366\003\261\274%\225\303<\375\215R\274\021\377\014>\240m\236\275z3\274=\001)\231;V\203{\274&\374\005=L\203}\274\253\312=\274wjm=\216u\264<\263m\226\273\270[\252\2736f\013=\350|\322\273\010\004\344<\352\202\275<\2000\370\273\275`Z<\346\203\003\275\022\376\322<X\3461=\263\302\216<,\335y<VdU\274\247\343\246<\017I\315\274\274\230\035\2750\006 \274\252\371\230\272\316f\270< D5<\245\010\023\275\246\211Y<\033\354\035=\275*\303\272\226s\340=7\021\274\274\352\026\200<{\277\033=\205~\247=\275\025\263=\355\245\352\275\262\002\217\272\335\230\245\274\336\340\020\275\375u\334\275\363O\321\275\211\303+\276\234\3212>\370\004\031=\363\267$\276-\3141>\352&s;\301\300\001\276R\250\\=\373\311k<\302()\273GX\352\274\261\340]\275h\'\207\275HcO=(\010\026>\267T\272=7V\034=\367\337\003\273v\277\001>\033n\264\275\335\255\247\273&r\304\274\222\340\231=\0021\325<\010\200#\274~\003l=,\306C=Moh<\3747Z\274\036\372\245=\341 \326\274\177V\370<n8B=\rf\354<\362#2<\223\007\r<J\2366\274d\013\224=\010\354*\275\372\343\361<\027\267\316\2748\215\370<\372\365\305\274vk\232<(L\r\275%C\023\2756\343\035=\272\2338<9\353\205\275\035\234\271\274\010(\'=zH\024\274\320[\364:1\340\265\274\224\227\034=\221GL=O\200\225\274\331~\311:g\325\246=8\240\322\273\254\030/\274\356)\341<\253\240\014\274\315\006\216=\332i\262=Y\347\233=\370\302\357\273\207\335\205\275\312\360@\275\0021\007>Y\001C\275\230\353\361\274v7\'<\216\000F<\021\234P\274\225\220.\275|-\206\273*\321\213\274\036K\377<:*K<D\000U\2757\037\207<\307\365w=\327b\033=\335\017!<J\031\311;\366\2060<\225\027\370:\">\235\272\263\343\310\274\253\023\227<\n\305\250<\305\261\321;\257$[\275\373y\357\273\203\326\006;\360\203M=\'\223\256\275.\313\004\273K5.\275\221\263r\274\254?T\273\"\215\331:Z<\025\275v\332\255\274\264\246\245\274\321}Z<zk\265\275\005-\355\274\266M\274;\ro7\271o\027#\273\247*\247;y\325\247<\242\241\022\2743(\361<\201xA>\215\037g=\374g\355\275l\346\017\275\r\310U\273$XR<=\377\335={]\342\274\010\360\250\274U\2755\2742d\362=^\251\322</4\267\275\223\007\003>\240\010\277=\336\375T=K#\352;\340b\352\274>\274\265=\350\3257\275Xc\313\275$q\274=\317o\353\275\343\000\274\275\302\375\177\275\022\036e>\262\356\177\275a\322.\276\342\305\366<\236w\366\275:\t\254=\312!\361=\326<\353<\264\215E<\203\242P\274.0\213\275-\347\267\273;\360&\275\232\264\310<`\232\237\274N\270\365<\306\222\020\275\3747\203<OP\347;\250\247,=\374t5\275\353\305\356<\257\306\245\275\231\226\274\275\210\267\234\275\202tD=\260\202\247\273\341\206}\275=J\311\274\352\220_<.\303\261\273\267\306\306\275\217\265\025\275d\023\023\274l\363\3049\337Ca\274\331\3738=0\207\000<\242\240\216\273\257N\002\274\330\232]<\220O\001=\223\021\031\275\266\211\250\274\236$J\275\257\206\234<\211\301`=>\002\020;\247e\r\276.\224\355\273\th\022\275\221\"\020>\032\320\357\274\276R\004\2750X\377\274\177\256\010\276$\345\251\275\360,\360<\204\356\242\273\007Z\207\275\347\251\276\275&\210\010<\260x\370\275d\311\310<HT)=\024o#<\213\241Q\273s@\006\274\227+^=\372#j<7$\256\2739\261i\274eaI\273rU\237\274!F\266<8\231I<`\320\007\275\240\264\230\273\010\366\200=\262\024\017;\330\316E=J\212\246\274\261\275\341\274\006<\301<z>\326<\360\230\271;9\373\221\275}\346\332\274\202\366\222\274J(2\274)\315\373<\n\035><\227\274\267\273OJL\274\330\314\207=}>\005=\335Q:;\261|)\275\327\223+<mC;\274{\032\t\274a\322\226\274\312\271A=4\302e\275\223hy=i\276\000\275\344\022\222\275\223\203+=\236\316\232\275\241\203\226\275\223\262r\275%U\027\276\311\237x=yS\261=4\351\252\274$\010\037>c^b\275\247y\025>\240\240v<\036\337\344\2750\221l\275\006\035\345\273\337V\241\275\262\254-=\302\374\344\274<\276)\276tY/=a\207\034>p\366\276\275x\336\204\274Nu\001\276\276\\\253=\300\326\n<n(\353\275\356*\214=\333G\030=\032b\335\272\316\203\231= *\207:\325I\267<\276\0329=\377\035\204\274\017\322D\274\325zj\274\335Y\335=to8\274\300\354\367\273\222\313~=\203\240_\274\210\006 =p\2505=\2203N=A\336K<\350\000\243=\001IW=W\340N=^D\221;\353\232\351\273\013d\363=\312\376\213\275\313\004\233=\304]r\2752\001\345<=)\005\275\003E\346<4\3319\275R\327\006\275\177E\310<3}\"\274\366\251\203<\307\'\243=\347\344_<\247y/\275\261p\225\275\321{\374<\342\313J=\353@Z=pa\223\274\357\020U;\003\212\030\275\3508\024\275\020\273\335<Gk\030\275\353#R\275\026\320\230\274X\037p=\226\334\240=u\n\276<#\006\216\273\031k\017\275\003r\204=\235\315\002\276C.q=\247S\211\275\372\366I=y|\360\274\216l\243<X\276\233\275\254\013\321=\343\331\025:\002\307\256\273d\207-=\033\3237\271R\321j;H\330\214=\367s\352<\366Q\363:\335&\211;1s\263<\034u\325\274\341\271\247<\036`@=f\242C=A\330\304<6\343\211\274)\320\322\273V\365\216=\314\026q=\262Z\013=@\206\303\272\344\207\235<\026\\\221\274cV\267\274\356\035\005=omM:\307\273@\273\337\r{<\243\271\005\275\031\206\354;\022\213p<\001\305\027=Ou*>M\275\n;\017\263\263=\273s\340\275\327s)\276v\343\306=\342GW\275\304m$>\020~\361<\007\221\204=\332^\372\275\020\335j\275\007\234\203=\255\024o>\323D\206=\353\211c9\346y\210>\317$\345<AW\235\276\253\\$\274\314\215(\275\006d]>A\031\373=\233\260\345\275\207\341+\276\300\314\033=\375x\371=B\234s<\207\333\313=y\032]\274\361B\311=\362\334\301=\320\277\307<\026\177?\274\214\'\247=Y\365\'\273Dp\373\271\227\352x<K\210{=\261)5=\365\366V<\242\027\301=h\020$\275:H5=\025\317\204=x>!\275\264\000.=\205i.\275\312h_=U3\031>\'\373\204\274\327yB=r\321a\272\001\265\310<Da@<\271\273&\275Q\344\031;\030\247\266\271\275[\272\272\301\t\322<\036.\241\275(\246+\275<6\230<I\2475=1)\271;5\341\246\274\007\216A=\303o\036=\213C\243\273\221\240,=\n\351\217=`y=<W\301\360\273\020%\305=\226\256-\275(\224\006>a\355\005>\363\240+=/\316Q=\237\377\322\275\224\003\335\274\360\262\374=\254\013\273\273Tl\250<u\246\204\275\3333%\274\300=\316\274\000\363\216\274\336B\t\275~6-\274\256o\"\271\013\036\307<\033qM\275EJ\003=\253:\330<\265\036I=-\303\365<\234\354\345\272\370O\347<h2\244=\017;\357<\345\262\202<\3123\021\275\240h\337=RP|=\'l\023=\355\320\215=\331\370$\272\315\321\013=}qq\275\245\373*\274\031\371;<iU\013=\013\001%\273(p\233=\260\305\316\274\034\276\352\274\020\3513=\256\216Q\2753\263`\275\210`\241\274\231Y\025=j\242P\274\222ip\273\262\312\260\273DH)=>\211)\274w\227Y\275\017W\205<\t\212\357<[\211\340\275Z\023\306=\324%\235=\027\231l\275\014|v>\035\001)\274CP*\276\320G?\276^V\001\275\305\374\313\273\276\3407>\352\010\024\276\037E \2733\024\223=W\360\362=\263\214\004>\344\n\322\274\371\315\210\274\013[\365\273\266 \200=l>\355\275\217\244\206\273\315\352\200=htc=]\373\324\275\034\037\375\275+\336\203\275KZ\"\276\3700J\276\317\246\360=c\376\222=I\003X\272xk\205\274F\275\271=Y\310\244;\032q.=k\264\234\275\206P\337=\\\240\274=P\036_\275\376N\347=\225_q=\367M5\274\316w\344\275;\307\003<\030\230w=\2465J=\204\256A\275\026\340Z>(D\203;\321\362u\275\364bM>\325\034k\274\3746\245=\263\317==\207\204\304=syx\274eg?\274^\'\032<\202\233\313=\005\237\275\273>\375\243\275\263\317{=\036{K\274\372\302\016\275(q\226<\312\027\r=\265\270]<!\334\351\275\370d\255\274\036+\364=\341\371u={\tN=\232\001\255=&\006\310=\351\016\271\275\344\342\245\272A\356;\275\221\022\241\275\022\250L=\223\356\030>\313\211>\275\367\367\'\275\213\306 >%\223\\\275\2271n=\325\234\207=Y\207\010>o\023\320;\034y\301\274\213\246\235\2742~\354=,\267\010<\313H\021<l\342\004\275\355\225\032<M\212@\275\246l\361\273rI\005=\271[\364\273\321>\n\274)y\265;\013\220\016;gn\322<D\333\241<\314ji\274\233;3<\203Ic=\242\350\323\274o\0351=[\001\337<k\315\341\274\335\376\221\275\236\334X\274\324\226\317<\037\026K<~\036h<\261\351\364=a\"\200<\000\177:\274\315\337\304;U\306@\274\324i\227<+\033\317\273)|\237\273\330\207\266\274\002\337@\276\324\270W=\277\030\032\276\376\242r\275\345\r$>PB\310=Q\212\010\275\230\223A\276\177\215\313<\211\364\021>LF\242<\001\324\237<\272\232\335\274|\321\246=\372\212\347\275GA?\274\216\242\033<\211\244\331\275]\216\n>\320 \341\275\215S\234=\226\2509\276\\\352\374\270,\036p\276F\217\262=\245\212\033\276\320a\033\275\305\'\266=v\215G=\253<L>\000\'\375<<\202\236\274\031tR\275\230\211T<\227\225\241\275k\204\034\275\333Al=\220\251\216\271/\2718\274{n\\<\347\346\203\274\333!@=l\346\037=U\030\002\275\375\351\306;\333]\320=DK\314\274J\304\265=D\226\236\274\372U\271\274\004-\340\275\217\020\217\2742f\207=3\334\200=~\003\004=\021v\251<\276\023\005=\371\267F<\352\212r<\021\036r\274H\344\033=\236\252\230=\202\262\354;\244\245\221\274\016\004\247\274\243\271\211<}\370\233\275d\234E\273\0230\220=R6\035=\226\332\212<!\032\207<`\370\305<\276\216\327=Zw.=\240T\223\275\277\010\323\274N\005u=*s\226\274\354&\256=\t\330\244=\303\300\236\274z5n\275\244\336\t\274\023H\275=\354\336\327=\230\303\000=\314;\004> \220\036=\027A\202;\212\324\031=B[\201\274\376i7=Pm\025=\r\317\333<\271\327\023\275K\273\365\274-\027\274;\330r\363<[\2273<^\214\233\274@U,=\202h\210<\314\361E\273\214\342\204\2740(\031<\005\370`\274?\246\233;\334\340\274<\342\016\022\275\275\260\224<\346\352\3409*\r\315<\016\275(<P:\220\275\241\232\n=\216\322\374<#\262Y\275\353r\254\274\256\rc\275;\351\361<3A^<\205\313\210:\306A\232<<\344\211<\202\211\014\275T\'\217\273QI\271<\200H]\275\310>4<\304\377\211=L+\251\273)\242\215\275V\202t=}k\000\274\257-\277=\311\'\317<z\025\362=M\226\374\275\266\345\323<\221\264i=\244j\004\276\330@[\275\"\303\313=%a\254\272\2471\270\275\372\0328\275\333J<\275\002\236\356\275\354\216\360<6hU=2\250\356\275yZ)=\322\262\343=\242\367\301=\311\257\265=\006\t`\275\345\243\037\276\0350\000\276\232O\307\275\352\326\345\274$\216\305;\335[\220=\374\347\375<\001\210(\275\322\235\247=y-\033;L\355\351\274\037e\256\274!Vx\275`\335%\275\255\216\025\273mp\343;\331y\244=d\356\027=\201\000\364<\246\272\277<\235\215\254;\271\t\213\275\211\017J=\004a\n>)T\003\276\301\364\251\274d\324&= /\247=\317\n\005=\263\'Q\273\016\320\005= \306j<\217\241\224\2754\253\021<\260!\025=\026V\222\275d&c;\252]\327<=;\231\275\032\2368\275}r-<\216\377\236;\304\343S\274\231\266\014\275\365\351\000\275`\373\353\274\252\266\250\274\327\3728=\000\330b\275Y~\240=\\v\302\274\243\r\370\275\022\266\200=g+\224\275\214\251\000=\\\014\024>*\272\013\276\r\2374\275\260\375)=\340\341*\275T\207\'<\243\007\202\274\022\361\027=\263\177i=\240\325\235\275\362.O<\314m8>z\331F=E@\244\274\307jx<\315\300U\275\320\3702=|5\177\273\226\3601\274$\2260\2749\221\350<\367\027\272<i((<6\n\222<\026\342H<k-f\274\276\203\377\274$\211\241<\226\t\277=\321\010d\270_\351y=\360\026;\275n\246\246\275I\036\332=gg\252<\321*\375\272\"\013\252\2733\300s\275Qcw;\246\321\326\274\201S\211<?\352\252<\235\222\233<\370\021\243;\352\314\305\275\330!\016\276\306\373I\274Yr\225=9\016\013>q\207\205\275=#=\275\225z\335\275\201\316\211\275\257\237\'\276\t]\211\2759Q\334\272\255\\\025>\227\021\213=\307\016A\274\277d\364<\273e\374\275\262\376;>\205\022S\275\324$1\276\355\201\322=\264<\026>\334{e\274\030\310\250<\td\230\274$\021B\275g\013\265\275dn#\274W\257\221\274=\223;>\210%\223\275\274[\000>\307\250\246=\267\261\033\274R\232\325\275b\2326=\375\345\261=\337/.=\375\233\223;\007@N\274\020\007\234=5\263\332;r\"\013=\274\312\267\271\232\376\330<o\244\221\275\332\251\304\274\352\306\250\274\371\346\264=2\271<<K\216\022>LB\333\275-\202\212\275\311\026\327=E\007\3108SmM=\201HH\275\2634\202\274\223#\205<\375\'(\275\256\340G=+\337\317<\333t\021=`\231\264<T\340\227={\035\320:qn&<\267[+>0\005\202=!\253\215<d\311\211=\256\027\372=X\003\205=\022\217\366\275u\234\023<[\261s\275X\213\035<\010/\217=)S\243\275\374\013\241\274\025\317\222=\340\357\321=Fk\360=D\244\"\276\231\032B\275\311\321.><\025\305\273\322\\\002\275\317\271\214=wR\251<s\344\266=\253\214]\275\260\330\246\272,\235\274=\004\240\221=`\250\330\275+$O<T\300\364\272o\251\312<\320\354.=\272\335\325\274\361\202\215=F\n\330;\322\221\304\274K\027\217<\257\324Y\274\331\235\035=\267\374x=\256\257Z<\221\233\004\274\\\201\027<\2464\200\275\2659\265\274\343\355\'<\3455S\272\206\331\177<\037\215-\274f\275\205<\346+\366\274\351=\314\275R\354\324;\026V\305;\007\027\022=W\262\354<G\355\266<1\351\201<g\344\337<8fQ=foV\273\277,8:\372?\217<\013\027;\275\r\234\001=$\233i\276\177\002\032>\031\026H>=\243\247\274U\214\377\275\201\217\242\275y\226\325\274S\314d=\022YV\275\275\324\301=\224\230&\276s\3750\275C\r)=\327\207\261\273]0\271=ey\316\273\276\266\212\274R\210\304\275\240}\211\271\313\274g\275\373Z\256;\242\326\036=\261\362\240=(\007\004\276\251(.<\336y\037\276w\205o=f\251\217=A\230\002;\304\207;=\251\005\306=mE\232\274\230\334\326=q\267\272<-\373\354\274W\031L=\220\"\366\273|\301g=\237H\316=+\341\033=E\301@<Gn!=N\340\010\274\014\332\227\275B\'5<\374\220_=\021r\255<\275\361\033\275\375\023\365=\202\303\224\274d&\206=\303\343w=)\355\302=[SJ=Z\344!=\\\214\233<\232P\306=/8\027=\\\302|=\246{\024=Y)\264:\224X\222;cJ\007>\201\r\322\2733\271\230=\302^\341<\326\217\220=q\331\377\274_\377\224<\371\227\314=\240\227u>$7\340=1\346(<\240\233\272<\253@\220\274\344\217;\275/U\246=\227\026\221\273\033\265Q<X$)\274\003\353\230<g\231\332\274\352\274\017\275A\222\242\273@\367\276=^!e=\207R+=\035\374Z=\2701\321=/\363\202=\300_\000>A\330w;\005<J\274\257\004\205;}R\007\272-;%\274\364&\352\273!\220\020\2746j%\274\006\311\360\2744\207%=\230\361\326\274\277\231#\274~\004l\274\302\t\233<\354\347W<\035\227\235\274Qi\317\273\363H\200<\"\215\275:\312\217c<+{X\274\346\310\351\274\341,\273\274U\344\032\274\277\236\235\274\335w\270\274\263\033\223\272\320!\0019\214u\224\274a\240\364\274\025xu;\206\206\352\273\232%\300\274\346\237\2509\311\234\334;wv\332=X\351\303\275\370Y\251<B\000\200\2752Y\203\275\254\273G=\306 \002\276\341\300\371=3\032\330\274^\\\227\275\'\\\256\274\001`\361\275\033\240Y\275\354\204\032\276\262\\\220\271\215\314)\275\366\370\235=\351\325S=N\3021\275\370\240\261=7+\376\275\312+W\274R\242\227\275(c\026>\023z\235=M\227\033\275\024\310\314=Oo\316=\360`\346\274\374\226\032\274\030\274\303\274\264\313\014:\027Y\013\274y\273\004\274W\250\241\274\231\342D\274\244\215=\274\245\240_\275n\004\213=\255\214]\275\263\204\223\274\005\237\034\275v\237J<l\356\316<k\032\323\274\264\333l\274\214\010_=#Z-\275`L<=\320\002;\274\244\371\213\275\022\n\352\274\275Vk\275!\3769\275E\212\364\274\226p\014\272\214\217\215;\020\306\035\275J\253\207\275\230t\001\270\250@N;\271\345\235\274\271\017\006\275\220\014\013\272a8\202<\333\014\216\2744{o\275\233\223\020\274\315E\030\275P\300\237\275;\327k=\224\010\206\275\006\361\331\274\305\020N\275\253\310o<\013\232;=8\357\270\275\035\261+\275\014\240c=#*\350\274\'\215K=I\365G\275r\213\274\275\371q)\275\177\232\202<$D\203\275\267eU\275R\242\303\274\356J2<\032S>\275\033\271\212\275\355\025\356\274\307b\266=\267\373\023<A\346><*Q\027\275\022\241\215\273m\314d<x\215h\275\376\027\003\274\331\314\017<@5\022=%\370\377\274m\276\r<\003L\033;%\303o\274\204{\000\273\255\273\254\274_\006J=\320\344\300\274\343\200\255\274&\261\306<\375J@\275\232?/\275e\306\312<3\315\324<\376c\302\275\353\261S=BD\206<\263\304\247\274\025\n\264\274F\242\243<w%\210=\342\333\024\27456\263\274+\017\272=\025\211c\275\216)\200=\340\030\201\273y\353\274;\034\214\212\275\214\267\205<\350@\315=\233T\215\275\272\273\373\275\371\277\357=t\273F\275\320\014N\275I\353C\276D\356\026>\307uz=^\036E\276\013\225\207\275\242%\252<\377\312\305\275mbS=\240\312\325\275\200l\025\276\213\364\004>b\224-=\275\034\266\275\002g5\276b*\271\272\265,D>\220c\346\275\2457\006\276\305\303u\275\024\004\206;h\'\207<\365~i\274j\226\001=Z\231\357<\233\014+\275D\263\275\274^\022\207<x\342\250=\370\270\212\275\203\023\265<\362\253\306\274\367\220*=\3133\242=\345EJ\274\317\177\023=|\373\271\274a\027\315\274\363\035\004>\246\201\346\274j\302\201\275\315m\373<!G\237<\331\237O=\016\325j\274\017\354\253\274P\236\370\2748`\314\274\350\255D=\355\246\323=^B/<C\034A\275=\021\244\272\244P\251<`\017(\275\217\266r\275\306\227\003=g\022I\275\2314Q\274X\240\035=\313\230\232<\0172\263\275\2025\207\274\335\330\257\275s#\010\273\\\336\";\t\200\351\274\014\242\235=\220\257\350<\211\000\302\275\366I\357=\300x\305\275\021\351P\274?\2367=8B\346<\365F\234<A\352\371<S\310\210<\364\301\230\274\310>\371\274\2758k:\002\023\243=\247\347\223<\243\245\317\275t\270\224\274\377\2340\274m\331\024\275\253L\306\273\302\001\332<\336\330\374\274\244\265U\275`d\025=\331\372|\273Q\322\005\274\232\270\234\273\030\331\237\274x\3454\275\374(\2217f\026\230\274\020\311\030\275\252>\021=\001\222\273\274\376\032\304;\000\017\215<\217\302n\274\2676\014\273\327\255\031\275\017\026.\275>\201\243\274e\355\035\274\000\216\365\274<\350n\274\216Y\211\274\r\362>;\252\203\325\274\255\211\311;D\3206=<\253\354<\266\025\265\272\222\327\030>ToR<\033\270\037\276M\373\350=\347\224\034\276B\245\236\275\312\2443>X\317\254<\244\332\207\275<\300\n>\343\203\315=/\234\254\2757\240\352=c\310\t\276\213~\232\274\300\010\007>f(\013>{\020p\275FY\251;\311\027X=,\202\232=\343\343\001>\021[\026\276\"\214\234\272\331\300\266=c\263\017\276\"\254M>\n\3704\275l\276\037>C\302\210<\242\270w\274t\306\035\275\225\202\264\274\371\354\027=\006\302\245<\237w\266\275(\321\217=U\307\341\273\361\221\342=b\263\214\272\241\t2\274\317\353\222\274\321\244\034\2754\276\305;\262\006\255\275\266\000\226\274^]\370<\342\237 =\267\'m=\240\350\340=\243p\324=.\265l\275k\214\212=6~\325;\305\305~=(\243-\275\311LP\274[e\007\275PS)=\3321[\275\005\333\211=\024\330#=\034\t\235\274\234I\221\274E\376\265=\373\202\001=j\347\277<\352-\t\276\010\001M=\036^=\275\0275,>\365\341\030\273\030\036\222\274\247\265\232\275\'\271\356<d\004\003<\034Y\214\275\231\210\203\274\'-\177\275!\324\362<\344\343\213<?*%<\234v\355=J=n\275\336%\245<\327oi\275O\000\025<\037\213\230\275c?\212:\225|\225\274.$\322<\'\361\222\275(\202\231<\240\227\300\2747\366\244<?\216b<\244W@\274\357\266\246\274\204\026\356<\006\264\010=/\250e;m\262\336\274\370\240\255\273<\346\376\274\367\331\313\273\2236\261<>8\333\273\341\t~<\242\334\005=\233\367\307\274\356\177\357;\017\260\"\275E*\303:x8\313<\357\301\244\275\325\325D<R\300+<,\332\245;:\202\250\274kp\241\274\320\025\210<\257h%<\337\373\207\273\213kr\274_s\206<\347\312\016>\374\000\326=\321L\264=\372j\217\275b\rE\276s\035\241<\3732\303=y\227\243\275\363\363F=\373\342H=\024\035/>\357\365\273\275\361\314\336\272\213,\362\275>\360\30299\262\031>N\224Z=\350\016\345\275\201\353k\275\260\025\355=\303*]\276t\216x=\035K\376<U&\321<z\303B<\023\217B>\244G\310=\220\'\252\275\002T\330\272t\352\313\274\246\3674<dp\231=2\312\224:%\322\005=\024X\032=\274\324\251<\362Y`\275\352\007\030=H8\002=\250\313!\272\247\353\017\275\355\325f\274g\213\221\2750\322\365\273\016\364\001=\016\220\n\274\371\274\327<(\\\342\271\331\276\020\275{\201k\273+\t\030=u\275\016=\345\340\036=yZ\345\275\305\320\035<\366\231\030;\303\213O\272\254\026]<t\240$\275\017\010\361<Ur\205<\221g\231\274\t\262\006\275\205(\211=\005D\345\274\277k =\217\\$=\371&\224\275\027\252\230\275\210\266(\274\rl\315<\021\025a=\364\221\253\275sG*=\342k\302\275]\034d\275\245B\020=\200\356\222\275\036\264z=\250\'6\275\000\337\265<7\005l\275w\010P\275\211\334\217=\351\260\r=d\r\022\276\247\245\007\274}\262\311\275\'\273\222\275\304l]<\026\237U\275\250\325\n=\261\004\000=\332\326\000\275\020\325A\275m\273\214=\'\245L\273#\221\361\272\346C\030<\324\3238=\334\370\320\274\242\026\237<U\255\005<\343\"Q\273\331n\303\273\003\357O=!p\243\274\306\373\221<G\244W<\274\256E=\036\362\271<\2237\222\274D$o<PdN=\247\240K\274}T\'=\344\004\223\274i\244\030\273$\341e\2745M\324;\270W\330:\211\346\237;\240l\370\273j\300_<\306\310C\273\217\255\223;\253\243\021;\310\300\361<\277\3624<\334\341\236=\nH:=\216\000\237=\341\025n=q\362\264=\000\345\t\2752\200\371<\\>\004\276\344\t\026\2759Y\315\275\027\r\n\276\256\271\215\2755\206O\274\277I\014\275\032\326\234=Y\221\320\275\270\365\274=Ws\006\276\232\342\210\275\034\303\356\274\260\254\271=xo\355=\004\334>=\001\245\206=\264(\335\275,\0239=W\314\207<~?\360=\006\226\240\275\312\207H<\310\013\027=\220\\E={\000\344\273\377D\301\274\031\200+=Ou\014\275\361!\177=\026k4<\227\326r<\216\374!\273\332ss=\346\235\035\274\\\024\036=\220\306u<b\r9<%y\202=\223v\016\274N\343\244=\0039\320=K_.=\341o\244=s\300h\274.~\017=1\215\255\274wO\303=\226\347\230=C\214\246<\341\363F\273a\033\277<\273\233\'\2752\214\200<\234\363\302<\304\033u=MCW=\265\305\275\274\346\262\357<\004\372\311\273T\3020\275Y\340\026=x\344{<\0269\370\274\221\245U\274\372E\307=~yh\275\256\242\307=8O8=T\247\246<)\202\235=A]\332\275\211m&\274\221\345\265=\311(8\274\266\310\250=\277\333\303<\266_G\274\\j\023\275M\336\305<\355h\263\274 \370\354<|uO\275*:\256<\276Y\210\274\247\0130<\371U*\275\tM,>\252\312\010\274\353\010\017\274\364Dd\2735\0059<d\375e\274\252-\033=\262\275\253\273\246?\203\274\326\251g\273\026\343\3619c4\017;|P@<[\251|\274\261m\225=\332/\016<\257\255\202<\306\264\370\273lf\204</\000\216;\216q_</\014\224\273U\302><;\275\265\273\340^\321;\007\326\022\273\377\335\267\273\203Z[<\200\005\225; S\270\274\226\320\305;\246\220\022<|\016\n;lPK\275\342\372\003\275z \n\276\270\023==\247s\202=\354\025\204<\250;\313\275#\373\335\275/n\r=H\016{= a\213\274\014\215\026\274\231g\002\276!\233\302<\270A\353\275{\240\"=Pp\374=7\321\236\275)\0338=\343\271\212\275\013\210\337\274Y\346\363=5\003\177=V\303\316=\273\326\215\275\2611\030\276xD =\304n\n<<\260\016=m\243\033\274\371\230\216\275\037\271\031=u\232\031\275fUG\274L\315B\274\036\221\305<\375$9\274\254\251\013=w\233\366\272\016\213\013\274.\211\201\2749 \342<1\370\021<\217\331_<\320\036\232\274\341l\221=R\301\016<\024\200&=\010\342L=\336\026X=@j\243\275t\014C=\251^==\025U\037=\010\270l\273O\3266\275\314\240\266;!V\027\274\023\300\242<<\345|;\013\315\333\274R\340E\274\226K\201<2\"v\272\254|G\274\205kz\274,c\203\273U\362\234=\342\220\307\274\211 Q=\362\205\234<\376\210\032\275H`\\\272y\246\300=\2330H<\263y\206=G\222\262\275\264\342\271=\352\310\376<4\317$<\246\270\222=\026\232D=\374T\026\275\272%D=\371\002\023=\36358=\243\'\310\273\344R\227<\027/E:?\300\032\275%GE\273d-\371\271v\005\250\273\277~ \275\270\311\235<\004A\225=\261\240\266;u\254}<s\365*;\3243\\\2756}^;\225\'X\275Za\021<\326.\200=\254\001(<\325@\020\275b\031i\274\244q\235\273\037yo<\006\2154=\234\253\016<\303\000\217\274\222\243\362<\252L\223;\010\313\356\273P\244\343\273v\301\005<\325\222\206<\316\325\352<\261\363<=W\200\244\274\240 5<}O\315\274\272ah;[\267\016;\005\353\005=\246\033\216\274Q\255\222<\265\376\362<q\255\276=\024\301\003>\336\036\037<\"z\350\275\260\376\375<\321\267m\275\306j\226\273hmK\276Ja\315\275\332<\356\274\025e\204\275R\245\235\275\211:\031>\266\n\216\275t\311\341=\026D\256=\225\021N\274\233\303\214=E;\226=\354\035\213=t\"\t\276<As\274\210\343\002\276@?->b\301\242\275\311\010U\275N\264S\275M\n\001>\r\264\014\275\250\026\027<\301\253=>\312$1=\270U\276<Rf_<\016\256\020\275\021\034\251;C\337\247\275\233o\266<\230Hr=\224\323\220<\'5:=\246\301\376\274]w\005\274Z\356!=\302\220\261=\275\255\374<J\035\317;\324JT<\324\2440<?\037\324=\221M1=k\313\033==\007\367<\322\324\027=<{\220=\t\362E\275O\314\360<\257\201\026\275\270\022\261;\213\344\366\274rg~=L\242.\275\352v\023=o\034\027=\006X\251<(\343\346<\006\334\212\275\205e,\274\202t\251\275\320%\263\273\024\253\227=\031\375\234<\356_\231;\037+\334\274\\!{\275\227\321\037=\224\033 =\350/(<_\004\376\274\267\372\275=p|\025;\340Y6=m\217\275;\200<B\275G\222\346<\352\2058=\202\363\320<\264\310\247\274\312f\262<\305\r\206\274\232\014\220<0Su\275\227<\234=b\230\251\274\204gi\275\001\215\265<k\254\316\274\232\273\355\274c,6=\325n\254<t\204\243\275^.\025\275\000\310\214<\377\241_\274\013F\026=\311^\232;\242q\205\274\237\376\037\275\037\273\241=T\"\300;\204\372\327\274Hr\264=3\232\340<\r\003\214=\234d\370< xe\274\010\204\007\274\236\tS\275<\210c\275\2518\017=\321\t\261\274x\035\323\273\347\347t\273/5\273\274\275\250\336\2744?\304\273\365\354o=I\356F\275tO\214\275\205\037\224=\331\301\352=s\351Y>b\234\027=q\364 \276\242(\230\275o\036\346\275\313uq=\006\347\205=\360\332\210\275-\007\003=\253\005 \276]\033i\276Gf\312\275\362\245\310=\330\233\303<\312\266\265<\255\214\024\276I,s=\327i\010\276\274\355\014>c\023\035\275\304\312\r>\324#\031\275\204\004\213<UP<>\r/\242\275\223\267*>\342>\271=\334\304x\274\007\345\244=&\241B\275\032\350\227\275\332\235=\275c.Z=\317\357n\274\236hw\275\020\366\252\2758\006j\274G\n\030=\354\207B<H\214\016\274\223\322\254\274\263\016\014<H\254\276<\000K\007=v\216\372<\255\031\234=\320X\376<BK<=\222C9<\262\315\201=\272\223|\275\320f\373=\207C\027<]o*\2758\241\215<\2565@\274\345,d\275|\231\245\275\347\261\332\273\212D\200\275P\004\331=K\0165\275j\021\013=LM\312=\257\331\335<y\377P\275V\031}\274\271f\331\273\321\240L\273\375\374*>\205\306\373<\004.\217<IN\016\276\201J\222=p\370\327\274\310:\347<\352O~9\\\325\005>\340\333\244=K}`=S\313\263\274\\\375\235\271\036\215\255\275H\2448>b\"\237=\006\220S\274\276\355\214\274\225\r\021\274\025\205\202\275\004\367_\275 4\233<\354\".\272J\306\017\273\236H9\273\2035\002<y\257\274\273\227\320`\273Y\237\303;\"\nJ<\241?\264\2735\216\371\274\237>\326=/\274\373\274\223\353\206\274\332\357\003\273\345\274r=\253\215\235<\315V\014\274\265\2021=\233\223\'=\225PA<\'\374\220<~\177>\274\2600\004\275l\354;\274\017\222\271<\031\226\271;\322S\224\274\2422w\273/\354|;\315\372\002\275\031\301\237\274\202\267\227;\207\277\\:\257a\305=\346\342\016\273\366\340y<\323\235L\275+5g\275\226Y\205=\020J\225\275\016?\'<ur\325<\367\036\251\275\311H\306\274\003\325\241\275\217\017z=sT\002>\237L\017\276\245\243\351\274\270\204\376=\344Ld\275\010\204L\275H\311\307\275\2570\266;|k\371\275\024\253\257=Q`3=2nk;\355\260<=\366,\325=\353R\222<Rk\227\275v\3226>t\361J=\272\360L\275\234{\217\274E\314\363\273\243[\302<\316a\333\274\224\277\r\274\037\037~\273\315\344\257<\372\306\254\274~\303i\275\260\200\265=l\0309\275\200\334U\274\321\023\310<\023\241\253=\311\330y<\231\261\340<\237 \252<n\374\275=]\031u\275N\021\n\274\003\227\300\274\024\313\242\275\010\364\207\274Z\326^<}R\020\272\255rP\275\3126\300\273\364\n\035<\330\364\212\275#~Y\275\242Z\244<\264G\'<\332\266\200\274!?\206\274\352+q\271\202\367_\275\350\275\351\274=]5\275-\330C=\227\263\r\2750\036\317\275\014\257\2449\321\242\241\275c\177:\275e\314\303\273\312\305A=\t\307\010=\201\265\207\275\002\213\323=K\323\202=\355UQ\275\376#\222\273\355\351\321\272\034\231\002\276\177\177\317\274z\233s=xW\003<\252\257s\275\177\010\346\2746z1<7\3131\275ru\210\275Qs\374<\330\362\352=B\314 =D\332B;\211\263\201=#\3107<\261\210\352<\214\260#\275\306\273.\274\344DO:\025\031R=\023\252C=t\000\017\274\245\315\003\274\324\351\344\273\037^\266\2745\2110;,\343\203:\000\'B=q\366\211\273\223\374C=\207vy\275\310w\003<\246\361\327=I)\373\274\205F\240\275\266D\315<-\227\031\274\347\017\364\273\217G<\274\225L)\274\221\3012=\314t\000;\334|\210=?\263\211<\353\023\027\275RU\000>\245$(\276\n\3637=\231)-\275Sd#>\271-\214=\314ZS\275D\017\323=V\005\214=\020\nJ\275\301\024\217=\353\237\001\276D\346@>\227\2368=D\246.>\307\343\245=s\'\336\275\305w \276D\225\301=w\313\206\275\374\023Q\275\033\215\031>\364\231\'=\256\362\251\275\006\257\231=\0360\"\276\017N\340=\354f\374\275\275f\304\273\024x\305<\257\311\221=\217\033\255<\222V\271\274\315TF\275\273\263\022=k\340\010=+q\031\273\225\177\010>e%\232=\343\035\345=\275\2167\275g5\322;\243\002\247=2@\210=S\004\233=\201\231\212\275\373\342\366\274\272\227\351;|\231$>z\232\236<GR\255\275\313\367>>\013\250 =\272Lk=\317(\n\275!b\026>\373\254\347;NO\254\273\236\033f=\030B\200=A6(<*\264\202\275\205\3134=\236i\274\272b\262.=\202\210\355=d\233\222=\346\211J=\363\364\025\274G9-=\221Q\017=\177\033\005<-\014*\275\363\320\252=\370\266\004>\206*)\275\343\333$\275\372~g\275\301\360\230\275/\363\303<\260\264\003>\221\244\256\275\370\324\033\275\350X8>\217\366\205\274\275Y\356\273\031d\305<!\177\375=\322\276\275<\240\371\026;\032]\214\275\022\215Z>[4\030=^\023\301\274"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\251\035\262</\303\313;\212\034\247;l\375\373<\226HC<\330\2475=3\267k=\227\030\371<,\300`=\275\357\033=\304\215D<l\317\230=Y\211\236=\256u\223=\\\267\356<\247Ns<\211+\232=\005\336\251=\277\t\366\274U7)<!G\210=}\r\350<\350\274\216\274\037\372R\273\344;n=\020\r\010=J\322\274<u\376\005=\261\234\226=x\034o=\004A\352<5=U=\277\231\t=\3127\016=\274\377\276<^\215\232\273\333\256}\274\377\262\037\275\324\334\037=5\364\267<TC]\275\366\235><:\353^<\274\034O\275\032@\256\2722Hf\272\334\177\201\273\320\350M\273k\256\001\272\t>\215<I:\177<\341n\014\274Z\371_\273<\3044<\215\224\n\275\226\\\250\273\374\202A\273,&\270<\305K\230\273\311\263\035=qi\207;\312\310Q\274S\232\323\272\233\3028=G\254\000>\023x\260;\231\350\214<\022\250p=\003\220\033=\337\315\246=eS\230=\213(X=\334p\265=\366K\325=\262\217F=\0222\262=Q\357\002>\001\255\255=P\t\274=4\217{=\217A\325=\n\217 >\372\334\271=\023\026\317<hd\371=\3758\244=\272@w;\235\320\372<`\372\221=\213\352\360=a\013\021=\340s^=Ma\312=\002R\023>MU6=\026;\244=Wa\252=\014o!\273\376\271\276<Z\236\202=\226\256\225=\317\024\260=\232\304\331=\206\261\374<u\320\211=\241\024\264=\324\246L=K\'\265=\353j\030>\274\356\211=p\207\214=D.\022=\227\316\256=\024\311\023>p\317A=}\270\'=\034\3337>\2610\263=\325\022\027\274\314\001\252=\372\033q=\007\362\005>Kr\254<8\303\004=H\202\022>[\306/>D\240\206=Zj\000>"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "split:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/Shape"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\250\016\224\266\313\247a:\350\372\036;F;j\264\177\216G\257{\361\2476\025!+9\367\306;8\016.\231\265U\231-\263\236\005\001:\030c]\262\\;\32472\266\3179aL\314\271T\267\202:\250\217]8\276e/:\267\335N:`-\005\264\303\033\350\256b&+\267\366\364\0108\346\226\235:B\363\0015\372U\"5\236T7\267\017\262}:\342\311\34130wS9\261\357\220:=\307\3569+\222\016\273\376c1=\2335\026\274\213N!;TE\0135v\2376:0ey\274\032;\374:\255\002a:=\327\032\270\332\217\313\2714\364\3369\365\365\001;\343o\220\274\207\320\3429\3644o\275\017*\030=`\275\241\273\365\302\004\274kE\267\274\326\305\033\265\324\215\265<\031\213c\271\t\035\246<\334<1\271V\256\311\273\346\000\217\272f\262\222\273\031z\246:\277\026\034=)\344\203\2756m\230\275|\354\243\030F\353\363\031s\267\266\030\323\2436\027\001\3704\230ng5\027\220\202\214\030\353%B\031\034\026\003\030\226\300\273\030\202k\256\226R\034\030\226@u\250\227v\214g\227\336\224\013\231X7\301\227y\335B\027t>\005\230\345\235\002\232 r]\227\341\307\325\027\372\325\207\0279\325 \232\263\321\214\030\342\215\034\231\240\031h\232\210\035\266\231\364\215\213\225h&#\030\373\211\022\2270\227\215\030\324\3742\0267\372\0318(\036|:v\375i:\335\246i\264\303\020\001.\320\245\3648^\27249q\3613\266\231 \205\265\221\361\2112;\305B:\220d\027\261@\210>8k\373\3649#R\027\272\203\204\207:\237\372[8\031b\2368\336\231A:\240\020z4.\312\352\256\006\346:\267:\005\3767\227\270p<m\301\\5D \3504\234\0174;N\024\310;\000g\2273\321\253X9\020\035\316;\241\027\3079\203\351\3626\023:`9\306\375\2008\265\321\036\262\364%\231-\001\262\215\265\320R\3167\265(\010\265\366\214\2534\311h\0302\220\032\3657\306\323\2140t\361]5\246\204\3158\3331\025\266\263-{9\256\n\r74o\2357\354M\3118\314\036\331\261sl$.@\366\2326\365\340\3606\026\212\2119s3\3163Xy\2535k\362\3775_\374#\271r*\2721\335v%8\370!m9\255\376\3408\226\"Z:\307\211\220\272\224\376\207:\032B\2077\247m\2354\365X\3127\225}\2009g\377\201\272\000\275 \265\010D\021\267\037\017\320\271\333\270\026\267\014\373\323\266\013f\212:\212\257\2259]{\177;\313\304U\273\376hI\272\022z\\\272\205\357\227\272\202}5\264\354\241\244:v\253\243\271\0149j:\255\274\0107W]\301\271\025#\245\271j-j\272\230\nT6\027\205\333:\313-2<L0\243\275.\264\t\2304\352\320\031\006\2053\027\321@\364\031f@\223\230\216\202\206\231\034#\025\230\220\261 \032\271\366\030\231\372\322\211\231^\354\004\231\022\211\260\027\002\226D\226Ip\210\227\340X,\227\231\261\217\027\\w\220\030z\025\270\226&\366\216\026a\001\342\227\340\253\366\230\205E\023\032Z\314\272\227\001\351\253\032\324\034B\027l[J\032\214;\234\230|\232%\0319\275 \027\262j\252\027\206n\272\227\203\327P\031\033\016\2236|\240p9\331\014@8\301\253D\262\370\237&-,\201\201\265\013\377W8_\307\0245^\203b4\341\350\220\261~M\2537\023\033H1\261\001s5.\351\3518YS\3534\001\031\2209\202P\n7\276+c7.\226\3138\243\027\3553\374\227)-\037\331\2037\353\003\3476nw\021:\347\235\0044\235\306\2615\016\317\007\267f\342\017\271\004_\3642\355j\"8\177B\2579\031\334\3328\262\221%:\375y\331:\316)-\272\225\342\220\264\301\330\2300\367\350\2108R\305\2349\366\261\331\271\'9\247\265\007}\251\263\254,\001<`\006\001\263\341-1\2706`):\212\223\221\273*f\342:\305\276\2458\326\341\177:\371go:\361\237\016\270u_\270\256\251\300\347\267\320Ne8\216\003\014;I@05&\347@5\243\026\236\267\215U\030:\243\310Z3\022\215\2639\352\223\005;\352ls:*\020\330<\245\303\255\274\036\017\217<\343T\020\273F6\0015/^\240:\336wA\274\251\303G\273\037\334\265\273KU\0019K\215.\274\235a\247;\313\202\277\273V\313s=\361\231C;\217y4\275\245\323(=\260\3102\274\262X\203\274<\373*\274\331\333\2145V\000?\275\317\263\205:\212\324\314<\034\256\037:\262t\352<\235\016\360\272\206\324*\274\017\342O\272\031\326\250\274\314\365@;\350\313\006>\301[\177\232\3344\300\231H\3649\230\332%\007\227\232\324\222\027\\\006l\227i.R\2300\t\217\030\177\320b\231\316uz\030\027;\021\030\344\327;\032x\341\337\230Yk\227\227*B\362\027\317G\311\031v\234\227\227\351\332\347\030Z\216\210\030p\224\006\031\205\232\000\031\306\251\246\230}_\264\227\366\000\202\031\000\t\335\030E-\205\027r0\207\031\356\021\231\031_~=\230\324\326X\030\343\246M\230\277v\302\030\355\264\2768\226\025\005;\253\303P;k\310\223\264\260\262^\257\337\270\3448\370C\3329T\366 \265\233\017\247\265i\361&\263\3712\307\272:\r\235\262:\274\222\271qB\3749\010\024\246\272W\233\000;\301\211\2418\023KU8a_\237:\341\022\3754`\220F\256\013F,\267\342=K8/\347G<\307\235[6I\312\0375\241\345\3479\371\0146\273\202!m2y\210\2579\236o\037<R\366\243:vS*7\001\354i9\300\331\2468\001\001\021\263\305\032\314-U1B5G)N\2675\215\3324H\361\271\264\003\001\2571\313h\2308v\240x1\000\312\3025\214O\3408bx86\\\230\2229q\001Q7\315\254>7\226\246\3718Z\n\3404\266u\032-\023\317\2016 u\2756:\315\2509\003\247q4\321\211\0376\205\262\3124\274+\3139$\355Q2\244\243\0258\233\336\2079S\211\0379tq\3619\201im:!Sw:,\t\3066=\031\2764-\305\3418\364\275\3649^N\324\271\332\222\222\267F\2144\267\316\251\262\271\352(\273\266\353g5\270\177\342\245\272W\234\2029%Qw;\026m\257\271\322o\375\271u\315\3549\377\332\240\272\315\226\221\264\026\212#:f\017i8\017\373\360\273\260*\2617\026\014\2479+\213a\271\264:\205\272\374\364&7[\346\010;\337\241\205<\022\360%=}\0223\031\220y\304\031\241\007\242\027\244\241s\032\220\260A\232\200\340N\025p\371\035\032\315P\215\230lE\024\026z\206F\030\314\022\330\027@s\007\030\022\004_\030\343\316\026\027Afk\031\270\306\"\030\221N\337\030\326[x\232o\331\372\230\373\330\226\227$\313\036\025\226\212\004\231\232a\036\030\312\354\023\231t\245S\026\225\033\351\030\315\236\020\032T\327B\226l\014a\227\265=\227\231\333\224\204\031\034Dc\031s\240\0077\001\374\2459x\307\2308\304$F\263\3215\326-\013K\2255\373\360\2028\253\365#\2653\002\257\264%L\254\261r\311\3767Y\347V1p\200\3065\304\035\0059S`\2236gP\3329\223\203y7)\230\1777K\374\3608\265\013\0225\357i\024-\372\270\3715\010\372\3716|\376\021:\202\241\2244y\371\02567\212\t\266\014\032\231\270\366\347;1\355j\0177\307\343\3039K\25659y\265\2756\231\214\0229NE{8$\0368\262\020\013\213-\262\217S\265\210\232\200\2666\312\3124\002_t\264\376M\203\260+\005\n8\253\363\2371\353\031\2455&\273\2168\254`|\265\357\361J9\r\254\031\266\262\007\0217y\326\0059\360$f\264\234\335\207-\310\214\244\266a\031\3556E>\2149\244s:4\031\031\0206\350\247\204\265\006>\3749u\014=2\252\\=7\001JW9g\177\0009\212T\027:\261\213;\272\210\334\204:\376\"*\270KE\2414\332\274\0248\226D\347\271ZkB\271.\263\200\267\025\254=\267\n\306\317\271B\227\023\267`v\\\267S\\$\2735r79!\341~\273\032\260\30497\376\363\271!N\010:\004Sl:\227AC\264\350O&;\023\361\243\272\215gF;\255\007\3737{\353%:JAJ\271\252\033\200\272\241\242\3507\324<X;c\301\250<\204\361\003>^\344\016\032\306\003o\030\244\0074\031\316Y\301\026\324\322\361\227a\246\346\027\t\254\035\227\022*p\231 \022U\231P\311\200\230\003U\255\230\2522\244\2301\235\034\031`FL\026\247\027\370\231\356\323\027\030\356\227\006\231\260k\201\226\031\263q\230\332\267\264\027\274\350C\032\t\242\365\030\365X:\2310\377}\22659Z\030\000\351k\230\300\"w\226b9\n\231\210R\302\030\274\204\370\026\\\252V\031\245C\007\230>\353@6\036\000L9\354,Q8m\210t2\344{\322-o\323\366\264\020bL8N\363\2074y\033\025\264\"\276A2N\230\2677\000AG1\030\253\2465\302(\2658/\234\226\265\351\260\2149[\032G\266^<\2576B\207\0009f\002\007\264\355\301o,\034\305\002\266\013-\3056\337U%:\241\264S4)\32026\373A\234\266E\027\3319\327\202\2562O\242\2417\210\304\2719\331:\0169Z\360\275\266H\211\0369\257d\0048\370\217\3113h\357\376,\271\343\223\266\270\343s8\215\357\263\265H\010\3045B&Z2\264\36797W\273\2171\324\200`5\324\313\2358\315\206\332\266\3176m9\322\220\3516#\007K6>\200\0069B{\0353\340\233\241.6\202L\267\212>\03270Ba9\\\320\2034\220\343\0136n\214\26069DE92\336\2313\036\"\3527\272\r`9\2528\2038k\242m9-\003\314:\364\303b:\334u\371\267\300\202\0065\356C\t\271\316%\317\271%\351_\271\245\363\2218\007V1\267\204\203E\271Y\261\002\267\000A\356\267\264\322\006\271<\324\3428\202\021\024\274cyj:8\373R\272\306\350>\272.\301\01086\253\262\264~\311n\271\242\266\235\2674\352d\273>\362\2178w\343\004\271\264\361\234\271\3153\361\271z\205\0317\177B\027\272\354\2601\274#^\234\270\276Nb\027\003\215&\2305\366\242\030\215\313<\230\367\226\253\231\201\321J\231mZB\027\027\216u\227\ry\034\031\262F\022\2272\321\036\227\232u\022\230p\227\"\231\254V\311\225FH\331\230S\034\231\030\"e\217\032\250L\033\027\340\315\304\2265CZ\031\024)\276\027(\374\201\226\315\013\016\227\363\200\336\230\204\316l\031\325\367\241\027H/:\230\020@?\225\311\245\002\032\340\374$\031\206)\373\226\212\370w\227\032d\307\266%\036\03691\247\2237^\177\2063\230\225\221-%\333\222\266\212!\2676\t\331\2745n\022\3615\257`\23129\035\0057`/\0351\256\204b5\232\271\2328\n\361\310\266\\\242e9\214{\3726\0258q6$\361\0019d\372 5s/\234.\025\216\2567\212\03317\370\000\3219\324N\2644(Q\0266\336MF\267\357J\n9\177\326@3v\251\3107\265M\3079)\034\205\267\020\256\251\265\315\23316\236\027&\266\232\264P0\347\315\271+\001\'\2004\363\313\354\266\300\317\0273(y!\262j\207\036\257\220\221\335\262\200\002#\257\353\243\2663\216\242 6\241\026k\264m\037\2147\327,\0365\254\203\375\265\233\250\2656\006\265V3\017\"\217+:3\332\264ux\0175\327\271\201\266\206\335O1g\222\2654\225\222\222\265|C\376\265\014\275\203\260\247\230\030\266{\210\3556\254\225\3236\214.%\267n\231\30184!\"\270\006\224\374\263\014E\027\261WZE6\376K*8\246\320\0007\017\276p6\030xJ5\210\252\2167\002/\2103Yd\217\266*ls\270\346G\272\267\222G\022\271\237\263\3257\"\34758\244\237\0039y\255Q6ja\32019\202\3677=\206\2577_\032g\271:\217\2565\223\266\2676\206\215c8^,\3057\225\272\2145\307\244[\270\2642\217\270\014\232\0278Q\327\223\227H\232\204\226\211\014\232\030\'\223\345\230`\2555\224]Q\031\227/\227\362\230\021\033\353\026R\214\026\232\220\303\264\026\220 \351\227\262\212}\2268J\311\227\306|O\231\n\rr\030HC\033\030W\222s\230\265;\n\032\214\241^\226\004\010\"\031\006\020\205\230\245.\017\227\326\002\212\230\331\252V\227\242%\356\031\002@\370\027\304\246\223\231\376|,\030>\356\217\230\266\254\250\227&$V\231\312\n~\027\371p\307\265C\037\2506z\370\352\265\301\254=1G3\036\254D\364\2004\317M\371\266\013\355\"3R\027L\263-\020S\260_R{\264O6\034\2570\334J3[\256*6\311\316\262\264/*v7\004\325\2103Z>\200\265q\274\2636\2651}3\305\203\245*\350Q\340\264\016c\3174\306\222\2476\\]\3052\303Q\2304\326\351#\265M]C\266\300`<..\322\256\265\264\370\2017\221\221-7q\253\n8\343\230\2359L>\2739\312\005\2553\330s\020.G\221\2445\260o+8\010\272\2366@K#\260\034\364O\262CE\177:9pq\261?q\3205I\344\0329\276=\2427\014z\3369\277\370\347\265\360\274\2028Dc>9@5\375\266\246N\246,y\322\233\266\004\021\3166\317\271\3139\352\206\2464\032\t\0206A\353\202\265\343\207\324:L\310\3242\325\277\0048\211\377|9$\247o9\277U{;KM)\274A_n;8\334\302\271h$\3753r\321\2159\n\237\332\270\017\362 \272\310\217$\266\333`\240\267\025\177\330\272CX\252\270\005\253\3367+\362\246\273\306\205d:\315t\000<\"\372\311\272m?\206\272\354\330K:\231\r\360:q\324\2354C\206\374;\r\240f:W\033\017<I\305\"\270\213\330\211\272]9\376\271\251\016V\273\247\305,8y*\337;\246\266\031\273)l\232\273h\342\266\030\264I\377\026\352\305\244\027\024\213\300\225\211\246\266\030\275\305\002\232\266X\001\2310\245\316\031\265iM\2307\303u\030@\003$\030S\244\301\230\352*\232\226\222\371b\227\006m \027\207\227\236\026\036^\003\031\200fa\023\234\220#\230O}\032\232\\\317t\027\340\034\246\027\216W\202\230\t1\010\027vh\234\227<\202\010\226i\256\267\027\030\361\016\030\365\005\261\231\332\367\214\027{an\231\022\034O\031j\254\2737j\367\3139\r\206h9\311\211\2523\256&\227-\010\34476\326\231\0079Y\347\2126\360\036\00624\371\0032\313rE9\363\251\354\260\023\356\3715\\lR9\306\004\2107d\261\005:\2407\206\266U7\24372\377B9\310Z#\265\210\343E-\344\020\210\266M\004\3146\315\266\241:\357\302\2454\325G\0326\214\22197\333\204\036:\320\261\222\261\301\321\0058e\311\007:\372\246\2069\323\030\006:E\360\371:\035\257*;(z\234\263\034\334\216\265a\335\302\270yC\3559.\341\013;\313&\n5\r\362\311\263;\226\201\273\235\0072\263\313\251\004\271\026H\222:i\221r9/S\362:\261\021\25187\274\366;\227\204\241:\316@\236\271\305\250\245\261\031\251\025\267\234\371C8\3170\";\031^\245\264\251\031\343\266\"py\267bq\026;\350\3540\261\307\300\3229\324\253\320:\225\324\315:\026\262\216\274\317\316o\275\2637p<\360\007\321\273\273X\224\265\374\307$;\367<\005\275\211\321\306<\010c\024\273w\363\2648\211\331\245\274\256\336g\272\006\354\261;\360\324\241=\236\315\201;\360H\027=\205at\275\305\217@\2730C\000\275\215=\371<q\n\2716O/0\275\r\360\251\274,i\203=\035>\342:#\241\215\2745Z#\273\"c)\274\265\026b:\r\022 =J\202\275=\377\321\276=\024\202\303\025[\305\234\230\302 \305\030\0029E\032%\316\331\027\216\353P\227V!&\027\372%\252\227\310\332S\030\"z\362\225D\363\225\227\021\023k\230:\374\370\231\354\357\234\027\203\212\254\226\266\334\221\225O\314$\030\276\373B\026\206\023\221\227tr\340\026 \357\312\030\367\237\247\030\363\001\272\027\321_\013\2310\251\234\231\337^T\230 \206\234\230K_\270\230\216\001 \232\214\027\312\026~y\032\030\323:\221\027\220\374\2519E\366B;+td;\262\020\224\263\227\340\2642\\\007\235\271X\372v:\270E\2557\274\010o4p\333(\263EGx;\374\232\366\262@33\272\360z\013;Uh\327\273,8\004;\200\252\2448\003\303c9\034\321\315:\374\223\225\265\232|C\264$$~\267u\37708*\272\027\274\303d#\266\205w\354\266R\357\261\272}\266\n\274\260\024A2\006w\3259\346\320\000;\347\306\001;\217\374_\266k\337\001\267l\331D\264_!\261\2626\220b,\022rh5SRm\267b:J4\322\264\2161\250\347\0370\270\274\3246\363\361\3440+\354\3173\007\325\037\266\307O\3474KI)\267\\S\303\265s\235\030\267k\037J68\331Y4\205l),\237\207N\265:\005\306\263\032=\0168FK\312\262\231\337c\2634nY\265sQ\3406\264\314\010\262\200\335\300\265no\2526d\262R8\204\\k\267c\003\230\271\336\257\2418\250o76\256\367\255\263\242\177\3137\242\315\227\267\336,\263\2664\266\231\267\263\257\3636\367L\305\270>9\225\265>\257z7\347\0257\272D\213\2277\342\362\2639\342k\306\267\245DX9)\217n7\204\242s7\250\014\2473\355f\2139Q\374\0019}\\;\272\022\031\024\270@\r\21475\266\2508\232\263\247\270_h\2505=5\205\270\200\260\r\272\007=\266\274\027?\241\030f\347\021\030\331\321\200\027\354\243\254\230\333\232\214\2302\233\331\030\331\334\217\227\350\360|\226\026\264\347\230\270\255/\031]\272\027\231\002\203\234\231\321\007\200\031\000\3205\030t~{\030\030\366\256\231\352\210\307\027\264\364\r\226Q\307l\032Q\243 \231{Q\223\032\001c\025\031\034\317\266\027\324FE\232x\365\267\227\020\351\021\026H9\215\230\177) \230\353:\331\030\006m\005\030\240\241\306\0309n\207\027Z5d\266\220\254\0265\3744M\266 \201\2761J\214\325*\233\243$5]sW\2670\311H\263\336\021\306\263\200\331\324\260\2765\2636\316f\263\257\216rh3\376\001\305\266i\250\3774\330#\3757\033I\300\265DP\355\266\002\331\201\266\275\361Y4\014p\220,bB\216\265o\317\214\264F\223W8\221\003_\263\215!c4\22168\266\252A\3766#\362B\260\243;\0306\321\242V8c\251x8\222:77\212=\2219\250\260\2628\001\276x\263\375\'\237-^\353\2604\356\20527\204v\3065hF\r\265\235\323\0322+\330\2328\215a\326/\356u\3565T\315\3738\032\241\377\265a4\2659A\244r7\363L\2137|!!9\270\314_\264X\333R,\024&\0136\234}\0367d\322\3169\216\242S4\336I56M!\235\265U#\3766\207\326\0162\332\234-8\2118\2659V\272\3528\376\323f\272\306F\033\273\265\034\236:=?\'\265\341\301\3054|\311\2158(\322\323\272\334\305\234:(8\326\267\224x\217\267\034\247\001\272 S\215\267}\253\3676\333\026\006;\332\314b9d\341l\273\240\215?\273Dm\024\272@\213\3509\314\215a\273\310Di\264)\227\236\272\231m\033\272\036\321\"\274\356\336*8q\226\240\272\335\246\220\271\264\244\220\272\214}\2627\260!\213:\262\375\n=tM\371=\317\303D\230\n\t\343\230\257(U\027\027/\241\030\201T)\031\354\272\035\031}\325\327\225\250\261\315\225\323\267\257\027\003\334\013\031b\314\234\230\0338\231\031x\243^\031f\226!\030u\202\275\227.\327+\030\207\367|\230\320c\204\027\246\316\247\0262\303\236\232X\315M\026`\034\"\024\366<m\031\367\245\331\230oN\207\031\006e\200\030\243m\376\230\364\260\035\0315\215\212\227 \332\255\027\236\364\351\026\020\003\177\026w\330\0207\372\364\2579Wq\2178\345\177o\263p\266\234--\325\0025\000\370\2428N\354\352\264\266\330\231\264(-324\274\3237H\363\3241\256,\0036\343R\0269\204i\3155\216\226\3329\252%g7\376\333\2207\251\232\0329J\255\030\264\246\350\035\254VT\206\265\327\375 7\205MO:+\265\2424L\20206H \0167>\3503:\242;s0rS$8\027\014\002:!\265\3528\016[n\267W\205\0169\225M\331\267\214\276\262\263\344\366V.\214\355W\266\230)\342\265\037\024N\270\244z\374\264\241\034\300\262B>\223\267\021v\3561\232k66n\\\3418f3\2009x\312\3329\342\374\2216>o\262\270~8\3129\253\000\3705\n\215(.\236D/\270\030\344\0008S\221\2019}1\2135\224\032\0007\247\370\302\266\313\273\272\272\005\177{3\035\024\356\267\376\367\3229*J\2428Y(\214\270\243\016\340;g\017\001\2705\204\241\272\342dR6`C\2319\265\231\226:\022L\227:B`\005:V\320\306\267o\215d:\'6\007\267Z\371\2529?$\032\274\3079\205\272\346e7\274\365\372\004<bWC8\271\346\356<\305\227\305<\251\230\371\265\213\037\254<K@\030<\364\247\265\274\231\372N<\275\365[\272:\354\2518\217\265T8\271ti8G*\026<[^\337\273S\036\n\275\033\324\367\227G\277H\227\203g\374\230[?\033\230l[\234\230\23541\227S\202\274\230\'U\257\232%\221\276\230)\014\003\231\204j#\030[\342\230\030\215%\273\2279L\373\030\331i\356\030\260bC\230J=\024\231\032d\252\230\001{\206\027\\\034U\031\235\267\"\230$\376\027\032j\214\035\030\030\203\234\031Te\002\030\025\2324\232\357\0051\030\306}\020\227\026\320\274\226\242\316\r\226\014\r\220\226SK\363\031H\372\204\267\rE\r9\240\021\334\270\226\217\251\261\017\204\'.F\006\247\265\300\223\225\270\320##\265\034\225\340\262\2262\213\262c[t8y\267\3541\264\264\'6+\022\01093y\002;\216\037\3539v[f6AF\242\267\2278\22394B\2414\273#\354,i\247\264\267m3\3507-\300\020:+\02076\307\220\3706\361\322^\271\177\251)\270w\\j3\300\003\241\267)hh:\211#V8\232\215\2346\200\314\3017\272@h7$\200\3212m\325&\255\343`\0045\362\324r7\212\220\24555\266U\263\"\341c0\333b\01770\026W\260\324nw3\376?\3465\343@\0355\374\034z7\200\342\275\265\300\22572\236\355a6\314\314g\262\025Y\250\253\324%\3705\230\254\0374e\376\0337\017\337\2132\255\335\0005-\\\3154iU\2057\230\35153,9z7\005_\271\266\315+=8|\031s\266\214\221\363\271\032\016v9\320\014Z\264\003H\322\262\227\347E8c{\313\271\212\335\305\270a;\200\267\250\323i4\375\2639\271F\344\004\265\300 \3226\007k\2028\364\361I8\236\3112:2\256\004\270m\222?9\207#\2509\364\270i6\227\335\0224\255\367\016\270\321\364\024\270\251\035\2629\261\014N\267\203|\2715\034Q\227\267P\250D\271_wU6T\236\323\267\251\2438:8\241\325<|\230\260\230\002\006\222\230\310O{\227\307\377\214\230\231\3503\230dYB\226\3719+\031\330\004\200\227<\356\263\027f\373\032\230L\016\221\227\227FO\027\330\337\335\226\254\300t\027\236*\237\027\007V\346\026/\\\237\230\310\226\324\027?\240\276\027j\036C\031\032$\304\027\001\3738\230\306\230\223\227\376\345\217\025\343\201\313\026\2504\034\030\2107\367\025\230\367$\231U|\233\2318\226<\227\243\223\354\027\037\321\364\230\334E\2566\302\337\2367l\324n7[\226\0032\261+\232,\032I\0345\307\205%7\272a\212\263g\002}4\234\243\005\261\037W\3606rpK\260l\017\2323\2040\0256Q\257.4N,\3577\322Ka6J\"\227\2654+b6\211y\2573O\252\007,;U\3175\270/S3S\n\2317\205\213\\3Wk\2614\363`\220\265\354\301C7\275\375\025/\350\360/7\214\360\2376\034\222W8\245vc8\'\241.:\030\013\367:\3050\262\262|\330d,\363\347\0207\005\306)9\323t\\\271uu\0065\226d\034\263\334\337\206\272\025w\241\261\237\264\311\267\201\304\3149mZ\364\271\277\277L:tS\0218\316T&:\301\266(:\307O\246\267\010)3\256\301\t\2175\211\372\2237s\334\205:\206\n04\236\310\310\264\363\017g\266\264\216\001;i\023\2201\354Y49i\341\031:\364z7:\264@\344\272\n\260\214\274/\237\203;\311\347\201\272\235\256\025\265\177MA:\026\327\301;\331z\211\272\266\2017\273\t\217\326\267\263E\202\273\006*\251:t:\026\271\310\224\216<\247S\227:\023\3717=\3102\314\274G\n\3229Y\315\322\273H2\010<\376\316y5\246\033\036;\r\031)<\345 >\273\314\344\364\272\243`+<\316\235}\272\340b\320\273\233\013\035\273\316:\336\274Q\321\034\275O\020\206\275\n\022\366\227\254\344\326\026\310\205\261\2260b#\031\206\303\334\227\371\201\320\231\233U\260\032\241\330\203\230\177oS\031\036\006+\227\204\237\375\026\243\026\001\030\360\201\302\027\206\311\226\027\322K8\232\232\364Y\027H\013\301\230\035\'\003\030\326\033\275\261@\265\270\225v\347\330\031\010[\374\030\370\211\213\030\244\371\200\027AF\323\030\370\200W\0323\235\226\230\277w\356\030tK\261\227\367\177\010\032\004\211\355\027\374\014\306\230\244$R8bA\\:\333\276\3279\205\336\256\262\017B$\255\024Z\221\266{\314u9\240\231b6\324\002o3\374\220\022\260\201*\3469\236\211\0221\304\250\345\270\260N\016:5.k\272\253\313\210:\001\032\0168\367|\3507\312\'\027:F\246\2154:\322E/\345i\037\266\342\274\2277tQ\252;\320b_3U\224\001\265\034aK9\265\350c<\376x?2~U-9\035\362\265:\212\262j:\340[w\266\236\005\3668P\244\2077Nj\2243\211\310\221-\267vd\266\350\177\341\265\241\300\007\265T\363B5\222\2075\260\355\243U7\305\250\3140\346\234\2365\217\377\2148\007\010\215\266;\251g92\223\0075r\223\r6\026q.9\007x\343\264\301]\217-G1`\267\376\250\0177\210&\2029~9\3064\2353U6\213#\014\266b=\010\272\305\354\0072%\356\3026MI}9\r\251\3078\273\210\2249\202\330\276:\261\204\021:`\306\257\267\342\367\3214\316U\225\270i\034\253\271\372\"\256\270\343\014\2158I\177\031\267\003\371\315\270\342\247\016\267\324\352P\270\265T\352\273\330\000H8\3525a\272\014\001\362:\310\242\030\272\002\206\2568\006%\017\272\"\n\025\265\373\346D;>A\363:\036\317\027\274\373\016x8zh\202:\345\2670\271\256}\"\272\233\226\3147\227\212\020:\271\026\201\272h{9\275\034\372w\025\374\306\212\030\016f\345\226\266\216\272\030\262)|\027\351j=\032O\262V\030.\246G\230\357\315\\\230\034]\357\031E\373\030\227[,2\227\\\203\334\027\230\231\036\226m\306\333\030NX\225\227p\321\312\227\227\222j\227\010\345(\231\230\314F\030e\332\253\230\034[\323\026\227\306\001\231\206\302\206\031:\215k\255\"B\367\226U\'\250\230k\363\244\231bb%\230\235\266\364\027\332\331\r\232\014\212\201\231\306\261\305\266\326P(9v\37447aO&3\202<\345-\366\271Z\266\242\354\2325\240\316\2634^\\\2575+Bd2\334\321\3736s#\3001V\274\24153\355\2768\204\341u\267.\305\2029\274\357\220\263\302\310u\265\364\231\'90\250\210\262\245\3001-\3701\"6\002E\r7\227\010Q:\254\226\3044\001<V6\001\223\203\267}\003Q9\376\346I3\264J\3126Gd\3149\333c\3018\311\023\275\270_R\034:\223\303<:\320\271\216\264\3022\231\263k1V\267\227\014\205\267\217\232@9,\243Q\266\346-\215\263\024J\236\272\2667R1f`\3024\244\272\3659\223\205\265:R\256\230:Z\233\0358\366\341\332\272|d\213:\2504/6=\300i\262$\256J:\000\n\3208a\241\223:\323\334\3435<\351\"7\255o\227\267\2551J\274QX\t4\322;\3268\337\212\232:\351$\2339\210\344Q;,\2503=\r\365\210:\330\310`\271\354$\2467\341V\365\266/\300\007<9\001\376;=\312\227\272>G\2458\267\rN;\263k<8l?\373\273\372\222m\274\254\222\375\272\347\225&\275\036m\311\273\361\022F\272\222\376E=\235\013\332;\267\265\027\267G\177\267\274jj\216:\302\215\n\275\341\272\341\273\222\004<<&\337\027\2720\177\343\272\021\236\027:A\2546;}\376\317\275\262:\032\276\001X5\230\235\017\273\027\227\357&\232\306\333\020\231\375Y\252\030\022\250\341\026~\314\245\027\214\245\311\026v\223*\030t\244\216\030\000W\250\030*\335\031\030\34508\230\3148\200\026\300%\350\227\204\327\020\230Q\027\211\230\205{\000\227\235\212\251\031\251\352V\030~p\336\030N|\222\227\362og\026Pq\344\227\320\212\350\027 KK\026O\251\030\032\030\236,\226\371d\375\227\276\346r\232\221\220S\032j\317\030\026\177C\256\267\342\2245:\010~\255\2717Xw\264\0138\366.\237@\205\270\361\273\2067Ma\236\2650\252\344\265%\231o\263\037\203\231\272\214\340\3571M\201\r7\241\031\024:\033Em\273\035I\266:I\230(8R\264\2447\016hW:\303mS5\337n\2410\333}\330\267$\346\2178\326\366N:\244\230\3455A\"!7g;b\272\352.\3528\035e\2143jL>9\311/\022;J\235\2229\330)\033\266$)\232\270:\034\024\270\332\223\3222\216\233\007,kVF\265-l\002\267\371\260\3525\341\266\0354h\362,\261\2570\2015\031\240*\260\037\333\024\262 \366\033\270\307\220\216\266\303\243\274\270\204s\334\266b\222\242\267:\341\0007R`\255\265\270\371\326,\014<\004\267\306M^\265\214\355W\270s\033/4;Oi5\346\31675F\323\247\266\323\361d1\365\343B\270\004\'\241\270\344X\372\267(N\324\270\247\301z\272\353\341E\271T\351\020\266\343\007\322\263\351\370\006\270\257\tl\272\307_\217\2708=\2567\345\375\2746\0040\2464\322y\0375\322\335\333\267\335g\2449\342\326\016\271\346f\2249<\014\220\270\021\312\3619\030F\2449\023J\3706;\033\2052nh1\273\237\264:\270\267\031\2249Z^\260\265\255\231\2626\222w\3337\035\301-9\257\203\0047\352&\2109\n\201\010;i*D=H\306\366\227\350\317\340\030 \005\005\030jz\004\031y\253e\030\224\202`\230\210\026\272\227q\264D\232%.\257\026\3348\305\030xp\025\031\253\216\034\227\237\335\305\031\267K\002\227\373\245\024\230.\240\373\026\200\372I\225\264H\332\227\t\335\242\230^\227f\227@t^\230\250\004\351\227p5w\026\223\014\024\231.!\244\026Z\036\010\231\364\241*\227Yp\202\231\303,\211\031\313r\036\032\217\262\373\227\304kA\230\350z\3645)\252\304\270$\342.\270_\313\\3u&_\254a\271I\2658\361&\270\233 \3165\255\223\3113\320\214\335\257K\334\264\266\212\346\256\260\020<\2032\355xX\2703ET\266\350l\246\270\372D\334\266 hp\266Y]\3736\006\246b\265\"P\302,\000\211\236\266N\013\322\265\207T\314\266\r\320[4\3209N5\255\323\234\266\026\356v6\200\340\2540/\177B\270\374\276\242\270{\365\356\267\275\313\2266h[\0268t\354L8\334\241\0322\365\267\264+X\241y5\321v\3215\361\001\0036\374\362\0274\362vv\260\027\200\2327\364)\014\261\274\247\2043\037\266\0366\305\252K6\267\345l8R1\301\266/\24616\234\206\3616\002\031\006\265\316U\234,\232\305-5\313\214\0145\363\226*7\366x#\262\222,\262\263\334\20554\253\351\2308/\"\3272eH\227\265\326\030\270\267.>.7\205\321\2539C_\243\272y\275\3479\213\261\2506\273\003\"\264\244\035[8-\335\265\272H,n\271\241\311Y\270x\226+6\'b\324\271J\275\364\265\365|(8~\312F:KR\3178*2\333:\025Yq\271\007\346\356\270U\025\310\271\307u\253\267K\271\3403r\013\243\271Y\035d\271d\024\223:}\025D\270\360\177\021\271KT;87\032\017\272\230\247t\266\345\373\3209\2038\376;(,S\275\267\177\247\032\223\323\205\230\320\326\320\231\216\3506\027Kb\365\227`\365\354\024\340\254\274\024 \375\257\230F\346\312\026<\215\371\2266VU\231\010kL\230\260\n+\230\321\325\326\230\037\237\324\031\342g\362\031\210t\013\226\013\231\n\227\366>\177\032RJL\230\347\254\302\027\310\240\324\025\240\270o\025\204\007\215\026\227\022)\232nX\367\230]-\251\232u\224\363\231\224\275\215\230\230v\024\230J\275\326\030\334K\334\030\2540\0326b\243q8\371G$7\357\323\2022o\003l,\207S{5\r\016#6Hn\2505L%\r4\177S\357\260\244BL7=\225Q\260\205\332\2533\353\277R7\023*56\030]\0138{3\312\266\324*e\266\305,\0167\257\333!\265\246%\242,\216n\30757I.5\341\316\03198\345\357\262\024\211\2272\266\312K3F\272\3318]z\2400\334=\247\265h\332\2057\347m\034\267\242i\3334\241\364\2237\322\235\3045\317_@1,\321[,\010$?4jp\035\265Y\352\3613\254O!\263\260\263\037/\035\351!\265\213\024\207/\223\000\0364\037|\0327\"\210%2\035E\0238\302]p5\271\265\0034\013\002\2627\273\342\"2\340\232\034,1?g2\326H\2525\245p\3447\276\276\3653\314@25\034\321\332\263\242\307\0025\373\277*0\232\23075z\245\0008J\247\00476YC7\276\372C9\377\020\2078\3354M4\307Kt3{M\2466\333\026%8\021\210\026\267.\n\3206\310P\250\265\241\323,8?\376\345\263\210[\030\2678\213B\270\376\025\305\2671\261A\271\303\254\0138\177\'\240\267\037\n\2009H\354\0366`\355\031\262\356\365~7H\266\3377?G:\271z\304i7\263\003f7\240\357\2307\354A&\270\231nU5\236\326\255\267\271\023\314\270W\007\3636<\351\317\227<\231\215\227\304ZK\231\034\261\302\027\237\021c\030\272PT\230\214\365\022\230-\031\236\030\213\3265\030\370\030\021\030\374\255b\03285n\025\210b\231\232{\327\372\2264\r<\226\356<\377\227(\230\034\231%\315Z\230\323xl\031\336\345\'\031u\261=\031\322\201\235\030\270y\037\027F\206T\031\252Uq\231#\243\255\027h\347<\032\003\366`\231\233\320\326\030\3343\266\030\200z\260\032\205\353\344\227 SI5\261\330\2367\r9\2155\217l\22718\016\366+\270\247\205\262\240\250n\265\233d\2523L\375r\263\273\217c/\241t*\265\202\363\275/\226\27694k?\0337o\006\2351s\227\0178W\002J5\036\274\221\264\367/\2507\261\201\2202\334\235\001,\265\324\0054zG\2475o\256\3457\362\326\2653BSD5.F\316\263B\244\024\263Y\203`0\275L55E0\0138\270\032\257\265#\3316\267\363:\0019\252F0\264I\177\247\263\002\263\007.\334\307\327\265\207GQ\27029/6%\3262\2656Q\254\262\314q\204\270\301\222\3261\034\337.6\345\216\2278\215\247s8\267\335\3479{\201b6\253\'x\270jj\2219i\356\2616\036CI\255TH\022\270\331o\2107\333\230\2059~\366J5\324\220\3116MF\'\267\334H\032\272\316\334\226\261\274\251/\270\364\373\2729\356\252\2079\321:\007\2716\254/<8\256\0369\211dv\272s#8\264\327.l9I\223\276;\372\'\367\270\215\355`9!\3507\267\034\320$9\230\246a\267V\235t\271\205\031\r\274|Q\022\272p\372\364\273\227\224%<\260x#:\254\227\003<e(I<\304\n\336\264\340\254K\274\261*R;\376\315\261\274S\211F:\n\215\r;\321\000\2149K\245&\271T\006\2218C\\}\274-\226\232\274\016\257\201=hF\222\026\242(4\030Poi\030x\203W\231\016AK\027\032\315\310\227,\262\344\025\254+\276\027\332\340N\027\321\242\212\030$\255q\226@]\217\223\316\3624\230\nw\200\030\273/;\032\1777\'\030\3268\374\031%\233w\230\2400\n\231\3607\236\026\334\3742\227\r\216\241\230_\221\001\030\346\234\263\227\000\273I\023\264j\276\031\n\003\035\026 n\020\027^\232F\032t7\260\226\254\023\243\230@IT\025\273R[\267.UU9\260V\276\2673s\211\263!\020\033.\323\376L\265h\313L\270D1\2125\363\201\215\265\rFY\262K\236\2537\246bv1j\231\"6\007\273\3058\n\351\036;\210\343\036:D\217\2366\224~\016\270\262Mh9E\376O3\005\271;\255\310\260\252\267\030\207\1777\272Ax:\363\003\3335\232f\3266\222W\374\267\3344W\270I\320\231\262\237\216>\270oS\200:9\023\2339\246\000O7\336\346K:@l\261:\275\265\273\263\271G\231.\026\035\2636N\233\3778hj\001\270\t]\262\265\255$T\263\373\275\307:h\025\0200\307\202C4W\251\3709\346\306\227:\202s\217:+\33718\030\362\301\272[.N:\313\213H5t\177a\256\330\301g8\013\331C8\312T\242:,\016\1775\361\314\3136\023\357\355\266/\245\016\274\252 \0233\014\021\'92i}:\306\342\3259A\322\036;\237\355\211\273\267\253\016<W\2556;\224\320\0245r\272\211:i\225f<\212\3729\274\330\2339;H\250\320\270\364\342\227\273B\334:\272\317\327\007;\267\327\017\275\310A\0019{m\227\273Q\267\231\272\315y\003\273\022=\035<\027\324\031\273\020\257\0034A\216B<\035\313\315<\344D\021\275\\\303\r;\254g\361\273\261\247L\272\371\270\261\273\263\027\360\271\034KW\273\017\267\330\274\310k\005>\230\002\272\027\272\023]\230x\264\304\030 4\321\027p\375\261\232\033g\262\032\200+4\031\020H\"\031l\207\t\230\271\240\304\027\203\022\375\230g\353P\227\334\310\252\0278A\213\227\370\273\264\030r*=\031\nm\365\230\024\2407\226|1\201\230\272-\255\231~\235\002\231)\241\"\227\033\345x\030/\0206\030\222\244D\231\204\\\002\230%\240`\031\350\260\210\230\334q#\2303\3300\227>y\247\230c?\343\230z\255\3367\361\002g:\023\217#:8*\275\263ivU.7\220\350\266\361\365/9\032w\0356\352|\262\265\363y\007\263\334\335f8\007\322\2301\243\271\2577\233+\t:\265=\247:\020q\275:^\26718\360\331\0368\326\026C:A>\0344\026\274K\256\236Wa\266\316t\"8\204\314\376;\215(z\265\005\200\3236\363+\271\272o\327m;n\030\3441\262\246$9\272\213\376:M\235\004:\270\315\2726\220\177\3418_9~7X\013\2102yZ\221-\226WE5\"V\0078I\231\0075|`\21349K!1\347-\01669\03100p\36055\236\27218\250\250H5_@ 9\240\216\2116\016\376\201\265\357c\2058=BV4\004\016\016-\207\257\261\264\276\244\3276C\007\0139\010\344@4,\301\0216f\320\n6\225\307\2267\245\256\3252\225,v5J\027\0169z\212\2127\215[*8\233Q\3239\236\320S9\270U\3555\340PL3\321\362m8\374\353u\267\342\316\235\270\344;$7`\364\216\266\245=\221\267v\335Q\265<\377\321\267\007\326\224\271\307\203\322\267\332\026\004\272)\202\2049I\035\307\270\003\355m:\372/x9?\273\002\263\346\245\276\272\032K\32581\344c\272I_\3227a\354\2178\272\214t\2705\251J\271%\326\2136\266|=\270 \373\2529y\272\235<\324\260S\230\311\017\233\230\375\240Q\227\214\t\226\230\333\262W\027]G\213\027\357\375\264\231\356-\013\230\354\272\323\226Z\037\005\0316\362\324\231v\177\037\230\206*T\231\3269\016\231\310lA\231\370]~\026\220\001\303\026Q=\220\230\"nU\227\036\035\322\226\323\203\204\231s\353\253\027\222\200d\230\224\301\372\025\261\2168\227\312P\267\031\007oF\030\334\005\217\027\037/k\030`bC\225!\007&\031\253\317h\231\\S\0017D\361\3428{\220w7\256Mh1P\352\203-:m65f\006\2637\265\026\0035\352\315g4\244x\2050\323[\0206\332$\3170nA35\241/B8\201\336J5,\31649a\345\2336\323B\0367\034\240\2048@\002\0364\320\301\014-\240$]6\351\220\3266\214)\0249K\366\2644\316)\3065\000&\010\266\236\252\2577\350\'{0\247[\0165\315\221*9 \234\256\265\027\264\2777\362\037\035:\205]\246:p\316\t\264\372\241\"-\372D\2026\272\314\0259\306\345\207\270\364#\263\264PU\235\262\252:3\272}M`\2629\351\3674\237\261\2139x\247\322\272~\3510:\305\247\0038\025v\003;\332d\3529|\324\367\264\363\321\312\256\016p8\267\242\034\2267\023]W:\242\024\3513\312\270n\265y\035\014\267\225\204\021;\274\220\2313\243\037\03290wC:\304f\2559\237@T<7p\221\274\312\350\257\272\237\270\231\270\362\352\3064\202\250\2619\013\201\366\273\356YB\273*\216\0008\2754\317\267\315\367\n;\245o6\272\371\016\2368uE\272:\372\000c:\366\272!=re};\340\327\316\272P\3524\274i\034\314\2749G\366\263\316E\201\274D\264\255\273]2\356<}\370(\271\275\216\004\273F{\214\272\026\003\223\273\272P\200\272\215\020\330<XwR\273\360\307\311\275\362\355q\030\362~\366\225\253\344\250\230\037Q\242\030\377\304N\027\302\203\374\227\361\240(\230\032\374\202\030\002w\000\232:\021\272\227\226\355\025\031\2268<\027\020\252\326\225t\307\272\231]\205<\232\037}\002\032\003\324$\027\002\326\024\030`7B\230^\224\004\230b\275}\2275^\236\231\236\240\034\030\356Y)\230\020\327\023\027\364\325\263\227)W\343\227\210g\347\027\272\217\005\026\270\334\003\025\210Q\341\230x\276W\031\3312\31376]+:\323\216\206\270\242_\022\264\236W\320\254\026+N7\222XM9)\332~\265\330\237\0225\340\314\2702\336H/6\351\304\262\261\361B\212\267\240j\2439J\277e:\3447):\307\234\00680D-8!\376\32795\225#\265k\233\320\256F\t\301\266X:\2127\336\250J;\300\233\2172;l\207\265\310\260V:&\003c\273\241p\2203\331\025/96\262d;\224\260\2279\266\256\210\226\211Q\\\027_<+\230\335\317\253\026\376\001\240\030e\225\340\227\233v\025\230Q4\316\027\246\301\302\231J`R\231\021\241\034\025\346wr\030\2405\001\230E\'\244\027,)\213\027\316\251\177\230p{\350\231Z\010y\227w\376\266\231\026\307\027\030\020U\"\227\212\317\260\2304\026}\025\255\371-\030\357\357\261\232\316{\327\031\216\261%\230\005\234~\227\221\300\"\030\371s\275\231\302!\032\226Y\020\353\230G\023E\031),\273\230\233\220,\226\240\"\370\225\357\243\002\031Ik\200\031\026\347%\031X\246\243\232()+\027\326\236\214\232\244\t|\231\"1\t\231\376\205\365\027\r=\204\031\023\364:\230&\332\203\226\265\301\010\231\206J\030\027\263\330<\230\262\257\210\226\350\027\352\226S\0232\031G.3\231Z5\250\227r\021\361\030\322YH\232[\\%\031\242\014\030\032\310u\022\031#Q\202\231E\r\301\027\347A\334\030\000\355\376\225\224p\263\225\214\245&\227\030\337\304\026T[\347\230\214S\205\230B\031\205\227\300\202\210\030\375\302\021\031JB5\027\222v<\032\202\356x\227\235m\201\226\257\356\275\230\nF\026\027\271\007\266\230\365[)\232\374 \r\031Oq\234\030x\'\377\027{\\c\231\350\227\351\026*zW\231\351\200\263\230\256~,\031\256V\002\027\357b\034\231r\232 \032 ,\330\223\354,\201\026d\334\000\230\246\"\341\027\023\253O\230\033\010\302\231Fo^\027I\016\275\230\3616\022\227\243\233\356\027\267\005\353\227\277\263\202\231^\030\267\231\357\332(\027t\334\263\231\210\000\026\031D \203\226\324\322\027\230Br\316\231P\265G\024\002\357\336\031\272\206\202\032v\203\211\225\364K\253\230\267a_\230p\350?\230\364\213\017\030\023\266\266\230\212F\210\231/\275F\226\000J\243\232\240A\374\225FIq\230\231\250\016\230)\326\257\031\313)\275\031\370_.\266/@I\270e\035h5g\367o2\036Y\271,|g\2514\\k\355\267\300\220\3635\360\363\2433\027\205U\261\302\360\2277\3415\321/\245\313\016\264\331#&\270\310\320\0171\254\314\211\270k\367+\267\277T\216\267\013\332\204\267}\255>\265\314\317\300,\330\013\234\266\240)\245\265\227\0025\270\006\027\313\263\216\317\1773\310h\t\266\264(=8\347\257(\2629oO\267\215\217\250\270\372\253\2528\377\"\330\267mO\244\272\345f\2159\331\353>6\302\362{\264\352`\3116S\272\'\272\"a\366\270\003\261E\270\020R\'7\273<D\271i\224\262\265\r\251\2167\210E\3668\370J\0248\035\260\322:\016\273\340\270$\226\2479G/\277\267\367\271\2527Y\t)3\2770\2328z\277\270\270=\2017:Z\275l\270-\216c\267\003\377\'9\301\021\231\271\224\352\2634/\036\3308\367\337\243:N\350\377<\021\036\263\031\255\334\342\027w\033\'\030c\316\303\0303x\303\030\000\013\n\2275\343\227\227\3157X\027\304\321\222\031\"H\265\227Tw\210\232\356s\n\032n8\273\226,\304 \230j\343\317\230\032\'\334\2275\363\025\2278\350\304\227\346yp\030\264\337\203\232]$P\030B4\277\230\324\323\203\030\334\006\250\230\320s`\226[\036a\030\034A\001\230\226\254&\031\265&\310\031\306|H\026P\207\366\230\376\307s\026\303b\204\266\301<\005\270B_X\267\352\033h2\233\251>\2554`\0245\303_\001\2707(\2335\327\265\265\263\201,\232\261\207fL7\202\337\235\257\276\373\017\264\246\333O\2673\023\0036\271\264;\267\033J+\267\001\270\356\266\266\005\302\267\276\344\303\264.*\250,j\033[\266\014\305\037\266\352u\0009/\254;\263X\225L4\226\246\261\265H\231\3127\244\275/\262\010\217(\2675\345V\267\227n\3058\226g\2277\264\255s9\306@\0219\333\331 \261\324\364\223,\223\321j6\265v\0107\'\261\0246\301qC4v8M1\360\217o8\212\241n\261-P@5\301\274\3168\250\370\0237\034z\2229\373y(7\354;\2537\305\014\2018r\320~\2642jE-_WC6r\330^60kq9\001\241\"\262\036\220\2634\010\374\311\262\233\336\2279\317U\2351\370\206Z8\345b\0149^`\3058\352\371\0137\363\005k\273\310S\303:\310\360\n7/\253h\262\304:c9<\013\205:\226\004k\271JA\352\2702\314\0176\363\325e\2723\244)\267A\214\3378\332\031\t;H8\n:v}\252;\'\3718\272S\355\027\272\310\177F\272)\241\034\272\3240\0244\023\243\216:]\302:\272$i6;\234\213\003\271\340\231\2349\017\314\014\271h\370\302\272\002:\0334\2569\324\272^6\014<\312\205\332=\236\263\002\026j\027N\232*\356\016\230\237\234t\230\274\354\003\030\3627\026\032\000\301Q\225C\302\r\031^P\253\027@\313\323\230\237\365j\231k\376\230\230\3704\315\030\214k\016\231.\327\250\226,c\340\224\313\242T\230\202$\203\031\025@@\226\014\331 \231\032\204\317\030\230\353\t\027j\030\210\227\250\377\357\025`J\223\227\326\'\017\031\310\315\203\231KO\001\231w9%\030h\223\254\232<\376\272\225\335/\200\232iCD7\r\237\2319y\305\2738Vn\032\261K\352&-\320\354l6\001\340\3128\216\031\2105\330\217\2734\' _\261\r\307{8\035\021S0\001\321;5\272e\3718\313\267\0167\313\356\3029D\304@7\277\322R7<\326\2008\374\217\265\263\003\0325-\371\321G6\224\315|6q8\3729\232\243\363\261\256\301\3673\274U24f\302w9\026\300E1\375\265\2107\177\031\1779\362\217\0069/\273\3778Y\202b:7`39Ng\343\263\0248O\256\026\366\2656\"\241\\9^\222\0309\346f\314\264\344\354\024\263\347\261~9}\245\262\262\0068\177\267\366\263\3429SgC\273\374\031k:\215\344\'8\np\331:\006\010M:\253u\207\267`\000\300\256\350\336*\267\235 \3157\256\367\215:\320$\3203Q1\357\265#\020\017\267\354~x\273\265]n3\201pN9\272mU:\355\204\3579\022\251J\274\177\363\276\274\273\373\007<\307\364~;4\246\0314\37426:\331\325\226\274\316\377 \274|\032\2049\313\014\034\270\350\333%\272\325s\305:\212K];\034s\313<\035\353\303:\\\221\026=\210\224\205;L\213\253\273\255\000\235\273\307\2374<\316\257$5r\324\001<7NQ\274:\321\360<\264\324\344\271\356\306\251\274\023\310\272\272;W\307\273\347\014\"\273\367\364g:\317\013\210=\023,v\274h\222\271\031\312YN\227\2640N\031\322\001\013\031\312\363N,\034ic\027\177\205\025\230\243\332\n\031\223\312\013\031k\250\001\231\372\260\240\0268\010\265\026\252\200\356\030*\307\036\032/SB\030\205SA\231\336\266.\030\207\236\244\231n\206\020\230\242\025\204\027vS\305\230\342#^\026\330}X\230\252R#\227\306\335\233\230\035M\217\231\213\321\262\230\3142\301\027zpK\232s\325!\030\313\014.\227\'\335d\227\311\315f8 \314\223:\000\215\002:\227\"\005\264\016\263\204-\206\344\2148\337b\2359d\373p5\326\260\225\264\034\3511\261\362\010}9\277U\204\2620P\275\267\205?2:\301#\231:\337\315\204:5\357%84\022\2618\273B-:\214h\236\265\tP\260\256\220\253\r\267\000\372\3027\313o\366\271\250t33\360\3322\266\203\234\320\272#\365\203;P\322!2cWM9\033\272\006;\344\272\026:\tfZ7\375\306R:\202xW\272\354&\003\264\"\206\010.\252k\3335R\031+9\232\375\356\266@`p\265\372n8\263\2127\0109\020\244<\262\220\000\345\267\326I\3259\362\254<::F\201:(\301,8\314\356\372\272*Q[:\201,\0075\221\325\206\256Z\223\221\266\303\217\3567\363\313\231:lL\0075\003\362\2675\327\340\003\267^\033\377;\310kA3|\307.9\005b~:\254L\3429O\036\214<[w\303\274\361/\020<\336\300\323\272\210\351\3533\316T\030:\220\321\234\274\025\277\203\274\276y\217:\311A(\270\300w\003\273&\202\2619\032=\036\273E\212\037\274/Ow:\260\260\255;\244\002\301\274\307\264u\273\254`\020\274\275~\202\274+\207\0102\002\236%;\325\246\207\274\274\247\224\273\364\007m\270\200\002\264\273\030s\225\272\316\326\262\273\240\265\255:\326.\225\274\247\300\031\275d\313\260\275\337\315.\027\365\344\253\227\206\366V\230\030\303\030\027\230\201d\030\332`\304\230\247\367\365\227\334:\030\230\010c\300\231\241t\265\226\202\\$\031\213\323\001\232\373\346\246\227\375\304J\230\327\t\250\230\261s\031\030nS\316\030L\001\n\231@\027\026\030\340(D\026\261\337k\231\235\203\216\230X9\342\227Z\ts\231\246\255\007\230B\232\275\027\237F\330\031\304\215\317\030}\376Y\030\272z\365\227`\310Y\031\252&>\032\207:W8\220>\200::\361\2209yL\374\263\274O8.[\321\317\267\\/v9\035\004\2255V\377E\265\365\265Q\262\235\000\273\270\330aN\261;V\2426\336\006\017:ao\312\272\350\314\235:4?*8\"\366\2418\005\310C:(nK\265\215\326\252\256\241\004-\267\210\223\3537%\240\020<\264nA5\tW\2665/\301\345\271i\315\352\273\004\20662g\32629\242\014\205;\321\225\3749\007\003\255\263K\361!7\306\376\005\266\020?m\261\224\202J\253\265w\0374J\212t6G\310V4T\02242\225\270\221\257\274\321O5\030%\357/\276\204\2253\205K\3315\370\334o\262\246\222\t7?3g4_\204\234\265J\250>5\026\252 3\023\027\002\254R\002\2544\270\374\0135\037\003\2035\035}\033\262)\305\0213\212\033\'\263L @6=\372\372\256\335\230\3623\034\330\2167\204+\0005\304\360\2605\223b\025\270E\207\205\266\202\242.5\226_\242\262\257\244\3006\220T\355\267kp0\267\233F\200\265\213\224R5\376\346/\267\025A?\264\260\007\277\264\315\262\3426V\336\3017\2421\t7\3077.\266H\373\2307\376\371\337\266NJ\0046\250\326\334\260\r\264P\266\370\37435\271\252\274\267\361G\254\265~\014H62@\2376\r\241\342\266\016\352\37634\345\266\266\346\371+8\004L^9\347\231\203\030Lk\247\2307\032\246\230\315\031\r\232z\177\377\030\262%\275\027\t\304\022\030\333\370\343\030.\272\021\230\240<\034\226\256\200\227\030\360\007\333\230u\351\217\030\177!\272\027S\335C\032\356\352\266\030\334=\363\026\370\326Q\227\234K\310\225D\264\264\026\000IY\226\301\333\243\030\0341+\227\273\034\222\031\030\372\234\031>\034\252\230\341A\345\026\271q\315\231\374\304\323\027\300\206N\227\'\224H\027\013\307\323\230D\355\2034\252\271]7\367z 7]\371\335\261\351\273d+\275\'/3\271\237,\266\"0\377\262\356W\317\262\364^t\257`\006^\265\220\024;\257\031\264\'3\362\226\2235\254!q\264*\024\2577R\253\\4\231\246\315\265\303\364u\265\003D@\263\343\016!,R\036E3\362\016H\262d\\>7\225\366\003\262\2235\2713\373F\007\265\242\357\2636\2469\010\257b\016\00358\212\0257)\001h72 \2479\333|\247:\363}\025\273\200b\250\263\371\333(\260\342h!7\331\006\2279\364\343\264\2718X\272\264\023\250^\263\300\313\203\272\350\275\254\262bF\2158Nn\":k\235\013\273\254I\272:\222\232e8\210\303\213\273\235a\366:*\232\337\266t@\232\256e\372\221\265G\350\0278\036\303\342:p)\2204\267\016\204\265\253O\005\267)I\235<yGm3&\261\2179g\375\242:\276\023/:\223\215\207<\014\252\252\273\"I\224<\333\221 ;\270:5\264\333\361\210:_\376\004<V\324\342\273\215d\250:\202\360\375\270\332`\205;/\231\215\273\251\256\255;\3462\036;\177\263\367:\014\365N=\001\273l<\235\006\022\274>\372\354;\366\233\357<\306\316\3465\372\366\000;\233Q\306\273\300\220z<\366\276D:/\204j<\324\362\344\272\222\033G\274\\\303\350\2718\365*=\2007\t=\032\235\006\2768\0322\027,)m\230\347\365\037\031:\340U\230\313\035\206\031\301dX\231\206\3610\030\200\364\370\231\002\3047\231\242a\242\031\364]\267\231\235\361\323\031\236C)\231H9X\025\245\261\204\030\200\256\266\227\310\2528\226\352\025\027\226\rF\317\025\203q\236\227\334\377\013\025(`\320\227\247\234K\232\'\375\251\031;O\245\027\275\376`\227vSj\226\316\213\010\031\212\231B\031\331\350d\231f\232\200\227\005l\300\030\257\017!9\360\005\321:F\322\327:*\223\226\263\224gv\260\265\365E7\223\304\3349\370\353 6\325I\304\264\246\331\267\262V\017\347:\362Vn\2624\327\202\271\213]B:\321\rX:|)\265:\271-j8\350\r\3079f\300\030:\2659\002\265J\215y\257\013\236\003\267>l\0018\325\374\242\273\331\245p4\313\200\245\265]\214\214\272w\'7;\n\304g2\0169\2259\227\260\200;\341\276&:\304\251U91F\221:p\244N:\001xk3\024\250\223\260\227rQ\270\207\336j9\234\202\3359A;*\265\232\252\202\263\337\300\234\272K7,3\016*\207\270\203q<:\n\016\374\2729\240\262:\325a{8\211\375\204\273T\211\261:\3639M7\345j\270.k\226\0077\321CF8\037J\004;\246\022\0375\204\304|6\331`\332\266\346\347\010\274Z\324\n233g9\236M\250:\214\316d:\267\320\370;M\363\347\273;\225l\273\201\"\312;\227s\0264\032?\332:\004\030\322\274\251\212];n\\\267\273)Z\334\270\205G<:\347`\336\272\262J5\272C\026 \275\204}W:\257\204\374<a\313\356\274&7P;wWJ\274U\347\220\274\3506>6`+\257<K\364\234;\206\025\377\273\216\305Q\272\223U><_\215a\272\225\017\024\273\360\006Y9\031dx<\003\317\203=9\032\215=\260r\001\031P\211,\030Dv\323\230l\037\002\031.P!\232\250\251V\2302 \032\027\215\361&\230\340@\204\227Efb\027L\231\367\230\242:\305\030K\335\351\027\242T\201\227L8\257\027\237\027\224\027\230\224\014\027\314\022,\031\356\240\024\032\024\335\231\026|\274\343\027\313\006\337\027\235\275k\230\312\001^\227\2243\263\030>\233D\031\004w\335\230:mO\227\262\340\242\031Jt\232\030\246\223\036\026\177kS\231\252\345\3218\305\334\277:N\354B\272*\240\2012hnn\257\232c/\267\010\245\3239\030\256\2036\207\300[\265F\221\021\263\357pG:\001[$\260\034\350\265\271\364\000\220:\231\215\217:tc\320:0\000s8]o\0269\030\251\253:\270\275!36\023H\263\"\366\202\266\236_18\204\253M<\312\263\2065\230\033\1776r\r\370\271\n1\232;I\331\21414\271x9\314\231\225;\3777\033:\355\370\252\266\257\020\262\267\354\256D\270\240\204\2422\2517\252,(\317\'\265\'!\034\270\335<|5\371\227p\264x\274\273\260\216N\307\264H\204\303.\352\273\3513\256\333\230\267\250\027k\266\356\212\333\2672\205\255\266G\255r\267*H[7\376\366\027\265\002\250\300\253\323\365\005\267\216\000)\266\225\364\000\270F\27204\2222{5`.\204\263\233\210\r\270u\230p\261o\354\022\270Y\355F\270\371\267)8aKb\271 \233\2769\311<\021\272\3419\262\266\211B\2352\315\322-\270\347X\2108\"AE82\310\3527M\361\0247\261\363/9\216\372\2025oF\355\267h\203\251\271\356\226]\271\304\251_\272o\334\3748Z\027\n:+iV:\010Vt\267G\204.3v\34597\335\221\3648quh\272\243\016Z\267\307\320\3127e\307\0229\343\221\t:\234\013#7I\002\227\271\246\224?\271w\t\261;\020\227G\225\037\323\332\226\356\211R\227\202\372,\027G\367v\032\243\303\377\027\t\226\242\230\201\206\230\027\207\2605\031\'/E\030\333\362\201\227R\372\205\030D\365K\032n\311r\230\031\337\216\032~\342M\030j\342\027\230\327l<\230$\024s\031\025\215\"\230\014\260d\027r\201\324\227\0053\020\230\017-$\231NG\347\027|\014\302\030x\216[\230[\007\034\232\033D\217\231V\310\272\226\377\267\r\232\304\256\352\027\255MV\266\021\302\013\270\250\213V\270\223\267\2712\']\267,\336\031*\265c\'E\270#\225\2165m\354\034\264\352\266\324\260\265?\002\266\t\004\263\257\330\351\0014\211s\346\267E\234n\266\002E\'\270\356\374\246\266\217]\000\267\360RT7]\237\211\264\202\233\245\253\215\200j\266\242\216\002\266{\200\307\270\330\354\3373\323t=5\353\034\213\266]\177\034\270\240\216\007\262k0\017\270k\344\031\270\004\232\2048\260f\236\226\226y\216\231N\353O\0300\222~\230\305\374\016\231@\350\334\027\266\nZ\030\325\003J\231P\262\202\227\314\243\203\232\tK3\030m\241\357\230\324\360\007\230\326SE\231\202u\262\032\240\337\230\027\260N\'\027\322\207[\027\232\331\272\030\356\t\356\026=\365\023\230\306\000\217\031\004\374+\030E{g\231\326\237\206\031{\201\230\031\016Z\004\031\001\234z\031pKo\225:E\262\032\024\037\275\226\2123\315\227#f\314\227\010\221L\027\206=\333\226\370Na\031\020\250?\225\255F\217\230\2673%\230Q\314\370\027d}~\030r\374\033\226\365q\222\231*\201\270\227\3627\223\026b\332u\031\236\001\025\231\347<;\231\214X0\026\272\275.\230\331\302\r\230\320\023u\027\336\210S\031\230\242x\227P\t\317\226l\354\034\230\010\233[\231\354\235.\2326/\251\230\327!\234\231\022\017u\230\246\376\211\230\217\371L\230Ys\032\027P\254a\026\235\230[\027\256\035@\227\005f\317\230\311\211\027\230j\3374\031x)N\225\354\263\037\030\216\037\365\227*j\227\027\234#\"\231\000\241\316\027\306\377r\027\030\010>\027\2529\023\030\265\321B\231\234\255\306\030\024\311\026\031 \207w\226\006\260\247\025\237\377\272\026\2656\251\030\036\310$\026\377y=\231\025\020\256\030z\243\300\227\350\347Z\230R\036\305\027 \256\206\224l\3710\031\255\273\225\027\230\010:\225\250\261z\026\312\313|\030T\014\006\230\262a\036\030nA\013\030gB\001\032\322\333\300\0276\235q\030tu\234\030#*\200\227\232ns\230\333\212b\030\355c\365\230\035\372\014\231B\2405\027\362\327\t\031/\207\003\231\276\t\250\032B\246\362\230g\310T\030\263\340\201\230ks\037\027\255>\035\032\376\346\010\232\240\364\340\2302\215\214\227\263\271\002\030\004A\212\231/\350\317\231\364\336\314\230\276\013Y\230<:\033\230\244{Y\030l\243\224\031\236h\006\230f\321V\031\276\374@\030\251\3100\030\274\231(\227$D\273\026fy\034\231\364N\344\230\310IX\227\205\007L\032\233vD\031+h\333\027\260\267\225\027@\031\257\025\026\351\241\226\205\366|\030\221\035\000\032\310b0\231\3465\014\230\266\177\257\225\231z\236\226~\264)\227L\360\202\230\342\344\014\231\023\202\211\031h\252A\030(\221\037\226.\223d\031\346\355\210\027U\255\'\232\237\215\332\226&\037\220\227Lav\232\310\240.\232\374=\200\030\000\017\300\230\370\244\033\2305P<\031l\346.\025\315J\314\225&\237\030\030\340\247Y\027\350\016\233\231\367b\007\026\245\304\014\231q\021\317\030\26048\027+\270\202\027\251P\247\227\023@\235\230RE\243\226rG\325\230\207\263_\232\353\005\274\027bZ\023\230\305\375E\232L$\230\030\356 E\230\262Xo\230\3320v\032\222=\356\226F\354\370\231\0144\221\030\266~G\030\027&\005\027\244\244c\027a\330\027\230*]\272\030\332\021\223\227\n?\334\031\365|\366\227_\251\014\027\245\247O\230\036\007\323\027\272\306\206\030Z4\306\027\364\311\313\226|t\022\230\374\036\034\232]\316\006\230t\353\'\227\220aF\031T\250\275\030\237\215\332\026\235\017\212\031\332\211\337\230\232#c\2300\203\353\224\354@\333\225(\333\274\026\036\201\351\2309\037m\031\264\324\232\226\275\372+\231\300T\367\227\177S\"\032\264\277\213\231\020V:\030(\037E\027d\226G\030|vK\027o\023O\027\200\002\004\231y\272\271\031\200P{\225q\010T\026\352\214:\230\375\242\235\231\260#>\030\017\325\245\030\371QJ\231\354O:\225\353\201+\2270N\364\024\211\361i\232\336\246\003\227\226\207\234\230B\207\177\227\260\251\004\027\273|\010\030\324\0327\031\211\236\306\226\241~a\230b\215\003\031>\354(\230\342y6\026S@3\030&\002\207\230\353\352\361\027t\211\233\027\006K\342\227\252\257\024\027d\375-\030\240\177\377\224q\033\300\231\370\027E\227\026bX\230\261\246\230\227N\364\006\232\312Q,\230\032p\367\031\313\314\037\030,1)\231\0169\337\031\340\374L\025\267\177\234\031)\367\200\230w\353\005\027|V\347\027\037\377\346\027\224R\352\026\302\020;\230\360\002)\225\340Aa\230\314 \371\027j;\006\230\247\177\241\230\335\031X\227\004\216^\227\225P,\231\"\356?\231\350\331\340\227\253)\346\031O\0303\231a,\013\030U\022\370\231\340mS\230]\321\302\0318\0303\031f\021\222\230\024#0\230D-\220\230\277\244M\027\357-\316\227XN\210\027\360\030l\025\204\310\231\027f\201\345\227W\003,\031\330\002\243\230\362\255$\032\005{\014\027\232nE\030\231-M\231\212\004\243\232[\232\032\030\251\250\336\227\t\303\202\227S#\366\031\250\312b\226\0023\213\227{\250\\\031\317\243\351\027\307\223#\027NcR\031\273\254\020\227\355\242\"\231\000\370\206\2240\274\344\226\266\221D\031\210\037j\031\344\252\361\027\235\342\322\2273\236\031\227\267\256l\030\\Tt\227$\271\024\231H\r\347\027R\\\t\230\343\251\201\231\226\305p\231\310\026,\230\216c\204\030\333\350\243\230X\352\317\225\327C\203\230\320{\252\227\222i\270\0319\262\203\027p\362\241\231\322\321\350\230`t\235\027\276\023F\227\364l\203\231&l|\026\377\327\241\026t\030\230\231\33436\027{\203\364\230\364\370\251\030 \272\006\231\372\264\207\230\200(\313\224r\211\246\031A\322P\230#\353\367\030\346\315<\032\002\024[\230\200\236\036\030\010\216\331\230\315\236\273\030\375\275+\226iF\264\031\350\216\037\030\"C]\031b}\344\030\272mP\231.\371\342\030\300{\302\223g\357\220\226\220\250]\025zG\226\026\254\017\353\027p\341G\230v\313\310\230\353Q\274\226F\227\224\231\347Q[\030\326\025\331\230\001U\345\031j\354.\230\300\006\036\030\327:\310\230\027\300\n\032G\340\317\230\251c4\230;\254\250\026*\246!\027mI\024\230\204\"\250\227(\352\r\231F!\t\2319\361\331\030P\001\032\227\242\024\330\2262\023\027\031a\023\227\230\264\317\236\030\235wn\030\200>]\2304\273\307\030\332\000\314\031\334\351\031\032\364\2474\226\306+\037\230\276m\344\030\377\203Q\230\014\2177\031\017\343\245\231~\316\025\031\016\360-\230F\266\271\227\311\371\231\031\257\340\206\230\017\202\022\031s3\037\031Bw\206\2308\260\222\231\226k\036\230C7\315\031f\376w\230\262\342\224\226x\226\336\024Y\271\345\230\306\273\375\230|\226\362\026\360\013\322\226](\216\027\260\321[\231\370#\204\030\016l\320\227\327)\314\230.\001_\030\014\034l\031\032\226T\030\016U\204\031\336-\001\0328\304\275\230\212\352\000\231\210\377u\227\201\325\237\031\361\005\331\230\240\225\003\027\014\314\304\230Y\014*\230\305\202;\031\002\333\264\031\037\265\225\230\226\202\315\227A?*\230\330A\210\2270T\016\031&\337\214\230\364h9\230\3530\221\0312\010\301\227\320L\215\226\223\224.\032\275G\310\030\321?\003\231\347\325B\030fk\212\230\344\333\206\030\013\315\243\230\254\034\330\225\"\003\003\027f\321v\027\262g\'\230\306c\332\031\004\036T\230\304\346\345\027W\024\014\231E\232)\027\376\303\327\031\377\342\231\226\204\262\304\027c>\233\031.\323(\230l\303Y\227\355\264s\230\260\341\022\230\233\026\203\027R):\031\346.}\030\333\016\262\030\344z\211\231\376\350\263\027\370\323\345\031\024D\257\030\256\344\354\030\372\014\327\030\332\177\361\030V\216\225\227\244J&\032\231\276\324\230;j\262\0326\203.\031\250\355@\030C\246\360\227\003\277b\032[k\027\230&\362f\227\240\3144\030L2\216\230\376\227\274\227\323z\326\031\014A8\031\026\3601\027\222\337O\231\310\344\024\026\026\216\014\031\2679}\030[\223\366\230H\211\321\231T\034p\230FN\313\230\326 d\030\224\311:\227b\212\243\230\360\262\370\025\244\351R\027\274\256\204\027\000L \223\354\2071\031:6\014\232\033\010\207\227\376X\327\225\024\376o\231\246\204#\032K\371\014\231\310n\241\027-\331G\030z\352\014\231\027\\&\030\226\346\211\027\240\n\215\027\322\227D\230\364m\000\231\037\254\346\027^B\004\232\366\3566\232\250\317\375\227\301e9\030\nSd\031\357I\346\230\327\313\215\031\334NE\230/\342S\227\233\363C\2315G\005\231u\234\264\030\247\361\024\030\016\025t\230\214\026\364\226F\332\"\231\200<\315\025\226m\024\232\330\261q\025\177\354\234\030\352\226:\230\350\337\325\230S\305k\231N\261\n\030\227]\010\030\305\003\211\230PO\026\030&\306K\027B\226\006\227\277^H\030c\355\035\230\245a\'\227~m\351\231^\316\010\030\207\022s\030F\250\264\026\304LR\231\004\250}\230d=n\230\332,\233\030\332nz\030w\224\362\230\202C\220\026\302^\203\231\331\224\005\230\274\205[\031\254l/\225\000=0\025\320\313]\030p\355w\031\340\276\241\231\314g\312\027Il\237\0324V\316\226;T\013\231\036\235\303\226o\377\205\227\010\334\314\026Q \266\231\024\013\207\227\366ZY\031\317\270\306\230\247>G\032\032!\364\227\330o1\232\304\375\372\225&\010\372\227\t\333\352\227\245i<\230\242o\325\027Fkq\232\200O\036\025\014\344\024\031\216\364\207\026&\3328\031\351\266\241\027\243\342\344\230+b\205\026\300os\231\0364\222\032\322\377\307\231\216\271\026\230.\032g\027\022t/\230\r\313\302\230hn\246\027\221A\001\232UU\203\0276i\201\031\252\274)\0270c8\226\017\243\235\231\000\253\231\022\356M\003\227p\031\222\226\236\340(\227\276\301\002\232\031\005\255\030\326\306\220\026\273aW\027\303\207\n\230\032\025\363\231A\374\014\232\020B*\227\234\277z\026\355m$\227+\252\212\030\347Y\217\031\350\037n\227`\341\200\231\013\325\243\030xl\035\226\316\261\024\226\372I\320\031\323\3513\227\351N\231\031\233\3478\227N\377S\230\227\233^\232(\264\343\230\205\333\211\031| 1\0310e(\027\366\315\217\030 \177!\227x\241|\231x\224\002\230\346\372T\026\223\353\214\227 \277o\231@\r/\230 \201\360\031+\027\361\025\236\301\326\227j\256+\226!\263\323\025R&\033\031\014\353\330\231\362\007:\231\230Z\310\231 G\202\226\342(\212\026D\2003\032\t\350R\227\013z\202\227\351~\033\226p\330\t\031\372\310\240\031\366m\273\026e\231\201\030\260n\024\2320\262h\227n\021{\230\235\3245\030\320\260\202\231\253\271/\231\251\214\364\226\203\265\317\227\200\024\001\230\374\271\361\030\365\034\034\031\221=\275\226`u`\027\344x`\026\364\3166\227v\370\322\227\34574\232\177s%\227\364_H\230\225\'\032\032\340\301\332\230\317\2068\030\277\221\\\027\33267\230\223`^\030\350d\245\0278\310\265\2262\013\237\030n^\221\030\275\r\216\030d\305\363\227\210\024L\032\026!2\232\266\330\346\230\233\1779\031\201\014P\227(C\203\232\321\3626\232\261\2553\232\260\\Y\030\326\355\266\027\320?\255\030i\225S\231\017\236r\031\304Y\351\231`\317\004\227\260B\245\231\304\332\262\227\253u\303\2308C\206\230\323\1778\026\020jk\230\353<Q\0270\001\t\231\001W,\230\300W\256\031t\004f\226\n\377\331\230\310\345p\230\304\010\270\227\nZ\024\0310\037\016\032\373\3574\032\350\033p\226\353+\275\027\004i\332\030[U\322\231Y6,\030\232l\341\227\236\\F\231>\005\005\031\201\267C\027\222\207\r\030D\311\001\231\304\301\356\227\234{\213\227V\206\227\031d\254\r\230:\r\255\230\370\257V\030\247u\331\227\200\341^\226\303\300\230\030\200\366\205\027\266\272\204\032\256\324\345\030q\321+\232\370J4\231M1\376\027\272\000X\227\274=\370\226\251\306\'\227 \206\327\2274\245\221\0306\320\224\230-R\010\030\235\225[\226$\301\200\027\000\301\344\2305/\237\230\322\350\250\227\240\013\211\231\260x\304\226:)\271\226i\355\014\031\356\241\253\230\361\251C\226\232x\240\230\265\025\320\227\366{J\030v@)\231\270\202\353\223\007\034\327\231i\017\020\031\'\270\001\231\nA\010\231M\270\341\226R\215\321\027\2464T\031\304d\332\226\302\300\344\027\356\244\376\025{\314o\030x\320\235\030\263\214\213\227\371B\004\030\200Z\362\225\256D\231\2276\014v\227\003\241\247\031\362\3607\027\030Y\221\230\376\324\241\030\017\357\240\030f|\330\2276\026\002\0328\334\327\027\243\220\346\030\002eF\231H\201)\230S\211\334\030\244\300\205\227\007\033\275\225\351\363r\22795\n\231geL\031\036\'\343\031\270\005\007\032x\263\365\024\254\222\303\025_\325\233\2309\211\211\027\226D\345\030\262\242\214\027\r\033C\030\023\004b\232\231\233\213\030\350\303\006\030\n\327\247\027\223\271\242\226\032\246\025\030\000jy\024D\371r\027\214\344\246\232\n\336\333\031\376\003:\231\000\017Z\027\225F@\232\026I\207\030@\261\263\230d\\o\03063W\231\352\313\321\227N$\371\031x\346%\031\013\233m\027\322\004F\030d\023\342\231\333\236\300\0277\0370\031G\257D\030\310\326\001\031\213Y\034\030\315=\250\0310\317\357\225\214b.\031\214\303S\031\256\217\001\230\240\374\034\026e\002G\032\036\203>\030\240\346\325\226\033\007\020\031+\256\232\227\002\266O\030Vw\004\027\031\0363\231\217\326\254\227\2501\021\232\260q\243\026N\323\'\231\246\013@\230n\340\222\027\217:\207\031\232\337\242\027Ly\202\027\346T\005\027\251\022\010\031\240\355\313\226\004\246\377\026\266\235\014\226\244/\312\0309a\257\027M\307\005\231Z\271U\230\255\023!\231\361\313\276\231HP\362\231\302D!\226z\000\252\030|\322\302\027\304\227\317\226@Y9\224\326\367\225\032\267>\362\031\240\306J\030@@\366\024+\014\013\031I\237\254\231\246\331\226\026\370\030x\030\361\"\207\030\002\3540\031f\032\031\032\021>I\230\006\277\207\025\267\346 \2322\3138\030\0176\316\227Z\310\271\227\340\222\254\030\301\251\032\2271\226o\030\267\336^\031<\253L\230\367\242\211\231BC\233\031y\361\025\230M\275Y\031&O\273\027\277\326T\031L\345\364\031\260J\307\231\337\243\252\230p9\257\227\203\361\244\031\352\351\327\227\231\361\304\230;4T\027\227\305t\0302:\024\027\014\275>\225\210d\353\227L\207\240\027\242\"\256\027\023S?\230 <\251\030\355\227\230\027U\327e\230]-c\230\241\014\250\230\314!!\032\253\242\024\232 \374\326\231U\236_\2267]\247\032(5\375\231ig\202\232\010\306\314\231l\316\005\231\256\255\265\030\234\376\227\027\354\213\315\030\022\267\206\027\023\037\376\027D.\243\227\276\203\326\230\320Hn\227fy\252\230@*\003\024Tf$\030Y=m\031\005C\240\230`\005\272\227\337\265-\232Sz\255\032Wy\277\027\247\373\222\026\3358(\230\3772$\231\020\t\214\026\315z\026\0276\021V\030\340N_\225\207y\001\231@\324\377\0243\365\310\027\2326\257\227\002\034:\027&e\207\0314i\347\027\010\233\277\225\215\311M\230m\354E\030&\'\215\227\322\0162\031t\346\321\230 \276\261\025\245\265j\232|\235\266\230\337Is\231\305\333\364\230\262\372\361\030\004k,\230U\234\211\226\220T\244\226| \352\231F\265\205\231\255\355\216\230\202Y\021\027\233T\301\027\215\372\240\227\234A\245\230t\260\225\232[\302\366\030\266ji\030\344@\214\026)M\000\030\241\272\232\231\377g6\027\352\203/\230\032\365[\231\320\323\246\026\376\322&\230\317\3622\030\202\250\377\026\023\002D\232\206\305?\0276\352o\030\201\365\321\031vU\026\231\255\312\344\027%\020\221\232\221\002\027\230\300O\217\026\257e\322\031vQ.\031\317e0\232\312\250|\227\330t\\\032\370B\306\026YL&\231V\211\005\027\246e\330\031\270\241~\027\266\310\344\030 \375\322\026\274\221\234\230\222\317l\230`\247\236\225\270\357\'\230\360\231F\2307Sc\030\211}\177\031\273\203i\027\2704d\226\nd:\030\204\323\205\230\217\277\265\027H\264\336\227\351\301E\232\366\245\210\031b\366\202\027}Tu\030\340\203\257\030\200j\312\030\245\264\262\230\263%\265\231#Q\363\030T\'\327\224\312\207\213\230\233\342)\232\367f\230\226(\013\257\032\200r\375\225\346\345{\030\335]6\031\275\331\225\227X\270a\2308\262\354\027\250\036*\230\021\376/\031\305\262\226\230\002\263)\231w\205\267\026<\263\243\231+0\221\227\033@x\031\217Ij\030\311\250\013\231V\337\215\030F\343+\230\274\340\013\030\314\322 \030\216\1777\027\360\342\003\030&\364\003\031&\223\262\032\331\224\033\030^H\211\230{\025\305\230\200\302w\227q\271\205\230(\026\275\030n@\033\026\003\232\257\232\311}\017\031\'\213\316\231\250U2\031\215\232\010\0307\344\232\027\370\377\256\227S\327\370\231\314)\372\030a\234=\230b. \226y\010-\031\257\264y\030\234$K\231\341\026\t\230\203ZD\031V\005\367\027Q\300\332\227HO\222\231n\233z\230\215\246\025\031\323\267;\230=\033P\032\310\325\317\026\257\343J\227\0329\004\231\375H\202\030\n \205\031h\010\364\227D\355\214\227\355\266\363\227P2E\230<\263\360\027k\371\221\030\200E_\031\374\325\"\025\204\275\032\030\003\230\241\226@\345\374\226\341\324\276\231\023NA\032\264\317\204\231\032f\273\227z\372\021\027P \336\230\274<b\230\370\230y\025.\032\027\230\312g\342\231&\310\267\230F\006\310\225\\\317F\030\274;\335\227\326\273\300\026\242\031`\027\340<\315\227[U\353\027\213\371\345\230\322\276\374\027ki\001\232y\030\236\027D\\8\225\026\236\344\027\365\261\211\031DJ\277\230\177ph\030\301\350\013\032\270*|\2264cJ\032p\365\017\225\224\211\212\225e\013\221\2317e\243\030\236\\\200\027\331\036\214\226\'rT\230\010\352\034\032\302_\346\227\352a\236\030w\342N\231\n0\240\030R5\225\030mG\310\230\244[\217\030 >\254\226\244\330\242\2304P&\031:\007\300\026\020\314\001\032o\006\201\031j\004\245\027\037t\026\032\362\237\262\232\360;\331\026\310Q\260\230\340\026\216\031\325!\273\231}\037\276\026\202>7\027\241\217\260\231\313\260\347\230\213\226\273\230\302\020\222\230\210\341\343\030w\234\355\227,\000\213\031\026pR\027\270=\341\2260\323\336\225\tE\230\027\304\0338\230\373[Z\230(\026|\030\336K2\027)\255\033\031d\312\240\226\000(k\232\327\344\035\231\322\236\233\230\244n\031\030\244MH\032\374&\260\0258\264\014\031D(`\231,\331l\227F\023\306\230\260\234\307\030yq\304\027*\255H\227\251\206;\227\007\346\334\230\204\352=\032\320#\306\030\344\276\212\030W\226O\231\212\232j\230\263\221\240\230\021;\272\230%\270\"\027f\336V\230\326o1\230!r8\231t+\345\025\244\233g\230\226\312~\226\2751-\230\200\317\336\027\037\241\327\031@\341\010\0312\010\276\230\312\320]\027\263\010\203\026~\225\344\230\'\006\226\027\320\316\003\230\016i\276\030\206\330\330\031a<\234\230C\212F\031-\276\230\030\036\277\007\230\315\313\212\230\376GX\231``s\231`\026!\230\344|\207\027\3565&\031\326\243\215\227\222\273\347\030(0#\031N\345/\030\347\004V\030=HX\231\304\240\033\232\207\262\222\030\030o[\030\366O\266\227e\375N\227\230\017\262\226\376\223\223\226@\205\027\027\037\356X\230\241\014\331\227\002\327\023\031[N\362\030\252\363(\032$:5\026\264\250\025\231\206)|\030:\025\316\030k\255\314\026\n\221\022\227\311z\371\027\240\021G\227\016}1\030\231\320\326\027/\240D\031\026\374r\031\342\257\025\231f\351\314\030IP\357\030\214Y(\226\266VY\230W\177m\230\000L\267\2311\331\252\027*\270\230\227\210K\200\230\177\213\316\231@\221\356\226n\375\340\030\024\324\256\030\221f\210\226\330\237w\231J\237-\0271@4\030}<\252\030>or\231\236Ij\23087\374\026\001\252\300\230oq=\030\321\312\217\227\231yk\032\034\261\214\030\364)1\227\304\212\270\227=\310\204\227\356\321\331\026.e\351\227\213\306\014\030\261\216\240\226QJ\313\030h\241\316\230\313\360\203\231\217n\006\030o\002\n\227\276\255\024\231?l^\231\376;\000\227p\n\022\230\203o\271\230\334\\\002\232\326\355k\031\370{\031\031d\357A\032Ml\354\030\373F\032\227\210\373\235\025\214\t\263\230\247\334N\026\242\036\334\227\240\362;\027-so\232\301\300Q\031\330y\241\225\231!%\230#g\345\2272\222\374\225\355TE\032\230(\274\230N\032d\230\331\212\210\030\362\327\274\027Q!\353\030\252\217\375\230\244(\243\227;\216\013\231F\355h\027\t\001F\231z\241\r\230(o\234\025\323^\205\226:\2426\027\206\\\377\031\000C\202\025n\314\022\227a \231\030\024\250K\026\370\2204\226p~\035\027\240\332\270\230P\220M\026\315\314\356\031~i\034\030|\257r\031\310\241\256\0268\031\006\031\002\354R\230\367\277\002\032\010!\337\027Bq\275\027fs \230b\"y\0300B\352\225\250O\217\230\375K}\031\310\021|\231q\2579\230\276\0322\027\000,\020\031\222\271\031\231\323Z\005\2300\217\371\225\202\245\266\030\375\354\273\031w\035\351\227\314\363X\026\020\013\210\226\217/\006\027\270\230\331\025F\211V\231d\017\331\030\315\246\262\031\317h\n\231\366\n+\230H\215P\026\264-\330\030X\023\252\027\325\374N\2279^n\027\303A\302\230\r1E\031j\\\366\230\244\322q\027~S\270\027t\005\246\030\372P\375\227\336\026\016\232\017\275\326\226\2655m\032\024\337\232\025\032\304\203\032w\022\353\227\2362\031\031B\321\224\230\220\360\250\030\016?\343\026P\025\221\232q\314\021\030\007\252*\030\220\361\372\225U\033\002\231\031q\001\232\234\006\263\030\230\331\302\227\244\376z\230\342@\247\226H\262W\2303\336\004\030\026\341\027\031\350\206\203\0318\271\251\227\351\342E\032\224dO\030\177\275>\030\315\n4\030\276\251\025\231Z\017q\230*\222\316\231\036\306\377\031;\201\210\030d\275\"\027\241\314\222\030\032\r\303\027N\340P\030\"wW\225Oo\235\030\254\205}\026\270\006:\027\320~\325\227+T:\232\274&*\230\371\203n\227\240\347\235\224\236\361]\232\005l\201\030\274\333\236\226`s\265\030\000\274\257\023~,\374\226\002eW\027\212\227\376\0268)1\027d\0133\026\216e\253\026\3575A\230\010\300\006\030\253C\370\2307\277\305\027\030\263\344\227x\003e\227\366\206\376\231\322\303\367\226\302\323\330\027\361\367.\227\340\013\254\230 \235\225\226\025\247 \032\257*(\230P4\262\227D\307\013\231G\252\334\227P4\344\031\254\210\203\030r3\317\227\3552\242\230\t\251\257\232\320\346\037\032\254m\361\031\026\0207\230\304Q\242\230GF\346\227&]\366\230\315\214\036\231\343\206J\230\210\207]\226\253\257\001\230\007\222J\230\0133\203\030\212\321\316\226\201\245\304\227\364\237R\231\336!\002\232\014e\n\231\322b\254\230\322\037h\227$\226\300\027{\214O\227y\260\311\227\366\373\231\231\311\376\204\030\270\253\231\031^\340\010\230\036>\020\2270\177\326\025D}\222\026\000\374\367\223\016\035\320\226\265L\222\230;*/\031\320\332\260\030l\001+\231\253\363\245\227\231\235\305\030\211\020\357\230\013\200\214\027v\363\260\026ZC\235\030J\345\355\025\014z\237\026i\252\270\027`\033\024\230\271\226\204\231\353\265s\232\360\374\347\227\304}3\2304a\273\030\304\261\235\230d7J\230\364Z\217\230-\270M\030\310\3128\027\254i\334\226\372)\311\031`T!\030\270\262\000\030\234\336V\227\315\355\313\230 \020\236\026is\232\031>E\321\227\002\025\006\031\204h\216\032\242\233\357\031\200J\266\031\024\213*\030\331@Z\030\244\316\301\026\376\236\021\030\235\310\335\031}e\344\030l:\014\026\376\004\212\227\260K?\226\272\rv\232F\016\335\227/\221Y\030\335~7\227h\327\365\227\225\021\334\030|\324\311\026%\024\222\0305,\352\0266\243\261\031\217\222\235\230\360\231\210\230x\371\325\225`?\307\030d\234\t\027\266/K\027\240\'z\227=\204w\030\233#\333\230@9\275\023\336\347\341\226\350\004G\226\r\256\235\226\276\271\222\230\350d\305\227\254\351\351\227(b\240\227\237O\247\031\367$\033\027\260,!\226\352\032\356\031*^F\232L\362\005\230\">\244\026\244\372\224\032\312\344\256\227\314cR\232\274\377S\030\212\324\207\031\320\"\027\032\032\333)\030\320\026\373\226\342*\240\227\226\334%\026x\351\312\030\377\037f\030/\272?\030\'\220x\031\264R\202\027\360\212\315\027\346\331\271\230\230\014\225\225\373@\035\231\234\267c\226\237&\000\032N.\032\230\252{>\032s\322^\030:\255\262\232\347\221\357\030^\256A\030\204n\205\027\230\266/\230\346\211\260\227\363Y\336\030\246\014\214\030\324y\321\027\3337_\032\224eZ\030?(\240\231si(\030\037\362\235\027\232^\332\027\356\264%\032Q\275\366\230\315\210\022\027Fs\006\032\005DI\231\276\214\304\230\230^\207\030\27374\230\022\336&\030h4,\225?\331\204\032\235m\311\030p\255I\031\243\036[\031}t\352\230`\257\323\025%\235\267\230\364\307\224\227\017\022\222\230\243\027\262\230F\032\330\031\2356\026\027hM\027\0303\336\337\030\344\351h\027\222+\267\226@\355\020\031\350\262/\026\247\rD\030\206\322\242\226(\206\312\027\212\334\340\230\262u\262\032o5\320\030\243x\232\230\354\266\230\226,p\364\030\277\214Z\227z,\020\230z\2768\032\250\265\027\231s\016`\030Q\t\347\230\211sm\027\344\316\377\230|\2364\230\324q\304\030 \020+\225\'\226\014\231)\2454\231\360\341\203\027\014%\233\230\337\372f\2301a\360\230a\272C\2318 \327\226K\037\251\230\322M=\231{\226\227\030\021\313\327\230\234\240\317\227:J\247\026\332c2\231`9\226\030\327 \333\030\230\353\365\0300\256&\025\254H\225\027\254f\253\030\202l\260\226\347\232\350\030\332\377\313\226\342\254\272\030\304t\202\227\304\205\241\230\343\224\217\027\371L<\030\334s\033\232[\274\341\030\222\2322\230\206\200\272\025E\325j\026\316|\275\027\234\353Q\031\032z\263\026z\246\373\226(\362\251\224\027\343\333\227\337\241\350\0310N\364\224\n\253\211\231\276\331\252\027\251G\255\027^\313\263\226\025}\203\232o\367\276\225e\322\303\231\216\001\336\030\362\251\343\230\023\020\310\230\014\333\355\026\236!\240\226m\275\017\030\014\313 \030\217\265\246\030\250:\261\0264\271\237\026\223\035Y\027_\005\247\031\355\324\021\031\245\302q\026\035,\"\231\306\022\376\027\337\014q\230\351\213q\030pS\004\225\332\2056\227\316x\027\2270\267@\226\346\361\025\231\300\206\231\025 \224\010\031zLh\030rV\323\027\352\001L\232\256\354\022\027\360\212\254\231L\003[\231\343\004\235\230\036R\t\230d\266\245\230H\203\365\225\370(\260\227x5\014\227\316\365\362\230~\002O\227\245\375\203\030\036\207\252\026!\212\027\031\262\345\257\030_O\201\032\352r\232\024u|\014\027\336(x\030HN\357\231Vj\323\030v\247\020\227\214\311\252\226\235\026\363\027+4\266\030\310\365\304\030\341\322\032\230\024\n\377\025=\241\273\230\372\001\332\030\220\021\023\031C.\214\031.\357Y\030\300\267\346\026\306\'F\030Q\007g\027\014\332\005\227\202\277\374\027\"\356\260\031\237K\272\230\231\227\023\231Ix\233\031\233u\326\227d\327)\0270\236\035\227n\201\237\226#\005\"\226\374pP\027\342\336\021\031\350\277P\230\024g\367\031\262\017\177\227J\366\036\031z\016\212\026\312\005\316\230L\362\331\231g\276\346\026l\031\203\030Z\214{\226\260\321\352\027\221\245}\230\247=\327\231:\266\242\227\313\021\036\227\007\265!\231\220V!\232\250\026\201\032\277Z\034\231\332\021\275\231\020\215|\231:\366}\031k\201\203\031\221P\206\227\235\372\224\231tg\203\230|\001\233\031\3247M\031\374\034\362\230\344\314\037\230!\034|\030\036\345\014\027\303\304\204\232\237d\202\030\373\005{\230\037\312\330\027\375\230\374\230|\356\200\2306\327\027\031;%\330\231\326\201\035\232\272\204\317\227\252Z?\226\037\364\243\231\316\252\014\227\334t\n\030\200H\362\226\327\357\014\031\342\203\233\030\017\207\r\230\277\241\365\026\256)R\030<\356e\231\304;\245\027U\271\225\030$?\312\031\304c\351\026\346x\033\030\010\372\214\031\363\300K\026f.\024\230\026\020\241\227j\362\321\230\344\352\234\026s\221\317\030\220\035\276\027\251\333\305\0318\305)\031uo\'\230k\353\273\026\033\233\024\030s~\260\230\030\306\002\027u\020\370\22741\376\230\014r\222\030l\002y\030ad\351\027(X{\231\246\013\330\027\002\037\343\230\3524+\030\252\234\315\227\361T\017\230\217\242>\226*_\033\230\277\364\026\230\354+\000\031\320F\"\226\r\202\334\227\367\001\022\030$g\037\026U\005\022\030e\274\020\032\314\210\375\227n\245\202\030\305\340\376\230\032\t\311\230C\351\347\230\236b\363\027(\270t\030\022\235\364\231f12\230\213\365/\231\311\323\246\030{\001I\026\310\240M\031(\237\003\230\262\375\313\030\302\005\373\027\351\037v\227\233L\235\031\004nw\026\234\214w\230\277\313\027\231\004=\207\231p}\262\232\242@|\227\336b\327\227I\360P\030,(\352\025\177\025<\031\314\014c\0305oR\027\324HC\031]D+\031\032\221\201\027\3428\022\231\025\306 \230\220)\205\230\356\355R\231{\002\021\232\247\341\240\227\001\"\243\230\353\216\010\031E\253\001\231\251\233\327\031\304\001\225\227o\211\225\030K\227\027\030@\371\315\023\030c\031\230F\370\245\0264n\230\231I\367\023\031\376\241\343\031\323O\310\031\330|V\231\342iP\030\367\343]\232\272/\315\226\002\3711\031XX\335\225\026, \032\311\337\037\032h@\201\025 \021\374\024@8O\025\364\352\021\230\205\361\213\230\032\333\277\027\2500i\225\217t0\230+p*\027P#\244\230\312\3541\230h\263\227\231\316S\272\230_X\202\231\375\003e\230\raz\232\006>\033\232\327\243\023\230w\367\305\230\274#\243\025.\232\271\027\373\007\233\030n\320g\031K\251\203\031\216l\327\031K\222\276\2316\322s\030\037\225\004\230@a0\231\263<\'\030\004B\334\227\333r\204\232Hi\333\230\311\333\262\230\226@\227\026u\273w\230\246\357\272\230\275\245\202\2276\037\370\227P\263+\031\\@\205\0271\336\005\230\004\330\272\031\371\305\270\031\032\255\212\226\037\317\321\227\001\364\231\227DUP\032\004\345\004\266\274!\204\032.\007c\030{\311\320\031\214w\365\230\220)\t\225@\020\364\024\356p\345\227\004\330\200\027\233\201\024\232\200\214\352\225\347\226\327\027\007y\373\030\200\372\\\031\241n}\227\246{~\030\217\333\203\032~\014E\227\0275P\030s\213\261\030\'\273\010\2307\276r\231\371\240\321\230\254,K\032h\010s\230*\225\200\227\310\241\275\030\201W\031\230E\022\365\0260\016\005\227l @\227\230,\002\230w\3052\031\275:\215\231le\326\0277P\251\031I\034\030\030!\306\365\027\377\326\330\231\0262{\0301\251\240\032\2064\225\030\230\032\351\226\365u\007\230\306\364K\030_I\240\030\322c\033\231V\314H\230\371\250\037\230\265\010\256\026\312}\200\026ULd\231d\343/\230+\200\302\027\256g\267\231J\311\001\032-{7\230\343\356\261\032DK\322\027\342\246D\231\016\370\030\230\255\247B\030Y\\t\031v{\277\030q\006\206\030\201\315\035\027\3709#\227(*>\226>4\235\230\273\003\237\226:\270\262\227}\317\214\030x\245\211\025\003\177\235\231\003q\274\230<}]\027}\202\373\030\255\273\271\226\200\2142\027\217\351\326\230,\360\002\031k\270\320\231i\354\037\031\362\232\232\031\tO\025\030\003FA\027\001%\006\230\366\237\236\230@\261\272\030\3625\315\226N\331F\230~\320\n\031\222\323t\230\004\032;\230+}O\227\033\357\373\230\204\001\245\2324\025\231\026H\222\204\031\312`\236\027\221\222l\031\n#\321\030a\205\260\030\265\n\002\231\022\230\240\227\360\267 \225-\261\007\032\246tT\227J\326\202\0322O\263\027\020|5\030\037p$\031\251\277\321\227E7J\032^\301\225\230\227\255\302\230\231\030\200\030X\336F\0307\252\240\0275\t\013\231\356M]\226\024\344g\225\025\r\310\231\016_l\231F,\222\226\220\225\323\225nh\316\230\007\342\266\030\026\366\003\0306\022\341\030\260\206\316\225`\026;\2269oP\0309\177g\230\360\312\366\030\022\032\003\2316\001\013\232to\035\031\344\n\316\227\374\303\023\031\251Q=\031 &\217\030!\371Z\225N\311Y\031\363\374=\227@\357\211\030\211\206l\032\224\037\356\230:\325\032\227\"<\017\230P\023\245\025Dj\347\226\261\311\241\030\351(\242\231\0200a\231\237cY\2311\345\257\231\255\334\377\031\344n\033\227]\330A\032\262\215D\231\026\217L\227L,\306\0252\303\252\031\024\324l\027\314pn\226\373\267\235\031\334e\210\230\026\021\221\026\301KV\0307\340\211\230\266\340\327\030\377\005\334\226v\223\271\2304\253\245\231l\321\343\231w\r\245\0278/2\031\245\251\n\031A\313_\232\233\254\'\230\306\001\034\230\330\\#\230,9\376\0279\204\364\2314V\316\227\276\302(\030\253a \231~\025y\230\310\233\317\027\214 \236\225Q\356\212\030z\362\346\227\324V\r\027G\374\372\230\207\253G\030\0240\276\231\314\242E\230\020k\215\227X\220P\030\217\370\210\030\221g\017\230\243\242y\027\257\321\025\031\262\240\240\030\232\230F\030\032\264$\031\363\\_\030\241\303\024\031\210\305\263\025\r\251\366\027\314I6\031\003\027W\230s\270\312\227\215X\211\027\3120s\0313\325W\231\000\301c\031\3769K\030\343\221\027\232 \252K\227\236\271,\232m\361\"\030\220\347u\226\301\204)\2302\226\366\031X\247\334\226O\200\360\030t=g\026j\300\312\226\325N\227\031~d\333\030+\327\201\031!\"\342\031dia\230\252K=\031\353d\313\030\210I\311\0271\374G\2325H)\027\337\r\232\032D\227\247\030\312X\277\026\334\230\033\030\376\247\300\027\014\\\025\230\363T\364\031\247X\241\231Pn\206\031\350})\227\301\212\027\231F\300\317\027J\2437\030`\375l\027\367)\253\031Zh\002\230\020\321\212\230LV\365\03166\024\031.\177\242\030\236\344\336\027\225\256\036\031\265F\246\027\276\270G\230)\354\207\231\366!\010\0309\220\241\230\325-\205\030\036\024\031\230\307[W\230\357\372\225\031E\205\251\027D\255\237\027\255\240\022\032k\006\034\032\263pe\027\274\033Z\231i\216&\231\027\234\211\031\376;\020\231J\376E\030\333\234d\030\010\205\005\226\360,\355\230B5\201\030\216\306K\032\2324(\031+Yn\030\266W\274\227\206c\353\026\355\332p\030\330\037T\226+\3168\030\250_\031\032\366\017\242\227g\2271\231Z\234\004\027:\272\036\231]\006.\027\250\024\325\231\024\227\214\030f\365\027\026\355@\237\027\177\276%\227\030\331o\231\030\326\275\2278_K\226\234\345\273\030\220\244\301\224\034Sm\030*\276\014\031,\211m\230\025q\216\031\010\312z\027jdy\030\277\267\330\031\271\020\332\2308\210e\031G\267N\230\231\331\374\030\276_\272\027\220\016\337\027\227\020\227\230\024\036\301\026m&\365\227\244.\014\230\303\370\306\030\200\303\267\024\347\3351\231d\0213\027\214\365\031\231D\201\342\027f\255s\0304L\017\031\262\352\n\232\232\021\246\226\230}\270\030,\336\203\024\223\026\000\230\0142\253\031\202\314\204\232R\004,\232\333)^\030\334i\035\230\235]\377\027\377g\010\227\202R\020\030Q\214\375\030\374\306\215\225\245\002\340\226\266G\231\227\240\321U\030\031\030\353\227\373\375\301\030\250\250X\231e+M\231\342\204`\032\227\r\035\031\272\301\226\230\323\\\236\0301Lz\027r\211u\230X\030\230\225\005\200\251\227kO\347\027+_n\230\020\357\026\230\375\353I\230\021\231\202\030nkT\031\306\3142\230m\244I\027\351\245T\231\027\263\243\030x\'\016\032\261\020\361\231\223\215\330\227u:\316\2274?\266\030>z\240\232\005Z\271\231b\307\220\027\3162|\230\271H\376\230\304\002\"\230M*\304\230\243lt\230\032k\177\030\240^\231\024\236Q\314\030\352\026\351\230#\346\211\030\351\271\301\230\277\234B\030\024\000\253\231\032\037\027\231\302J\214\031\027\346\215\231\377\317\236\230\321\002\'\2319\364\336\031\374\342\346\231\357\237\215\230,\253\333\227\377\371\252\230~\371Q\031\346J\303\230p}:\030\365\3139\031\\1\354\025;\325\273\027\000*\361\224\333;^\227\237\'\233\031D\222\030\231K\310\336\030\342@\205\227\256B\026\230\206\333)\231\037\221\264\031\307\324r\230\334\037<\030\210\027\307\027\216\263\235\227\274\010\357\226X\246]\230A\347~\230\215\223\027\231\370K\245\030\234Wh\230\024\274\242\230y\335\322\027U\010\254\032S\215\351\227\246\216\'\231.\240S\027\346\353\357\030R\033\014\030\344\247\n\026VF\021\031B\t`\027 \350\003\227B(?\230N/\351\230\260\342\"\031\336\241\031\232\252/$\230\324\305\r\232\270\t$\2323\236^\030@\364s\030lh3\027~\367\335\230H\307\037\0326\300V\0275\214\244\032y\2206\030\3450\371\026\202\341M\231\260f\r\225\1772\010\230w\3550\030\347@\301\230\350\004\314\025\366\337e\227\242\275\003\227\345+\210\231\317\370\002\232E\207\355\226\322\240\271\031\004\213\252\232\242(\356\031\312\365n\230M\307A\027E\250M\226\200.\303\223\356\262\212\027\266\266\215\230\034/<\230e\255~\230\351\250\004\230<\377n\030\205Ae\031\\\336|\030\321D\034\032\332EO\231#\020D\031\345J\365\230+\263\254\030\332xo\030_\376\271\230O7\216\027i\3565\231\363\3321\230\241\343\355\226\354\375\355\225\326\375!\227N\353\372\031\021\264\027\030\342\257B\230\240\037\272\027\250Y\321\230\322\220\303\230?0\211\226e\220\214\231\000\237\262\023N\033\373\227[\264\231\231H\202C\226%\003\305\031\330\215\014\232oP\371\031\250\323D\231\372s\023\231\263\345\332\030\352\255#\032\212\227\356\227.\220<\031\357\2028\031ds\250\232~3\036\026\321\342\031\026}\010;\230\330\217\035\027T\255\262\0272\3438\030\262z\255\031S(\372\030\016\307\"\230j\262\003\027\365\336\203\031[\260\305\030\241\n\315\0258\003/\027k\3210\030\330\022\351\230}Gr\032\274\257G\230\212\205/\027\334M\032\030\026`\037\226T\252\037\031L\352\321\231o\207\276\027\266\326\377\227\234\177\273\231\354m\302\0260R\263\027Az\351\027\232\014o\230\016v\022\227\302\333\250\027\010\324\356\027Tb\333\027\220$q\231Ne\215\227&\373\206\227\203\322\'\0318\002\'\232\2601\240\027\204\235\261\231\360\001\232\2268\005\214\230\374f\346\230\0327\257\226\223\234\264\031\372<\235\231(s\370\227a\177)\226\273S\010\031{/\002\031\256<\245\031\217\013F\231\323\272\303\231Y\307E\027\376s4\230\307\222\316\030\361\362X\231\003u\322\031\036z\233\231\000\000+\216S(+\031\004~\035\026\351.\210\231\021\325\357\030\026\362\215\225\316\311T\031\275\260\201\030\310q\275\225\314\253;\032\2020\223\230\274\232\032\030\264\225\206\025 \024\203\027#w\342\027\304\357\226\227t\375H\231\356\303\246\027\301v\326\230@\216\322\0242\216\025\232\241\014]\227n\362\262\027t\211\240\031vS\204\0273\2041\227b\324\204\232=\356\313\027\3009\214\223\213\205\221\226cB\212\231]\3352\227\210\250\034\030F\216\254\227\371\2121\230\216\233\017\227\000\210B\032\n#\333\027\216\270l\031\373\325?\230`\376\212\030/\023\253\032]\303\330\227\300\2250\031\313R$\031\007\226\241\031g\271/\232\344\022\375\0304 C\031m\345\032\2320\232\032\231\'\341\243\230\216\202\005\231\335\356\204\230\311\303\325\230\305\323\225\031\221\000\336\025\306\034{\227\242uH\030E\261\204\027\225\205K\227h2\273\225\264\034F\030\254\324\234\232=\274\204\232Tdv\031\223\017\211\231S\002B\0308\301\330\231\205d%\231\272T^\227\006\264\004\231\272]5\232\3374i\030\374\031j\226\270`\014\230\034\255\343\027\312\001\316\030KDD\030\361\201N\231\322A\356\226\000c\222\024}\241\310\230\217Q\315\226P\245\257\230\020\310\"\032\032\022D\231\027\035\221\0274s\t\030\3460\223\230\221\303:\232\376IC\027\216? \030\013g\337\2301\253Y\231\350\002\001\026\220\321 \025\270\253\032\226bsd\030\357{\276\227]\330\213\230\270\314\330\231H\352\371\226\252l\"\231\324\364\243\030\023\340.\230fg@\027\352\276}\030\t\353\330\031\247G\371\2274\327\032\027\210\205\215\027\030V\023\030yc\245\226\274z\002\231\001\233\273\030\336\354\202\032X\217g\227\203\212!\030\211L\001\031{\r}\231\365\2432\231\000>\335\031\322\263O\027\000\226\264\2309\356\352\227\341<\215\026;-\347\030~5\230\227\322\242\354\227\310\214\275\227OP\024\232\023\006\256\227^\016\037\031\366\2515\032\254qO\230(m\034\031\374\274\200\227\250\317\226\227j\"P\230\201\310F\032\204\360\212\230\334\232F\026@\003(\027\031\031\037\230\300_X\027\226d\273\030\203\034\225\026<\227c\030\360&a\232\374^.\031\3717\235\230\240\032\242\224\036\317\003\230\350\234U\032\325kB\232cR\241\026n!B\030\247\227\237\030\310\006\312\226\261h\270\030\320\312\210\225\356\235#\027\361W\364\227\203\225\207\231\304Y*\030\n\310\213\231\332`\n\031p|\237\231\347\251I\231\261\327\034\230\206\315\207\031@\323\323\027.\003U\232\314\222\017\027\236\236\216\0272\365\304\230y\322x\027d\377\013\026px\372\225\252\357\316\026\313\023\260\230\271\024E\027\246[\242\030\307\224\225\027u\361c\031\264\"\226\230\262\254\277\227,)\340\227\020\220\035\231\206\002\030\231\034\356%\230\335\204&\227 -\261\031?\314\323\2274\300\252\030\300ym\224\274\263\021\231\266\034\231\230\362\206c\230\231\213\206\230D\206N\230\2425d\225&\303\355\027 \026V\2304\325\327\027\331\250\366\030\031c \232\375\242\251\026\2768\377\227\"X\023\230b\340T\026\340`\267\231\023\306\016\030Xq\277\226&4\014\227\251\213\335\030\275\324\303\231\251\246\322\031\352\\?\030\273@\014\230\207\024\211\227+@[\031is\224\230x\210G\031\266t=\232C5\211\231I\274\262\230rs\241\027\222\332\353\030c\243\205\230\244\307\345\227\305r\262\232\201{\301\0304\321\032\031\323\021\260\027@\323F\025\312\000\264\227@\303y\032i\342R\031\311\357\243\031\211\231\244\027\"E\035\231th\220\026~/\205\031^\203\200\2323UM\230\330I\251\027\242g\267\031\302\362M\230\214\253&\230V\317\325\031\216q\t\227\214\022\365\027\205\027\256\030\242\276\261\227\004\355=\231\370\221\013\227s~E\030\370\323\210\027\334\371\331\030<\346\005\230Y\033\250\031\027\231\250\031\3366z\230n\323X\227$\030\257\027\370\204[\231\200\321\230\225X\2415\031\273{\222\026UWG\227\264\356\356\027\362\212\221\027\3072\002\030~[o\230\3371[\230M\003\355\025:\330\'\231\332\341\316\026\376\355)\227\366\3073\231(6\301\025\360\244J\226^\266*\231k>}\227 \313\331\227\020\014\361\027\317\260\223\227M\375G\231\2464\005\226\326\020<\231n\027)\025\373\307\027\2313-\207\031\232s\003\230\372\270\362\030\to\317\030\\V\334\227\200.\333\225\253\222\241\226\304h\207\031H\204\315\025\030\0326\227X\263\037\031>\356<\030\001\247\010\232\007\366V\030\254\022V\031f\362=\031\270[\275\027\334\377f\030\247\rt\227\232Z$\227d\273\353\026\200M\325\031m\202\270\027\300\315{\027x+\272\026L#\277\231\355\205\243\230hME\025\230EK\026\350\001\203\027b\"%\230`\241\277\027\262\235&\030\034\021\234\026x\267\261\230\310(\024\031\266_O\030\234\253R\030\275>\244\030F\344\217\030\200\347t\231V\302\255\032\2460I\032w\237\377\030E\310G\032\220J\000\232{\354+\230\316\273\350\227\230\006^\230z\333R\031\210\324r\027\312\217u\227lE\377\227\2449\236\030$\366\350\231\022\025b\031[V\006\230\345\321u\031Hw^\027\354\203\254\027Oa\315\227\013\230,\031n\250\327\026J\233\262\031[M:\031\017\360\361\025!\216\245\226\220\360\014\030\207\320\036\232\333\376\220\027\356y\267\027\037\321\265\225`%.\230\\+\236\226\236\\\270\025e\276\250\230{C\225\227\346Y\254\030\034j\003\031K\234\236\227\260\316\342\231>&\014\030\014\355\r\030\366u\203\232^\340\354\027\0100\035\03037\244\231O\232#\031\001\026\341\231\265\335\313\027\304\016\344\030!\t\020\231\304V;\031\372~\375\026\010\016\207\027H\212\371\026\236\304\362\030\253\343\034\031$\264\234\030\302W\217\226\362\037,\0278\211\204\030X\302P\225\231\277X\227F\343+\031\207\177#\027\351\031\'\032\343\310\233\027:\273\374\227f\336\225\027\313G\200\230\220C?\031\005\222)\030h\231\305\027O\036\"\227\207\250o\230(\307\242\027\360k\360\023\315\363v\230\330d\313\227\232\265\004\230,\345\225\227\205Z\"\231e\233\300\027D\233\342\026\027\2452\230\017\224\332\230\260\303~\227\335\222\204\232/\025]\231\350\241y\2271\264\000\232\344\347\202\226\340\025\320\031Y\356\223\230\356\233\000\230\267p\'\230\263W\026\031 \247z\230\334\032\375\226\354\274i\027pO\"\030\220\007!\231{\265\362\027x\036\306\031\"O\211\2270Xo\227\343\225\230\030AMD\032F\322q\232S\330\001\0326\337\320\227;\261\344\031\256\241\210\2272\324\203\030\356q\306\030\264\300\320\031Q\267S\027T\270I\032\373\t#\026~K\245\227v\336\024\031\212\366\261\232+\223,\230H\277\374\226b\214;\2268;)\231\243\223\235\031\350\210\222\227\030.\n\026\376W\360\227\367\350\375\031\334\315H\230\212r\206\226\241\352\340\230\323\364\023\027\366\026m\227N\006\251\025F9\321\0269{\301\227/P_\231\377y\266\230\035s\004\227\226\263\215\230\324\356\200\225\372\014\312\027f\214|\230\001`\222\027Za\333\031\002&W\231EI\202\0323\325\025\031\371\326)\030\236.\310\025\250*\226\027\275\254Q\230\376\374\250\027\204\021Y\030\260\210\034\030\364Q_\231\264\017q\025\036\227\306\030\024!o\231V\366(\230\321\211/\031\021*\317\027\324\335\n\227\026\357u\231\247\247\371\227\261\341\\\030|\346\265\030e\"Y\030\235\242\262\032\371\263\324\230h\005H\227\207\210S\231\014x&\027\223OZ\031S\3724\030c\273\266\030\022S<\227d\343>\026K\254\274\227!!\001\031\366\231\235\230\344#\034\230\004\016\027\032D0\375\026\213\036\262\232z\215\031\231=`\312\230\262D\230\027a\220H\032K\025^\030\232\370n\026\312,\n\227e\203\235\231Pd\036\227\233\373\007\227<7\256\031?D\202\031\272\021#\032CB\271\027\334B\207\025\352\327\032\032\374Z\002\030V=\277\030\317\003\202\026\331\206&\230\225\343!\032\305\266J\232M\373\002\031\324!\250\027\221j \032w\324W\027k\322\024\027\252?\016\231\305\223\216\231\233\234\316\225lQq\231\347?^\031\271\336\207\027,\202\265\030\234ix\230=\231N\230@\242a\230\227G\223\231W&A\030\216\022\267\231\377I,\230\"\370s\032\010^\221\226\344c\225\0300|g\226\302\201\234\030i\237\'\026\217\036\260\032\241\344\254\231\234\002\273\027\005\206\033\031\376\227\r\231wK\347\030\360\315\361\027\306\260l\231\000\035\360\227Q\322p\230Bx\225\031\227\"\\\030\030U5\226\225e:\231\227\304\253\230XS\215\231`}w\223\020\007S\026\305\271\264\031X\215\334\225\302:I\227\235|v\030D\242<\031\337\335{\031t\243L\230\274\355B\030 \375\332\230\t\375\266\231 \224\355\227D\262\255\231\253\331\204\030\032\320\342\226%\230\025\230\000\006\226\025`\264\237\230>+/\031 \034\203\027\367\305\004\030\242*C\231\340\213K\027\222\344\322\226X\325\232\231\223s\257\026P\312+\027\376\211#\02662\211\026N(f\030[\365\205\231\252\353\244\226\320\246U\032U\243;\030X\360\235\026\241$=\230\201\353\224\231dRR\031\240\325\266\031\356\356\201\231C \340\230\301\262\216\030Bw=\230\336=6\230\224\354e\032\316\177J\230\022\022#\030\370\331(\027\020+\236\227\3060\253\226\321\252\007\032ge\242\030~\013\001\032#}\264\030\241\355\320\030\242\235\300\026\334\254@\026\236?\010\031\355\375V\027\341)\204\225\2759\026\030D\223n\227\367\311+\0312k\247\231BF@\230\331h\246\027\325\267\214\226\370\312\205\025\321\2048\030\370\214\341\230\237u\243\227\342\346\220\025\351\023\262\030\334\216Q\030\264\200\304\030\345\342V\227`\203\010\225\230\215\013\227\321\363\356\030\234\037x\230\216k\000\226\036\261\213\230\272&\200\227\"\\\032\2303z/\031x\255\201\025\022\237\006\230\232\227\025\231\025\204>\230w \264\231\030\257>\226\260]n\230\310\207\274\226\024\203\260\232\217L\020\031\261|\237\227\321X\314\027;\347\271\031\361\307\210\2314d=\027\214\tB\032\005F_\030\266U\032\032\254\037G\031\274[g\230R\247\276\031\274Y\025\030\000\363}\227\337\370\205\0304\367\235\027\257z\342\027#,%\231\024\316\016\230\245\000\312\031\242h\034\027\235\302L\230\306\005:\031\210.\030\226j\224)\032\256\245A\030\004$v\230\036d\037\030r {\030\"P\230\027\303`\252\026 \204e\031\324\305\226\230\330\214\272\230\026\006\\\026w\226\014\231O\024\341\227\345\230&\031\236\337A\030\220\221T\026#\356\243\0266\346^\231>_\017\031\240\277n\032\306\374\312\230\r{F\227\247\305V\231R\356\004\231l7R\231\270\377\002\031x2\"\227g\231\271\231\027?\212\230\222-\344\227 V\206\030JC\204\230\002\323\254\2252_/\230\230\014j\026\304\0248\227`L\240\026Y\366\243\0270+\r\232\251#\236\230\236\217G\032\027W\376\227\256\375b\032\331\014\362\230\224.\244\030\360L\324\030\'o\335\231\357_*\230<eU\026\024\357\361\231\256\311s\227\212\317C\031!\252\310\231l\\o\226T\241F\230\274\177`\032\244H\035\230\304\307\307\027\223R:\2314\331d\025\320\275A\030\332\226\007\230!\364\216\227\215}\"\231\246\263s\027\037\275\023\227R\363\364\231K\272\274\230\336Y\275\030X\030\322\227\032\243^\230\221\306i\231P\202S\231\"z\221\227\367C\311\230|\000\360\027\306\340\271\2300\220\274\030\026\026\r\031\3366\034\227$\306>\025\216/\367\026G\nn\227\372\225\243\027KPx\227\337.\250\027\222\331\336\027\014G\"\226@Gl\025+I[\030T\371\226\030\002\263\263\031\374G\367\030\230Z\307\025\231\360\022\031\251>\343\026\227e\001\031\023\3300\230 ,\301\231\235\205I\027\342\361\016\231\3321\331\027(\032]\232\036\264\212\227\376\330\234\030r\302\032\030\236\300\304\030\000Q\316\023\320\347\342\026\200~\317\026\000\215\272\227\233\304(\031\2270\243\230S\243\250\030\374V\005\230\303\316\315\026\022U\222\025nw\"\032\016\272,\231\200J\221\230\345\322\331\031Ev\246\230;\373(\030r\354+\230F\026I\031\234\313[\230R6o\031\315\336\314\025\325\226\177\030\345\t\321\030\323\'i\231|\265\264\227\"1\323\226\374\374}\2272:\217\027z\305\375\027\376\343X\231l<\326\031&<\024\031d\332!\027L\217\212\230\237\357j\231\"\247\214\027\310\r\273\230\315\323\202\027W\212\300\025\360\254\231\027\354\303\204\232\360\3331\227\327\375\r\2308a\225\030\257\307\345\230\262\031\225\227\316\201\235\031\332y\365\030,S\274\027\325\231\235\232 \3618\030(\351\242\226\025$\267\031>\032\216\025u\214\317\231\362\237n\027\002\230\365\027~\375\216\227W\3243\030\213\3017\230\206\254\340\230\216\232\003\031\250\004/\032\254\313\354\230SJ\233\030\031\r\236\232\200i\215\030\274\314#\031\365\345(\031\277\344h\227\365\035U\230\021\265\001\232\r\300\370\030f\252\356\031^Z\361\030\324\321{\230\200\350H\231\030\227\242\031\340\324\037\226\264\220\271\230\265NS\030\370]\227\032^\340\037\232\037\r\337\230\226G7\231\241\265\203\232 \347`\230\342t\350\027)mk\030\203\345N\230\022\211\021\227\212/_\231\260\220\224\0304j\234\031\036C\010\232\216!\322\030\247\346<\227\245\335\227\230\377\313\261\030\345`\223\230\240\360\251\030\375|[\027VPI\032\351GC\2318\233\261\031\355\340)\030T\261\362\031b\354\272\030\000\0062\025=\3312\031]7\200\025pz\030\025\2654 \030\250\313\316\226x+\342\027d4\001\031\003|\346\230nw\337\227\274\230\273\2252T]\230\211\267\230\031\006B$\231p\034Q\225PG\004\231\224>f\230Z\371\032\030\033o\224\231\245\263\356\231\214\237M\227\267\302\021\227\024\371\300\227=\315\000\230\375(\311\027bH\204\230\217\301\023\232\271\362\325\031>\030\262\032\321&\215\230\236\246\001\230\200\326\212\027\270\2209\226Dm\026\227\270;\274\026\001@\335\027\315\205$\227\201S\255\232\373\337\262\030\235P\244\031d\235\220\231\222v\037\030\237/\021\231)\203\207\030\275F\007\027m\023B\031|\266\206\031E6H\031X\345\002\030\261s\232\031\013${\030\223\r\r\230v&M\227S\007\233\030\006\247\365\227\\hE\227.\234j\027\207\2356\027\355\225Z\032{\254X\031\260\232F\230\030\324\251\226\334\312\320\026qJX\027\231\273\260\227\245\034\240\226\340nM\227\222\375\251\231%\307\214\030\244o\032\027\330\267\326\027\245\n\313\230\277\214\263\030/\237R\031\021.\007\031])[\227N;\323\225m0\016\232\352\277\343\225;(\276\226/\210\343\230\264\337\004\231\376Q5\030\020~&\031\004~\207\227P.\024\030p\322\327\231\005S \231\350hY\231\330Ga\230\025\350\352\230Y\361\302\2300iJ\226\252 @\026\246|P\226 \366\014\031\314\204L\226\242[\335\0279\271\212\027\360\355\263\224X\245\327\031\237\254\177\230\336\027\022\2303G\001\231\276{u\230\303\246\347\226\264\333\362\027^\214\303\225\245\316\262\226A\026\"\230\210\256%\226\336\216x\2268\023\021\032\t\364\256\031\t\267\371\031\244\232O\026^\300\323\227\270Q[\230\300k\317\230@\361\307\027\372M\343\027\317\270I\027\303\367\017\231A5]\227\263\014\272\230\347\203\223\031\300\370\200\025\34103\230}\317K\027\240\305\026\224+!\306\231\240B\034\227\341\272(\031\n5\220\23068\001\032\246\032\271\227\020\256\026\031\270\227\377\025\005\310\205\230\354/6\0254\177B\030n#\013\030\316Z\330\231P\274\227\027\016_\327\031\231\310\217\230\351\370\"\232\3327:\030\300\353\311\025v[\252\030\006#e\031\177\331\262\230nsp\230\222M\212\231\tL\304\027\360IG\027Na\n\026\207_\017\031\034\350\032\230\244J\204\232\007\2051\030\324\031\251\227\305)!\031\241P\307\030+D\313\230\022#3\030\206H\357\030\362\315\203\231\240\241\301\030\360\037[\225\3216+\031\362\377\013\230(;\320\230X\027?\031\350v\014\227\376R\256\226\034\025\370\027J\330\316\027\006\333D\027\226\334\335\226\222\317A\027P$=\032 !K\231\345\265\246\232\310\221W\231\034\262T\030\255\3370\231M\313\016\230\023E\304\226\346#O\230u;\027\230\213\212\210\2279\235l\230\375\026\235\027^ \360\027\243\030\270\2306\3459\232\354\3373\030L\354\260\026\'\010\034\031\344\311\004\231\373j\230\227\025`\206\031x?\003\027\216iG\031\277\026!\232t/s\230+\224\'\230\250\243\254\032H\351^\226\026\326\304\2278\270\340\031\262b\252\230\271\276\315\231x\350q\230pz\031\0261\002\001\232=\016\251\232O\263N\227\265^b\230\330^\007\031\020\364R\031\214\370\274\030\231\342\200\030\340\202y\026\260h\202\2315\'\354\226\\\222\320\030\240\264 \030\223=\204\232i\231\277\031\233\335\323\030\350)\222\232\016\244\306\226\232\207W\230\300}1\025\224\210\372\030\217\010L\232T\360\030\227\246k\327\230\267\217P\230\312\261\307\027\277n\221\230\356\210\251\026\220\3159\030\242\275\254\227NK\255\027\230\242\214\030R\265\340\030\375\034\346\227\305]x\230\356V\230\030/-F\232\240M\334\223VhA\227\267\223\357\027\356A|\231\372\243\025\227:Y\002\231?P\254\231\200\356\n\230\240bK\024\222\033\243\231\273\350\032\230\306\014\330\231p\321K\232\372\331\004\231\221\030\313\027\010\003\201\227\002h@\031\234z\241\032\222\r}\032\342\202\251\027f\202;\231\233\000\221\030\334\355k\230\035V!\232\2727\247\027x<\031\2318\2462\031\272x\266\231\020\357\246\232R\332\363\227\232{\351\030N\244\330\231l6\370\030\251rU\230\3234\270\027LU\276\226\302<K\231h\364\246\226.\315\211\230\257#\260\231kO\260\226p\337d\026n\013\244\230\036\001\207\230RJ\242\026\340!\017\026\302\213\320\031\335\202\026\232\314a\347\230K\017\356\226\244\211\231\031Z\277\223\227\t;N\230\207W^\026\351^\246\030\221\353\213\0302\343\014\230\204x\375\227\334P\344\025\220\277j\026\352\035)\030E\0028\027\250Iu\025\3140\314\230\230\212\024\232w\2555\030\220\324E\030\271z\000\027B\314j\232B\215U\2301\353\212\026\000\275\245\223\244)\200\030\214ZZ\030\340\2708\225\000\217O\226\350\242\357\031\341\203 \032}\224\247\0312r\210\231\030\255\r\030M&<\227R\307e\027\350t1\030\304Dh\030\371\233D\031\235\230\207\031\330\206\301\026\231\3406\227,\310j\030\026\237\207\027\t\227\376\025\034\336K\031mYS\030\220\330\207\026\242\243,\030ebi\227J<c\227\371\204\375\027\234fq\226m\266\210\027|\010C\027V\031I\227\310\254\302\030\202\374\330\226UD\366\231Q\216\362\030\227\017\370\227.k\005\027^\306F\031\020\351\024\031\020\037\246\031\016\324$\230\014\335\230\030\366\002\264\227r\377#\227\260s\030\230\322\017]\031@\005?\025{;\"\031\213\001\222\031\254\031\304\226\243\027\305\230|\264\365\230Z\331\336\227\254\'\036\031V\215\271\027Y\343\243\032\260\261\036\027\365\255\366\031@\330\276\230\316w\275\025|\262\246\2271\362\340\230\2110\014\0318\337\336\230\226\243m\030iz\242\226l\2742\231}\001\032\032\351\246\236\230\3079\222\030\207\326\345\230\251\372\234\227\032\r\360\231\242^\237\227\304\250\327\231<\266\215\030\246\314\246\027\342c\005\232\260\230\244\027\246v\n\230\256k\213\026n0\265\027\330\312@\027\276*\002\232\366f\205\030\231sL\230\324\027\215\026\264\300\310\030\036\253R\030\277\240\211\231^\254F\230\274\013\235\027\373\347[\031\214\313s\030\346\314\265\227Bdr\030\207uG\031.\232\261\232\236%\333\230\354\261c\226\274?U\227O\022\331\227H\205\026\227\215\376\331\030\257T\354\230\321\002\033\230\254(J\230Z\336\006\030\3347\303\030LYY\231\323\365\362\227\005\227\362\230\366\303\360\227Y\200\025\232\023\372\305\030\263er\231\205-\031\026$\245]\227\324\220\237\227n\304\200\030iL\346\027\226\260\017\030b\n\002\027Ah\006\231\017\0045\030\245\264\016\031Z\3354\230\027`j\230\226\216{\231\200\021\244\227f\213\211\230u\227}\232\310\216\210\031-\025\265\230\362\360\024\032\327\357\236\031\346\313\213\031b\337a\031X=\233\027\310\336_\031IA\266\231\221\030!\027n\334\265\027d\024\264\230\214\363\323\227]E\360\227X\237\267\231\207y\216\226\363\t\023\231\033\264\362\027*\314\366\230Y\306\311\030\316\026/\230\002q\020\230\005\317\200\227\311\305\250\027\267]\275\231\004\2529\027\204\312\311\027\304\345\026\032\202YE\232`\264(\225\266\344\377\231\274\030\205\026\300+\251\225-\302!\227\322\372\226\226\240\177>\230\252\377\347\227\237_\003\031\214\0132\030\310Z\211\027\360\343\007\030\032\014b\032X\001p\031\017r\033\027\2254O\230:\300\177\230\0103/\230\244li\031(\274\215\225\300\314\236\026\260\214\226\027U/\315\227(\217\260\226\003\3470\030\345\000\014\030\245\236\201\030\355\\\233\030\266\275\304\226\022\317\314\030P\365\225\231\326\263s\230\020yk\026\325a\261\032&\013\342\230\270\007\247\026\325\215u\030\303:\236\230 \254\202\230\004L\023\230{\r\037\031\307x\227\027\345\203\323\230s\333\244\230\222q\222\030\300\224\371\227\027Y\034\030\221\305\275\030\217I\003\2271\025o\031\323)\373\027"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "q\376\2077\317\350\2309~r#95\200\2262%\\\344-_X\267\265\331\331\3717\3056\2025\206Z\0255.\364\3211\341\377\2108r\217\2650\276\237\3365\034\267\r9\326>\3153\253\352\3179\177\000\2736\024\240\0178\265\374R9\3400\221\264\253*\020.\254q\304\266q\264\'7\341\207\3449\270:\2014\2610Q6\326{K\265\020+\006:\343\326\216\261n\310-8\201\361\2619\307\356\0329O\271\232:r\001\365\272\250\375\022;\342k[\266\352\226\3324\217l\3278\030;\355\272\2744c\272b4\251\267\323\300\260\267\022\347S\272\377B\265\267\'U\2105)\303\030;\004\247\3479\006\224\000;v$\237\271\204\"\216\272\226ah86\364\256\271\303\270\230\264\366\252`\272\213\373\021\2722\270\3669\204\032\r8\301\266\317\270o\332\003\272[\005\002\273|\020\3267\363\233\025;\243\\\035<p|\347\2579w\216\36589\24492\263\252\021.B\307`\265\346\256\2358\241\002\2265G\264b5\020\250\2232\370\345!8\314\026\2601\026\242\3555\260\225)9#\324W6\233\364\3429\034\236\2366\363\320\2677\260\317O9n\370\312\264Z\243~-7`\3366\232G\0377\300\266\227:\304,\2354j\264M6\300\364\343\266\3738\3749T+>3\332\':8\331\226\023:K\204\"9"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\316\304\2465\377\027v7\002\357)6K\203\0064\273\013\3675\207j\2244-@\342\263\300J\2527tn\2621\205\305\2536>p\2341\345u\0008\205|\2217\016\240\3571\374\240.\265\013r;5\223\266T5\232\357|7q\331\3015\252n\2566\315\231\0346\215\265\3135\273O\2347x\001\2214\364\337`\266\007\305\2346\310B\0146\246\267\3663\220\224\2760yw\3605M\323J7\327825!\306\3149\256*:\274K\014\026\272X\272\0028\010Y\2047\030\037\202\267\240\204d8\332\202\321:\341\027\020:\205\315P\273\275%I7\217\356\237:\372\346\226;\350X\2779\023\2328\271\377Q\2369\245\035\t9\231\2753\274~\211\006\273\234\204e:\205\222\277\271\204\023\367\271\346\023\273\272\010\306\2469\304N&\273b\"\006;\003\022\203\272\007\345\3268\311\r\0277\004d\343\271|\300^:\342N\267\271\226e\220\025\250\352\221\025\3576c\031\2047\233\227J\334\001\230@\3553\025?\034\255\027\347\303\327\227Jb\253\026M\247\\\2306\241\254\226 E\235\224@\030\254\226g\320:\227@\024X\232:[0\030?\311\373\227\313\002e\032\354|%\030\003F<\031\270\013\236\027\333\325\016\231\236\204\010\030]3\273\030\3277\327\030\326q\252\027>n8\230f\304\033\031\\\322\002\031\254\n\324\027\303\337\326\030I\367\"\030\254\035\2425\352[w7v\005^5V\206\0044d\nn4\245\312\2154T\263b\263T\227\3677t\200\2151gJ\2656\270\362N\2625#\2207S\010\2047\310\010\0352fq\257\264\241\376@5\313q?5\365\350{7\240\027U6B-\2576\006\334\3505\211_,6$\n(7\375?^4\306\241\227\266a\317\0277e\220\0006\235\355\3333.)\2611\254\017*6\340cZ7o\361\0175\374\353\350\265B}m7\267\225d\266V\317S\264\202\220\2272\361\322\2274:d#\263Y#x7\315\372\3643\277\3103\267<\251\2611g8^\270\200\254\265\267\2128\201\263,\260&\266\314\244\370\264h\034\2735\223\325\004\270pY\3414\232\2444\266Ik\335\266\367\203\031\267\3261X\267I\300\321\265\211z\237\2707\373\2258R>\372\265\377\324l4\216\035\366\261)\232\326\267\257LU\266\026?\206\265\344\341U<s\267\233<\3104\323:\373\243w\270\210\020\222\271,\377\265\270\'Zq:{m\202\274\230\326\356;\017\334\362<\027\250\230\267v,\001\274)k\365\272\224ls;\243._\274G\320d:\252\224\312\2734c\002<\204\014\306:\253Q\010\274\023\227J<>\302\325:\276*\230<\262X\263:\261nJ=\333\t\200\273\\\023\322:\327\267\331\267j\245\267\267\\rB;}\253/\275\303#\204:\035-,\230\2223\255\032d>\350\027\315\351\273\031f\245\017\030\300=\022\227|S\307\027#\276\226\230\304\200\242\026\334\254Y\230\256W\210\2278\374\334\231%\274\007\227\276\231Z\230\245v\r\030*v:\030\020\016?\227\365\3312\030\223\245\260\030\343\320\303\230l\237<\230@(\347\026\270U>\032\213|\341\031\357\014\366\027\004.`\030\200\236\336\024\025>\262\230\217\322\\\2317 \350\227\226\323\244\225a\270\367\226\333\013\335\265\207\221Z7nm\206\266|\247/\264\007{\2654\323\003\2364)\206\036\263\227K\2107|c\3023\341\2706\267:R\t\263\251\362Y\270^\002\300\267;\332\222\263GO\020\266pr\367\264\271\204\2725\302\302)\270\220\246\3734BE\032\2661\237\311\266\2023\"\267DM\266\265\267\020\232\265\355b\253\270`sd8X\324\351\265AHH4c\340}2+\275\300\267\325\301W\266\232{\022\265{\273\3535\026\226\30163\315\2136\364\002r3\210\212\347\264\'X\360\263\371,\330\263\006\305\2657\342<\002\2635S\0177j\2377\262\246\325\0008T4\2547\025a\3462U\376\3304\366\221\3674:\246\225\264(,\2656\207=\2565\335\006\3016d(\2116\005\224\2056A\025\3317y\305\r6\021\370\0257,\322\256\267\352\305\260\265\014cq29p\266\262J3\0347\001\005k7\345=?5?j\017\272$\260\364\273H\232\023\273\"#\3059\200L\0359J\252\013:w\234\0177C\307\373;\036P\0359\3551\254;\303^\2467\340PL;|\202S<\322c\022\272U\215\020;\266-\017;\207\222Y;\317\3260\275\021{\244;\277,*;\r\261\334:\322}Z\273\273j6\273K+\337: 0\t\275C3\025\273i\235\030\274\013^\360\272l\"\2077\217\341\262\273\244]m\273y\207!;\314\230\230\231\360\223V\030\013\340\242\030\032\247\341\031{N\242\030\374\235\001\0310l\327\231\256\223\251\227(= \030w\264;\030\345-l\026(T\361\231\265\013V\232j\337 \231Vo\256\031\340\035\262\030tnL\027\300M\'\024z\204\205\027\324\003\271\230\244\363\014\231\243\2233\031#\014e\027\337.\333\227\311\350\216\227\314\006m\230\217\266\016\032#f\033\232,\345\350\227\230\372\037\026\246M+\230\373\306\231\031\rJ\3115yj\3036\nl\3645\3609\0004~\376\2513\271\002\376\263\260\324+1\214\000\2727\003\020\002\263\335\250\0267FA#\2637\30178\271\270\2717N\363\3432W\241\2474\t\352\2155\342-\215\263\014Q\3506\016\341\3456\267\210\2136r\326\2076\336-\2016\246\026\2157\260\220\3755AI\'7L\210\263\267\246L\271\265\264\243o\264\007\355\3223\226\230\0327\324\244o76n}5\361D\2753`\225\260\265\323f-4P\001\2451u\237\2552\347\360\2302P\223\2531\214\213\2605\364T31|\233\0074(\301\340\261\373\036\3575<zW5\314\020\024\260\372\317\004\2640\315&3\'h\246\263\277\212\3205\021\004_5\026\307\2514t\031y2\246[]\263\343I\017\266\354\025|2u\3207\266\310\006/4\202\211\0315-\376\203\261\233\020\270\260\337\270Z\264\027\362\2055\271\256v24%\2048\266\267\t\272\251.\247\267 \22455~\367f6\376\231\373\265\207\271\2225\326\362>9\360\311\3127\0036\206\270\023\333\0275!\336\2618\236\221O9P\213\0108>\231\222\270\030\241\3556[x\2757?\010\2749\324\340`\271\257\016\2218j)\3406hA\227\266>\313N\271\247\02117;\221\005\272\373\360\2458\2334\266\270\030\306\2565\3734\n5\244=?8\205k\003\271\343\334\362\266\222\326l\227\264\3139\030&\0136\227\245\375\n\027\247s\265\031.\007\024\030C\301\335\225/\263\003\030J\221y\230\247\"b\027\\\231\220\030\256*I\230g\351%\031\246\205\347\027\257(\300\0308\275.\231S\216J\230l\321\316\030\330\':\232\376\211w\230\371\256\014\030\364\032\253\026\274d\346\026`\310\337\225\236\234\245\230>3\265\027\251.\027\226\3369X\031\237#&\031\304\350\261\232\206\223e\230\327^r\030z\257\3253\033\222^54b\2044\205\002r1\251a\0133\250\016K0N\326>\261\316\336Z5\367\241\t1\202\r\2343\302\377/1\004nd6)!D5\227\002\2271\262\026<\264\217U\0353\230\335!\263 \364\3315\205\363\2565\"\317\2764\212\377\0053R\004#\263\330\215\277\265\2121\3133\200\231\365\265\301\177\0174\360\303:4\325\347\2352\217$\014\260\317\301\362\264<c\2415@\237\034\262\022\303M0X\310)\263\360\271\0101\260\3314.Hu\216/\223\307s.h\32430F\247x3\353\374p.:\005B1\277O\304\256v\374P\2634O\3761.n{.G]\206/\267+\203/\355\335\2760b\246_3C\r\3471\210N\0261\3415y\261\264\031B\257D3\340\262\311\355b\256\272\377m\263\235\002\240\261\252\26292~\017\210\256\004\321 \2569\025\302\261\024\016\2171\034\27160\244\244\3734\031\363\317\266)\277\035\263J\271\270\260\021\224\236\262\334\377\000\262c\r\r3\206W\03151\347\2013~\233\2355\221\312\235\260\351K\000\264z\207V4V\314\001\264\361M\236\264X\025y\2630\3625\2634\264\235\267a\2644\265\334\253\n4Gu\0275\361\312\2224\252E\227\264\333p\2452!\365/8\376%\3174\373\212\360\263\362\352\2102Y\374o\260\020\330\3175\235t(\2650&\0302\214\n\005\031\273\302\036\231\346m\212\230\224j^\030F\225\223\231z\313\220\0306\234\200\027z\353U\030\246\r\033\030\267o\257\226v\324(\030\300@p\226\277\332\220\227Q\234\224\027\330\211\004\031L\006\025\230\204\035Z\026\221xC\230\244\260\022\232\n1\320\0319\315r\231\222\373d\030\207I\257\032\201\255\211\231D\344\275\225`\3676\026)\226\272\230!F\362\231\305w#\032\236\327u\031\277)\253\231\254\365o\026\255\332\0020\327J\2773\3320\2630\307N\016.{\036\3730\316\277\250. -U/\231\361@3tS\213\256`\336\333\260\376~\343-\221\334\2303i\305\r2I\327\256.\251\305:1\317i\2370\220^\n0\275mz\2639Ak2\220\226U1\373\367Y\261`\361\343\256\203;:2\350\234\272\257\326na\263M`\304\261f\256!\262\270\026\037/=\322\234.\201\214\'\262\375h\3201@\200\271.\3443\2134\034&X6gK\2074\354\316\3012eY\2513\302n\2401S}\211\263\313\2050\265\3352E\261\272\nE5\307Q\2332\353\223\3776>\274y6=\221\2551\342\201M3\235\0170\264\320lM4Du\240\265\320\363\2165S\336\2225\321N\3144G\022\0275\230\323\3445\3519\2514\005\006\032\265\234\210\0056F.\3724\320{q\263z3\370\261\n!\2355\337\236\0006\277\240G4/E\3258\353o\003\274\200\226\014\272\317^\2357\3166\2066\270\231\2077`\377\0106E\244W\272\332\335\254\271I\001\233\273\374>\2156x\014\005:`\213\245;T\2414\271\267\240\002:F]v:\316\212|\272N\244B;\210\345\2419n\342\035:\320\245\336\270\354\256,:7\276\302\272\245\204Q:\372\345*\274\3208#\273\340\211\343\271a\245\343\271\261\202\2046*UZ9\223\275.\273\351e\366\271\264\346\267\030v\344\270\027a\253\016\230\344\242q\231\314\224\375\227i\374\007\230\3449\253\030>z\353\030\030\262\t\231\323,\326\027\t\025\231\231R\203\021\232\320\213\203\032\354\263P\230\226\023t\226\'OD\230\320!W\027J\250k\230}\253\207\232\006\313\333\0314U|\231\033\"(\030\'\257\331\030K\220J\030\266\334\221\027\255\"\314\030}x\203\030\314d\223\230a\347\035\026\312\251\010\231\276\223:\230j\2271\230\232(\\4=\237\t\266\243:B5\321y\0222\376R\0235\000F\341\262\350)\0033\006&\0147*\262\017\261\310\345\2654B\242\0211\376\223\3175|\311\2026\340\215\2641\273\n\245\263\0131~4\tcV4\265\322\314\265\007\272Z6\331\312\2515*\306\0045\331D\0205\371\247\2346r\016\226\263\265\220\024\265\343\253\3665`\234\357\263\224\374M\263i\334\2542Sy\2325\353\354\0036\277\216\0364\024WW\266v\367\3525X\0040\263(\3628\264\233{\227\264B\211K3\340\017=\261d\305G\266\212Od3\256H\304\266H\365\2360k\227z\270?\235\304\267\271\200\r\263\267\014\272\264A\244f\265\002I\2754\361\t\361\267\021\304\343\266#\216\253\266\002\036\257\2660\243\322\266\315\213\356\2670w\002\266C\274\312\2678\312u8\236\270\013\266\255y\2253x\002B\262^on\267\362\235m\267)\027\202\265\032\353\362;\210\026*;\247\301\021\2711~\004\271\366oA\267\205y\3648\306)\035\272r\253i\273\215,\3759\203\212\232;Wo\272\267\032$\202\273A\233::\232\235\351:6\335\210:\253H`\273E\342d\271H_\345<J\203r\272\362\341\303\272\341i\3469\254\'W;B\207l;@:\2408\351\203\006=\207z7\273\000s\035<\3158\014:Zs\241\267\311+\';v<\344\273&\372\002\271\"\2376\227\276\351\236\230\302\031\325\230\004\020\036\227\314\244\033\031.\363 \032\260?\231\231\335\233$\230\254\247\207\230\261t\271\227\007U\341\226[j\235\030D\204}\027\212\320\222\030\261\313-\231\217\211\202\230h\345\223\026\353\304\037\231\'\301\256\030W\214\007\032J\247\332\226Q(\'\031\302TV\231\371\203\224\231\311/\r\227\362\027!\030\253\276\262\227IT\235\031J\255\232\230\322\3108\031\320S7\230\255RM\230\331>w\266\2606\2106\016\037:\265\247\0367\264\'L\241\264;\004\02040DE0\014l.\266@)d3\201\243\250\266\326cH2Gcw\270\224\353\336\267&\331\004\263\232\202\277\264\316\216\324\264\231\275C4\201\022\376\267\344\316\331\266&Q\245\2666\352\241\266\212\211\333\266\225\256\000\270\014\215\236\265\362\306\333\267\377\246\2168l\272\353\265\334A\355\261\327\216\3651g\003i\267\000\270r\267R\307\220\265\2271\022\264\030\263\203\266|\347\355\263\306\270\035/\262%&3\355\364\006\262\320[\0331Cl\2046\035\212\3211\240755}+\0131\3137\030\266z\222\326\265f(\2741-h\0214X\320=4v\275<\264\204|(\267\316Ku\265\014\216\272\264\336\215\266\263:6z4\t\370\2045\352\254\230\263.\256\221\264\355\243\0075\231\327\347\2653\341@\262*zl1Y\210!5\247\272\021\266\273\257b\263N\310\261\270\320\301\3208t#\\8\321\373\304\267\307Q\200\267\347\215;\271\246\365\2276\264\210\023;x;\0279\345t\255:\303\253l\265\270\305;\271~\222\300\272\335\n\2009\270.r\273\n\030\345\267\026w\\;\244\325O<\300\340\024:E\347\3449r\205_7\313\003\307\271l\177\30297\361<\271\200\203\021<\266\265\210\271n\226y:N\263\035\267\206\002\013\266\333j\352\272t\377g\272\240\345\34252*\264\226\027\033\327\030\36018\227]\212\365\031\265\204\223\030\032\350\262\030\005\330\007\230\262\320\365\231\314\320\334\030<c7\027!z\273\031\375\333\321\027\337\373j\231\232b\267\231\264\222\244\027[\321\332\230\227\204~\027\257\016S\231c\333k\030\246\243y\027\245\027W\230\032\005\211\026\035\340.\227V&\337\227\030\027\023\027c\n\030\027\374\222M\030\014\020$\030\242\367\014\031\022Z1\031\026F\013\031\310c\362\030\376B$\264\263\236z\2667\263.\264\020\345\343-\350<\247\2634\n\3161\270\356\3712\271\267\2576\240\307\3621V\262\2103\320\267\3120h\313\2505AW\305\265\303wB2\240)\t4\020i\346\261^\002\340\263\200&3\267\330\357$\266\034B\270\264T\273\031\264\0023\0074\270Az6\320\337u\263\335\262\221\264\240\247\347\265\205\222\347\265\232\315\326\262%K\3021\213@\0345vd\014\266\377\2211\263U\210\237\264&h}\266\230\362\245\261\252r\250\262\330\245\0352O.\2122\022\007\0133K\303\242\270\224\331\2330<\375\372\265\017\330\207\262\037m\027\2672\263\346\265@\345\253\261K\017\3741?\214\016\264\233\377\2124M\206\337\266\004\325\337\266\246D)\265u\302(\265\347H\340\264\361\364\3437\266*\361\263\274\304\0266^\203\3656(\023\321\265\003\337\2521+h\2521\212\037\212\265\014Q\233\265\307\204\273\264\313\031\3478\374w\2459EnZ7\263\304\\\266\n\207\3026\260~\3246\261\344\226\267\335\320\346\271,^\355\267\345\224S:\223\217\301\265*P\312\271\002\373o\271l\340\376\267\237\003+8\354A\2767\246\363\350\2672\322\020:HM\n8\"`\253\270\000m\2528B\341\2718\341\016\2329\005\202\200\267:pE;\310\376\014\271\352,+9\317w\2736\206\250;\266\374&\r:T\301\200\272\206\331\2046E\000\204\230,\021b\030\354\'\327\226\241\177\264\026n)\354\026:E\204\027/\204\273\227\312w\232\231\0310\'\227\'L\216\030\337\016\271\027\367\014\017\030\276m\033\230\360e{\030\317?\026\027H[\001\231mr\035\230(\026t\225x]\252\230\221\312\345\030R!\276\030\003J\206\231\337\242\337\026\374\010x\0318\352e\231\267\203z\030\324\204?\230H\024\021\027h]\310\227\207\261\361\031\201\256\234\231\356_\244\226\035\363\255\264\004\210\231\266\357Q\313\264\331m\r\262\340\361\023\261\017\300\2072\210V\230\262\267\325\241\270$~\2741\223J\366\265\372\022\022\262\253E\332\266\377\320q\2667y\3321C\004\2562p\30494U\275\2364<\245\n\267\0163\241\265D\347J\265\003\230\313\264 \033\035\265m\275Q7\362\325F\264\035\254v6\010\330\\\265\350O\3674\243<\0373\251\204\2701\374 \205\265_\014\271\265 Y`\2632\311i\261\342\232{\264\257`U\262\262?Q\257c%\220\261W\222\2770\202m\333\260\375;V4\364\345F\256\004d\373\262#{\361\257\316\370\236\264\246\363q\263.\300(\256\325\211g1\272\311\372\260zR|2\222^\035\265\363^\025\263\3357\257\262K\362\342\262\252\300\302\261\234\345\3124T)i1\367\370<4FA]3\246)y2V\266\326/\243\211\316\257\273\010{\263\n\301\033\263\023\227\216\261\025\360\303\266\220\374\3519\305\022t\266d#+5X\324\3325\364\276\024\267\245Y\210\265\360#\3709\2358\217\267^\224\t\267.\3300\264\327\202\2047\261\35697\017\321\313\265i\207\256\267\370\364\2317S\302\366\266\233\302\262:\231]u\267\340\370\305\267S.\025\267H\305\002\267\220q\371\270\374v 6\222Q}\271\321\355<9\036\\-\270\306\327t5\010M\036\264w\372*\270\273\nP7\203$\013\266\221\010[\227\332\371\n\230\242e\267\231\312w\246\231\004\241\022\230\207\030\372\2278\276\224\030xE\014\026\031\330\242\227\333\341\262\027\326p\014\231\306>2\030\360Q\231\031\310\211J\030\234\020\224\230R\372\265\026ds\217\230\311\276\264\031\200V\002\031\345\3118\227\257w\342\230\354p&\031uy\010\230\354V\353\030\027\016\026\230\220\301t\225\266\"$\230\243\241\231\026\340$\247\230q\357/\230\301%`\027\037\032\336\030yW\231\261\335U\205\264\335\016v\262M\027\325.cT@0g\2363\260V:\205\261\202M\0355~\335\336\257\356\202\360\262\222\350p\257\200b\0240\356\177q\263\372v`/+;\22428\244q2`\254{\262M\226\022\265M\326\020\263\014M\237\262\250\221\3771\315\261\357\2618\233g\265f\340\202\261\327\266\3723\276\327e\263\272\241\331\262m\032\0030\360\265\304,0\2301\263>n\032\263U3\314\2616\312D\265\352\215\341\266\326(\014\266j0\204\263\373Z\343\262\206\023\2663(\363\2373n\035{\267s\242\3712\327\231\261\266\315\345\2032\022N\275\267P\2466\267R\226\251\262T\307I\264\217\"\002\265\364\'P4\204\312\0136\'\2702\266\'<>\266\250\325\036\266cOL\266\177.4\267k{\240\265[/\372\266~y>7\t\324\0035\3502U3xn9\262\273\014\364\266\342\221\271\266\241D\271\264U)\210\272\035I\016\274V\365u:\314\250\333\270\337\327\215\270\332\307A\271\377j\n\270\375\300\222\273\017+p9\312\206\022;\211X\017\267\nL\317\272\031\311j\273\201Y\027:3\221\235\273\232\304\262\272vVW\273\025JY<U\307Z\273P\345/\273\272\361\2369\274Y\3148\017\006\301:\201\030|\272\310\330\240<\303\240\257\273\330\234\330:u\177(:\022X\016\267\004\307~;\215?\026\274\351\325\030;\\\335J\227z;\236\231z\214&\030\330\220P\026\363\3273\030\032\020\214\030\315\n\017\231)\245\020\230\252\224\235\026\250\000\300\030\277\316\226\231\342^\230\231k\211\245\227\312K#\02780\006\232\203\314\363\231\256\357\245\231\212Z\343\030\251P\276\030\024\214\335\230 \314\302\030\0301\365\226\316p\241\030~\"\266\231Te\275\030\202J\213\026\324\325\376\030a\257y\2300\031\003\225\240)+\230\370\265\255\230\277\'\267\027\036pq\265\306\231\215\266\210\336\375\265\316\204\232\2630P\302\265\354:83\305d\25537\'\212\267\234\242\3752@\325\277\266\346\246\003\262 \005\260\267X\014\005\267\225\036\206\262\317o\204\264\177j\000\265\244K\3662$\323\0046\260\204)\265\016\r\014\266\001\004\033\266\242\235&\266\232\223\034\267\275T\237\265t\001\372\266 Z\310\266L\345|5UG>3\214\232\0072\010\001\350\266\037\n\300\266\227V\001\2658\001\2572V\277\343\264\336\r\3352\242Q8\260\034t\2372v)+19\302k2\211%!\265\334\246d\261q\216\221\263`E\2720\001L\3615`F546\315n\261\016cq3\312\216\361\261Z\370X2\362\234\3165,Z\2033\327\254\0024Ox#4\000\374\2061\345|16\303S\034\262\342\306\0376\016\327%4:a\3554\270\233\351\256[\336h0LT\0144(u\0104\376e\2021z\372=\266\371\253%6C-\362\265\277\221\2144\343\303\0065\324=\221\265\315\203\0165\332h\35363\22615\010S\2477:\276c\264z\304\3227Q.77\014\037V\266\223\246\367\266D\366\271\265\244\324Y\266\2559\241\267uC\235\267\265o\2076\214J\210\265\2118\241\266\2023\200\265\310\363p5eK\0019T\242\2737\216\336\244\265\217\\\216\265\361\3777\264\231\006\2107>\\\0108\340\311\305\263<\264\005\231&-[\030\371\003\305\227\220+!\032\225c\257\031TU\336\027\337zD\231-\201\330\226\312\357\274\025e\250\316\230@\255C\230\326@g\231\000M\267\231\372\353\256\027\022\027\177\227\324\337\215\027,\324\221\0264/\270\026\020\273\346\225\344\036\344\231>M\265\027\330\374^\026\3065#\030\312\313\003\031\242\261r\227\224\362\251\224\352\303\323\031\024YC\031\267:\203\030\010\207\313\231\037\017\266\231\002\022x\032\336\246\3212D356\020\000\2410n\3051\257\262\356>2\366\223\354\260\352K\33019mW5s\025\0171\226Y}\2633\350\350.\003uq\266.\357D2\251\021\245\261L\353\3373b\257\3123\261\244\3103\342\331\010\2650^Q4@}\300\262T\023f\263\311\321\r2DH\2003\363\306\t3\n\000#\265\334\25063\032K\2125\007M\3210t\014\'\260\350\021%3Nx\3033\200\034\2422\273\036f\263\2527\207\265t\233\333\262)\006\0132\230\373\037\260p\270\257\262\212\20761\263\022\251\265pi*\263w\220\3145\241\307l.\264)\3655Z\270A\265W\255\0272a\025\2034\204\332V4\277\263\3174\374[\3025\226\027\206\265H\320!\264\r\317\2505P\364J5\357\347\207\265\251l~\263\322@\0147{T\353\265\325\321\2215M\357\327\262\035\362\246\257\327\302\3605\035G\362\265K\346\2513+X\260\271\317\331\204\271\'&\3627\0214\0136\224(\350\266\215\242\273\2663`\373\266\327R\2479\374d\251\267\'a\313\267\200yK/{\022\2079g\236\327\270\354\243\0358\267J\03292+\2338k\344\2565\202b\005\271^j09\242\t\034\270\215\376\275\271\312\r;\271\310\213q\271\237\227u\267\350\031\315\272\262`\220\270\241\311!\271\225O\235\267\261\010\2643\036\035\321\272<\275\223:\217\323F6\0054O\031\030\031\227\027PG\352\025\274.\243\027\032\356\323\231\300q\004\031d\227_\2275;\263\231\214<\301\030\322\307:\230j\375\217\230nJ\271\026V\316\333\027\350\330\257\030.\2601\027FN+\031gZ\331\2261z\010\030\\\006\023\026\030\345\010\230\236\301\002\227\310S\010\231\275\306\304\031\265\000Q\030\342\3565\027\201H\241\026\270\262\266\231_0\001\232\036#\301\230\274\tD\231h\235\004\031\356\2150\030\232g*\262\376\303\350\264G|\316\262\375\255Y1\262\324\2272)NK\262\364\023V3\307\374\2357\026\3628\262O\301\3165\310\341*\261cF$6(\346\204\265(\242\"\261\256\272\0164\263\267\2333\341O\307\262\342\003&\265w^\212\264\234c\377\262\362\030l5X\311F5\345\317$\265\304\241\3063\004\250\2716>R\275\2657xs\265l0$\263\245o\203\261\302y\n6\'n\252\265x\001e\2600\245\2715\000\024\3703\373\306>6m I4\035\206z3\330\214J\264\316\351\0024\033G\2447\332\343\372\263of\2357\314=03\016\342p8\200\276\35168%\315\262\223^\0106\272\201\2045\336\201*\265\234\303\3266\206\201a\265F.66|8\0317\316\361\0177\376\305\3107\230Y\r\265\220-\3507^h_8\023X\3425\365z\032\265\316{\333\262\352a\3477\306\311\321\266\332\204_5\223\300p\273I\034\210\274m\264\2459\272\32318\200\371\344\267\037c\364\270\316\350\020\271\263\302\037<\233\365V\272\275\377\00797\307\2257]\033f;\364e\235\272j\371\225\271\265F#;\230l]:\251,\010:\016te\274U\351\";\232\226\203\27047\200\273\314\260\002\273\367\351\360\273T[$\271\367\377\221\273\032\025\0219\330\rh\273\344\224\227\271\367\307x79\371\022\274\224yW<\327\023;8f\242\030\027\265\304\315\231\277\320\013\230\212\272\226\227\"x+\231<\275\237\030V\016\227\026\244\340>\230F\351\255\231\260\314\221\027\300\324D\027\210Y\300\227\354\263T\030\210\356\006\027$@\035\230\037\353\021\027\002@%\230\363\237f\230B\247!\230\214\245\243\227\270>/\026\300\215\272\027wC\222\030v8\033\227[\266\265\227\242\263\201\031\323\276\024\230h,\355\030:\253\233\030\003U\261\232\010s\357\026\312\267\013\030\224\204\2665\001\300\2206\355k\236\265\255\200|4\233o\"6\033\2300\264\313\210\2223\031X\2657\355\335\357\2639m\2317\310\332\345\262E\003f8H\212R7n\302+2\355\t\0056\"t\2205\021Mp4z+\0207\034\230\224\265\271\265\2566p\305\0317\017t*7\222V\2727.\020\3525\365\323\3667X1\334\265\234l\3315i\027\034\265(\242\2331>\346\3507\343\246\304\266\032\345C5IU\2174\210\035\2006\243\362]5\311X\3642r\312\"\263\346\254\013\263)\010\210\263$\33036\354p4\260\\\25356\330\034@\2623~(7\036\325\2046\272\250\2201\206*U4MJ\242\263\253_Q4p\345\3634 \364P5\250\255\2625Uc\3604\034\351\2025b\304\0176>\000\0045\030\207\2736\231e\3425\n\017!6\375\310\255\263$O\332\260KbS6\274Y\3665\254M\3323\252h\325\272\271\350\230\273K1y8\345\260\3518\300\000\247\270G{\277\270\215t%8rZ\372:\272\362\003\273\016\220\263\273\227\211,6\031\315\3779*=\212\273\024\370C:\234[\026;i\001\302:\215Y8;7\n2\274l\261\303\272\255e\343\272\031\346\224\272Ev;\2733\253\331\272JLP:\240\243c\274\342\317\035;\345\256\303:]X\n\272\352\322\3246\324K$:\212\021\271;\331+\0259\374\210\336\231\254\373E\225\262g\316\227\346\234\223\030\200\235J\025g\345h\030\261 \324\230\023wg\232\266\212z\030\214\2542\030\270@\261\030\273& \230g\t)\227\264E\n\031\222Ev\231*W\252\230^\366\014\231\240\316\010\025e\361\035\232\243U\017\230\002\010\337\027\207CV\227\266\273\252\030\310\306\233\230\020\244\272\226\350\261v\227\025j\203\231L\276\275\027\237\232\027\231NY\260\230\314)%\025\240\036k\025\252K\2024\210%\2736`\334O5\333U\3342W\307\377\263\026\033\230\262\276\246\2572\200-%7\256m5\260\246\330\0356el\3670\177\030\0036\343\366|6\002\332\3751\326\226\2204i\025\303\264n\304K49\000#7\223\376\3475\354\033\26356\217\2335\361\364\2225\315v\3566\007\010\2354\342\261\2326\000{l\265r\256\0356)i\202\263>\323\253\262<\266S6\364\322\0076D\367H4\024\256\3505\003\351\303\267\250}.6\363u\0344l\013O\264O\232h\264\000\376&\263ec\314\2670\272\304\263&\010V7\356\373\3311>\031\3537\240\376\004\263\235\240\3463\200Y\\6\306\211l\263\252\302f\265x\366\3037\206@C\267-WF\265\305\343\2416\245g\0347\020\234\3064\031\237\2305d2\2708\217x\2437\001\215\2246\364\255\213\264\014+\2313\251\350$8\251\217p\266\2773\30344k\354\273\231\312)\274_\374\265;\375\025D9}\000\247\271(O\3258H0q\274\243\377\260<\352c\177:\311\234\000<\234\304\3737\307\0043<\305\256\242:\364\345\217;\273\200\206<d\204\227;$)\336;J\310\301\272\315%\007\274/0\214<\251\000\212\274\335\377N\272\304\000\226\273z\016i<s\324\252\275\320\031\026\274\3514\r\274O\322_\274LA%\267\361\357\243\2749\205n=\234\007\337\273\2536\004\230\004\267\274\026\007\022\363\030\237(\036\031\001\\\206\027:\2309\031B\247\324\031\033YK\230\226C\343\030\225\226S\2306\203\031\027\213\212\'\231\334F\306\026z\216\233\227L\362\034\026\330\376S\030u\264\325\027\241\036N\230\352a#\030\232\024\022\031=g?\232\333\336\323\231\313GM\227w\241\206\230\312\365\211\027T\351\247\027\273\260\025\032\272\205\251\227\235\300\377\030p\241Y\225!\274\216\030%\355 \227\010\035\2245)}\304\267/\235-6\251\360\2213\244Mc\264\206\037\374\263\233\017x\263\256W\274\267D\004\221\263\352\001_7 \002\2271\310\325\3007R\244\2265\241\226\3513\000\251\0356\272=H\264l\221\335\264\203\227\3557\275\347(\267\233\224\206\265O\361\3466N\202\0207\204\237\2335\350\305\2065\240\221\2668\\r\0027Q\253\2656e\204\213\264t\272\220\261F\025\0248\274M\204\266st\3274\324\026\231\265\014S\2577\02483\266v\241\350\262\253^\233\2652\371\215\263\'\235\3202\177\232\3267\257j\2713\215\266\033\267j\376\3041\224\177\220\265\035\n\224\266{\022q\263\034[4\2646\360>\264\031\350\2275V\277\3717\270\327\307\264OV@\266\247\035\223\264\336\214j\266\017\355\035\267\372\223n\265*\355\0327\247\n\3245\026\210\3106\201M\0004\332\364A\261`\330\005\267\010\311\0273\272\355\036\264M8\220:\3740\230;\344M\225\267E\365:\267\034\334\0176\371\255\3005\236\277\2008\271\205I\273\035\311\t8\204\013\333:\177\211\252\266\352\242p\272\255\371B\272\323@>\271\003\251\001\272\336R.\272\232\3239\272\353Zr;&\005\034\272z \236\271\354\247\253:\333\234\035:W\031\022;\343n\227\266\225\023W;\031\26089\275\204\223:T1.8\365\265\222\266Nx\265;pG=\273\016\034{8C\215\243\227\314\024\351\027\242\247\216\030\270)\271\226ez\355\031\242\306\270\227\317\302\250\031\177V1\227\237\013S\030P\031r\225>}\355\230N\241\216\030\207\210&\026G\360\037\032B\3302\230\233\331\241\030$\341\217\031\017\311\300\031\364\306\026\226\273\211\250\030\314@3\030\314H\004\231\206\031\257\226_\344*\231|;\307\227\304(~\027`\274>\027<j\265\231>U\304\230\232\t\351\030s\"e\230\211\332\026\031\361\3575\265)^\2377T\262\344\2653\004\337\263\261QT\265O\222L3\344\215\2623>?\3036lR~3{\033!\267\345\253\2711-\013\322\267\037\006\251\266\366\035{\263d\033\263\264\215\253\3374\261Z\2345EL$8:\347\3056\356\3265\266\314T%\265\267\361\177\266\277?\257\266.Z\200\265\243\00417}\223]7<\267\0057[}\3653\340A^\261\222L\346\266,\326\2634,Q\223\264\357Q|\265\210V\243\265\217\327\021\266u\005\217\263\3363\2224\241d\2672\302\251\r\263\313\234$\267\251.\0132\277\235\232\265\274%1\263\242c\324\267L\363\000\267\025\311\323\261\352\245U\264w\316\n\265)\371\00454\017\n\266\315\005\231\266{k\343\265\320\327\025\266]\031\r\266?\017\217\267r\271\245\265\3608^\266;\377\223\266\354zX5\007\250[\262\355\023\\\262\030\244\274\266\350x\016\267}B\340\264\346\327\235\273\330\206\221;\205\373\200:\310\230\22779\257R\271D\"j\272\223\022>\272\225\005\233\273i*C<\034\345\267<\026YM\267\0319\253\272\001/\n\274\3749\367\272\223L\362\273\306\205U\273\363\355;\274_\231:=,\327\217<\014\253!;\313qe;\253JX;Lv\203\272$\014\266\273\315\303\352\274\206\301\272;\377\3179<\002\244j;&L8\270\236w\006;;\376w\274^\321\002<\261\214\355\230\326h.\230\230a|\026\360\253\037\231\323iJ\027F\022\310\227,\302\016\031P\017 \032P\273\230\027\347\366\270\027t)\201\227\335\264N\030\252Vo\227l[\242\027{\023\000\232\016\272\004\230\216\263\000\230\272~m\231\003\0139\030\374\262\026\227\346I]\031\023F\235\030\200Yn\0278i\010\027\364\235\020\230 \256\'\230\343\014\r\031%\311\025\027\000\030\276\224\335\353\211\030\314\022e\226\235!C\227}\373f\265L\330@\266.\323\027\266\331R;\263=P\2054\031\000T\262J\t\t\263\024\302\206\267$T\0132\213p\206\2652\010\3272\242\250\347\267;\234!\267\324}\210\261\301\000m\264\330\261\033\26502.4\305\273E\266\036}*\266\325l\004\266\365N\030\266L<\n\266\323Xo\267r\025\255\265E\215x\266\314\325\230\266\277\202X5?\277\"\262D\330\204\260h\360\300\266\032/\021\267\226\324\345\264.\276;\264K\007\2106\355t\0055\211\032\247\263\264R\2612\203/\3553\312\250\0263\350fd\263Q\326i31S\037\267\tq\3231*8\237\267zxn6\203M\335\262\277n$\266d\244\307\262\311\316$5\315\356\306\267\312\006\0077\024>\0316\264.\351\266\305\222\330\266 [\3746$\002\017\2644\222>\270\204=\0165\016\232\007\267D$\2424\037\337\273\261\334\251\305\267\r\245z7\010\214\252\263\223\201\203<\204\364p\274\343\"\270\273\305\341\2139\021\ty:\352\003\345\272q\236\255;3\215:\274\221\240m<\340d\361<\376\'\267\270\224\014\330\273M*\207<:\303\205;(C\213<\"e\222\274<d4\274\257\305\212<\013\005U<\014\262g\274\257\365s<\207\330\310;{\306}<\251\375\254:\252\233\352\274\206\364&<\031\336\335<:NL9\343\316\t9a\267\233<Q:\003\275\347\373\r;\222 6\230{\370\227\230\021\256\301\227Pt\247\030\227\235\205\031\273\361@\027Zp\217\031\257\366\030\230\016\326\217\030w\363\211\030[\025-\027\025;\"\227\235G|\031#\013j\031\250\237\034\227\354Qf\030\240\327\226\230)\311\371\030M\277\274\027Y\2722\031}v\233\031\201\004,\030\214A(\030:\232\321\026\230lK\226\212F\310\227\262\304\027\231zf3\230i\033L\226!\222\255\0273w\224\026\340\252\020\031\3444\233\263\272-F\266\032\2579\264\024a\225\263\315\274{4\362\\\3363\244\343\0263\340\371r6V\300d3\353M\037\2674]?10\361\216\267\251\021r6i\357\331\262\013\267\370\265\346\375q2\201d\3464\271\351\303\267?\233\3746\362646\247=\265\266\204\276\343\266\014\263\3656\021\354\247\264|\202F\270\200\037\340\266\370\017\003\267\362.\2464\257\370\0172\315\355\274\267\327\232z7\004)\002\264\010j\3314\374\022E\266T\215+5\037\304\2322\270%$\263\261\335\0313\322\005)4\253\237\2556;\301x3\367[\0326\022\315\2221\312=\3277j\225\3046c\177\25215^\3344\200\234l5\213/\334\263\302\013\343\266\247\305\241\265\300s\2105r\250\3265\001\366\0075\2707\212\264L\00355\010\203\3466\265\301\333\266x\331\0144\033b\0244\206u\030\262\2474^5Iz\3235p\245\0005\321\363\0166\262w\255\271\356b1\270\013\252\2636-\2366\267-J^8\205\244\0237\262\250\3618f}\3667\344+\3348\r<\"6d\207\002\270X\322J9\023g\221\270\236Tx9pd\3627\355\362\"9k\207G\272\230b\3519\210\"\0029\361\324\2109_l\3118qq\250\270%\370\2537p\304\210\272yo\3577`\021/6B\217\r8\226\030\0326\032x\3638\014\010\351\270\325\"\000\267\276\377\201\232c\361\036\227\217e.\226G\034N\031\204\027e\226\252z\026\031<\342\333\226\235\311\215\026JD\301\227\216\255r\230\360\220\317\227\363q\014\231yM\211\031\307%@\026Tpv\027\356\242\335\226?\237 \032\363T\367\227\211\336\022\030\212\036\253\030\226\013\n\231b\304a\260\222\371^\031\253\362\006\026\214#\017\030\357\307\210\027X\335\016\232{G\256\031\014\220\023\230L.\026\231\020~\024\231\240\220\032\230\322\013\3444\345>\3067\373\217:5\252\225\3022\254)\371\2626\372\0103\347W\260\262!0\2626\243\373i3\267[\2216`:\2310\'\276\0318p\332\2316\215\35041W|\"5\3109\256\262vS$\264\374\237\340\266t\205X\265?a\3155\237B\0066\215\273\0145\260\257<8\342,\34540U\277\264\251*57@\031\371\263\302\261\0314]4\303\260\017^\3115\374\207\3265\337\232\2764J\\\205\255\022\271f\262h\000)0\027~t-dA\034\260c\210\n\257\223\356\204.\261\320\01343\271\366.\247\205\2031\006\'\237-\022Ix1\007\31731\206\267\233-\273\225\353\260\251\360)0\266\004\210\260\370\371\306\263\302Os\261\364O\330\257\304\371O\262\377\373y0\0168!3p\275\237\260(\335\2542\364\"\0362f\005\2071D\314\226.8\006h.0\237\274\261\211D\020\261\271\243\002\260\020\022(\265\237\224\3135d\246\3173\032\'216>\032\263x\330/\263\005\003\t3\310\222\265\265{\215\2363\200n]\265<\260A/b\243_\263X\021z4\240\340\2013aV\3023\246m\266\263Y\2541\264\031\361\2676V\013n5[\020o\263i\310M\264\237H\331\264w\351f5\315\006\247\263\237\265 \270\342\247\2055;e\3754\307\277U\263\214B\004\262}\036m\265<\241#6\000^D3&\256\024\227N\337\263\027\024/_\030\317\377;\231\270\302_\027\230e\022\027\"\270u\030\274\231\270\227\200\315\317\027\235\371\017\030\024Z\212\026\372\245\026\227\354\030\'\231\203\372v\030\316o\235\027Z\2131\227z\271\021\231\024\325\006\227\007\322\270\030\335\2736\026<\327}\031k\030L\232wa\226\230\376\033\225\027\014\r\326\030\022\000\r\231A\r\332\026g9\214\230\300\351c\027hX\304\027\251N[\231\225\347\242\031\335\264 0\010n\34419\37750N4\314-r\311\212/W\220\030\257\362\231\030.{\356\0274\300vZ\256\224\212g1|\352\362.\225\033\2323\003\237N\261\270u\236,\342\035/\260=\244\3140^\031\036\261\231S\0033\253x\375\261\360\260\0160\026!\3220,=:\257\213\036\0233\261H\204\260\004yv\261\374T\0073d_\0142\242E\270\255>\013\316\256Z\007\0001\375\327/\2614\350c.eL\260\265\200\026\300\264o\260\313\265\333NA\264\205N(\264\037\263{4]\344F\264\220\256\201\267Q\177\2523\312\233\366\266\371i\t\264\260E\020\271\235\025\215\267\032\261\0073J\222+5(\267q\2650\371\2044T\231\352\267\316Y\037\267L\365\002\266\312\201\217\267\232\204\213\266\247\3169\271j\275\333\265\177\205s\267\003\004\304\266T`\355\266K\225\2034(\303\2310@R6\267\016\364Z\266p\265\214\264\274\261\205:\250\203\016;\036\316\0357p\223~\267:\255\2447\262q)8v\024\2066+[\035\273(\272\323\2670\322\2519\215\275!\267s\006\343\272\026\003+\272\245l\3748\264\302\200\271f\322\234\270\2242\203\270Q\266\217;Ce\026\271D\226`\271\365\275E:\016\267+:\203\006\304:\246\022w6\303o\031;\320\330\360\271\202\3068:\334`n8X\356\331\266\227W\331:\340\237\016\273\010\336g7\241\302\324\030/\020B\231lE\372\030\001\334E\2314.f\2274\272>\032`,\323\231\346\266\230\230\312\247\221\027pq\342\226\304\346\205\2312\211\261\030t9f\226\204n\032\230\320\333\330\031\202c8\227>\321\256\032\322\245\200\030\000|\210\025w\323\013\231Yf\007\031\016\355z\226%-\200\227\344\022\323\031(\'L\230\215\004\226\031x\365\267\227\016\017\301\027\332Qp\227\354\315\002\230P\005!\031\351\000 \032\007\325\274\265d\300\217\266\021\213\022\2665A\231\263L\276t5\202\201\0313Z\316L\265\003G\314\267K\257G3C\350\350\266\273\240\226\263\331]-\270\240\'}\267\265\26042\253O\217\263\235_\263\266X\370\n\265\212x\255\267u\276\363\265\234\277\033\266\215\025>\267\023\371\212\266\024{I\267\037\035\317\265ki^\267\336\373\3477\t\350\024\267\325\006I3\233\372\211\263\242\247)\267\003g\245\266\t{5\265rZ\237\264(\355\253\266\250\177\243\265+vE\263\352\177\324\264s\376\2303\340o\2441\223\007e\267\302r\0343\325\262\304\266\225w\3011y\317\227\267\362\324|\265\304\006\016\261d\307\3462\242\001\307\264`\010\236\263\204\21486\202Z\2565\r\246\361\264\017wI\266T\322^\266\344e\250\266 \314\207\265\216\026\n\267fQ\220\267\014`\372\265SM\02346j\2721\n\177\'\267.N\247633\027\265\256\006\320:\344\214i;\326\"\036\271\010\255\324\2666\252\2167\277\364j8\373\215\3357\353?+\273\260\275\0259gTw9\353p\220\266F\210\224\272\027=\025:\247yS8$C\252\271\025\325\t\271\307\313\302\270^\325I;A\002\332\271\246\277W95\214\254:\311\226B:\250\307\254:\003\353\2718\304iP;x*\0249\336\0012:\376\"\3368\332,,\266\310\327/;\231\202\252\273\305\367\001\270\216\350%\230\204B\375\226\244#\222\227V\260\272\030\231\376\232\230\244\246=\231<\253\177\226\010\352x\226\341\246\365\227[\t\263\230X\353\313\225\340K\247\026\374\r\343\030*\310M\027\227\271\242\232\301\357\310\231E\251\342\030\244\275\032\230\367\351\227\026\272\315I\230\016\342b\227W\3504\030\340\232\334\031\213\361\347\230V\254\264\031\224\317\203\226\001\227*\227hp]\030\003i\236\231\313\220\244\031\216N\022\032\\RC\031\235\020&\264W/\267\266\to\243\265\266gN\262b\252`\263\202\367\022\263\023\247~\263\306Ud\267z\213\0323\273;\247\266\236\025!1\204\362\223\267\026j\0226D\240N2x{O\265`K\306\264Fx\r\264( \0146\340r\3465F*\363\264\016\370\205\266\035\232:\266\334\215\006\267\260/\203\265R%\006\267o\">\266\372\375\250\265\335\20654~*\013\261\003\021\021\267\023\264\2506\260FF\265\037\\\2255\000\006\2126U\336L6S\304\2503\357\000\265\264\354\345\233\264GO\2573\275\035\3157Z\240\353\263\356l\2167)\216\237\262\223~\2378\177\310\2057\300\037\'3, \'6,\333\2405\310\312\014\265N.\3617\030\377\000\266\006\024\2046\327\373<7thB7\211)\r8\323q\0146\312Y48\006\010b\270\275\230\3036\224P\366\264z\313\24538\373\0228\34143\267)\177\2105PM\021\274\353\227\235\274y\220_:\351\003\2728tzd\270\230\037P\272\006q\016\273\3335\313<\303\270\007\273y\341\003:\027\307\3567_h\340;\267\010M\274\243\003\373\271\235\0142<\334\266\243;k\241\271;\375\203\341\274~\027\033\274\355I\0029%\276\206\273\307\021\332\273\300Q\241\274\'/\357:+\222\004\275\206F\007<\322\272s\274\303\251\243\271\023\037?7)\300+\274\340\212\022=\222\265);\250\201U\031\330\230\200\227\336\234\326\030\036\276C\030\344\3275\027D\343;\225e\2209\027`\364V\030\232\311\357\030\253\203o\027\027\017~\030\264\245\240\226\342x#\231~\231\374\227\227\013o\032\274\0073\231\005\035\005\027\364\253(\227\251J\330\030\206\352\302\030u\220\003\031\231OY\031\322\216\231\227\232!\237\230<>C\227#%\032\0312\236\360\027.\267i\226\362t\350\027)EJ\230|\243\204\231p\n\214\227Mf\2055)2n6\007b\217\263k\300_4\301\177\0226q*\252\264\2324\300\263\003\367\2267\274-\006\264\356?\2367i-\3271\026\244\2408\301\325\2027\277L\3262\327h+6\364\201\2735\312\342!\265\324m\3527b\200A\266\344g$6)\313J7q\202M7\013\\\3057\234\336\31152488Z\002\0377\365\217\2526\017e+\265 \277\"\263\200\004\0218\323\300.\267\366BV5\0348\2133C\"\362\264OI\0264\200!\0331\343\373\0303\317\n\3560\271\372\343\261)\351\216\265O\341B\260\341\357\2134\365\334w\260\022#\314\264G\000\2605\031\224Y0\242\211o\263K\364\2242\r\013>\262E\234\0235\223\r\3664\206o\2724\nL\016\2640\004\300\263\177\n\3375\003\266\2253\224XM4\351\340\0255\243\262\2163\352tR2\022\343\2330\021\362@\265\320\223\2155\034G\r3\313\360(:v\036D\2728T\306\270BCU5\000\227\3625\333\230N7\317\26387\"*\2309J,\2119\356\357b\270!:\3474\347\335\206\270(\326\257:e\250\0379-p\255\271M\332\3717#\032\n9\275q\020\273\025f\2529\212\004\2369\306\237\2319;gZ9\340*\2428\237 \2558\027\022\226;\307\366J9\273h\2008lk)8\205\273\3314\020\315\3239`\360\277\272<g\370\266\204\230\303\030\226\355s\027\275 _\232:tD\231\2713\233\027\263\257\211\231_\232\336\227\306z\026\231\256\225\341\226\300\005\304\023\350\373\275\030\250\t\204\230-\241N\2312\342\325\031>\276\322\031\351\360\375\226\252\206\023\232?I\003\031\034Bc\031\266\337H\2302\034#\227|\036\031\030\277\005i\031\304\210\273\024\220\323c\226\025Ts\226)\022\311\226q\217\233\027\264@T\230\375\nT\030\364\324\"\231\035\037\254\031C<\2233\025W\005\265A\305\3763/\330\2740\204\345x\261K#P1\r\235\n\261HZ\251\265\257\323V\260:\320\2414.f\316/?9\0135\005(\2345\362:\2060?\316\032\263M0\326\262g\271\0233G/\t5{\356\2344\234\364\3044\235\326/\264\265d\013\264\314\243\0322\361\013f3\320,!\263\"\016\2025p\024\203\263\346\266U2b\243\0340\006/,\2652\254\21553\246\2372k\236#5^\352\0067\376B\3205\212\\\3512\300\263\0324\000U\2433\0229\317\264\nIS7\246C\022\262\021\211\346\264\257M\3101^\357~7\371\226\3326\274\320\207\2623\337\025\265\324G\253\264/\337\2744Q\257\0336v/\017\266\016\265\0336\216\"-\2651M\002\265\3649G\266\2015556\230\034\267xp\2435\377x}6^%\0364\3074Z1\372Dw6\0318\3466\217\033o4B\344\n:\342\204\036:\277\257\326\270\246p\2776\224\345\r7\020YB7\360\306\3507_\375s8\367\016\00792\"\303\267\016\245\2106*\216\25292\257G:\362\307\2157T\266\321\271q\371\3008\236!%\271\234\270\2307\334 \000\272\013\231\2439\346\034\3719\346/,9\332\r\007\272\347_\2558p\322\231\272\207@\3659\244\n3\271\006\315\3647\007\327\2076= \365:e\251-\273\201\000\n\270\014\017)\2305\004\370\231i\330V\231\213\322\203\030}T\216\230W\003\363\230\266\367P\030\347\264\346\227\320\310\357\230\003`S\030<\3146\032\333\3020\032\226\332{\032\314W\267\031pI\335\227\261\337\202\026\'\256\334\231\"B\260\232\036v\206\031\230\025u\230[\254\r\227\257Z]\230\364\310\007\031\311\306\n\230\\@W\227\\v\016\026z\017M\232\306\235u\027\230\222\201\231\243z\223\027\331F\225\231o\347\214\031\307nO5\334\333u6\273\321\2445\323\346\0312\363\312-4\030\202\3253Z^e\264\226\300J7\274\206\3752p\201\010\265Z)\005\262\275\223\2666F\324\3636\370?\357\260\017\256\321\264\251\005z4\256\200\2124X)$6T\224\034\266\244\352\0306t\305\315\264>\253\334\264\010r\0366X:E5@x\r4k\025\2555:\235j6\300+\2512\274\365F2p\344\337\265\352\367\3376\263g\2124\313[\207\264\200o\002\267\377\273Y\265\364\207\r\262\234\332\320\264\372\225R3\355\253\3743\247\307\222\267\375\t!\262\306\266\033\266\254\341\007\262\304\353+\267\236g\207\266\004E\364\261\332\250\231\264\003N\300\264_\300\255\264\352\334D7\262\217\021\266:\036\251\265\023X\225\265W\310|\265\200N\000\267\211\245\335\264.\322`6\361`\331\265\252\333K4\010\310K3\200\033\265\256\345{8\266\333\220N\266\320\372\211\264\321\276\244:\277\t\376;wkl\272Z\322\215\270\314\371+9-\202\017\272\017\033\027\271\2205=;\334\037\264:\3308\211\273\367\27316\034\234\215\271\202B0\274\000\243\211\270\342i\025:\321I\207\273\375\0100\273\226\214\230<\235\317\374\272WP9\271\036\372\323\271\217i\231\272\006,\013<\\\306Y8(\356\021\274H\304\241\273\255)\001<4]>\2722\356\214\267jf\006;\277G7\2741\220[\271\270\372\022\226P\226\375\026\204v\334\027od\265\026\265j\351\027Vm&\027\324)F\226t\245\325\025\366}\220\031|i\024\230\022yp\227\346\342>\030\306\017\t\2312\034\231\030\31375\231\346\020N\027\0244S\030\250\313@\0307C\252\230m\361\351\027\022\232\205\226\245\275\001\232\017\310\304\030\251Y\331\230\204\026\303\027\007\205\255\227\016\326\357\226\233\032`\2270\365\031\225\362\006\177\23028\260\227\373\365\213\230\214\000\222\2642\302\363\266\330~\201\264XR\2520\246\355p4\216g\3172B\377\3463\326\246\213\267.9!\262\323I\t\266\222 \204\262\271G\006\267O%\215\266\304\347\366\261\364\233\235\264\235\202\324\264FR\364\2640\255C7\305\313\3035\311k\303\265\010t\250\265\213\251O\265\316\212\037\267\'!\036\2654*\2025@\2426\264g\022\2034\231\243F2\336\230\0262X\261;\266r\014G\266,\243u\264i^\314\265\244\315U\267\372a\213\266\212,\317\262DL\2463\324\276\324\262M\034-25\252\013\270\371\352\2112\0172%\267D\336\30026\177$\270\034%\261\267\233\370\342\262\211-\240\264\202\212\235\265\235Y\030\264\200\311t5\325)\014\267a\222\333\266u\301\210\266\362\036}\266\006\335\246\2673\311\270\265\013%a\266\350\302S8Y\270}52\375\2224\316c\347\261\262|\023\267\372\236a\267Z*\203\265\235@\245:ib\303<\021\006\272:&\\:\271z}\265\270\247\340Y87\217\2038u\364 \274M\031\230:\002\te;\007;\251\267A^&\273\261o>\274u,\203\272z\220\324\271\275i\363\272Rg\227\273R\224\347<v\2452\273T^\'\273:\n\";\240,\r;\265\016?;\207\334\001\273\264\r\007=t+\006\274\334\366\234\271qyK\272 o\244\267wL\243;$f\265;\2354\303:^_\312\030\232L\265\226\357F\021\227]C\203\227A\252a\230\370\224+\027`\366:\030={\007\027\031W\223\031\252\025\024\226\360\345\236\231\0278*\032U\333\247\231\331\255d\030\026P\002\026\342\317\217\030\322\030\253\030D\353\365\230\361\330\312\030O\342\322\227\375\360\236\031\2063\266\027\320IX\030\317c\346\027\021\250\242\230\'\262\007\030\310\275\300\230x\257v\227\036\252\006\030R*\377\031P\014$\230X\010\255\032/2\277\265\340\363\204\266\234a\004\266xJ\242\262\320\257;\266\246Qt4\231Z\2314\024\013\354\267\231O\2242%#%\267\000\264\316\261\221\021\035\270$r\277\267\360\376\016\263\007k\306\263\237e\027\265\205vN\265\306s\274\265D]\003\267\373\375\332\266\237\324\216\266\333\374\241\266@$\355\267\213|\252\265\233\320\203\266\353W\305\266S9m5\"\377\2214\357z\213\261=\322\022\267\276\342d\267\245\242\205\265\217Fv\263A\372\223\264\'\246G\263\005,\206\261\351(\3311\313\216\2511\211\360\0163\215\317(\267\002\214M\2628<\353\264\316\005\361\260\016#\261\266\216\375\206\264\254\216N\2611^T\262\262L\313\261\335!\212\261\350\244\266\264\270\"\346\263\216\361\"\264\326^\364\2645\0025\264\323\034\2635\324\2200\263\274<\234\263\032\370\217\264$\346\341\262\357aS1\253\243\241/\347\373\311\264\274\217\261\262N]\005\262\252jQ8\326\263A9\260\246\317\264pw\320\265\372\316\2725/\311\3275t\356i54\337\026\271\264\002u4tn\0218X\262\211\263\245\t\203\270\346\024\206\267\230\3562\265!b+\270o\371J\267p\335W\267@\244L9\342U\307\267~\030\003\267\246\341N8\256\376\0018\371|\3158&W\2254\370\t\013\271\270L\201\267\365xK8@\022-6\264\341\251\264l9n9\002\337\t\271\256=<4\355V\217\027Z\"\321\031\302\006\347\226\304+\240\027\222c\202\231(\256\217\225v\311\377\031\366e%\030L\365\004\030f\r\022\031\207e-\030\260\016\242\225\223\317\304\230\362\341\324\031\264\235\202\027\366-\245\227\233?\272\030f\004\323\231\304\355\001\032\272\264\031\232F\202\356\030\271\264\246\026=M{\030*\016\001\030\212\334%\026\002\353n\031\322\336\036\231\246\260\311\226#\001\277\227\323\251<\227\223`\351\226|1\347\026\356\375$\263L\230\205\264\306J\263\263$\223c\260\344\004Y2\2708\2451\363\313\2342\335JA\266*\2441\2627\311\355\2649\000w0\222c\237\266\177\014\033\265\374\264z\261\"\331\372\261\327Y\362\262\022\\\306\262\032 \204\265\373z\271\2635Q\353\263\226K\331\264\306\2652\264g,\3665\257\310\002\263\374\260\'\264\245\316\243\264\347\002~\264\251+\234\260\277x/\261\026}\335\264V}\027\262D\261\220\261r\355]6\316\36106~\010\2116\366\026\3303\233GE\263\264\302\030\263\030\225\0034\353\304\3546\361I\366\262\3145O6S\337\0014\\\021\2158y\332\3757n\245=3q\030\2654\277|\2005\266\335O\264|\020&84P\0347\004\264\3426\'\177\2776]z\3306\004\301\0378*PM6Y\270\2677\241\264$7%\300H6\n?\3412A\233\0023.\270\2247\262\023\2117oZ\2355p\351\010\274\312\n\026:\344\2737\273k\242\2479\024\026\0068\355\336\334\271\037h\305\270N\017\311<\226q\014\271\275NE\274\010\264\2467\351\246\205;EA\323;]\265\233\272`L,:\250\203%\273\271\273\0039~\232\214\274Y\244\220:\276s\022\273\177i:\273{\377\333\273\245?=\274\367\304\"\271\3051Y<\022\301\252;\220\363|\273\030\230\252:\016J\2347\254\257$\274\362\234\033\274F\301\206\273\274,X\026\233o\003\031\rs\022\026Am\377\230\232\tU\230\262b\313\030\235\356\205\030\345#8\031\204\'G\230~\224\261\032W\030\205\027\262e\377\026Bt\234\031\355\3251\232*t\002\230&\366?\030\376\267\261\232X\204\262\030\321_\243\230\206\033H\231\213,\326\231\247\354@\027\274u\335\027\222\367\357\030^U,\027\300\026;\030\001\260\237\027\001W\325\230\305\016\231\230\250\302V\026:\347\371\027\3124\201\227\373\03706\202\264\2676\275\354\0226zw84\177DL4\264>\027\263r\215\0334Z\263:7\325\277>\263\027\336$6D\211\201\262\211xf8\275\262\3657>\322A33O\2104=hc5\221\341x\265\370r$8\016\010\0007\274\030\3436\n\337\2576\354?\3366L\\\0328\230e\3243>\320\3627+A\0377\234BT6\006U\3512\332H\274\262ZQ\2147\276t\2177\216\204w5\230N\342\261\201\233\033\270\316F\002\266!D\0064j\345\0046P\235]\264\t\237\2544\275\331b\270\032\243\204\264\022\252\2657\"\32191G\250t8W\0265\267c\215\2343\376\362\0026*\323\2645n\267\017\266\330\003\246\270\207\265\213\267\n\t\2475_\315\2636\206\23767\027rK7\r\220\200\264m\342\2308\250B\215\266\371\344\204\267%\344\030\265\3504\2203\327\260\02086\224\263\267\360,\2724\262i\256\2733,\234\274\265\\\3519\231\016u8j\246R\266\252\020j\267\352a\217\271\2343Q<\3612=\272\216\314\336\273N\260&6\365\361h;\267\310%\273z\242\3549+\270\237;\267$\254:\247%\312:<\354\n\274\226\212<;-\242|9\256E\276\273Q\2260\273\363#\311\273\366\302A\271:\342\025\275\307\004\031\273\007\004l\273\341\362\344\271p/\3075\371\240o\274aAf<,\302\230\270\200\037\316\027\035y\004\027\200p\307\030cU\232\232\370\212\317\030.;\237\227\024\247\033\030 \265\243\231R\226Q\030\003\250\356\027\nB-\230\3663\312\030\027\377.\231\030<\373\231\265\356&\031\256\360\034\232\345\037L\030\360z\335\230\371\265\367\231\237.\036\231\373w#\231\320J\222\0263h\020\231\260M\236\027\342B`\230\247\240\264\031P_I\227jM/\027\000\352V\031\003n\261\2273\311\342\030\320\236\'\027\312#\0044\321\3073\270,k\3414\032\256v3\323\336\0106x\272S\264\316p\0374\254\311\221\270:\343\204\264\246\321\2667b\243\0313\230\037\0267[\024\25665O\3173\313t\0036\272bZ\265.3\034\266\205)\223\2700\023\277\267\242\217\3755\235\367\0177\256\27087\261\215*\270\246\241\325\264`N\2368\242\221\2017]\327\222\267\020\214\026\265c*U3\004=\0228\203R\261\267\346\010\3274\273\354\2174\370f\212\270Lb\2065\256\225\3501$_\222\264\362\322\317\262\342EJ47oX\270\317q\210\2638M27\356\272\247\262\236\231a\267\205\366\034748\3013$\010\273\265\325\254M\266\301\365\242\266\353\336\204\271\276\267\316\267oJ\3525\253o\2346\017\227\0176\356D\3346\330\223\3244\030\233\2438\002\026\360\266`$D\270\260\207\3131\000\354\3362\271\223K\267J\345\3404r\250\253\264;\225Q:\212\273\212\271\020\001\221\272\030\377\2259&\205\2218\337\236\2109a\304\0148\217\021\260:\217*\023:\373\311(\274\027\033\236\267ef#\271mp\345;\t\021\231:s\262\224<\\O\326:\031Y\001<\237\317:\273O\236)<\242!\260;,\034\206:\273\347\034\271\013\311\306\272\250k*:\033\216b\275\377\022I;.\211<\272\332h\035;\337\243\243\267\236\030\025\274y\304\206\273\217\316\000\273\213\'\312\226\311\241\366\031\266G3\230D\254\240\030$!s\227e\224\266\0319\307:\030\005`H\031\261\302*\031\032y\270\031\t\002\363\230\236\204k\030\240\315l\026\037\032%\231\364C\004\030\032q\300\230\204\271\356\230\303\353\316\030N\023\227\230=\3012\230)\"1\227.\320\006\031/J\316\031\252M\311\0274\227\245\230\240\357]\226~~\222\226L\213&\232@M\305\224\255\241\347\226\213\356R\027$\205|\030\311\316\2634(\212\266\270k4y5\316r#3\000\330\242\265\326\346\0373~\272J4>G4\270/\0275\2644)/7\321q\017\263\231(_\267i@\0147\327[\3513\262\327\2315\312\3528\266^R\231\266\010\231\200\271\232\007\217\267\375%\2005\025\330\2206\301C\360\264/\n\302\270(\263E2\030\014\2778\234\307\300\265\245\004C\270`\324\030\261A\242\2211\274-e\267\212\370(5\264:\353\264\240\337u\026g\365\213\032\007\033}\227\200\025\017\024A\2064\027\206\300<\032\n\010\026\232f}\'\231\356\213\277\027\342\254\006\227\324\371\016\032\3259D\231J\010I\227\300\267\034\031\210G\'\030F\370s\227\3640\036\026\310\264\257\027)\366\'\231\303\321T\230I7I\230\211\313\224\231\272\200\355\230E\371\256\026&O\254\027TK3\030\034]\347\2318\220\032\227\363\226W\032\032\305r\230t_1\032\247\362\226\030<S\324\226\354m\276\226\"E\017\026\\\"\013\226\036\"\023\031\007\2777\230\344\017\254\027g\023\207\026\200\n\211\023\014\373\301\231E\024\236\027\314\323\316\026\313Z\265\230\273\333\335\027\360\356r\231N9V\227F\257\262\232\022Vg\227RW.\027\303\034v\031\202\312\000\031\2040i\031v\303d\027 \031e\227\270\374\370\230\216\315\033\231\350d\261\031\326\307:\032\000(\342\227\372\'l\227B\305\367\226\024\224\r\230#\020^\231<\370s\027\307\023\217\030\224~6\031$( \032\300B\310\026?\014\306\226\010\264\234\230\366[\235\232\342~\r\027\351\323\254\231R#c\230\264\231r\031\020\312\224\230t/K\232\310\273\235\231\002\245t\030\014A\247\027\"\242\375\030\376\035\032\031\301\035\334\230\335\331\214\031\241\254\232\027\307\3414\030\025\233\243\230nN\021\230w%\314\030\211\330!\031\027\220\330\230$.\205\031\230\3422\227\333>\313\230\263i\367\031\261\201)\227\377\243\356\227\247\361\234\231\261\3225\031_\r\325\031;\211\320\227A\022\204\030 \t\024\032\370\304\031\230\232v\205\231\263^\035\031\324\341u\026\342\305E\030\014+1\030\347\332\236\227c\362\223\231\374CK\030er\211\230\320\234*\226x#\343\025yn\030\227\223X\355\031\350aU\226\335\025w\032\347\241\347\227\337\213\235\030\246T\227\031\001d{\031Pa\277\030\342/9\231`U\247\226\3317\016\032\321\210\002\231vE\r\030\320\205\347\230mon\231\252\0252\226\253\010\241\030\253\344\334\230\356\023\311\0278{B\032\263\000#\231z\234\271\025\313\2130\231\235j.\230\204\350\036\227\314\031\351\226\256\230\240\030\340\267\354\224\343%P\030\335\231\345\227\360\364Z\226\200wb\223pj.\230\306\3232\231\306\222\317\030\2207Y\025\3233\005\027\253\032\204\031JE\200\232\336\367\256\030t\303\210\030\t;\211\231\364\020\376\231\226\312\030\232)\026A\030\025P\311\030\334b>\026\223\204\373\0276>\356\231\205\345\253\232\246\275\027\230\340\251\035\030r\276\024\031\223\035d\027\353\354\237\231\036@\013\031\264?J\230\263\331\014\232>\006 \026})N\030\005\345=\030\256\0373\230\274\365\357\027b\235\r\230>\'\324\225.\355\203\225\242\360\224\027/b\344\227 e\234\232\006\273\332\027`\322n\027u\336o\230\203\312u\231P)\201\227\325f\361\230\264[2\0256\361t\226L\231l\225x\347\266\231!h2\031:.R\230\316\026\\\030K=\344\230\2713\202\030\332\312\235\030H\360\025\227\230u\370\227\224J\\\027\374\006@\027\362\336\267\030\260\246\215\030v\025v\030\311\222i\230T\201\347\230\n\025\'\030\354\357\253\227`\230\243\230Vx\374\0272\226O\031\210I1\032\324\314a\030S\322\204\226.\002\322\031e\250\226\030\3306\274\026t\000\033\230\2278\247\027\340f\244\227^\302\214\227\352\312\275\230|\271\235\231\346\360\202\227\340\350E\031\t\212\302\231\217\035j\227PX5\025\225\267\310\231\270\016F\031\314\217\020\032\333,\341\230wBB\030\346\334\033\230{_\234\230\016\373\202\226\026^\353\231\242\224B\032(\361N\2303\014\022\230\351\272e\030X\274\276\231\350\352\026\026\0053%\230_\351d\227Rcy\230L\317\235\230\022\034M\230\337+\203\232\266\2523\030]\221F\032\311$\276\227\262[\302\027\010\004\336\030\001 d\230$3h\027~\340\277\027\240\313\224\230fm\204\027\315)!\031\244\235\211\227\337X \030\230\301A\030\000\223\200\230\020\307d\230&~\323\026q\"S\230`\201@\226[Q\006\231\"\237\304\2272\234\226\027\022\033\267\026^\030\200\031\"|\003\031f}\027\032\212f\267\026\210|\213\0316\021\"\230io\230\231l;-\026L\354\200\231\217\331|\026\243\217\002\231\245\3363\230e\021\\\230\210O\033\230=\346D\030\246\271\031\032\240\343D\031\300\252\262\232*\007\327\227&\201\333\226\304\265)\030\336(\261\027\031+\325\027}m<\226\335\212\205\230\3012E\030#\344J\230J?U\226\232{\260\226\376\327\236\031]Q\315\030\022\205\200\230\366i\344\030\346\203\312\227\207\202\010\031\276\\\254\030y\354\211\0308\010\351\226t\ts\030\314U/\231\306\320\002\032\372W\002\030\026\244T\0279\212\003\031h\344\226\031\026\211\214\230\363h(\030\277\307\241\030\204:&\026\31010\032\022\035\221\030\2542\246\030\000LU\225\217\237\275\027Z$M\232\264K\037\230\"\237\307\030\267.i\226b\240\271\230b\247\025\032e\024\014\030D8\025\026U\266\314\230\240\337)\231\310Z\224\027\324\303\223\230#-\026\230x$\201\226*\371K\030\205\343\000\030\370n4\230t\374\314\230\334\351\315\025\001:$\031a/q\227\224\274\023\231\\\355$\031c\000w\231\336\246\'\031\244\210\305\027\225\253\034\232\236\224\226\226\200}\022\227\013\035\003\231\020\034\346\030\271J\270\031H\271J\227\n3\347\027\374z1\031~\343\033\031hz\311\025\224\025\251\226t\254\235\227\371\000]\227h\352\202\030\254\030!\032\030\374\037\0323\220\177\2320\357\032\230^.\240\227p\353\347\227\237\234^\22714\004\0323\334Z\230\312\370\n\230\205\027\232\230\013\337\'\232\326\335\'\025r\327\225\230\275\312\212\030\273\361\021\032\304\230\271\226\314\320\366\230\362\031\266\230E\007\235\031\003\366\261\227\005x\024\231\022\3133\226\"\224Q\030\206\303\212\231\374\001$\231\354\326a\230\322#Y\2313\221U\031p\004U\230\242\266\347\030\203\206$\230\300\363\227\025\026\273\227\031X*:\230h2\323\227\207;\261\032\260\"\345\225\214\273\256\031\260D\211\0319G\265\227H\302S\027\344}\352\026X\014\270\230&\334\262\230\2423q\030\245)\256\030\361)\315\231\222\212\020\230\264)>\031\310!(\031O;\274\030\223\2516\230C\236\001\0300\312)\031|\006\377\031\350T\002\0279pJ\032X\271}\027\276\340\030\226\342\n\255\226<j\255\026\371\315M\030\0054\016\027\024Y\256\230/\313\010\231\010\241<\027I\345\200\232\216\270\240\226R\251\t\030\204\345 \231Y/\201\027\256\266\244\227z\361\334\226\356\330\274\026\242U\372\031\235]$\227\343\276\252\027\004T6\230J\232\252\230\342`d\027\212\312\220\232\007+\300\230\377L\005\230}C\242\230\n\216\'\027\313y\035\232p\234F\232 \317\240\025\2326{\230\222\352\025\030\023k\220\032:5\316\027\266\366\312\030H\252\233\031\365\301 \032\370\356\227\226\205\235\037\227\334\354!\230\227\307C\027\350\226\321\027\000D\302\027\205\270\342\225\000\247+\227$\215\232\027\224\360X\226?\364>\230\000\026\005\030\230\247\025\230\356\342\227\03098\251\227\264O\255\030^\3748\2318\265\216\231\002\246\014\230\241=\021\231>\270\001\030,\004\273\230A\366\205\230\301\225-\027\212\236\275\230\304\240\247\031C\303\204\227\360#\306\227\317\3554\232\017k\324\027\200\200?\2305\351\"\030\246rd\231!\3712\031\345\304\261\230\224\315\250\027;\372\035\030B\327\201\030\316\217\240\230ky\004\030p\005J\230\362\250\262\032\307\252i\231\332\376\202\232b\361\025\030-;h\231\330\274\007\0270r3\031\244\'\037\230\317\317\337\027\300\336\340\026p\251\376\027\204\020\313\030\233\266\025\027\203q\260\027>\304G\031\364\010@\231\020,\222\030q\327\276\027\266\253\214\230\004\025x\243\322\"\241\030\365\3270\027\016\214G\231M\026\304\031\336\362F\227B\331\006\230N\203\225\030\306\345e\027\020\r\214\027\372\321\351\025{\353\'\230\262B\315\2300\017\006\0306\013,\226A\233\371\030<bi\027\312\321\250\030\255,\246\231\374\335E\230o\020\003\230\325\332\005\032\\\242\210\027\340$7\230i\3074\030\336z!\031\351\232D\231\2126\372\230\303\265z\030\232\225_\030\370U$\231\334\t\361\225\320\213\242\0264U\233\027\212\216\353\030\\M(\031\333(\341\230\333\350\260\032}M\010\231A\362\205\031\266#\220\2278\266\356\030\355\265\363\030\276R.\031<\262\266\031\320\362\017\025\004}%\230\026\034f\231\016 \317\230j\265\234\031~]\007\230A\020\225\231\0064\016\227\351\004\036\230\014\216\223\026_\347L\032\254\367\365\230Gh8\231H_G\027\256\334\014\026\n\007\366\227v~\212\2269\006\002\2320\314\220\026:>\247\032\326B\337\027\301\216\177\230R*\274\030\210\273\033\232mx\201\030\334\373\226\031\374\346\225\030\017\026\350\230\221,\206\226\356\350\234\030\362\213\233\026\3135\357\026\365\206\025\230\227#\366\227\277\234\221\030(\272\026\032DJ$\230l7\020\226\275.r\230b\220d\226\202\373\036\031\204\r\250\226\020MX\025@\360\272\031\262\003/\227\306\017\014\227\n\315?\027lF\361\230W\350\205\230\214\352K\230\214N\217\230+\002 \232\333\350\006\030^\232Y\230\356\rX\230>\244\271\227\361\352~\032\376p\255\232\260\251l\226\300\205\216\230\362!;\031\007\330*\230VN1\031\261\331\037\232\030\262\241\027\000>\317\226\020N\010\2302Z\262\227\370\020\366\227\005J\264\031\224\014<\230\273\n\200\230\r\275\\\031`\020_\026\343_\205\230\344\177\204\032v2\032\031\341\370G\230\240|\030\230m}\204\027Z\3459\030\023\275o\227\273\241\220\230tk(\230c\372\326\230\230{\205\232\030\370\031\232\200\257\376\030\3104\326\226\'8\267\2272\321\331\227\2325\207\227BD!\230\030d\371\030\375\372@\030\272\276\304\030\304\223\323\231\001\037\333\030\007\240\272\227}\374?\031Eu\224\027\250)\346\027\226\344s\030n\251\346\231\005PW\227\372\373\230\030\007\222\261\032\313]\016\230\254C\267\230o\353\014\031\\0\242\230Dz\207\231]\272r\230f*\302\231hO=\232\372\'m\231vwb\232i\247\252\031>\315`\027\201\250?\230-\032(\030\364\327j\230\000\1773\2246=)\031\r\261\376\030\200nl\230\034\337\017\031\001DZ\027\222\210\261\230@Fu\230E%Z\027d\300\013\030\33219\230\234\356\372\227g\2673\027\300\240\353\027\0139\264\026#\006\274\027?.\317\230@\313\001\232%\275\307\230\206\270\225\227\212\305.\030-\002\222\027\270?u\231<\223\323\030s\303h\030\332\tB\027\207\353U\231oJR\230BM\017\227\201\'C\0310\341O\026\330u\373\025\300\206\220\023\305\274\001\231\354\356_\231\364\2022\031\037\377\357\030;\r\005\027\274&\202\031\342\211\360\227\303\033\277\027\010\346\211\031\312\224v\030\363f\t\030rI\317\027H\332\255\2315j\023\027\362\036\204\027\260\024\001\032V\214\223\030\210\000,\225\210\376K\232x\352L\230w\033\002\230w\343,\2300\000\025\031\007GX\231\356\277\217\2326\327L\030\022\3745\031\343n\353\230\312\364.\032iS\257\231n\324~\230f\306\203\030?\232\371\030V61\032\305\253\242\226_h\365\030\314P\221\227x\205b\226X#\005\227\203\300.\032\000\177\262\024*\362\371\031b;\263\230\200\236\227\227!1\023\031\002\317k\231\200\364\262\230\240\341Y\230\3730\226\032NH\337\027Z\022\'\232\341\346J\230\374\365\371\030\0318\000\232\221&\376\027\316}\032\231{n\'\230N_\023\032\363\355\215\230\351\307\027\031\246Li\231\221\034k\027|\n\365\027\352U\321\227$\020d\226\215!\322\2316\251\262\232\312\016!\030\337\242{\030\002;%\231<b\204\232F\317\205\031\320\300\023\2270Z\235\024HN\317\027eE\003\030\260\373\024\025\277\222\232\227p\033C\030\262\206\305\227\016*\220\231\210A\235\230g\013%\230\377O\221\030g\330\277\031\321\274\347\030\342\226\365\027#\220\277\027(_\033\230\270\tK\030Z\006\350\030h#\025\231\202Tf\030\347\214?\030b\301\254\227]J%\031\262VU\030\032\246\211\231\032[Y\230\036\213\270\027\"\016\264\230v0\001\232To\224\231:V\232\230\336{\204\226n\351{\227\214y[\032\371\366\332\230y\334\262\230\335\210\003\231\014\031{\030\354[\256\231\265\331\016\031i3\241\030By0\030\360\013W\227\347\277\000\231\252=\357\026\346=\217\026\020(\371\226P`3\230~\203\253\030@\326\330\231\336\033\231\227\272l\257\230.>!\232\202|(\027gI\323\227yN$\031xQ\250\230`\307\204\231L\242\343\226\357\345D\231\022\377\014\030@p\217\225\014\363\253\031]\014\201\232\023\346\212\026\212\377\311\227@\314\323\023\254D\230\030\0244~\032|\210w\226\"m\025\227\373\263\310\227`\201\314\030!T\302\227i\330\316\027\207l\326\025\244\2736\231r\253\014\030\205\021\202\230\3578\352\030,\206\257\227YX\032\230V\031F\027\230z\001\032\364(!\032\206|\001\232\352\332\304\030\036\261\024\2329\233\307\031\243x\225\230iw9\230P\221\336\226\\\2551\226\324#\030\0275\211a\231B\236\002\231\"!\026\227,\261\375\227\026\274\230\031\320%\270\030\300y#\031f\261\212\225y8J\027\262\315[\030\265\263/\030\'\2008\030\004%$\031\361\010\331\026\033\237]\030\201\353]\027\340\324\222\230\327\377\031\227\263\035Q\231\320\321%\0256ef\230/v\237\227\217~\204\232_5\270\030\276\371\001\232\260\210\362\026\223\"\341\231\020\357\320\030\036\243\304\031\021\343X\031v\361\356\031Z\023\333\030D\2656\227\224\267\350\025\250i;\030\\5\013\231\341\255\204\031\007\221\213\227\324V\\\230\306\006\003\030\032`\301\030\277F:\231\330\336\322\027p\251(\230>\\\256\030\020})\032\267E\362\227\325\206\235\031\312\236\024\230\346\376\260\030\240\237\333\2310\224\026\030\014\230/\030\366t\000\030\321e\002\230\"<\"\230l\r\337\031`\252\331\030\356Bl\027\026\272\271\031\232\331\330\231\255@H\230\307P(\031\214\017\362\227#\276R\226\371\037\346\026d\204Q\231\001`\023\230\364\247\225\027\261\366o\032\001\211\270\227\333\317\222\230\354\\r\231bd3\030\347V\n\030\367\340\266\03028\r\231?\236\357\030\034\001z\230\272\267\374\230|\005\255\027p\r,\232\227\3038\030\343\344\362\027\330\020\202\026g\367\234\031\2241\'\030\033\027i\032\n\224\302\030\220`\267\031\024\321\311\231\272bf\227\253l&\031\222\031$\227\275F\226\230\303I\353\231\213z\037\032U\013-\227\363>\001\232\014g-\230Q\027\223\031\034.\231\027\236\024\372\227\356\231\243\230\220B\320\231\277\231E\231p\226`\230\310\324Y\226#^\235\027(\361[\227T\020\255\231\276\000y\031\304T\256\030\312\242\271\230\013\374r\231\036\363K\027\017\222\'\032y\231\243\031\034\334\001\0315m\250\230>\242\242\027\207\344\315\231\255R\213\2305\232\214\027\240\236/\027\307+\034\032\220\342\027\032|\212\237\030B\306I\030\304\355o\030+\030\001\227\202\252i\231\227Q\252\227\226#\214\227P\234~\026\003\377f\230\264\253\307\231h2\203\030\216\200o\227\262\202\230\031\264\024\205\226R\324\252\030\220O$\231\340\300=\225N\260\200\030)d\374\226\210\330[\030\215e\370\231\351\022\234\232,V\300\230c\007Z\227p\367\266\227\265B\373\227\353\305\355\030oU!\232r\275-\230\343\326\020\231\300)4\030\273\250\200\032\n\340|\030\3449H\230\0323H\030\002F\363\227\255%\372\227\031\006\034\031T\234\361\031\025^\r\030\362v\207\031~\241\206\231>\354\227\027\244;\200\232\311k#\031\252\377\254\227N\034\302\030\301\202\037\230}\342\235\027\031\200N\231Y\t\t\032\301l\277\231\314\037!\232l\272\227\231\370\023\367\230W\035\206\231\345\312\020\030H_n\224&\323\250\027Zs\257\226\256\347:\230 ,\244\227\200(\353\230^\217\311\230\001\350\204\030u5\372\231\352\324\204\032\300\237\322\226+O:\231\202\277&\231\2202$\227\244\313\233\027A\241\201\225\272h\001\231\200\356\304\230\342\225\010\031\007a\231\230\256b\213\230\002\323\021\230\236.\217\226\227V\002\232F[\022\227\2729\243\027mH\n\227\271)\326\031\000\354i\232x\336\350\226\026h6\230\004#\373\027?i|\231\213}\226\031\217{=\031\007\256\013\027L\371g\225\247U8\232\230UB\227\330\007$\031#\240\321\027\241!f\230\345m$\032\342\332\355\230\301\360\266\231\215\304b\030\326\276O\031vV\256\030`N\216\227x\212\000\032\232\365P\230B|#\031\274\245\211\030\215E\301\031\300\223\364\024|\374\203\030$\032H\031\340f+\027\252Od\030\377\377\206\231\245\303\233\027\022\313\343\227\0369\257\030\036;\375\227\367\232T\030\322\364\021\231\257\014\263\226\3146\363\226\272\364+\032/\rT\030I!\010\030\230S4\232\355\252\261\230\332\243}\230\0107\217\227\272(\250\232\230\352\r\230\343a\027\231T\222d\231\260\024\317\027\377d\035\031;iC\230\001&\360\027\317<B\031\013\033\024\232\021\034\231\031z\355?\230b\305\221\232r\021\316\227~YP\227\301;\014\030\016\250,\231\357q%\230B]\220\027(\376\377\230\342\266\240\227%]\"\027\302\3461\230P-\263\0276\303Z\030\r\214B\032S\350\220\031\000\016\351\027\212\"\347\226T\013\214\227Zb\355\227\270\344\220\031\266\322\340\230\324\334a\027\230\243\033\227\"\304\355\025\2450@\231\327\354\217\227\201\236\371\027\303\213\023\030\307\323\331\026\333\351\313\026\224L\027\0304\004\322\030\000\343W\230\216\252#\027\303\372f\030Y\000G\232\310\360\032\230\212\244\254\227\363\022\002\231x\320A\231\256\234V\227\217\332O\030F\276:\030\264\232\207\226\035\265P\230f\274\204\026r\313Y\031\326\267\025\232\354\374J\027{\\\262\226W\252\215\031`(\261\2304v\347\0307\275\024\030\264\357\251\226\220\347\246\027\205\354\304\030\314\002\364\027\346[C\227p:6\032,\274\230\227DE\313\227\276{\326\031\240\025~\026\370\2406\030\024Y\033\226\250\001\206\031\330\326\230\226\033\310\277\027\t\017\244\031j\026\377\227~\276s\227\340\316\350\230\020\314\314\226\233Y\347\030H\004\006\231\236^3\227Jw-\230!h\342\031\240\311\215\032\325;\323\031\247\373\201\232\017X\331\227&V\200\027J&\372\230.\266\264\031=\273\034\031\244\361X\232\027\303\025\231\224&!\032\377\026M\030\3569\022\030\224\323\014\030P\271\357\225(q\367\231\024\350\004\232z\r&\031Zv\316\227\200\242\231\231\370\202\"\227}1\323\226a\006z\232\260\200\037\026J0\350\230nh\017\232\n\004\n\230\024\337U\030\\a\240\227\351)H\232\231\021\237\2316\261;\230\037\035\204\230kG$\230\276\205\210\0307\217\013\031\257c%\027\355Q\211\231\r\3737\232l\251_\230\022 G\027.>\r\230\240\341\241\230\266=p\027\275% \230\007\302\200\026\350\207\351\230\017Ly\027j;T\032\004\003\321\027]\245\333\027tl\354\025r\330\033\230Y\206=\027\362PZ\231\256z\264\226\\E\375\231\356\276/\230\327\301$\030\341%c\027\311X=\231,bu\230\346\211\034\231\262\003Q\027\343\006\313\230\027\333\236\232\320p&\026\206j\256\027\364\244\243\230i[K\231\321|.\230\357%\200\232\213%2\230\354&\221\227\314\354\213\027\236$\206\231T\\\263\227\336-\340\230\r\t\257\230Y\300\343\230\334\361\306\026\257<T\027d\373\241\030 \221\243\027\360\370\033\232\3144\236\027\002\2526\2301\246\001\232\300\203\260\225\003\0259\031\275\264+\231\312\3313\226\010T\371\2253ND\227\371\203\000\231\325?\262\231OeK\231\305\027\262\032\364\245\331\027[\223#\030\352\360O\227\353\211\230\026\256E\371\227|)\021\227!\247\375\031\364\243l\030\270\357\020\027\306\003R\227\213\257\303\030%\242\203\232>Y\027\030\243m\031\231\305\202\217\026\353\024\t\230\010\0361\027B\030h\227\340\272r\026\014Y\207\031v\203\301\230\314\000n\230\022V\347\230\352\203/\030\317\351\305\026<\317B\232\210?Y\227T^\036\231\360\205.\030\223\271\263\230\324#\014\226\200 \356\025\244\306Q\030\341\020\003\031:\310q\231\313.\002\031\232mJ\030PQ\370\031tk\274\030\016\354B\231\340M\025\030Z>S\026\212\360j\227\367\363\216\230\236I\345\027\224\366^\030\034\005\266\226\344\2410\230(87\230\003\301\334\030\271\307\n\232\037+\212\227\336\273\300\230\010\241h\230\265\036\304\030\303\303\230\026e\007\204\032\372\370\223\226\343\354k\030\256\\\037\032\014~\266\231i\020\030\227\303Kh\030S\001Y\232\234S\336\027\254\276&\027.\217\221\026\355\311\215\230R\177\225\231*D\260\230\016tY\031T\017:\030\252\3220\227\277I\t\032\3144M\032\0349\262\231\264\221|\031\210S\261\227O\025\276\231\310\275\200\027j\375\250\026\226J\005\227\215\010[\031N\202\003\226\010\353\244\226\260[j\032\350\353\026\227h\362\014\230x^A\231\247E\007\227C\212\330\226\330\315\267\227\333\222\203\232,\312\215\032\032\273\"\026 }\007\230\341\020\215\030\365\025\365\231\320\'\343\025\202\330@\231\023-!\032f\202\344\227z=\013\027\321\324\n\027\371\037\321\227\322,\347\227!;\207\226\236\205\351\231\371\033,\230\324Q\036\231\234\246 \030\006\340%\026i|\033\031\332F\353\030\023\206x\2318\211:\031\022\354\365\030n\355S\230I\014\277\030O\271\327\230h\2561\231\005\336\254\230\236\263\245\032q\016\233\227\347\262\270\231\330\275\027\230Z\031\277\026X\207\004\030Qzk\227\235\227\214\230V\244\326\027\t\345R\030\020Rr\230^\315L\030\200\036\220\025\257\2122\031\227R?\030b\303\363\230\306\323\201\227\\\331\327\230B.\230\0302\241\236\231O\003\010\227a\362\262\030\231\260\375\027\250;\002\030\301\314\325\025j(\350\030\030\240\261\227T\337\252\227\254K)\030\005\223\003\231\222T\331\030\314\237~\230T\022\235\232\004\221\366\230@)\363\030q\t\220\031\270D!\230`z\326\027\014\032\362\227\020Dz\025\344$`\231\361N\024\032\363\353\221\030\n8\242\230-b\034\227\346S\220\230v\022\277\227PM\022\0309\320C\030\375\014\312\030\200\3546\227\314\320\357\030z\303F\231\275V\310\027\335\t\014\027?t\326\027z\336\260\231Ld\370\230\334\270\017\026\354~\220\027Ns:\027\320\301\376\226\272p\207\030l\355\007\031;\326\216\027\253\353J\032R\352\327\226\200\253M\224IoY\027=\202\323\226\307\034\203\031x\267\033\230!!\302\030\220\302\372\027\370\304\225\026\222\353>\0276\207\331\227\261\342(\231\177\264=\227&\275\021\027\320\313X\027\006\010\235\231$u\255\030\252x\021\032w\211*\027\212\225T\030\307\0066\227RI\337\026{\217\204\232\023\343\252\031\316\376\255\030\010\030o\030\240\275P\030<\030\273\226\313\276\351\2264\334\177\027\241=r\2317\2306\032\3748\034\232%\224\263\226\301\207g\227f\332\314\026=/\310\2265\215\227\231n(\220\231\3760\'\231T\373\214\027\335\037\224\030\335a\233\032x\312\000\030\331=\257\030\202\334C\030\276\241c\027\237M\021\231\\j\005\031\360\023\"\030\367B8\226\307\377\243\030@d\274\031\277\277K\027\1776\236\030]\177#\230\350g\250\032\376\013\263\230\t<\316\231\317\021\345\027\t\212Z\227p\216?\026n\370\216\032\203Hx\230d\033!\026\212e\264\227C\334\263\231\362*\003\231\204\266\031\030.\214\035\030\342\374\335\231\313\360\225\231\333\235\363\030\241\2136\231~\222u\026\247\243\211\231\014\234\220\230\033\305\202\225\251\263\233\231`\233\243\031x\207\241\227\024\277\347\025\376\005\360\226\2074\265\031 \366f\025zd\035\232\354\330e\027\254\335\255\231\273\244\021\2279\201K\232\275_\231\031\264O\204\030l\006\334\025\010\t7\227l\021\273\027\305\300\036\031f\240\033\227=\377\321\027[\323\322\227\321:\340\027<1\263\027L\334\030\032\000F\203\031\212\336E\232\353\221\301\231\2408\"\224\202.\024\231\013\022e\227\344\233\252\227{\307&\027\362\242:\227\236\246z\230\252\231C\031\005V\251\2318j\\\026\017%\361\230$\\\220\230z\243\347\225#\200\325\230!\"\226\027\037?\232\227\330t;\225\262\345\032\031z4\222\230\024\257\036\231P\352\272\230i\310\203\232\200\3633\031\306v\024\031\010\017\331\030)\237N\031\034\255M\027g\\,\231\251g\032\230\301\305-\231\276\270v\226D: \030\366\204k\0318\356\305\227\221\013\246\227r\002\250\230\203\330\204\032\232\2656\030-\216\275\030\363\234H\030\316\335\025\231\322\356\210\030{\177\326\030\360\266\263\226\013h\244\032L\237\304\227\r\010\236\227\024%\212\0300\201 \027\023\220\275\227\262@\211\031\221U\333\231\325\256\262\032\233\247\302\030=\247\024\026/\361\374\030\274\037_\030\266.~\231P8\013\030\250\323\021\027\340\325\205\227\207\023y\231\331\304f\026\367\303r\031\014\331\373\030\017\233\332\227\253\207\201\030\234K\350\231\334\264\335\027H\242\207\230\"\037\225\230\323\321\216\030:\000\267\030\200\3215\030&\271\233\0318\371\325\030\302@\340\025x\353\014\0266\213\t\230\240\227\370\030 4$\232\3564\242\230\311\272\036\227\253\271\255\032\'2\220\026$\\\330\031#Q\031\032\367\236G\026\222\354,\230\324\315\327\030\305\360|\231Sv4\031G\221\247\030\320\372\232\226\222\266\005\027\305\215\314\027\353\374\320\031*\255A\026`\234\302\225\210\177\'\031`:@\230\375\207\321\231\200\216\245\230\2503\027\225\204Un\0300U\264\224\250~~\226R|\201\032\320\217\002\031\\\026\205\027\262\253x\031,\336\230\227\214X\033\227v\267\223\2304\000\263\030\260\341<\230P3\312\227\222\371\346\027\264w\205\030p~\276\027@\361A\027\344\331\313\227e\234\003\030\312\324\260\027PNW\225\307x\242\230\274\032\256\030~\214\231\025>\0308\031k\320\033\031\305dr\231\304\337\332\227`Ad\227\254S\211\0271$\237\030\226\002l\031\346\347+\027\260\203\220\026D\372\241\226\351\267\001\231\0037\201\0316Z\243\232]\323M\227\210\265R\026\263\213x\030H3\034\227\'\307\201\031\344\222y\030-\237\014\030I\203j\031c\010~\227\254\374\266\026\237T\267\230~F\266\027\352\375H\232r\207j\030\2403\322\023\351\362\274\031\224\224(\230\024b\025\030\246\032\317\027\300A.\230\202\303\000\030,\005j\030\021]\260\031\274bV\225H\021(\030\246\341\030\027@*\242\224sZ\216\027\340\310\310\231\225F\353\227>\316\265\031h\024M\227\207\375\326\030Rj\203\231\300\353>\031\3434\237\225\310\241\340\230\206A\333\030Fq\212\230\345\245\247\227P\257A\026\303\177c\230\315F$\031\210\354\344\227u\353\030\232\356\346\254\227\310\377\220\030\310\221B\226\000\177\361\027\000\354N\031|\343c\226\200\230\233\031\206\301\013\031 ,\021\231\354\345\272\226~#\214\230{\300\017\230\350\261\210\225V\353\311\027)\022\345\226\320\017J\030\255J\002\232\021\017\r\031\313\0312\027\200Oq\023\237\001\342\031`\270P\027\000\305\253\226\315`O\027\"\235\252\230\206V\312\227\000\274\010\027G\213/\031x\251#\026\300w,\0302\240\202\227}\3213\030\272\366\374\226\356\223\t\227/\3744\032V\200\271\031X;O\027.\t\326\0319\311\354\026\344P#\231\2744\325\2272S.\230\217~\235\232\355e\315\227\246;\332\227?\351\210\031^h\022\031\022A\"\026\363\354\'\030z\216\352\227f\276\230\031\311\367C\0314\331\013\231\034\307\350\026i\321\357\230\366\202\273\231`Y\035\230)\221\005\230\307E\234\030`\300\245\227pHW\227\252(\210\232\002\236\017\027\336\331\001\030 ^h\027\241\016\366\030B\003\242\030&\006\224\230O\315R\030\030\357\333\225>\336\302\026P\360@\031\"\252\323\227\023\374\204\027\265EQ\031\325\013L\232\246\316\331\030\337\246\216\027\254Gq\027\300\307\322\225\310\337+\227\033y\262\032\024\231\217\227z\177\207\030\305=\361\227\331\231\205\031\235\222\373\031\n\215\250\030:8\n\031\244I\234\230\026\322\001\030s\370\325\031\247$7\230\226\036\242\027\336,G\227%\3547\030g9\177\231\256\032\314\030\302\207\346\031\264\376[\027x\246*\226:\311X\030\270 \257\031gH\205\230/u\025\031F\330\317\230\242q7\031\022\267\257\230\320\252b\031,\300b\031\021I\t\227\214\322\006\230~\272\021\230\274RU\230\334\016R\026rI\356\226\336\377\356\031\354\362\353\026V~f\227\202\tr\030]f%\230\324\270Q\227\214)\200\032\010%\265\026\235\250\231\231\036\027\016\231\023\370\007\227\245\323\212\030q\013\341\231\010\270\260\032\364\253\270\025\236*y\231}\026\257\227o\322*\030\273r\344\027P\315\331\025Wf\365\027\222\n\212\030\244\250x\232Bc\232\027\034\361N\230\227o\307\031\334\201Y\032\252\316+\026L\331\321\026I\246f\031\252\356\374\231n\177^\230v\017\001\230\244\215\023\225\252\302\034\0327\3229\031\233K\253\031\033\353.\232\347\301W\227\350w%\032.h7\027\262\023\246\231\013\201\200\231\0364K\032\350\240\367\227/\252]\030IF\314\030\355@=\232\3463\017\031[\364x\0315\241\031\032\342\3333\030X\375\220\230\017\204\207\231Z~6\227\362\225\004\027@\255\227\027k\3561\031 6\264\030\217G\241\226z\216\204\032\002\325\010\231~mq\032\000gt\225)3\t\030+\251\r\226\020-\355\027\212\025\263\027\324\211\270\030\205\213\227\030\\,\245\027\246x\206\231\256C\327\030x\026\253\230r\224\215\230\336\255\242\230j@A\231.e\350\031\370\031\265\230\330Jc\025L\267\t\232>\020\277\226\274!H\231\"\023\200\026\210\202$\0250\010\304\226\\\231A\227*Yn\032\232\022E\230\362j(\031\004\202$\232\315\262\246\227R\r\277\227\300\220\231\230IlR\031\n(\306\227\264\212\213\230/\323\251\227\216G\357\226\236 \274\230\'<e\230<\024g\026\364\261\230\230\203i\036\031v\027\n\230|@\004\232:hS\2268\270\212\230vI;\026rG\212\027L<\361\230\300\2448\026PY%\230\223\260v\230\362d\024\031t\356w\026e\376\007\232ej\177\230\2059\002\231\352\304\305\030\217\304\207\027\374\037)\230\351\343\336\230\312u\030\227PhP\031\204\306\321\025\230\242v\030\t\307\330\031Z\271(\232\202\225\376\027\272t~\230\024\353\264\226_\220\247\032\014VQ\032\226;\037\227\274\240T\030s\267\376\227\177{!\030or\250\030\214v)\030\200\355\321\226\230\221b\027\026\233r\031L\225\216\030J\255l\226\210\315\234\031\005\221\235\031&\246C\231LoD\226\334\307\036\230\2648\032\231p\0019\230\000\005\033\032`\340\217\226\335\304H\232\200\240X\031\213F\004\027\356\024\035\032\204P\363\226\030\322@\030\234\315\315\227/\377\261\231\233\\\305\031\250\352\311\230\323\201\r\232\371\355\230\027\352\333\312\227\212\003\230\231\346^\313\026\367C\210\030\330\303\016\027\033y\244\230\3667\236\230\014\331\325\230^~4\030\202.\376\030@\021\245\027\237\210\247\230\362\177C\030\220H;\231\264\2255\030\266\035\300\031\307\356\215\031\276\241\304\226GR\021\027d9V\2326H\276\227\217\216\026\232\347&\320\230\226\272\211\031&\256\250\030y\273\216\030\335\352\210\230TX\236\230\375\376\234\230\316P\310\227\264\207\213\030\276  \226\010\227\273\230\271\340\037\032\374\377\342\030\331\341(\030$\214\211\231\322]\253\230\232\004~\027MZ\"\030 s\376\025\342\034\003\231H\220\272\225\017\356\366\230\326\311\016\027,\370\371\227\374]\267\031[\2154\227\374\310d\030\021\241a\2270\226\014\031\356d \230\244\273\017\027Ii\010\230Q\3365\230\310hU\030\346\003\214\031\342\323\204\032\\\323 \232l\\\377\227\232\034C\030P\317\233\231\344\321\031\032\'\305A\227b\357\337\030\264\033\370\027\276\005z\230\227G\336\030\035\264#\227.\210\365\030\246c\267\231\360\356\341\026\376D2\030\031D\324\030\375\334\360\231]\373\270\030FkX\027z\022\034\227H\313\r\230\345\274G\227hu\376\227\274 \347\027\004\263\233\227^\315\204\0272\322\014\027\\\203\217\226N;\203\031\372\2735\031\254\206\217\227\014\355\017\230\310\260\201\031FV!\227%)\350\231/\271\257\231\"\337<\032\224@\302\030n\344\271\031\312\310T\030\336\177v\030\\[\277\025\214\035\'\227\020\327\230\231\364\210\243\032\340\304\"\226\177b\213\032\026S;\230\355\005(\231\321\002w\227w\354\372\230\250\314\310\031\270~\211\031X&\275\025r\037\264\230n\313\302\226\210\346\245\230\224\210L\031\034L\223\025\331\037\261\232\373\\\263\030gc\002\230V\265\227\030\363\221K\232\314`,\026\023c\226\231o\315\326\230M\246\221\227^\254\234\027n\351\322\026\210\347@\2306\rz\027G\264e\031\223V\257\231yJ`\227\213L\275\027\2276\205\027\t\342\240\030\225\255\377\030\023\250B\230\010\223\207\231 \022L\032V\016\236\030\312\252\262\032\217\313F\032\010\223a\032\367\377\000\232\0237\204\031m\210\322\230U\025j\027`>\360\031 \336\373\027\336\267\362\231@\2503\226<\321\"\231\324|\315\227\344\313\031\030\336w\201\032\034\342\203\230p\025,\031\324\310{\230X\375\022\232\225a>\031\200uh\225K\363\025\232\'\241\031\031\240\205\006\226%\354\323\231\211\230\307\227n\2118\030 \204[\2259\212\266\226\272\345\271\230\351\307\267\227X\376/\027\373\241\214\227\205\240=\230\305\227\237\227\224c\250\230\343\370\364\231h\244\225\027H=d\026R/\027\231\236\275\327\031 \340*\027\013\004\027\231&\307V\230\027\010*\032z^\234\027#\266a\031\261\333r\031\272\n\221\027\316_<\226\321h\356\231d\242\263\227\375\031\230\230R\263\331\2308\232\370\225\332\332\331\027.\255\013\027\346N\262\232\235]+\232\220\237k\030\303s\346\027\016F\250\030\344\021u\030L\3345\030\314iy\027\2274I\227F\230\275\026\242b\257\027\265\325j\230.C\262\031\"+\212\027Z0 \030\254FZ\027\377-\341\231\245\357k\030\210O\204\230\312\005\310\230\244\361\207\026\03176\230)\031\305\230{\217Z\230\177=\"\232\314\341\264\031\225tn\027\256\023\225\231jVN\230\223^\361\226a\260,\230\377H\210\230j\267\t\230\246\226\016\232\360\234\204\030\213\320\263\231\376EA\232\352m\214\026\305\222\321\027$Ie\030m\302O\030\370:=\030\310\t9\230\254\241\341\226\222\342\330\231\000\316\362\231\260\020\370\225\350\241\031\226\324\214F\026\240\333\343\031\016\370\245\032\207\244\261\027/\006\255\027\343{\033\232\001\251\321\231\275\272\235\226\350=\266\026\304\322\'\030\260S\236\027K\"\351\226|nb\030\357\315\343\027fLY\227\332\253\331\025\312^/\230\310\373\030\231\273\030\'\030\020\273\307\030\220P\300\027B\212\211\231\357\022 \031\000\037J\230_\022\341\227p1&\026\3243\256\027\033(\226\031\364\230\002\032\214\360\026\031\0350!\031j\302y\226\224e1\026\242v*\031\221\267\361\226\006\370\262\030\327iN\230\353$\233\030\354\305+\2267F\376\226|\'l\027\376\213F\030\356\314\203\227\320\000\013\225\250\231E\231\036\033\005\231\274\350\204\230\200\214\355\030N\337\200\231\0360u\226a\371K\030\274\376\013\231]-$\230\222;\277\227w\024\255\031\202\227\027\230\362\207\271\031u\271\323\227\257;\037\031\327z\360\027\246m\007\030\002\261\334\030bp\226\230\016L\336\030\377\374\271\030\304\271\007\027\357xR\231 fw\226Z\350\202\227\347i\352\027\3466\'\030\010\210?\231\256X\272\030\r\013\003\027y\323t\230@\315\204\030@w\233\030U\273v\230\027\016\232\030\220J\232\230\211\242\005\230\314\364w\226\004\307%\230N*\311\230\334\321\205\230\240\010\231\027\016g\210\231\323\r\t\227\275\350\234\227\333\017(\027\"1\034\030T\357!\030\252\202&\030\362\271\302\026w\201\327\027\371@}\030U\234\r\232;\234V\031\270\303\022\232\344\016\252\030\366\022C\231\251\246\272\030\016B\375\227!\243\262\232\361\031N\2320F\356\0268m\263\027M\257\322\031\333\315\220\230`U\231\224nq\300\231@\210\357\024&w\372\026\177a\233\026\246\n\330\227\3416\217\226\301l\337\026\024\034\275\231\250l+\026Y\201-\230\222W\221\030 5L\030\254\205.\026x\274\037\231\275\242\317\030\323w\204\232 xj\227Z\247\303\026D7%\226\247\251K\027\332\330\200\027\302\017\267\226\250+\037\232J,\261\232o\177c\230BB\037\232\323\\\006\027\200c1\026\033\311\216\031S$\246\230\001\337s\230\300\333\257\2305!\030\032\264+\037\230\307^\364\030\346X\031\030\314\334v\227\231\206\242\2301\274\223\030\365\341\207\231\271w\367\026\r\375\244\232\344\020\031\226\254\353\322\227\337=\002\030\0135\037\232~k(\230RW.\027\326\004\331\030\374\224@\026\002\261D\031\266t\364\027\252\022\223\032\345\217\203\031\331\274\331\030\300\254\003\231,<\234\027(\007j\026H\250\220\030\n\241\010\232\201\345\236\227\247\371\032\030\317g2\227\303\000\355\030b-\202\027\333\311\322\227\354\331j\227\224\266S\027`S\257\026\324M\202\032\203\224\311\231%\247\022\227<!k\230\261d\231\030\226Ea\231`\344\234\030\274\260s\230\313\345\002\231*\213B\226!\267z\027q\272\320\230P\023p\031\356a\035\226\376{\206\031J\253\214\2314q\311\030(\003\320\025\270O\332\030]4\n\2304\327\305\230_d\205\231`\037\262\225\231X\206\030\251\312\022\231\001\r\245\226\355\331\323\230.\371k\227.\276\327\226q\207*\027`\032\001\025\233+ \027\300\304k\232E\205\"\232\030\236r\026>\0003\030\334\261D\032:\224\235\226\346\303\316\227%JX\031\004\2644\030\230\0377\230\231\334\355\030\231I\330\030z\242\275\230\314\304\266\031\21062\030\276\307S\230\313\254\275\231\220\377u\225\367\026\024\232\016\272\274\231\013b{\030\267^\261\231\237>-\032H\022L\032\235F\243\030\265\300a\226YT\356\030\206\257D\231!\213\211\031\263\376q\227\320\374P\231\350\305.\030~\255\217\027:l^\230\314[\027\230\244c\302\227\305\252\371\227GL9\027\233\312\021\030x\356\\\226\242\375\273\226@\2242\032\333\005B\030\365\266\023\231\357\016p\227\334\322\265\231\220\204\322\225\006G\000\027g\321\245\230\261m\277\227\220t\226\230yT\311\231\220\216\251\230\232E\267\231\344\r\016\230\210\207\210\026\007gT\230\302\2221\027E:a\226\030\n\020\230\010\0043\031~\226\243\226PN\n\027\222\374H\027(\036<\230P\326\345\025\250\251\260\227hK\207\230\302\252\334\230G\n\027\231\255\272\017\032\tR\234\027\304jh\227\0108L\031\303\014h\232\305\266\241\031;M\305\030\230\226\017\030\365\315\351\031$\202\240\227^\250\036\027\032\236\250\226,nL\027\005F\347\227M\311a\030r\241\325\230\303M\207\230\"-}\026\213\251J\230\275\304\232\227\313\'\310\231\3272@\231HG\003\231/s\317\0310a\202\231\335J-\027\216\245\031\227=\007\006\227\020\223A\031\334\327\243\025\267\366\037\227\017\003\342\027o\347<\030\327\340\301\026s\267\271\230\316\277\260\230\323\301\306\231\201\003\003\030\003E\013\232\016\265\331\230\203\246\264\031\221\363\370\231X\2518\230\225n.\027w\237\034\030\250\313\254\230Y\004\361\230fK7\032\0078\003\230\300\337\202\030B-\322\227\206^\207\227ST2\031\346^\334\026\245\257\204\226\005\016o\2272\262\211\231\264L\342\225\016j\211\231 \210\260\231\010\313\266\027d}\024\230\350\376\277\227\364\266M\032\356>*\031\023\226H\030\357\\\364\227\301\340\233\227\310\277\217\026\033\037!\032\322\214J\230!\3057\027>{\001\230\340\374\317\025\214\t\330\227\335 \273\231\233X\203\231\0326\202\232\316y?\030\n\265T\030\311|S\031\214\3645\03087T\0264T\360\026\200\215\270\026\273\367\362\0260\301\206\026\236^\304\030C$\252\030)\320\235\030c\323\003\031\316\212\367\030\344\365\n\027\313\\\216\030\377\252\270\030\377\235O\230\220\230J\227\236\026\367\027\362\250\254\2278\277)\225 \266I\225u\037\024\227\2427 \031\374jc\031v^\312\231tL\013\231\017%>\0326,\225\227\002\023\357\225%q\204\032\202+o\230^\320\326\231Y\250\267\027\234\262\255\030\036\375&\027S\276\315\031?^\237\230\240\244R\227\254\201\246\227dR\210\030E\347Z\227\006\016A\230\360\202\034\226\rm\225\231\240\202\371\226\242\321J\032F\363\351\031+\341{\230\314\332+\230\nS\204\0308\244)\227w\264L\027\346\371\244\027,\341\246\027\233\316\030\031b\211\317\230<\324\262\031\2754\\\227\251%0\030\226E\246\0274\362+\232\250\314\226\224Dp\300\027\267\226\002\231)[\254\032\247\332\223\231\220Z\034\230@\306\'\030\361\234\217\027\326\211|\241\3427\370\226\0010^\232 \2358\232\267R\300\231V#>\230g1+\031_\313\213\030h\'\324\225j/\272\030\2701\013\227&f\352\227\322\004\261\031\344\243\346\230\253{\261\030\010\323\206\030H\0273\231\\\300\213\227\323\003\204\230\006=\200\2277\366f\027\200\204v\030;l\023\032\352\317\354\230\004\032\213\030\307\225\306\227\006jg\030\227\256?\230\275Xf\027X\007n\026\372x9\030g5\232\230\324\307\307\227\2500\225\226\366n\003\231\323\341\314\030\240\023\376\025\205\360\210\230\277\253w\031\204\271\330\226t\000\035\231\316}\244\031\004\3563\027\272[\254\026\010t\n\031\203\332.\227\036\345\251\030\036\305p\026#\367\310\227\244\242\246\230*\317\016\030C\223\036\027pV\220\225\360\304\243\226\020\300\007\227_\3678\232\332\311\244\230\356p\352\027T\242\007\230l2\253\227\252S\234\031\273b3\230m\022\325\027\322\306\000\027\000\343\375\224\276\223\360\225\216\241\352\027R\241\316\231\362\244\326\030\307\244\215\031\016\206Z\030\340i*\225\3401\232\031\353%\022\227\366)K\232i\276\'\231\220\001\325\230Q\\+\031t\277\235\230\351\373\n\231\221g\001\030z\321\222\227\300\315\277\230B\326\270\031;\245\035\231\344\316X\230\206\376\215\026\034\013|\031\256\234\265\0273I%\226\360\344J\230\316@t\031\366Y\266\227^8f\231IJ\006\031~%\235\230\250\341\224\030\364\024\236\027\234iT\031\373e\354\030{\244X\231\rs\213\030\307_V\230\367\"\307\027\204[\030\230\000\275\330\0237\325\243\226\346\256\215\232\025`\203\227\256\342V\227\026\265\334\227\"\345\007\231~\370S\030\023\365t\030\200\255\320\024\275\014\037\231\000*\362\025\332\342\243\031L\200J\230\313\2554\030\201\311$\030q,.\231+\032\375\030\342\241R\030\372\213\340\0254\206\225\030Pi{\232E\365u\232\241\254A\230&\346\206\231\310\002\253\225xZ\354\230\331\246\216\230\322\303y\027\344Q(\226\034\026\255\031\377\322\326\026\020\013\210\226\005\213\336\031\261r\370\030\236/(\027^4\374\230\230\210Y\231\221\013(\230R\300A\027\260\355\320\027v\352\356\027\312\366>\226(\'\334\225\336\256\261\026 h\225\024\2302n\227\223\342\216\030/XE\230\026_\t\030\276)j\230\323\016r\030M\253\016\230\317\345\327\227\027\231\245\227^\271a\230\277\203\031\232\370\271~\226\023\363\241\027\206?\356\026\r\353\264\027Y\277`\031\342\022\245\032]\325\245\230\340\265\356\024x\370Q\030F\312\354\230K\366\367\027\010\036\021\230\327\313I\032p\274\323\224\250\023_\230@\303-\227\234\215U\230\230\006\371\031\264\004\007\227\325\364\007\2277\370\247\032\027\252\213\030\027/\320\031\370\277\267\030Cdi\031\255\212\200\026\"\365\004\027eJY\027\377\030\241\030<8\007\227\226y\202\032.\333\032\030B|\215\230\274`g\031\016\303\037\2314\265\035\230\013\262\230\230\034\376\247\027Q\321\224\227y\303j\0315\311\207\230\351\377g\030?\320\t\031\373\r\313\030\300\000\006\231\263\027\225\230\002\235h\2269;\002\232\275\010?\231\347\310\245\230P\347\326\031@\230O\230xgL\230\220\231\267\225\350\374y\030\250\275D\226d\366\370\026\227>|\230\332\020\202\226\205I\324\231\254%*\031\205t\374\031\356\025G\027\002\365\234\230l\317z\032@6A\230\352\211\005\0315l\302\027\014c\327\027\206\257K\032#\254d\232}\016p\027\367\324?\027\275\317\276\230j\350i\230\347J$\031\2071r\227ZqV\030\226\240\253\227\206*\242\030*\230\177\031\266\325\222\232<\212*\031z(\275\226X\263Y\227=\314T\031\204R!\032p=K\232\032\305\002\231\322\010B\030 J\337\225\360\3250\2322\346\035\2276\022\200\030\203\001\210\026\364\262\224\027Db\007\031P\237Y\031\241\315i\230\r\227h\231\311\023\200\031\036\323\227\027*\313I\032\215\357:\227\240\222\203\227\317\353\244\030?\370\253\227F\252\023\030\275\001~\227o]\313\231|E\002\032\217O>\025\0001\331\025\217\016\274\030z\215\224\227\310\226\\\031\032rh\230P\220\370\031\241\370N\030(\214\271\027\024\333\201\026\231\362\232\230\311\265\272\027HJ\230\226\304+\007\226\013,\211\030\247\024\242\230\"\352\210\230nO\337\031)\350U\230\036\204\311\027+\313\027\031F\224\306\0318\245\352\027tl\325\225\266\306\256\227/\204D\231V\262 \030}\216a\031\210\304\250\225\320\313\207\227@\233\337\226\347+^\030\300\242\356\025\310\355\333\227\022\023\027\031\313\377\322\225\221\353\026\232Xp\346\227\375J`\230D\247\362\027i\257%\230\3672V\227\277`E\031\275|v\030*\023/\030\334\000\362\226^7\206\031\274\021\245\227,\304\303\026\315\332\360\027z\274\261\0328\305@\032\177& \232\360\265f\226\370\2565\031\033\223*\230\211:\254\030\273\2741\031;<J\230\360H\240\026%\332\265\226\030\201\224\230\272s\007\027\2073\350\227\230\303\365\027\034\322\303\027\\V\363\031\217\337\006\227\001\244-\032\256&\371\225\366\263E\231\356\300u\027\241\313\032\030\245w\013\230N\212\347\027\026\035\224\027;Q\363\031\200h\343\222\220l@\232\372\355\206\030\376O\253\230XN|\031\366;\201\030cy^\230\275KK\032(\325\020\2276\263\027\231;b\\\227H\256\301\027\376\214\207\027\201\211<\232A\234k\030\340@\202\024\235\314\376\226m\306\377\227E\303\203\031\003yG\031\354\326\244\230u\236z\230,\232\032\031d]\237\232\340\r\277\026F\247\241\030Qf\324\030\303\214\317\030\276\267\020\230<\313\335\026\364\324\001\231\253\202K\030\214pe\230\250\027\210\026fj~\227\356J\255\230Z+\266\026\300\332A\225b\021\366\231hPK\227\236$\317\030/\243X\227D\250\306\226\240X_\227|U\003\231\364\3471\032\351\177\013\230\342\221\034\03168\306\027\225J\021\231jB^\230\026\226\211\030\324z\364\026H\321\201\230\203\217Y\231\010\264\010\032N\226\022\031\031\370\364\030~\344\247\031*!\001\2276\333\204\031\240\212_\227s\215\r\230\334G\"\230\354\035\014\031\360\t\222\030| \"\0322\211\027\032\026\361&\030]\237x\231\034,B\030\\3\262\031\271\200\236\027\n\275O\226\356*\240\226\2659\264\230\001,\267\231#\221\020\030h\323\207\030\006\350\300\030\036wd\226\362[F\027\264!\261\227\312\200\200\227\304\032\263\230.y&\231\\\r>\231\274B\013\226&C\033\230Q\277$\232\257\3106\231\217_\t\031-\2545\030\236-U\031\276\033\272\227v\2176\226\243\370{\231\254\276\251\230\240{O\226CH%\030\351\320L\226\344I\000\030P\232\277\226\313YY\227@\222\365\026q\316o\0316\326\201\030p\253?\027\001\371:\032\311\277\217\027\202\364\003\031b?\377\025b\271\031\227\344~\367\227iS_\030\354}8\226\346\372\351\227\364\027\020\230UP\243\030\323\034\237\230\214E\223\030\316\007\322\030\2401b\026V\242\242\030\'\323\224\027\220\nn\024l\207\241\226\027\277\243\032\331\257\"\031L<Y\227p\236\217\0276\353R\027\220\016<\031\250\217\220\030S\236\216\0302\252\336\031\014\242N\026\352\324q\227^\325\336\226\033\244\313\030\321\'\000\2300\353A\026\314b\224\227R-\374\027\005\260\263\031\034e\362\225\3546/\230\030z\327\227\354\377\021\031\274\356\226\230\340\rZ\224\324\346\204\231\272\273t\027\355n9\027\nDH\030!\254\220\231H\324\253\027\343\014D\026n \305\231\351\204K\032\254\213o\230\002\304\245\030\236\001\207\230\255/\222\027\211\300\243\230?kB\030\266>\301\227\002\322Z\027\2060%\031\340s\244\027\356\016\217\027\033\320\232\231\367/\272\030cV\216\030t\366\347\231\376\225\001\031\314\271D\031\364\356\271\226\206\322\366\226`\005\225\0302U\207\026\033\267\254\230\235\366\341\226\341\244\225\227\241\307)\030\365q\025\031\204\226y\027\026-\362\027Tk\r\027\217o\327\231\352\001\033\232\367\3434\030(+\n\030`\007]\027%\230\332\031/\024:\031\231\210V\230\2625&\030^\006\247\226#\273P\031\313\376\016\030\2770:\232@r\305\026\'\017\225\2300\350\005\230\312\302)\231\034\241m\025\336%%\026\377+\266\230\033m\316\231#\267\233\027n\326=\030X\020\371\026jdP\031\255\200\326\027\361\341\016\031\247\302\r\231(j#\230\206\357\024\230\240\232\020\031\210(\370\227\030\030\n\027\230b\344\027\000_m\224~\020\016\227\"\364\342\030\276\213\210\031\r\272[\031\354\302,\227\000\300\221\220\002\033\033\231\200P2\030\321\232#\0305t\024\031\371\213\305\026\331g\216\030\226\250\225\231\007\270\004\230.$\230\026*\266\272\230H\222\014\231\022\256q\226~x\366\030>\272\277\030\032C`\026\024\355s\230W\246n\232\034\327\270\030>\247j\032\300p\205\025\202\323\233\030\002\372\205\231\230L\315\225)g\001\231\024s\345\027\202c\234\030\010\336\314\025\2007\027\025\000\352\234\227\214\034\262\032uL\354\227b8\346\227\005\031\240\230\331\224\234\030N\202/\231\326\022p\031\266Ds\227N\261\024\230b\230\030\230\323\265W\230\264\232\221\230\021\2252\030\374R\227\230\026\223\343\030\317\206\t\230\231\316\232\230la\022\030\336\365\237\227g\321l\031\"D$\0318a*\026&u\211\031\327C?\231y>\266\227abt\231\217\257\257\030\270\226E\030\341\036\276\230T/\215\027\214\316\260\032\276l\204\227\326\214]\030\026\322\034\027\003\r?\231\300\316\260\227*\336\205\027G\334\216\030Q\221\355\031U]4\231Y\353\261\230%z\220\0320/\201\026\027D\320\231i\265\252\227\214[\230\227\352{N\030;o\003\026\006\302\033\030\n\267\346\027>\023J\027\340-\230\032\310\251O\031xw\003\232\016\225S\230\376\304\357\030\367^\313\2273\303\335\227\202\236d\030\305v\225\231,\276K\226IV\034\030\264\305\357\230~\256\"\227X\200M\230\004\032y\026vmv\0321T\350\231\376\204\024\027\320\036\336\2304\004\357\025@\330\320\030\272\320\037\030\201^\320\031\023\325S\030\273\203\223\226\024a\t\030\203\204\330\031Va\322\0270Q\004\030\\\215\233\227`\004\246\032\037G\266\031$:\217\027\364Fv\227\020\275\316\026\224\361\006\230\205\220\013\030n\347:\227\2441\"\227\323\0033\031\"\376\304\226\312O\362\226\r\r\256\031\264\341\005\231\230s\222\026|\200<\226\356E\372\026\004\354<\226\034\tg\030\024\375?\231\226\001\t\030XP\021\031\017M\\\231\006\331\356\030$\314\262\227\240\253F\030\357~\213\230\3224\343\027\216Gf\027\027a\363\030\0167\337\230Q\310\025\232q\237\260\232\370\232\030\226\217\004\002\031\003=\247\226\177\335\241\030$\234e\231\356Q\314\027pn\244\2313\037Y\031\205\266\230\027\030\356I\231\032$L\227\365c\224\230\200\353\242\032\334b)\230\213\022,\031\301\201&\031\233\357[\2318\0335\227\240M\034\025\230\362\232\227k\277\037\231\276\024\250\027\367{\376\031\010\246\201\032r\033\261\030\030\261\n\231\240\370,\026\314\341J\226c\203\302\230\360\001\351\025\246\371\035\030t\356\250\230\'/\026\030\216\242\025\232*\214\251\027\354\340\032\030\216\326\263\2276\346,\0274Z\016\030\262\276\002\032\240;\251\027W\321\277\230\232\037\022\2309\245]\031\\\024\341\230\030\273h\226\245G\264\226\035?\002\231\200o\321\030\002\020O\230\254i;\227\202\024\030\230^\356T\227mg\026\032\365v\233\231\027\377o\231\037\365\027\230\342\300R\230\251\201\236\227\030\271\243\227D\017\337\030_\n>\226_\340\026\230\000\353\031\030\010\203\364\226>4\"\230\300\2311\231\212=\006\032\374\331\351\026<\313\312\231\2564\200\230\246\0036\032\373{\000\231\024\221Z\026|S<\026\374\361\224\230R\224\266\225\335\230\234\232r1\235\030\342\321G\231\241\030\254\227H_f\026p\235{\227 \335\266\031\2311\257\226\270B\357\2314\225\250\231y\222\247\031\246\267\201\0323\020H\032Z{\232\030\033\246\033\030\260kN\226\314J\213\031p8\n\226\366V\372\026\314\020\215\227\003av\230r\240y\227\244\027\'\227\323\324%\0317(\202\230M\227\225\024\356\320\213\027\2348\240\225\006\233z\226\010}\022\025\327D\003\231G\276\232\030\250Vx\026\206*L\231\322S\333\027|\304E\027\300\372J\032\320\023\022\227\020W\023\030\355o\346\030\211\351\207\227\346\206=\027\234\017\310\027\262\212@\231\366\032\263\226\2168\355\0273\330\343\227,\277o\027ni;\231\271\002\010\230\332\017\245\030\030\244\032\2254C\202\030`e#\031\332\031\206\031Sy\346\230\372\336\306\031\235\013\363\230\002\340D\030\253Z\235\031\316\315\272\230\230\366\001\232\372\024\252\027\220[\033\032\234}\001\231\274\177A\031\240\202\377\227b&_\031,\226a\230<p\261\227\356OU\230P[\275\031;u\010\230\254\225\017\227\3205\340\026X\374\347\230\262w\215\230p\303\325\226\351\n!\032\376X\373\231\230\206\016\030\364\251\013\030\014x\222\027@>\207\224\211R\207\0305e_\031\341#\216\031\270\332[\030\244\267\252\226\350\234^\026L\270\245\030,\034{\227\352\003\302\227?\325\013\030\250;\353\026\005\322\250\027Z\207i\230\215\346\'\027\002\262\350\230\276\022\331\227If\034\232o\262\013\031\266J3\232\323\200s\030\376\310\206\030\246]\366\030\256\323\246\226\332\235!\0274\362I\0322.s\230k\031S\23044\n\227\000\234\016\030\330\314\330\030\264\244\266\030\301oW\230\372\336\331\031Y+v\230(B\377\2275\307j\230=\372\204\030\370\207\343\031]\210\315\027q|\211\030\330sO\030\016\305R\232\330\237\037\026N\026L\231.\304Q\030Yl4\232\304\231\367\024\360\3172\025\237\331\002\231\364t\303\027\351\202\304\227&\353q\031L\267\201\231\270\212!\227\200J:\225p\034W\030\366X&\227\223C\343\030\004\325!\027*L*\230\020}i\225\320!\361\025\250\366>\026\350\274/\032\250\314P\227\340,\335\023Nx\014\231\225\272\037\031$q\345\227\010\217\372\227\365\350\205\031)\370n\227\031\302\216\230\340z\030\227A\024J\227df\273\226\266b\203\032\243\207\347\030f)D\0309\305>\227\230u\204\227h\230\327\226zS\356\027\204\240*\032\230\307\302\031\030\310\246\025\244\371K\026z\3678\027\364\226#\030\263\360\001\230$\336.\030H\265\344\230d\301\210\0276u\021\230\240>\275\026Y_\356\027\251\352\010\032f\021N\027\033!\331\030\272\316M\227RE\271\030\217<a\232\034\n\221\230\2514B\232\036\246\216\231N\2233\231\300ra\030\025w\313\230\220\010B\230\222\017\001\032\310\030\027\026\211\272e\031=\0170\227\250K\355\227\251\310C\026f;*\027\0201\370\025\200~\266\025\210\347\264\227\177\303\223\231\327\342G\030\340I\336\025\262\337{\226g\204\014\030\254\211\263\230\312\177H\232m\330b\226\361l\016\226\215\007k\031X\315\273\026&\0011\230P82\231\211\3305\230\232 \252\230\206\315\275\230\237\225s\031 \017\321\231\037\261\007\230 2\025\230\260\314>\225\226\006M\231\332]\321\026^\253\035\227\315\343\032\032\346\257\326\0273&\363\030\224tQ\0304\256\002\032\261l\344\027\372\226\204\027X\007\216\225?\355\220\230J\227\230\230\230\322\332\225\003*\321\227 \177~\230\364F\251\027w\311\200\227\250\204\002\232\253\370P\227\t#\221\230\232\022c\031\310%\204\232\010\262j\027\336\376\242\026\006\214\312\030\316\017\316\026\354\250\266\230\325V\233\231\\\310b\226\"\222M\031N\316\024\027\014\024\021\030\3174\240\027\352\334\320\227\311\264-\031,\257\013\031\317\232\304\030\254g\232\031\247(\257\232Zz!\230\212\231,\231\347\250\000\232r\256\202\230\237\014\214\230:\n \030K\200\245\226K\330\201\230\361\013\217\026.\303\257\032\235\272\235\031\\\231\366\030\037\032\360\031f\333#\232\007:i\030\235D\023\231\006\325\223\027\224\034,\030 \275\326\027$\264\216\2271\025\002\232\247)<\030\206\034\253\031\230=\233\027\272\005\203\227\275\216@\0276\214\213\231\315\207\212\030M\226\035\032\214\nc\027\022_\276\031\354\330-\225j\323\330\031;\274\246\227(#N\226F+\356\027\004\234\353\031\014\346\202\030$ \036\231Q\330\023\231\360w\254\024J\340\217\031~\242\203\026e#\354\031\270(\364\027\334%I\230\035\364\206\030\031\322\253\0312K\005\027\316\211\244\025\236H\r\030\251\327\027\026=\201\323\031\324\355\016\027H\223\022\0311\252\206\231\236\364\351\026\274\344f\026\005\212\302\226\216/\223\226\320\345K\232\n\355\007\227\222\361\357\230\276\222e\032\031\212C\230\237T+\030\223\005\030\230\220\323\234\027\221\270\235\032\226\366\210\030\343\312\255\0326]\221\025\350\203m\031\000`\311\022\234\360\026\226~5\014\030f\340\250\232!r\027\030\353\273\353\226\271L\205\231\362\001\263\027|\371\317\026\363\343n\232\014\245Y\030\331=6\230\343\235K\027\016#.\231\330\213\004\0320\336\275\031.F\231\230\305\315\255\230\354\304x\030\371\325\262\030b\202\036\031\232\231\223\227\236\304 \032\024\360\333\027jg\307\225\356\335\326\225\314U,\232\200\007Q\224z\235\370\030d\211\252\026:|i\226f\371\224\231\227\277\353\231\260\347\305\027\346=\272\030\300\323\006\231\'\333n\230w\212\315\026VDE\230\202\020\336\225\260\343\350\231bY+\027n\2277\227\027\001\020\030\352\3168\032\234\265\217\230\321\002\314\025v3\003\030\'$7\032(N\325\031\366\362\254\027s\035\365\027.\232\031\232`\275\256\026wf\014\231\234\333:\226,\347\210\027*\305M\032&\220u\230\220\214\262\225\002T\007\030\255\313\323\030\240*\360\027NU\361\231\360\334\220\231X\342\327\025\366\226\317\027J\325\322\231J\261\377\031\332\013(\227o\"^\231\r\006\276\227\355\212\013\231t1Y\226\221>&\031~P\t\030\273bh\2268\234\366\230\250\353\031\031\340\3764\225\023XY\030Bj\351\027\262\372)\231>T\231\230:l\203\230|\000\377\027y\\\322\231\366\2736\226\271.\331\230\367\331\371\226<-\022\030n\031\216\2279\240\035\027\264\2312\231d\236\037\232(}\014\227[WS\027\376\303\257\031%\320\201\227\3507<\031\336ut\231\334\240\222\030\010=\220\231\263\000r\230\333h\"\031\177\254]\030+D\365\027\370}h\230\310\215s\027\322\254J\232\210f\234\030i\371\300\227\271\'P\031\2635\334\027\000N\204\023\334v\354\027la\367\030\025\325\241\227B\017\007\230^f\002\032\202-\204\031\2710\210\030\340\333\021\226\312\276\330\225\204X\321\226\233a0\031vd\377\231\"\r\335\227\302k\262\227\332\344Z\227\350\354\335\227\315\350X\030\223\221\030\030\376\027\324\027\327\332\257\032N\267a\230\247\n\245\231t\336\352\024\2739\231\230<\276\235\027\035FR\031\360Bs\231\220\033\362\227P$\353\227\000q\017\224\342E\254\232h\376}\230\2144H\027\327\034\211\0308\3778\027\315\001\266\230\221D\267\231t\331)\231\304\310\005\031nE$\231r\r|\030\220\200\271\026!\206;\231\315h\020\030\222v2\030`\177\245\227\242\276\326\026\204\371\r\230\254\301\254\227\226\317\006\030O\242\207\025\253\201<\027c@\020\027\244\321\351\027\376\252\005\031\240\377\275\026\201\037s\230\241,\356\027/\005\302\027T\227\023\026\371t\262\232\365\010\221\231"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\200\327\3138\311<\3639\237\216\0008\225\200\2725{\27436B\250\264\265\353S\247\265\3058p:>^\372\265\r\214\255\2674!n4\276\002r:\213\304\3169\377\231\211\265\362\\M8\356\224;7\234|\2267\003 \t;\347\031\273\267\340\'\0369\021\314\3168\306\241\2378Kb\2459B\027B7!i3;\234\212\2569\206m\3309E\267\0045\221\346\3574\316\217\3649\272\252\217:\220\013\2526\030\267\210\272Q%\273\274\241m\251\274\313;\221;#\001\021<\210\326\253;\332\375\317\273\021\215\014=\233\327A9\314\210\336\274O\3173\273\263\007B=\200`\023=\235\356\3369e\2135<\361\036\203<\240\317e<\246\252\023\275\265n\206\274\016\237\327<\027\3216\274\000\374P\274\275\223\374\274\252-\220<Kz\000\2750P\274<B^\313\274^\003\365;\347\0359\273\253\372\211\274w\357\216\273\tSgt\355\0038\346\275\2735al\0336)h\263\265\242m\241\265\271\353p:\275\253\022\266$x\217\267\307m\2234nan:\016\r\3109T\261\212\2654\227=8\276\30797\0144\2347\257H\r;\370\353\302\267\370\245!9\340,\3218\200\223\2378\313c\2449!\007B7\035I<;\352\376\2609\216\231\3349\310M\0165D\322\3534\246\317\3629 r\230:3\221\2476"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_127"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\237\342\337\276\334D\361>\234\357\005\277\366\224K>4\372\215\276\222B\266\275\376\271\275;\334<l>\021K\327<\207\200|\276\374\256\201\275\355\037\276\276\036\315\321\275\001\351\241=g\351k\276\017\022\250\276q\326\214\273E*/\275|\317\325>\317\275\222\275\2722\343?\237F\253\276Qm\356>\346Kx\276\\\366\t?\334\232\025\277\316\024T>\217\200;\275q\007\026>2\351\312>W\217-?6\272\314\276H\231\214\276\335\312\001?\r\201\361\2761.\260\276D\317\324\276\266Q\010?\"\020\244\2753j\316\2778\302\307\276\203U\275>I\326\n\277S\002>?\247\227\227=\240\223\261\276\014M\306\276\231)D\275ND\204\277UK\215\276U\217e\277\302\302\255\275\356\004\213\275$a\310>\023\263\340=\362\375\235\276vL\351\276\336K,=2fv?\356\334\354\275:\274\032>\236WM>\031d\215\276\324LP>\330\004V>\374\240\260\276UD\314={&\000\277Y\261\241\277\032\353\"\277\332\336C\277\357\254\004?\275;\254\276Z\375\314?\342\244\246\276/\216\276\277vW_\276\241\302\r\277\206c4\277\033\253\214<|4\322>;\305\035?P>N\276\301\001\304\275\226%\222=d\254 >\243\010O\276=F\344\276\305y\225\277\210\271\325=n\242\330>=\0264>\207\355\261\276B\374]\276\365\252\360>\347\364\316\276<\035\033\276e\177\232\275h:x>N\313\213?\007\363\302\276\361\177R\276-s\022?v&\021=\305\232\221?\354\310t\276d\366\214>\311\326h>7\361\007?\322\206\304\2756\017\251\275L\216\025\277\354\271,\275\351iG>\0248\344=XA*>Q\367\033\276z\277\202\276\316_\266?2\312\034>\223\213H?\353\362\226\276 lY>\316\035\320\274\305|\236\277\225a`?R{\253\277\337\243\244<\035\216\362>\000\\\313>\351/\212\276\347~\254>\315\346|=7Y\013\276\030\243]>\217\350,?(\336\n\276\301\006:\276\367+\221?.\270\253>\262\343O\277\361~)>\327V\"\277jY\312>\024\3319?}\322\t\277\360\304\360\274r5\010\277e2\356\276\026.0\277\320Y\362\2760fh?\252\331\027\277\346\311\214>\207R\233>\274\321X\276\204\312\313\275L\342\210>\254$\016>\202\030[?#\262\366=\260I\331\2766\304\276\275\355\230\222\276j\310\345=t\345\020\276\350u0?\276\225|\275\010\314\301=\267(\271>\215\336\006\276\034\256j\275&sQ\277\257\276\005\277\344\323l>\341\243\226\277g%<?\241Y\300>\266\031#\276,N\337\276\236\242Q\275\230\317\362\275\023\250\204\276\352\221\201\275 \247\t\275\337\220%\277\362a\375>\267mi?\033]l?f\207V\276\315\360\331\277\024\372>\275\300p\3337\212*\255\271\207\253\263=\223]\2279C\177\177\273S5>>{c\031;\031W\221\272\214;\352;\230\316\037=\357\237\205\2768\346\014;\220=\202=\204\311\237\271\324(^9\357\304\024\271\312`\005\273\234\274\2039{\256\374\273f.\2578m\237\253\270S\231&\270\225\020\026:roe\273-[;\272\235\327\244:\216\240\014\271\342\353\261\266\347W\014<\215\236\267;\'\023\302\271\351\\n<\342%\266\270K\210\230\272+\361\037:P9\036<`\034\036\273jt\222\271:\340L\271\2607p9\214\262\250\273\320I\032:\247\210>\273Q\225\257:\266\311u\270\240\026\326\267\333\354\322>]\255N\273\327\256\330\274\332tw\271u7\305;\233\340\r;\307\t\315\273\006\332\2459-\236L;\201C\227\274\365@\275\276\373\026\022:\226\'s\274\230\3719<\261\027\2109\331\014U\270\022\213%8\236\317\2327\342\230\233\271\032\025\3038\341\343\254\271\347 \"=ds\252;\365\223_>\207t\274>\253b\030\273\3379~\276\317\024\003:\302\200\242<\200\354F4b\031\220;\03649\272\232d\0339\002\354\255\267\0108,>\231_@9\241P}\272\305\306\032:\237\254\227\272\315\020\271=%\267x\270\342t\235\274/j\004;I\252\032\272\177aR\274\261%\016:\370\034)\271q+X\274\253\240d;T\344\013\274~\023K\274\242\013\232;\372p\0239E\274\273\2742<$;\037}\222\272T\355<>\036e\305\272\270a\363>\321mI;:\016\327\276\2131\261\274_c\036=\227G\253>\221\021\205;\321\235\311\271\340\240\241\275n\357^:q\356\305\275N\006\177:\315J^;\304\254W\273k\373\201;\030\376\274\272\310\341\026;\213\036)>\300pf\267\312Db=B`\374\272\200\371f>\234LB=\206\334\235=\315\303\0229\250\035\2119\377\361\033\273n \032>n\214T<\235\352\206\272\247\n\3139\342g\250\270m\343\207\276\207\333\353:x\311\031\275Q\354\3679\376\321\3558d\266\212\270\245\307\037;\264\226\255\272\345b!>\354\005\000\277\273\350,\272|\255\205>je\337\273D\233\245;\346\311\217\275H\364\3039^\375.8Z\324/>\211\203\202=Y\325.\272\276\221\347;&\216\221\272\372+\247\272\201a\223;\235\245\370\275\273\271\364:\253\253\267\273\035\301\265<a\341\r\271\326pY8o\2565:\260c\216<\260\325\2009\0270_\270\021\000S8\322\207\2038\313\014\265\271\376\n\3328}L\017;\314\205v\272\370<U\272\010\017\265=c\234D\2730\277\250>\312\007i=\267\025\252::8\242\276f\311\377\272\245:\000=\014\324\260\276\3312u<\353\244\004\273)\246\256\273\343x\2009\322\245E\273\307\014\037:"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "g\262\245\275?\274\332\276\253V\306\277K\204\n\277}/\320\277\007\346\322\276"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "concat_127"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
