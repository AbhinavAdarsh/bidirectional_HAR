node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\n\002\262\277\272\224\t?\326\215+\277\237J\212?\315\312n\276\250j\035?\342:\004@\312#\007?\300\237\347\277\344\006R\277`\026\211\277\263\022\342\277\261\220\350>\215c\251\276\273+5\277\327\026_\277Y\026\240?v\344x=Z\364z\275-V\254\277c&\232\277\220\314\342\276\313n\301?\261\t\317\277=\004i\274\003t\213?!\326\314>\3535-\300\352\365\346\277\177i>\277T\322r?\246\370\335?\\\357\207\276^\206\214\276)\rr?\014\241P>\377:\313\277R\353\371\276~5\314>\313l\032\277Mq\270>wj\'\277K\225/?\031J\252?\342+Q?\003~0\276K\274\257\275k\200\326;\301\314l\276\350\213J\277\361\227\324?\007\202A?\211x\\\277{(\312>&:\321?\260\257\212?\227\r\'?\222\366!\300\005=v>g\204\213?\244\367\372\277HL6\277A\274(>\300r\377\275\253:\216\277\027\366f\277\262\000\273\275\224\216\032@\002\321\224\277\251\022`>\376\2551\277\364\336\361?\225\245x?\337:\031\277&Z;\300\233\214:\277\213\230\256?5\232\326?\027o\016\277\036\275l?\227=\247?1w\217?I2\240=\3007\204?\373\243\373=vB\031\277K\035V\277&\334\030?\305\217\255\277\000\267\025>\341\222!?=\326\324>\356\202\020\277\263M\232?\032`\302\277\220\036\250\277\341\027\220?Q\223\276>\243\003\203\273\277%\003\275b\272-\277\232:F>`\223\232?\230|\272\276\330\232\240?\273\247\014\300y\241\320>\035&\211\276\233\202(?\240\201\303\277\002\224\234?v\216\177\277\022}]\277\221\337\267>\336\177l\276\021\206\016\276@8\245\276P\3553\300\027\345\251?]/6=\307z\315\276\310\224C>~>\347>\030\034\323?\021\225\347\276\317_Y\275+\037>\277$\325P\277\272\255\255\276\226\032w\276j\325\004@\370T\321\277\237\0131?Z\301\306=O(\322>\220u\301\277\226\204\226?\263\023\346?\034#9?TI\t@mb\310?\365\251\303>\372y\344\276\317i\242\276rs\373\277`\273M\277X\332\n\275\327X\177\277\361\326\004@\022 \226?\032H\214?X\013\222\275\2172\336\276\225\240\260?\316\200\221\277.\330f\276H\0101\277\314Ma?\336m\270?\353~\311>\345\251\326\276ZC\n?\370V\320\277i\351\303\275\177\274\371=\033\356\231>F\203\206>!\031\001\277\005L\003?\350\317;?\250\210\232=a\005\034\277\236\276P\277:\376\373<\251\213\371\274\250Q\334;Do0\276\300\037\323?b\273\300\276x\356@\275\007\036Y?\030\370\253\276$\260\232?\235U!?\260#\267?\372q\177>\375E\007\277H\003&?]\311q\276\315\376I\277\226c-?\225@\344\2759c\365>BTl?\374\3305?E\216\211?O\243\224\277\271\340\370\277\001\345\035\277\303\330q?\217\017Z\277\251\263K>\251\016\261?\014\024\305\276\275\366\200?\262F\311\277\'\377$>r\213\376>\373\316\324\2772\276\337\276\323\035d>\330x\302=\260\246\311\277j,r?\260\036\320>\270`5?k\241)>\231h\030?\302\227\366\275\031\005\310\276\356\367\213>\343\032M>\302\rd\277\246\013\253?\'\317&\277d\021&?\332\320\003\277\234\265V\277\277\026\347\276\003\372D\277\225\214\223>\200e\252?\356\261\261\277E\247\007\300\330\344V\276\022~\217\277\037N\233?\373\223;\2768]\364\277Q\005\316\277\324z\342\276\206:B\276u\346\332\273\217;\303?\256\247\233\277B\266\254?\220ow\276\340e\020\277\\\221\375?\253\251\375?\347\343\263\276ZB\027\277\030\264\377>\177}\274\277\n@\351\276\327\326\017?\255\244\n\276\205\027/=\325\236\323\276\376\255\264?\'\267<\277\227\350\206?\265%\275?\006r\232>\006G\363?!\027\240?\204\243\312\277\241\355%\300\017p:?\273^\244?D\r\263\275x\272\356>\340\231O>\202\334\241\277\036=+?\263\326\027?N\032\246\277\221H\034?\\\322\201>B\352\352\276t\311\312>\362\'\370?\372<f>,W\215\277Me\226\277#\031\357><[\223>\377\003\022\277"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\2078\300?\247\242\210?\276gP?\344\2113?\264\332\n@\017\255\310>\005p!?{/,@\341\322\334?\010\331\"?0\316\241\277R2\231?_\250\300?\347\220\270\276~\304\336\276[\226Y@6\224\370>\332)\212?\021X\007@\005\027O\277\324\233\246?\322\346\014?V$I\273)\212K@\364 P@\361\301\027@g\375\215?\331Q\032@\356\251R>\376T\346?\246\222\220?\257\262\261?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\357\215)\276\226V\215<\364\260\260\275\313=\341\275\003e0=Z\230!\275\213\377X\275\205N\310=\227\2401\276T\342\025>\2446\204=\036\240\224\275\031\203\027\276j\342\341\275\270\352\004>&\305\024=\316\026\371=c\244\023=H\370f;\216\356\003=\240w\226<y\226$>\332\352\001>|(u\275\205\022\344\275Pp\361=\013Aa;\335:u\275zi\006<\214a@\275\303V\036\276\314\343\002=*\202\261=\220\324(\271\336\037\207=X\374\245=\020\327\341\275\2459\242\272}\331-\276\260\254m=\360c\264\275\376\370\237;Y\277\241<@w\263\275\226=\224\275\251>\252\275\336\264\200\275\2765\201=\007\206\025\276\355\030\351\275CT\016>\001\331+\276~:\203\275\022-u=(\002I=\021}\365\275;fZ<\007\036\006>,\014\222\275\363IH\275t\223;=\250W\020=HYv=\305\337\">\356\026(\276\362\031+\276r\210\022>Q\352Q=e\247|=\315w\021>\217\246E\2752\036\272=\215\214\n\276\342=\027\275\313\177\">\215\251&\276\001  \276\313D\303\275S\366\337\275\312\271\233=\360q\335\275;\377\365\274\\\310\020\274\213\033(>O\216\234\275h\254\022>O&e\274.G\035\275\300D\251\273.\276c=\026[\212\274\244!\034\276\350\3243\276o\354/>\014FT<\226L~\275\337\022\017>\200\241\306\275r\t<=@\037\026>!\2171\275DB0=\202\202\266\275\341\305\027>\3611\212=-\203\020\276)\3353>\360\250\033>6\220t\275\250\337\244\275\230\007\004>\370\201\245<NJ\220\275\337@\251=\036\233\257\274&\021\301\275Bm\237\2754\260\350\275\206\007\316\274\007\313\350\275Q+\313=\251!\321<\260p\311\274?n(=|l+>R\223\267\275p\316\200=z\3611\274\270J\310\274\312\034\024>\\!\263=t\207\024\276\000{\215\275\323}\324\275\220\232\265\275\206?\366<w\200\303<\031\313\233=\022\306\256\274FO\315\275\373\216g\275\212\027\216\274\312;\207\275x\020\314\275\263x\232=\252d\204\275G\022\213<0\373\035\275\336\r\252\27539\317\275T\326\037\276l}\214\275\337\317\207\275g\032\323<\201\317\325=7\327P\275\314r~=\t$\375\275C(,=\312$\255<\266V\331=\3574\027>i+(>\002\200\016\275&y)=\002w\232<OF\241\275)\267\347=\3054\021>x\007\377\275f\177\324=w\372\024\276M\177\250\275C\345\307\275\006H\253=Pb\240=(\257\357<\004\270\004>\034a\321\275R\247\260=\226\230\316\275\247yn<\255f\230\275\271\256\210\2743(\276\275\274?\211\275\350n\326\275s\004n=?A\334=\206]|\274\324w\026\276iMw\275%a]\274\201\207\000>\374\360\n\272%\331\365=\245\314\311<rf\t>?\246\223=\253\244\205=\373\036\324=\312,\036\275\010\314\262\275\021\\)\276>{\334=?w$>_\261\337\2758\2650>\227\224$\275\242K+\276\233&\225=\024C\022>\004\327\365\275\235m\211\274\026\255F=\030\032g\270\030]g=\014\271\211=\202\"\331\275\006.\311\275\374\375M\275SW\307\275\270d\206=K\373\025\276\2454\t\276\202\250\206=\036u\235\273\336?Y<n\224\370\275\265\373\370<^\034\213=4\256-\2768\257S\275\213\351\032\274\324y\232\275\221\234{\275\356\337\014>\276\244\">#F\340=0\334\360\275\003\336\016\275\024\321*=g\346\024>\255\344-\276\030\240j=\177{K<g\214\032>\233w\225=\370\216I=\232\211\031\276\235\026V=3\265#\276\274\260\305\275\rY1;Y\376A<\343\330\301;\202\303\200=X\215\250:\321\231\001\275\276\276\020\276\373\233Q=\202\016\221\275W\307\245=\030\303=\275\201%\270\275\343\005\253\275\346\245\010>\357{\225\275\225\262\314=\177\325->x\200*>j\014\264=\2749\333<\371\244\373={-\211\275AE2>\212\246\251=\372J\333=\315[\023=\252\006z\275\306\245\227=7\222\030>\326}\362=54\022=\021\212\256\275Z\325\257\275gd2\275\030\010==\004\236\014=g{J\275\265W\337\275[C\027\274\033\312\226\275\344\314\264<\235D\265\275F\367\017\276\224\345\243<\257\273\326=\254D!\276`\261o=\010\266\235=\n\263\021\276;\347\207=\352\222\013;\353\314\212\275&\271\341<\375\301\016\275\010\371\350=\363g\327=\322\303\362=\022\331\023<\007\031\360\275ci\377\275\334\004P=\303+-\275\257\354\331\274G\374C\275\332\300c=\344,o=\221\363\024>\375\316\323<\233\272g\275V\371\243\275N\214p\275\2707\365\275\2305\024=\257\351\000>\003)\257\275\375?\003\276\026\333\317\274\024\222\316;\356J\335=\203\036\313=\212\025\013>y7\224\275\376\265~\275\2727\003\276\')\203=T\375l:\242W\036\276>^\027>\355\223\\=n\314/\275\272\376\262\275\\\236\373\275\314\346&\276\303\270\032>\211\303\311\275\356\2536\276\301S\344<h\211\014=o\224\376=dH\212<\210a\364=\212&1\275\222\231\342\275\324\205\217\275\201r\217==\355\376=\220B\025\276\220\274U\274\304\r\356\275\014\305&\276\013\311\334\275t\227\021\276\226\r\005>\367\377\214=\025\0173\276\351\316\371\274zK\345=\353_\344\275\32293>\272#\231=\272\323\270\275\000\251v\275\3664\207\275\362\321N=\355C\275=\202P\327\275\372\243&>\000\225H=\271\321\262\274|)\037\276A\375\274\275=\214\"=>\215[\275\332\001\031>g\356`\275lU\r;Q\233\375=\260\234\031\276\212\353\013\276\317\0340\276\32193\276Y\277\006\276\360\370\367=\334:\\\275\2630\375\275\341W\216=\310D\303=e\032\010>\203Zd=\365\355H=\201\234\350\275\030e\220\275\302Ac\275V\2261\276|\026\225=\352\250\316\275\242\217,\276 \372\023>6\337\261\275$\310_=\351]\305\275\277N\023\276@\373\t=\343Q\376=\325f\017\276,\226,\275\351\036\246\275\216\233\243=\253\2033\275\221\2607>\272\254\025>0\234+\2769\206\324=\034q\376\2759\370\212\275\211\341\303\275t \361\273V\277\000\276\2321\216=\007l\364=H\017K=\027R\346\275\233\342\340\275p\371y=\205\221\273\274`u\223\275;&\000\276\216V\031=\034\"\270=\270\316\314\275q^\004>{\274\263=A8\223\274\257\252=\275?\240\237\275\305\323\270\275\254\2224\275\313\203\366=;\367\326=2\335\267\274\274\025\357<\377\035\356\275f\007\202\275\264\336 >`*\3769\336\316\252\274\347\026\022>5\216$\276\002O\000\276\362\0007=\177\013\010=\256\234\337\274F\022\276\275\014\253\267=\305U\246=\326\000\032\274-\005\265=\377\364\253:\"\262\026\276/\0308>\030]h\275\253\n \276\300\n\255\274\331#_\273\250\"\006>V\321 \275\207\341\r\276\314\317\275\275 w\371<\247\355s\275\025\360i\274I\3035<\315\312\262\275\007)\007\2757\352\301\275D\027\266<G\316\367\275\265\010g=e\271\327\273\021Q8\276@\310\320\275\314FJ<\005;\375=\257N`=V\331!>\205\226\036\276\3460\304\275r\211(\275\340+\034\274\023\034\036\275j\240\036\276\005\2450\275\272\352\220<\027\026\357=k{\200\275\002U\351\275=\010 >\030&\253<k\024\212<`\026\006>;\343}\274\007\"Z<\244\242g\274\304\336\342\275a\r&=Y\014\212=\350\204\340=\257{B\275\016\200\001<\333\202\310\275Ns\254\275\215\262\241==t\304=\3624\202\275\260\275\013>\342\253t\274\243w\224<Y\246\010\276\207pD=Qy\023>\316\022\025\276P\316\200=\256\'\253=\253\007\'=(\250\343<T`2<\260\034o\275\274\3732\276\014\202\332<\313\237\033>\253W\207\275\226.\352=\312\237\030\275(\272\255;S\032\345=u\r\214\275qn(>\360\257\244\275\301\326\233\275f\215\323\274\016\216\220<(\024\027>OS\303\275C\017\315\275\253\236\342\275\365Js;G\250)\276\224\301\355\275\001\"\272\2757\354\034>\026\231-\276F\276-<\367H\'>\221J\361\275lh\236\275\266`\t>\372\364\254\274\341\352\261=wz\034>\260S\354=\226\325\335=\263\200\243\275\364\321\202\275\2446!>{\306J\273\356q\363;\230`\300\274S\222[=Q\005\205=\204/\256\275d;o\275\371S)\276\371\247?\2748|\221\275vid;x\211e=0 \216=r\353\262=\213\242\210\275*\223\271=\005\363\272\275\304.*\275\263\t\016>\221Q\243\275\321\323\023=d\245\010>(}\013<\\c\224\275\n*\t\276\0066\330<\225\304\241\275\347\001\255\275\017|s\275\251\024!>\214\330\032\276_+\276==\r\002>\210I\354=\226\2601>k\250\r= \033@=j\r&\276\267\345 \275\214\205\375\275\335\266)\276=\322\022>\225\005\221\275\310\356\"\275S\217\036>\205\343\301\275\263/\214=P\340R;\024\354+=\311\325&>Q\304(\276w,\370\275\rH\373\275\345\212\342=\"j\321<u\3221\275\2067\303\275\376\263\311=\\`->\200\206\314=E\332->\232\025\376\275\014\377-\276\372)\037\276\247\275\322=*tH<\316\321=\275]d.\276\203\351#>rp$<\266U\264\274\275\247!>\020h\035>8sY=1J\001>2Ai\275\211\236:\2744\254\t>\370\\\276\2732\235\376;}\201\256=\021F,>|Jd\275\004&K\272\204E\311=\233\036f\275\353\035\340<\034\016\340< \333\223\272\373T\245=.;\332\275\305\254\350\275\032b\022\276\264^\301\274\014#\014\276qz\n=\275\332\242=]\365\320<\276\275\013<\336\307\010\276\300\244K\275\243?\017\276dM\306\275d\350\276=\010\266A;}|\346\275~s\350\275\216><=1\242\031\275\017\260\021\276\347\356\337\275\332\200\226\275\337\264\254=\250b\034>\371\323\177\275\026I\224=*T\327\272\026\357<=0K%\276\214\243X\275C\227u=z\3711\274\300\227\023<\362\376\301=-AX\275\252\207\010\276\353\305\364=)rv\275N/\014\274\320o\007>5\314\376<n8\310=q\367\034>\376V\364\273+\302\245=xS\202<Q{\354\275\3365<;\212\227\276\274\037\231\032\276\354\202\256\275+&K=\314\215.<\344\232+\275\302\237\250\275\013\363\232=\251[\023\276\\\351\331\275\334\313X\275}\300\260=\221V.\275?\316!>\313\231\034>\200X48\253\2520>$J\264;l\351\365\275j\204\361=w\376,>,\247u\275\306\254\027\276 \322)\276=\'&\276!\365\353<\216N{\274\314\021#>$J\233\275\036\030\312\275m\255+=)\223\335<\0073\332<\241\333\r\2759:\r\276\244\n\224\275\234I\205\275vmZ<\252j.\275\330\262\226=]\305\004>\334\370\033>\"\362\245\275\315\351\005\276R\360\013\276\272y\262\275\265\313\366=F\0107\275\270q\316\275\206\331\333\275\275\345\264\275\250\214\027>\223$\265\275 \301\371\275\321(\262=M\324\247=\355\313\225=\321\373\255=\261\321\204=H\322\026:\266o{=\251\331\035>\340\315\321\275\214\037\333\275\367\364\321\274\253\344\221=L\316\372<\347\nd=p\271%>h\356\353=\376{\352=\307|(>\221 -\276-\2612>\340\215U\2746\224\033\276\221\0210;V\267\030\276\234zi=\217\024\244\275\364\3301\2768\252\321=\t3\372<T\342W\275\004:\031\276ww->C\371\264\275\240\231\035\276eR\304\274}\020)\276\023\276?\275\224j\035\275d-\223<\326\251Q<\346\347C\275E\n\000\275\327S\205\275\20355\275\022\326\010\276\354\020\322=|\315\213=\334o=\273\037\205\372=~\272\373\275~\372\225\274\316J!\276\020\033\230=\340n\233\274Lg%\275\203Q\304\275\003\000\005>pB/\276\242`\023>(V\262\275\241u\005>\007M\021\276\367\2474\275`\362c9\301<\344=w\2271>fG\016\276\200\350\220;\207\320Q<\253\362\017>0\202\216=\013\331\207=j\334\242=\247\017\307=6\t\024\276\265\363\237;\320It=}\272\312\275\002\277\004\2751\2063\276\333(\023=\3113\206=\273\0024\275\340\004%>\"\336\013=z\212e=x\341)\276\247\322\304\275\0106\024\275\252.\004\276+8\337=\023\2632>@\226\357\275\303\256\022\276|\237\231=\330\304)\275\251\214\353\275\353\006\260=\002\356\372\275(h\310\275\206W\027\276(\2279>\271\275\226\275\227=\n>\2557.>S\362\307\275\3457\361=`\226\024>N\255M\275\322R\321=\326\003\203\274\013\236\372\273\017\000\000=a\244$\276\211\022\226\274,\204\014\276Y5\370;\222J\006>Y\330\246=\rT%\276\030\027\'\275,\337?<3\237\236\275\017\374\271=i\301\r=\024\036\302\274\275\032\003\275\3772\000>&K\242=V49\2758\301\342\275\224\255\332<\372;\240=\032\031O\275\024\017\316=+\263\r>\3430C\275;\017\030\276#l\371\275\363\225\306\275\322\262\r=\003\2627=\177\001(>7\364\342\275\330\221\253=\247\031\013>\236\310\340=\357\332\024\275f,-\276\301x\031\276)\230,\276\026b\274<I\265\363=2\307\026\276\331\030t\275,R\013\276B\030\225\274M\225\201\275bs\n\276\320\222@=\213D\201\275\356Z+>\335\325\006>\272\225\215;,\304T\274\2709\365\2741u\202=\302;&;C\303\001>q\210\210\275\337\231,\276\311(\205\2757\314\210\275\213=\301=\306\324\251=\241Q5\276\342\n\274=\240\314\207<\276C\232\275\'\330x\275\345\235\001>\340\274\223\271s\230\244\275\355\0065>\334|\033\276\37462>x\370\032\276\313J\177\275\332A\245\275\022\216\r\276E\020\364=\356*\'>\335\016\032\276\02781\276h\345\240\275Sb\316\274,\324\217<\367\272\364\275\322J\035\275\312\257\273=e\313\006\276\200\271\310\275\341\375%>\211x\364\275\006\212\031>\302\3353\276\r\266\020>\032\033\272;\213\301\345=]\n\005\275\211\215\300\275\n\210E\274\224\376\032>H*\006=+\335\305=fp\340\275\035\265]=\022G\205=\014\321\225:\036\030\257\274.\343\260\275\335\363\262\275\\\350,\276j\025\274=\266\360\003=V\240)\274\350\253\266\275n\222\026=\351\252\030\276zD\210\275ty\024>\320\006\225\274\215kW==\003[=\2768,\275\311u\220=\213s!\276\035\034%\276\255\310\027\275\275\232\277=.\212\344\275$!\361=~`J=S\274\025\274qo\037\276D\212\276=\351\246\021\274\300x!>d\224\021\276F\325}\275C/\"\275\231\016\366=YM\036\276\206\234\372<\013\302\036\276\341\351\000\276<\023\253=v&\036\276\276-\225\274\252S\234=\302^->\177\314\333=\322\275\232=@\363\241=\365#\346=h\334\373=\r\365%\276\206d\342=\322\255\301\275\t2*\274\177\334\017\2768\304\266=\254\231\235\275\3777\200=\223W\260\274F\003\376=\227y\227\275a\362n\275S\266\362\275}2\031=[\272w\275}\315\361=5C\304\274\347\033Q\275\357\024\306=\002o\000>S\345\214=\'\277\027>k\270\005\275\225\002\037\276\327\'$>\337\261\275\275\024d\007>V\237\254=\366\253\017\275T\037\200\275@\374\230\275\242\3364>\372\3721\276\302\216\214=D`\355<l$\004>\323\301\002>\363\230)>\030\264\300=\305\200\305\275\253\007\030>\261\372Z\275L\203\032\276\365\005 \273\000u\346=\232\004*\276\246F\220=\321\366\">\035?\371\275\356)\022>\263\305\205\275_\247L\275\274\211\037=EI\027>\363k\243\275\007\021\341=lH\r>\264\333\025\276\206H\250\275}-\025\276\316w\376=\341wd\275\345a\013\276q\326\341=\023\200\335=\300\n\002\276t\376\036<\223\017)=\302\343\207\275\331\211j\275\"\347\304\275\216\321\017>\271\266r\275L\026\315\275\300\301\032\276z\224+=x\276J=\010\313\236=\334\376!\275\206\323\347=a\214\002\276V\"\007=\007\336\351=\307p\020\276J5N\274=\362*\276\270\224\350<\232\266\005\276\020\033\354\275\026\311\245=\310+z=\250\030*=\026\373^<\027u\372\275\347\223\266=\316\346O\275\350\226\303<$w\264=\336\322\301=\304l\270\275p\275\255=\033D\251\275\374V\367\275!;\330\274\344\234\260=\357\222\211=7\276\025>\305\013\347\275\365:\220\275B\333.<\224\276\307=\371\0023\276\212(O=\2003\244;\246H\026>J51\276\204\330X=\350J\033\276@,\031>\271d\000\276:\207\326\274\223\333\'\276\300HR\275\241x\030\2760\337\314\275\033]>\275\256\3437=\334\272\035\276\311\r\232\275\230]\033>\263\242V\274\207l\237\275F\207e\275\351\317\016>\204\177\n>\244\002#\276WLL\275o0t;\277*N=Rd\260=6\034~=m\000\n\276\220\313\367\274\002\251\305\275\033\\*\276<\316L\275\227\331\023\276\305X\031\275\205\031\n\276s\252,>q\017>=\266\265\021>\2767$\276\303\355 \276+\274\303\275Hd\275\2745\372\\\275N\301\332=7\0376\276\224\304\006\276z\r\362:\361c\r>\241\244\370\274\233\030\371\275V7\204\275\374\264\322=\355qc=\200\307i<\220\236\\<\333^\'=8\321\355=\326\222\325\275\240\313^=Lr\311\275M\351\242=vX\252<6k\223=\215t\231\275\022\345\317\275\320\224\347=\310\034}=|\260\343\274\203\336\251=c\036\253<\337C\300=\365\025\235\275\034a\311\275x\371\303=\251\235\226\2752\265&=\274\217S\275\2334\023>\256J\252\274\361\343\036>T\023\363\274jcx=2\313\225=\226<\242<H\341u\275P\275\031>\230\004\352\274\n\365z\275\217\2228\276B\201\343=o\260Y=\017\n5\274\2709\033>|\217\316:V\334\247=\377\253\337\275\210u\325\275+\300b=\2164.\276O\332\357=:\014\363=>\336\312<\346\226\211<\313\020\207\275m<.\276\212\231\000\274\334\2374\275A\326\224=\310\227\005\276,\345S=\006\353\034>\001{\211=\210\2377>@\305\223\275\000\315\333=~\2023>^y[\275.\205\375\275%\214\347=\2249|;\241\"(\276%\332\242=\241\362N;\347,\305\275\001\266,\276\355.\001=\364\350\007\276 S9\276S\271\026\276\270\237\007\276\237\262\267=w\363\004>P>.>K\274\330=\246<\023>j\022\366\275)\245\016\276uh\'\275H\215\350<m\372/\276t\256\217=\233]\251\275\254\375\211\275\204\373\325=\375\013\215=\346=\030\276\367\3371>\037.\302=\035\330\355\2752\326\004\276\211V\204=>h+\276\326<\242\275J\321/\275\202\021E\275\217\235p=\307v\234=\272\247\347\275</4\276\214,\021<\256[-=0\333%>\216\'\310\274\225\300\226=\343\017)\275\367\204\307\274\260z1\275B\340\364\274\212\216R\275\363\370\216\275z\3378\273\225\207\200=\225\347\237\272\001\221\340\274K\2272=\237\241\033;C\004#\276\034\204\321<\262/\276\274\014\240\352\275\320^\272\2754V;\274\346e\002>?[\354=6\313\340\274\030B\301\275\237\372\371<\203\224\001>\347\367%\275\214\204 >(\307\000<\366U\251\275\236}\r>\263\304\026>\014\304\023>\343\266g\275\\\240\253\275z\376\221\274\010\370/\276\333o\350\275r\375\334\275\330;\373=\375-\365\2748\r\332\273\221\327!\276\250\007\362=\254\262\255=\267\244\225\274]\3043\275\221Sp\275*\3270>\220\372\255=x\354\257=W=\r>\300\nT=\";\317=\246\001\374=\263\254\t\276WA\276=A\233.>O\2627=\211\270\022\276\247\341\036\275h\230%\276\233\013\366\275+>\026\275iiU\275\311\341]=\005\335\004>\232\301\032\276\273=\337=\215*\325=\345g\007>\036\310\037>\314\255\371\275Y\r\350\275\320*\022\276\212\237_\273\220$-=\247\t\307\275\\\2565\276\333\254!>\016\255$\276\205\312\341<\325>b=i\037*>\364\262\233\275\033\346\215\275\307\324\334\275\306\"O\275\333V\206=\206\242\314=-jD\275\004\033\240\275\244\375\241\275r\333\334\275\357/\250\275\214\371.>\316\002\200\2758\377\355<\215g\317<\002\201\026\276\200Q->\340%\210\275v\331\025>o\361\271=\337\037L=F\274\222=\032\022\002\275\027\325&>*&0\2762+\r\275\243}<<\225*\342=\274o\037>\305\027\305=!\360\005\275\332\241\367=\245a\375=\010\365\204=o\351\225=\353\346\336<\370\341/\276O!%\275\016\261 >\304T\331\275\3774\037\276<\250)\276\212l\341\275\231\332/\274\340\024\300\275Oi\325\275\307wd=|f|={\211\334\275{\364P=d}\002\276&{\242=\335\034D\275\343~|\274\310\255\264=&,\334\2746\202\217;\313\207\003=\345\005\377\275\274\335,\276L ->j\350)<hr\214=q\351\203\274\216\250\314;\235\210h\275\264>\035>\227!\243\274q\237+\274\301\343\204=R\370\007>hp\334\275\024\025\030\276I\276\007\275\357A1\276\r\270\034=\326\0037\275@7\255=s\325\302\275.9\223\275\360\235\261<\005\007D\275\177\246-\276Zi\'\276\332\204W=_j\220\275\206\222\261=\365\267\370=\320\342I\275E\307]\275\322\364\n>$J\251\275\262}\007\275\024\372\221=a\226\316=<\360\336=\212(H=\244\361\213\273\345\210\302\275 \312\031<|V\207\274\322A\305\275\313T\304\275q\311\215\275S\360m<\016\231\033\276}\267w\275\203\2626\275\324\001\345=\330\010\014\276\232\353\005\275\034\231)\2751\221\336=\271K >\362hX=\245\317_=\311\363\344<\330\216\363=\210\360\231\275\371\336\036\276\004\017\004>\304\177\032>x\266\334=T\300,\276(\3038\275<\025\004>\230\221.\276)\327\007>\365Qp\275Z\317\351\2758$\014=K\333\211\274\"\356\003\276=U\250\275[L\004>\246\335/>Dp\233\275z\370\312\275\342QQ\272b\347@\275\231\217,\276\346_\033\276\014\354q=\215\216\035>\021\273\017>]-\225\275\323\240\022>8\021\270\274tz6\273\202x\337\275\200:X\275V\370i=^v\n\276x\371\300<Hw\361\275\325\310\344\275u7\317=\226\330\324=/y\014\276/P{=\211n\">A\326\315=P1\020>\246(\221=\364\370\320\275\273\002\301\275L\n\t\276\'\313\275=\230\243\375\275\244\330\267\275x\344\030\276\202\033\227=\304\245*\276\331-\001=\272N\205;\tD\205\275\010\333\017=\372\201\037>\3617\345=\376\021\\\275\025x+\276\266O%\275P$#>Y+\007\2755\363y\275p41\275\007\232H\275\n\017\021\276r\244x\273&\246\355<di\335\275\017\251\324\275!\316.\276\252\2021>y2.>\326\320\346=\256\305\370;\021%\'=\332\347\205:y\007\262=\253\307$=\276\254\301<\230\206\031\276\037\3239\274\0220\335=\246W\323\275O\3065\275\376\202\032\276\305[\263\275[b\230<\262\355\216=\203\007\376\273\215\025\002\276@\250i\270s\346)\275\273\253\303;\342\000\006\276\227\314N=\200\245\006>\333\3661\276-L\371\275\326\256}\274\375\365M\275\353\002l=]G\343;\214\003\203\2754\303\003<?t\344<\356=.\276Nb\030=\322\203\244\275Pj\305\275\243\254\000<[\340\220\275=\367\346=9\365\330=$\336r\275\007\374\027<\014[\352\275\322%\233\275\220\034\031>\n\303\014\275r\347,>\345F\026=4#*>U\204\006\276\367\316\343=\311d\t=\017Q\033\276#\320\026>\253\254\n;\227f\257=G\317\017>\227@\031=\326m\236\275\000\377\203\275\307w\237\275\230\"\360=\201\272\027\275\300\0022>\271\213\263\275\271U\360\274n)r\275\2452K\275\346OX=\363\361\364\275A#\t\276+u\017;\\\320\264\275\225#->\245H*\276\347g\301<\302\243\261\275\240\227\010>\t\244\207\275|7m=`O\024>q\345\033>,:\034=[\331\n\276\365\304\000>\027.>\275jc\027\276<\347#\276\260N\331=\221\244\021\276\242\210\341\275\032\276q=\246\254\202=\r\254#\276\230\313\031>\230\353\240=\332\242\023>g\366\255=\300oz\272\256p\244\275\361\213\025\276\033V\t\275\354/i<5t\200\275:\020\357=\337\362\316<4:\032\276\322Q\020=\000\334\231=\212\374\023<\000\347\362=\205\2517\276\245\230s\275\002b\311\274\254\r\376<\360}{=\242\001)>-\262\031>T\214\026\276p\231P<VE\335\275\224\277\364\275\232\332\210\275\033\212\034\273\366\003\264=\020\207Y\274)}\216\275\005\no=7\036\367\275\253\014d=\0055\335=~\247\036>{\014\252\274\310\257\230<\364\245.\276r4\t>ff+\276\212\354\277=d\306\342=*6\262\275_\036\003\276F\'\001\276#\250/\2766\303\215<s\207\020\276\372\202\263\274P\264\330\275]\336\013\276oU\020<P\255\007>\221\302\002\275X\013\202=\346t\377<\000\035\230\274w)\t>$n\033\276\206l\312\275-\332\361\274\256\276\254\275L\035\027=\372\203\001>h\000\223\274\t&,>j\035W\275\3533\022\2769\226\312=vm(<v\013\300\275}\232h\275\010\254>=[|\241\275\306-\000>\272\234\000\276Q&\214\275\326\026\352=Z\020)\276\016*\031\276M\207\000=U^\261=\006\344\257\274&\277\036\276}\365\337=\266\017I\275\207)\323=a\337\244=C\336s=\037\243\240\275\225|\344<\037\003\037\276\265\254(\276\224t->\"S\303<p\202\016\276f\035\216<\302N0=\246\034\324=d\252\023>\304u\250=s\031\351<\365j&<]\350\017;e\375\005>?\371\357\275\3150\304\275SB\266=iV+\276U\r\024\276\272\017\025\275\006\203\242\274G\014\'\276CV\336\2758\254\267={\202\025\276\034\373\"\275B\320\021\276\002\266\266\275_\307\320\275\301S]\275\007\335\223=\014\363\340=\n\345\320<\261\363\363\275\255\246\204=\256\242\326\274-\236\246<%k\t\276*|\332\2750_\227<\360/\311=r\332+>\342]\315=\377&\354=\004=\314=\366\355\202\275\243f\002\276<\334\002>pHA\275\235;\237\275\313\"\263=qB\026>\256\305{=i\300\036\276\014n\004>\37459=<r\024\276\223\325\"\276\320&\200\274\336\'\276=\211\234\361\274\201\3740>D\231\014\275BZ\027>0xl\275\220\340\305\275\325n2\275o\001\351\2757\227\023>Ztu=\032\332\013>\350$\365=\356\274\300=\254~\325;7~\004\275S\2616=\000\026\200\274=g#>\024\345\247<\\\310\343=\222F\021>mD\335\275\005\364\233=\342*\315<\203\221\313<g\303R=\375$\264=\311\217\364\275Y(\273\275\237\201\205\275\351G\033>\216:*>gz8>gO\265=\240\367\316=\330\tK\2754\357\215\272\260#\002\275\002]\014\275R\225\322\275\212\253l\275?\220\037>\207\003\312\275\320q\032\276\241/\365=\233\007\200=v\277\t=[\312\235=b\032\234\274>\366*>\2238\202;\213*#=\344\273\371\275\236\324\362\275\367\274\014>\002k\365\275m\364\261\275W?4\2762U\377<\276F$>\033f\332=\0378\004\275\215\215&\276\263\265\255;Q\267\265=\265p4>\306\032\232\275\317&\036\275\264\3636=\242\343\362\275\321\270p=\256#z=\007\226\036>\253\331\245\275\371\224+\275\267\306\312\275V\033\317\274\365\276\355=\331\003W\275\335\0279\276\201>\305=K8\301=\305\307.>\234\010!>\306\330\261\273\231\256q=)\230\'>\347\270\327=\2000c\274@27=\034\004\263=\234\331\016\276\217\343\301<\366\217\365=\312=\213\274\363\361\215\275\2068\004\276\036\373)>g\217\371=B\252\032>\323\361\262\275\005 \273=\314\352\016\276\237\025\276=\345\377\315\274Q\214\266\275z\316\216=\016\216\252=`\341!\276Hk >\324\035v=.\376\246=\301R`=XU\022>\274&\205\275l{\351\2756\222+\2762\251\266\275\266\327\256\275{\350\316<j#\037>\273e\021\276\205@c\2740\233\016>\310\235\236;\312`\357\275\256\222\240=\316I\010\275\227[\364\273+o/=\014\205\000>\021\357\260\275(VI\275\314\247\353=\213\337\025>\370\007*>\3124\310=;\277\365=\300\216\337=T\2642=~W\347\275R\016L=\251a\205\275\\\035\305=\004\272\026\276\234\261\306\275\224\261\272=\304\036\240=7\225\332\275\235\340\375\275\360\226%>\240\263;=\023!!>:\374\">\251\204\037\276\033\316\\\275\344\251\246<\036\225\276\275\2211+\276\314\335\r\276?\246\037>-\3407=\353I\243=\236\270\347\274\014\016\034\275\006\254\243:\266h\264\275\265=\330=]d\312;\237\331\210\275\3475\355\275>\323\221\274C-\024\276;\336\327= \277\353=\260Jb=]\034\260\275\275\240\275=\331\035`=\274\246/>LN\217\275\025\225\271=a9\026>2\203\215=\314u\031\275\352\270e\275A\357(\276\344r\007>\277p\344=\310W\322\275(\350w\275\263\347\376=\010\255\021\2762\025\243=g\303\262=!\221\223=\023\275\272\274\352\274\006\276\244\310\237\275\344\223\342\273\261\334\372\273\026F\262\2757\333,<e\202A\275\226\225\030>\211/\327\274\025\2544;O\377\243\275\262\375\360<\331\r\026\2763\373\341\274!\345\002\276\2025&\274\257t\272=Z]q\275\365\350.>p\r\025\276n$\212=\223\372s=\034\206\325\275\030$\004\276%\r\314<V\003\363<\226\276\243\272\314\304\372=\313\200G\275l\373\277<\003X/\276\353*\272\275;\231\356=c\0258>6\'\317\275\007\377\250\275N\254\366=\334a\254\275J\251\315;\247L\374;F\026\026>.[%>8S\375\275\336>\217=z\225O<\233\377\242=\310\006\317=K]\267\275.e\244=\r\333\214\275\3075\261=\022\276\203\273\\V\256<\2744\025\276U7\260=\362\014\360=J\203&\276b\275\'\274\217\337 \276\375%>=\236\270\005>\356\014\365;\363\210%>F\313\203=\247\247[\273\200\234\t=\225|\037=^\372\253=X\264\\\275\'\330\257\275h\256\023\276\257\233\031>\356\033\014>\245\270;=\376\214\336\275.\276\n=<\215\211\274\373\334Q=\\ @=\353\275\311=rg\313=y|\357\275M\0241=\236\320\304=8y\357<\212\316#:\215\364`\275\326T1\276\324\3350>\327\277X=O`\373\275\333\317\366\275\301\311\356\2751\245\215=\346o\204=\236\352,>\013\032\006>\230\202\027>> \224\275\342\302\313\275\2554\004\275SB\347\275\370\274G=\221)\020>y\306\023\275\005T\266=\264\330\t>\307\003\033\276h\226+=o\243#\275{;\254=\362l\317\275\242\033Q\274-\211*=B\325%\276\252\325\020\276\237o\271\275&\273\364\274#\304\226\275\030]\013=\231Z\215\275\002k\013>\274\027R\2754\332\240<\304\024\r>sr\221=K\246\372=\342\241\310\273\352\025\262=$1\020>\367\036(<\2432\024\275\322)\241=A.)\276\3159/\276(/\344=~g\027\276p\304\327\275\254\004\276=\224\206\031\276}\251+\276\207\033\245<5~\034>2\035\202=F\266\220=N3\354=\3354\314\275\360\226#;m]\245\275\016\220-\276>\312\364=\357f\220=\330\267\232\274m\302\013=\310f\223\274\036\302\214\275j\265\017\276R\276\213\275\342\n\n=K\203\350\2758m\002=\277\362\033>s\323\024\276\037\374/=8\326\272=$\346\t\276\'\013\303\275H+->\205)M=<\022\256\274E\336\005>\033\027\236\275\310\207\362\275&\274\026>\243\253\334\275\365%$>f\260\375\275\303e\312\274\230\215\317\275\353\322\263\274\261\3430>\t?\214\274~o6>d\036\217=E1P\275\005\3637>\225\271\022\276 \014\247=\325K\225\275\234\363\177\274\2058,>P~\336=\r\275\303=h\370#>}\311M=\345\347\277<\366K\356\275\237P,\276\326\001\340\274\334\271]<$[y;\247\271\243=\217\033\203\275FW\021\276:)\354;F(\373\275\263B$\275,\371\031\275h\340\034>X\306\276\275|Uk=,8\032>xU\276\274(\004-\276\215;$\276\\\030!>\270\326\217\275\2503\020>\352\\\021>\004\247(>\304\306\n<\340\365\034\276\006R\253=\275\254!\276G\255 >\320\375\206;PAM\275\200\367\022>\263\257D\275\331K}<\002\357\033\276[%,>\256Fx\275\360\001\005\275\352\315\304=\350H\027\276\232\367\376\275\"\003-\276Y\t#>H\321\214=O\0039=DZR=\322;\227=3\031!>c<\240\275\307\277\336\275\301\346\'\276\217\302\024\276\373\2651\276KM\342\275\326\333\177=\360\327~\275\324\232\310\275k38\276q\225\273=\367\210\214\274E\036\032\276B\201\030\276o\304!\276a\322\345=\254\233\360\272p{\313=\002\314&\276\320I(>N\000\354<\343e\031>\342{M\275j:\241=\313w\010>\252&\303=5_\225\275WV}=\245E\365=\257\3613<\277\315\021\275\373\232\231=RT}\275Ek\204=\354t\201\275v\323\027>eGH\275[\322\263\275\225\ni=\266\235\003\276z\216\004=(\034\367\274\242\272\032\276\242\322\243<\344^\241=>@\211=\202\2635\276 \037\277\275\217j\002\276l\367>\274\360{ >-\215\226\275v\256S\275\3261\314=\271\247\327=\037\335\270=c\351r=Fh\274\275cP\251=<t\016\276\213\366\322=2\233!\276\232\361\034>\013\210f\273\360\266\026\275\232\352\311\275\301\322\336=,R\021>\204P\215=\231\365\327\275\224\330\225\275\314\331u\275\"\327\273=$\361\t\276]\004\250\275\n%\005>\"\206\274=Y`\243\275k\023p\275\253^\271\275\354\366b\275\312\311\010\275M\006\t\276w\352\330=)\357\010\276\346kx\275\210\346\023\275\236\372\353\274v\341\372\275\026=\351\275#\314\305=\302$!=\r\177\375\275\325C.>\205\t2>A&4\276\n\202\304\274X\363\344\272+\351\006\276%\306\240\275R\334\305\275\336\267\227\275\336q|=\353j\332=\360\203\332\275\217<\303\2755\263g=\370~D\275\023\357\003>\223\351~\275V~\023>\244R3>\367\334?=,\004\364\275\341\017\023=r\017\016>\252\206\222\275\237$`\275\201\343\367=/R)>\313\210\031\276T\037\r=b\2466\276\261\315%>^\351\265<b\343\367\274\375\035\241=\030\335\244\273\022A\315\275\tY\003>\246\'\270\275\023\316O\275J\273\207\275\320\334(\2760\031\232=\212\251\007>IB\345\275\206\316q=j\344K\275\303\306\252=\240\335\000\276]\311\036\276\334\2412\276\227\010\310\274\263\210\"\275\'F\004\276\221\230\352\275\346w\375\275~t\360=\000]\355\275\245\253\214\275V\250\206\275\251\254\301\275\325B\375\274]\322\340=\272\371\r\275L8\241<u\331\364=\242A\345=\353\254\013\276l\014\346\272\261\315\235<^\2740=\r+s\275J\246\266\274\352\255B\273\365W\034\276\372j\361\272\351PK=V\031\256\275\367?\310=\306\337\320=a\320%=\254\344\204\275h\273\257=\333)9=m\320)\275\274\225\n\275Z\377\240\275\201J\203\274\216\031\010>\225\347\026>\271\347\034\276\017%\010\275\204@\210\275Y).>\362\366\360\275\245F\241\275K\t,>\375V \276/\216\253=\260\340\026=\350\316\246\2746\361\007\276tU6>|I\001=\314J\341<i:\001\276/\265\n>\240\002\301<T\300\017>\334\004\306\273\221\000\001=@\255\345\275\342\244{=\262a\310\274\237\342\322=\0269<\275\366\036\016\276\276b\352=\273q\303=Z\261I=Y\025\214\275\r\220\026>\201\322\373\275\013\335\341<d\252~;\225\354\373=YU\017>,X\020>t\237(>\320\343x<\336\247\317\275T\346\317\274\333x\004>?\322\001>\252\250\025\276\346\222\r\276\242\251\000\276\340\001\032>\005z\373\275\001rW<\3128\365=9\353\317=p\256C=\035\010~<\377\003\027\276\270|\325=\257\217\026>8\340x=\275)\000>\367\220\256\273\340\342\003>\264\321\247\274w\334\227=#\357j\275Ws\356\275vRU\274\025T\353\275\312#i\275\341\315\'=E\270-\276\304\211\001<C\351#\276\200y!\275\275F\027\276\266\330\016\276\'\344\335\2757a=\275\272\247\210\275\367\263\374=k\227\363\274\'S\233\275\311z|\275Y6i\274&.\006\276ld\014\276\310\372\365=\\\322\014\276\225\320\325\274\214\300\354\275\014\336A=\3027\204\275qY\321=\032\265\266\274\276\037z\275\277\347\005\276d8\374=\020J\267\275>4->_\272\263<\023H\n>\016\r~<\241\032\031\276\320\264\005\276\266\335\033\276\336\324\206<\n\370\231<oE\253=\266-\377<9\314\321\275\271\357\264\274L@\246\275\245U\335=\323\261\001\2767\344\371<\371\235\232\275\2722\">\241u\362=\211\260\006>\270\357\326\275\024\305\203=\277\246\033\276\001\327\345=\307\032->#\224U=q\310&=\353\236\r\274\323B\021\276\315j)<\016\313\224<\305\000\247\275s\363\364\275t\357\'\276\375H\254\275\272\202\203\275\214y\310=)\034\256=`$&>\306\311\322\275\214\330\320=F\211\340=\304t\002\275zN\213=\217n\'\276\316\210!\275\237\001E\275a\227\010\274M\313\016\276+f\016>\226\004\037>\317y\226=-r\205\275\016w\005>\020\236\010<G($=O\222\241=\357\t\350\275\234\245\n\276\021&\327=\250\000\027>+\2372>\207\2370\276&;Z\274\244} \276b\237)\276\350B\362\275\006\303\326\275C\214\037\276a\326$>\020\343\001>:\005~\275k\0336\276\260}\245\275\204H\236\275\177\277\"\276\220\3714\275\310\302\027>\035\346\313=\0302u=ma\367=\257\215s\273\305\3566>\345d6\275\245O\336=\331\372\215\275\246\341\t>=@-\276\232\377\">w\265\021\276Xo\267<\245\377Y=\016\244}=i\2656\276oD.\276\020\023\022\274\336s->\260\374\007\275Y\221\316<\213`\251=\215G\026\276\306\373\354;\352\262a\275f\013\t>\006>\271;>\210v<y\3055>T\342\025\276\266BC\275\344\217\260=\355\305\323\274^\211\025\275\266\244~\275\335\367\322=I1\020=\357u`\275c\006\033\274?V\374\275\256\227*>\310b\343=\350\334\234<F\251\222=>\206\371\274u\337\036;\351]\252\275u%\330=\230c\311=)[\300=\202\313\263<\027\377\232<$\352\357\275\n2\313\275\302\235\271\274wn\332\275\365\035X=?[\364=\206\206\022>C\360\225=d\306\373\275\017q\031<#\357\\=.\034\225\274\357w\327;=\021\001\275\361k\201=\366\365\n>9\3651>AB\210<r\332\013\276\030\"\371\275\365\306\203=\274\226\020>=l\036>\036n\254\274l)\010>\231\024\332=~X\245<0\007\004=\272\r\023>\210\347c\275\322\352\023;\361\016\376\275q\321\177=[K$\276\272\2151\276tT#=o\023\220<\367:\256=\347F\001>ib%>\361\213v<\357W\025\276\361\3051>\321\353(\275\305\025\016>:\201\224\275\274uW=\237\330\324=\363j\036\276\303\300\270=\354V\214<3\315\220=2++>\016\361K<Qr:=-y\363\275E\317\317=~\321\244\275\311\352\031\275\220\231+=)\267\343=E\342\005\276[7\200\275\312\251\006>pL\024>\314-\037>\2376+\2765P\014>\336\240\347\274y@\216;\"\305\276\274!*\007\276\010-\353=\232\251\310\272\014\230\224\275\332-\322\275H\206\035\276\362v\005\276Z\377V\275\307l\202\275Q\n\255\275\305\333!>\021{\026>\034\213\352\275\232\366\222=\236\335\225\275WB\275\275\027H\031\275\316\nH=Jd\262=n\030\373\275\207\320\375;\205\2353\274\246\017.\275i\017\357=%D\360\2738\257\000>\017\211(\276AA\006=A&\315=\177\212\226\274\234\322\202\275\373\372m\274\020\261\253<86\016\276\024\034\322\274\270G\032>u#\014\276\033\000\251\275\021\031n=R\341\007\276\347\257\213=\352\2730>.\316Z\274\235#\345\275\030\3136>)\371\330=\224\314f\275\2779\305\275!\255F=2\333\017>\023\2125\276\345m&>\314\372c=\324\250\340=\002Y.\276\352~\245\275d\'\306:\367\372\265=\352\351\032\276\263\277\n\276\302\267!>d\006\317=\354M\027\276\347\006H\275n,\215=\007#\206=\273N\222=~\320J\275dC\003\275E\237\332=\271\264\024>\270\233\363\275\341\365\335<\202\350\332\275Zw\000\276&\301\030>\334\re\275\023\363\246\274\221D\315\275\325p\'=\211\006\031>\005\306&\276\364\351#>\321\251\317\275\342Z\024=d\224\342=\022\2724=\026 \331\275\343\227\234=SF\014\275w\003\000=C\377\342\273\211n\236\275\3124.\276\276}\212;j\212?<\353=\335=3/6>\027_\227\275\027I\356=c\224\341\2752\255)\276w[\037\276Y\260\371\2751b\315\275^\t\"\276-\037\265\275\001\000\004>p\010\227=\220\234\323\275{-\225\275\372\303%>\322_&\276\360\340\224\275\245\202\200\275\242\352\264\275\230J\023>ED\356=\340\260\353\275\220\r\022>\221.9=\271,2\275Aq\207<\237_\'\276\204\340\256=\\p\312=\\\306\017\275\255z\262\275\216`\340\275\215]M\275\036\211\244\275l<1\276\307\346\031>\334\215\034\276\206\374\337\274\241\275M\275q~a=y\242\232\275\335\374w\274\265A->\021\305\371\273]4}\273Wh\271=\345\375\222=\002\316\357=\254\036\017<p\037\314=#\263\257=\371\022\336\274\370\360T\275\321( >Km\270\275C\324\023\276\225R\013>\210\335\222\275\210\302\250\275\\\310\241\275\316\311\025\276\330<\207\275X\233\\\275e\235Q=\251g3>\340\251\020>j\020Q\273\231J\013>\315x\237\275)\346}\273g<\037>\\]\020>tM/>\025\220\372=\375\306\350\275\356m\002<\032r.>C\221\r\276\361\027,\276\272\246\277\273-\030\323\275\3372.>\321\240\005\276M\221\317=\225gY=Tp\024\276\333\215\010\275\241\003\037\275\010\325d=\003U5\275\306\t,>\300\251y=Qp\362=v\266\304<\327}\t\276\277\324\302=9#L\2751\343\203\275\266\264\342\272jx\361=\266\342\215=\014n\343\275\037\277:\275\256\354\353\274\234\243 \276h\246=<\326\342\307\275\320\217q=\371;\202=\255]\362\272\2347-\275q\\\313\275\204d\311\272\031\027\361=*\201\222=lj\344\2741\036s\274\201\272\337=\244#\320=\364\254}=\346\346\004\275\030\266\357=\007\327\241\275\013\246\r\276\271\222V\275\023,\251=j\322\362=$r\022=\351\020\037\276\"\007\327=\363\020&\276\256\020\322\275\251\267\363=\0106\346\275\333\227\236=\203\t\033=Y\303\r\276\026s!>mGY=n\027%\275\370\246\023\276\314\364\223\275`\031+\276o\236\334;\200\234\342\275\\\351\341=\255\001\r>\254\211\374=i\'(>\312G\326=xv\200=5%\201\275\244\243-\276\037+\342=\016\271 \276\247=\252=8t\312\274\215\240+\275g;\033\2764q\330\275\372\214\022>\365c\305<R\261\353<\024\007\342=~\265\023>\340,P\275\373\001\313\275\035\372\303=\344Z\027\276\377o3=R\r\203\275\256\243\354\275\223M\017>a%\252=\005q\372=\\\276]\275\352\215\350=\252*\201\275\307\310\200<z\246\014>\321\345\223\275\364\242D\275\214\016\300\275\206\205\321\275+1\361=\3408\034\271/\317\210\274\'\2521\276\326M\">\214\t\315\275\235)\323\275R10=\374L\026\276\310\2462=\n\341v\274El\003>\214\3272\276\277y\264\275\344\325\227\274Rr\010<T\177\2159\207\226\010>\265\353\036\276Q\334\251=\333\006\024\276\017\347\245\275\342\205A=\346\253\033\2766\337\335<\276: \276IB\247\275\205D(=\227\205\010\276\016\324(\276o\334,>\227\350\245\275\235w\234=o\032\330\275p\334\000\276\3625\201\275\376j\306\275\274\026\t\276\020\321\321=\222\232,\276\232\240\360\273\276Y\033>\257\\b<\373\363\025>l\356\270<\273\240\206\275\227\202\374\274\002\032\366\275\336\267\013\274\234\353\322=\2452\213=;)\371\274\363r2>\273\200\020\275q\254\301=9+)=\343$\026= X\026\276Q\257\244=\352\261U\275] \363\2751\371\303\275#\333\014>\3132\036=\344\222\201=\362\'\337\274\035\036\217=\250L\t>\347\350\021\276\256\210}<\026\214\304\275\274_\320=\231\3201=\2348z=\222j>=<-\222\275\200\023\201=\274\264\346=\3669\362\275\377\001\246\275p\317&=\247\317\363\274~\324!>\000\307w=5\342\353\274PV\006=T\366\243=|\267\235=\246\301\305=e%\324\274\032m\'>\3715\004\276\337(z=TLZ\275\221\021\025>\024\214\256=Me\212\274\372O\213=\030\0325<\357\r4\275\321i\331\273x\016\222\275\310F\361\274\025\264\017=\346!3\275\004!P\272\356nB\274\017\210\271\275K\035\363=\005}\267\275\316!x\274\232\237n\275U\210\035\276H\244\000>\245\212\246\275b\326\226\275\352I#=\324\300\307\275q\250b=\025\\+\276\'\310\310=*\226\036\276\0013\360;<\344,\272@U\367\275\356.\006>/d\377=\0016z=\367r*\275Ar\364\2754Z\216=4\361\236=\305\024E=~a\213\275\355,6\276\203n/>]\006\344\275=\210\361=\231%\035\275U\\0>\305\371\006\276\234\032\252\275\301\016H=\302\214\034\276_\003\370=\261\305\n>\244\337\t>\034\342\347<\261P?=$\331\202=t.\255\275!N\225=O\3125\276\354=->\256\236>\275n\257\021>\364\264,=\2512\016>+\336\006>VX\226\275\317V\336=\340e\305\274\257!\002>|d\233<\325\032/>\247\255\247\274\025\265\017>\026\266\001=\347^\230\275F\340\037>a\343\370=\025\370\245=\026\227\217\275\374\354\023=\372|)\275\2452\036\276\247<$\274\276\300\237\275\352&Z\274d\247\267=VG\220=|\225\344\2755\317\357\275\353z\013\276\035\013\005\276~,B=\'\216$>\206\240\313=u_\035\276fH1\276\242\335\334:\215\275\027\275\0300\003>/M\216\275\305\006\002>\'\244\270=\301U\314;\273\260}=oa\375=\317\267\030\276\326\227#>\363j\267=\224j6>\020\275\347\271\336\037\304\275&+\252\275\211\317\"\276\034,T=B\237T\275\300\0048\276\254:\023=P\242\262=a\353\371\274\rw\260\274\004\222\324=\244\016m=\022\251\036>\0269.=w\272\326=\320\213\347\275\243n\020>K\002\253\275\362\234\">\341\312,>\321\030\245\275\245\367\214\275\020))>\251\312\226\275@\213\016\276BH\023\276\253</>\'\336\010\275]h\200\275\235\244\202=|\217\320\274\206WE\275\035\017\201\275\310\356\014\272\024L(;\025j\205=\313\331\302=\252\220\016>\0345 \276\315\211\210<\254\340-\276\321\2162>R\037\036\276P\317\300\275\371F\353=(\245->\376v\374\274\256\224\017>\302-b=|\237H\275\247\274%>C\2342\275\350H\211=\221\257\215\275\007\250 \276\007S\271\275\355\314\'\276\3059Y=\261a\230=\204\t\014\276\253,\311\275Aq\223=\215\306\340\275{\342\242\275\273\221\212\275.w\010\276\253\307\253=\024\320\227\275\200\035W=\377\211 \276\342T\231\275~\353\375\2754\242.=\247\262\003>\226p\242\273\266Z\035\276\271sJ=\234g\">\356\324\024=\210G\264=H\332\325=\3660\024>\376\365\375=;\215\001=\303\221+\276b\254<\275\335^?=`\245\031;d{\020\276\230:\010=\264\351n\275\\~\330\274&\210\270\275T\000\014\276\233\201.>\210\243\323\275%b\006\276\330;\027\276I\330\315= \314&\276\211\264\221=!\347V\275\023\234\027\276\363\311\362=\312\022\317=\035\023\t\276\033\262*\276\373y\331\275\030\372\363\275\247\371 \276\341\311\311=~/\200\275\255I\263\275\350?\203\275\025\260\006\276\005=2\276\344\321\010>Xy\010>\214{\241=!6\361\275t\320P=G\363\004\276\231d\273\275\023\230\020>zc\205\275j\021\213<#\262\340=m\273{\275\367S\263\275\365\247\377\275e7/\276,\304\372=\340\220\263=\204g\025;\271\236\234=\346[\326\275!r\210\275\352\2416=\225A\265\275\372u\200=g\\\352\275(\375\264=\330_T<\023\213E=*E/>J\267N\275Z\276\036=_\365\302<\332\343\265\275T\205\n=d\305l\275\311/\325\275V\013\033\276uv\335=\316=\234\275\001\013\025\275\237\251#>\310a+>\032\364\000=\225\350\032>n\t_==\261\307\275`\213\360;S\034:=\254\357\331=.}\320<U\375\322<q\215\254=\305\204w\273\221\223\022\276P\377%>(\307\310<\364Z\024=\352\247\357\272\356\020\316<C\013\256\274k!\201\275u\356\375\275\267\303{\275^\274\303<\367\221\253\275\301\272\346=h/\037\275u\205\266\273\271b\337=\234r\227=\201\2321\276\253:\372\275\346\347(>\275\313\247\275\342\036\231\274\242\335\023=!\260\037\274p\224&\276\351\331#\276\317Pj=v/\023>\376E\024>\311\032\337\275\t\222\260=0\333}\275\320\252C\274\277h\273\274n+\210=\226\2622\275\346\240\201\275V\301\363=\250\257 ={\026\313\275\233\"\023\276\361D\001\274\013\241\312\275\341m\000>\243\346\225\275\035D\237<v@\370\275\244\343\030>\352\306$>\\\022\251=u}\026>Vb\207\275u.B\275\217\346\312\2742\313\312\275\252\330\017\276\342\253\002>]\275\230\274\020\370.>\240\037\325= oY\275\242\307\322=V\354[\275\315t\332;r=\002\274h\352|\273\345\205\307\275\033\010\003>\230\333\003\276\304]\214=\337\373^=H\204\'>.d\243=\353!\026\276\355R>=\246L\245=~\211\255\2753\3741\276[\221\017\276>u\204\275\337\332\006\276\213`\260\275\3334g\274%\345\261\275\360\353&\276\245\275\376\274]\332\023>\263\022\340<\010\005\005\276\323\207(=`\205\250:_I\016>\003L\'\276\343\340\375\275\254\270\312\274!\\\r\276\002\331F\275\006\251-\276\250p\337\271\'4\346=\214\321y\274\035w\300\275X:a\275\314\217\275\275\262^P\275\264\013\255\274\261l-=\306\245\001\276\033\327-\276\257\211\037\276\301\007\352=\3518+\276Y\020\034\276L\254\201<\223\253(\276\210H\021>\276\231\250=\322\267\236\275D\277\005\276\007\201\303<\026\201\226=\2263 \275\024B(\276[\344s=T\363\033\276m\272j=<\3651\275J\366\002\276\022+\211=\023\321\375\275\207\252\000>\230\346\367=\177\030F\275\206\224;=\000\346\315\275Y\376\357\275\304\3438\276\270QH=<1\014\275X6\344\274}Rm\273\016\027\027\276)\225\036>\364\357g=n\343\346\275\331\345\311=E\211;\275\013\336\366<\242V|\275\245U/>\350w8:\251L\026>.\207\366<\005\274\031>\231\362:\275\330\325\256\275\330\344\357\274)\224\033\276\324\033\346=\204cK=)W\323=<\272\031\276\2055\000>\201{\000>\202f\235=\216X\307=\365\236p=\263W\'>PN`=\305\236\020\276\374\370\013>\373\344_\275\370t\021<\316\265\266\273|\307f=\3715\342\275\226\224\024\275c,\031\2765\340\001\274\3231\275=\235\332\316\275v\030\366=\320\361\344=DM[<\207\274&>\024%\030>\367[!>\221HT\275\325\234\250=G.\222=\233\274\267=e\245\\\275\276D\275=>\376\035>GZ\203\274_8v=N\260\027\276Om%\275\277\341\031\276\3060\271\274\270U\335\275\344$\261\273W\215:\275\250T\021<\227\034\250\274\333 {\274\177\276E\275\345\262\232=D\344&\276\261y\370\275\033\330G\275\302\000)\276\372\245\003\276\335L\267<\376t4<*3\340=\375\n|=\203Hx=U\305p=|>\300=jKp<\306\\I\275\305\341\361\274#M\255\275\274b\270\275\313)t\275\232\007\313=\30342\2750\334\265\275n\263\"\276K\357\203=P\355\007>\242R\243\275\017P/>\356\034\364=\361*\314<\216\226\216=_O\r>?\247\031\275\2568\270\274o\365\245\275R\203\316\275p>p\275\\R\232\275\246\347\022\276z\033\007<T\1770\276\'\332\274=\365\257%=\374\3312=\'\2460\276YH\267\274jF\356\275\334T\014\276\261\202\"\276\345\313/\275\027\304\275<0\031\035>\204z\177=\343GJ\274FG[\275\r\223c\275\236G\301=\300\"+\276\205a!\276\344\235\340=\217\225\354\275\006S\255=\317\3721=Q_\214\275\002k\'>A\233y\275#}\003<\367\025y<\322|\300\275\231\373\354\275\200&->\264\224\330\27544\315=5\220\372=tY\237\275\340hM=\000\306\370=\317\265Y=\316M\366<\366\226\036=\317\377\376\274\031#e=\021\025W=:KT=\212|J<b<\251\275RM\211<.\024l=T\260\026>^6\230;\004\315\002\276\346p{=\332\362\271\274\003ot\273}\324\220=\364\314I=s\202\236\275\2778\n>\000\220\364<G\227\254=y\032<<\325\330\362\275\325i\021>\356\007O=\356+\274\274\035\354\030\276\262S\327\274\251\271\261\274\231-\035>\313\305\030>/\2015>F\221\001>\007d\n\276_\177\333\2752%3;\3172\203\274v\016\021\276 \n\313=XV\016>\322\367\r>\211s\234\274\001\325\010>\225\327\215=+\350U<\314\304\327\275\221R)>\036F\277=~\273\264\274O\235\357=\270\336\t\275\023U\003>6\311\004>\211\375\024>\244\200\006\275\3547)=BO\016\276b\363\330\274\034\311\314\275\035\222;\275+\215\374\275\371\\%>zE$\276\220E\311\275`\2416\276\004\262\270\274hZ\306\275\'\364 \276\031o\341<\347]\r\275w &>|$\t>\313\276]=\266\370\362\275\"<W\275\336G\305=\245\232U=A\001\"\275\220t)\276\211\236\355\275\227\325\361\275\351\0345>\230:%>\377w\000\276q}\240\275GY[=\tk\023\276\215\225\016\276\241\357\303=\341K\332\275}Z\320\274\263e\017\276\002\032\002\275?\n\245=\275R\267<\024\263\245<\3452\013\276\356\264\275=,\210\r\276\315\244\220<\261\262\006\276U\345\006\276\314#\212\273\200\377\004\276\210 \026\276\303\332\226\275w3\022\276\025\327m\275\324\3020>0\007\">\225\314\025\276\212tE=\033\000\353\275\356\316\264=\022\"\232\275\313%\334=M\010\337\275\334\306\215\274hQ\010<6\270=\274^\375\340;=\004\342=\364\3641\276\354|3=e\324/>\2522)>j\220\020>\264\367\351\275.H\022\276\271f1\276\344\032\'\276\307\340\"\276\202P\000>:]\030=\034\337\255=\226G\351\275N\244\034>q\244|=k\242(>\366J\361\275}\360\010\276r\300Q=\222\305\312\2734\034\304=\035\212\033\2763\320\224\275\336\374\241=|]\263=?(\006>\261\343\n\276-\224\334<\022\273\270\275L\342\027>\254\362\362<\r\325\006=\2653%\276\205\237\372=\\\355\032\276\250@\240<\220\243m=\240\310\253\274u\036\034\276$S\245=\352\305\r\274\277h\035>g\324\035>\034\331\036\276o/8\275\274\340,\276\335\304\036>\267\3308\276\317\003\237=\236\022\000>\320\230\360\275\271\033\001=\203-\000=|\006p=3R+=\312\252\242\274\035\346\275=(\023\005>\270\377\336=C\353\205\275\024\323\202<\250\r\202\275\271&\005>\013y2=b=\377<\313K\352=\231\257\332=?\341O=2=(\276\nb8\276<\310\365=\363F\304=\027!(\276`\000/>1\030\250=\362G3=1W\002>gz\021\2764d\n>\220H\035>\212\324\211\275\276\340\271=\333\307i<}\261)>(0\337\275\365\254&\276\206%\000>\237x2>\025\213\230\275\256{\017=\206\222\355\275\3473\325\273;\0307=I3^=\373\202j=\306\214\330\275e\213\014\2750%\023>\272l\370\275&\n\377=\355T\215\275\262\000\222\275)\262\027\276\352\n\033>p\023s<\360\331\020>w0\000\275\250\010q\275|:=<\014\346,\275\003\336\017\276\010,a=s\201\033\276?\334\020>E\323\320=\323\316\n>\3611\033\276A\376\017\276\336\226\r=0\314\313=\244\216\335\275Iw7<\336\004\252=&_\r>\264\0227\275(,%>z\315*>\335\"\024>%\222\010\275\303\255\221=\371}\013\276\332&\033\2763\343%\276\032\312\t\276\340\366\005\276\243|\010>\251;->\301\243\034>\213\235\226=\016\366!=u=\001\275\376\256\234;P!\377\275\033\243\361\275U\332\016\275\217\225\270\275K\224?;rB\373\275\215\371\035\275\244U\033>)K,>\205|\265=\016W{<%, =\222h\237=+5\005=\324\t\302\275\201},\276\374\362\237=ch\031>Ot\272\275\362G]\274\363XV\275&\251\301=:?\317\275\231n\035>\264\223\322=\007\253\256=\034\334\246=k\235k\275\222*$>b\376\213\275\\u\036\276aSz=\020U2\276\007\234!\276\374W\237;\237*\332=3\320\234=5m;<\254\337\307=\206\300\375=v,\265\275\345\272f\275\r\246\255\275j<\362\275\323\022\250=2l\026=\204\373\353\274\317m\007\276\362\301\025\276\030\206@\274\031\343\225=\336S\206=)\033\034\275>J7\276\337k_\275\251\002\006\276io\205=G$\320=0\271\200=\236\237k;\033\302\351\275.,o\275x\276\'=\003\334\217=\355\001\211\275\017\271 \2760\037\031\276\3608\010=/\224+>5\242><\024\361\030\275Z\"\215<\263\233\352=\223|\036>IA\030\276\001F4\274\267E\253=\2615\n\276\000Q\n>\350\227\'>\227l\020>P\262\260\274\253[z\275>\241\232\273r\243I=iX\010=\265Y\367=\020+M=\023\337\003\276Km/\276u\335,>\336\360\210\2744\037\030=\335\021\370=t\003\363=\221N\355<*\210\t\276\331\216\207\274\262\247\316\274\210\253\035\276gV\217=N\364\034\276\207\354V\275Z\007\205=H&\377\275\313\2432>\366\013->>\006\021>P\216\367\275\326\264\247=\363\322\000>\251(I\275\005\301\">:c\332=\306\177\366\274/F\020\276\212\021\304=\013\303\307=f\002\033>\037\006\216=\026\'\312<\330\352\365<u\276$\276\311\231\021\275\021P\023>$\312\336\274\314z\230\275\224E\'>\232\377\267\275\201\274\236\275\352\224+=\366\223\t>\316\205\037>~\241\225\275\377\350\026>0\270\t>i\206\024\2766\004\014\276\227k\334=\234\272M=j\252\037\276\253\356\250=t\332%>4\346\267=\302\360#\276\340\0041\276oP\221\275\331)\001>VK\331=\261{&\276\272\001\253\275Pb\255=\t\327\255=\261n\322<MJ\302=\023\300\206<P%\246=\202\356\225=\024-\033>\233\246\270=\207\372\003\276`xU\274\252\241\267\275\361v\213\275P;\r>\317\376\004=#\220f\275t\r&<\016\002\373\2748\304\337\274)S,>hO\\\274\253Bm=\355\030$\276\006L\271\274\321\035\022>\224I\t>\252\270,\275\250\342\352=\000\023\246\274=O\216:\023u\t\276}h\016\276A\032\301\275\202\n`\275\021\254$>*M!\2760\361\002\276\367\006\300=\026\307\007\276\276\033\001\275\260T\024\276]9\377\275\324\376\213=T\325\363=\310aS\275\375+%\276\232\330g\273\257\326\350=}\255p=\332\305\177<\362\260\365\275X@\324\275\254\366/=\220\3421\276\006N@=\215t\034\276.\246\300\275p\270\021>\240\021Z\273\226W%\275u3\261<\317\237\376\274\230*\016>\013O\023\276\341\344\324=\373\302f\274\341\206\217\275\312\024\352\275\225\215\016>Q$\336\275\377S\243\275nC\246\275\222\032\217=\'\216\302\275\322v\237\275\246sv\275D\202\332\275K\234D=\201\333\005>\033F\365=\303\374\007>\266\255\255=\002\313+>\276\370;\275\354\325\325=\214\212\202\275\277\r\274<b\313\221=\263\374\344={\374\257=8J\240=\001\263\036>\3434\216;\256K\326<\310J\252\275R\313\016\275s\035\220=\025\2016=$g\345\275f\013\237\275\375\002$\276e\372\304\275\010\266\\\275E\313~\275\370\231\021\274%\346\220=\215n\312\272PTT=\350\002\037\275\211\300\265\274\225q\351<\0314J=y\366\016\276tA\222=\236\203\374\275\225\240\365=\322o\246<p\2004>\220L\231\275\205\t\021=\0334!\276l\000\212=\362\210\344\275\342OC=.\255;\275\017.j\275d\014\252\275\370>\007>f\t\032\276\305\321\202\275\333\234\n\273$\345\336=\316\025\035>\241\323)>\311b\020\276\371\313\246\275F\3371\275\372\343\352=\216b\356\275\016b\326\274\374\025\234\275i\002M\275\005S\236\274\027\002\207\275\367\361p=\326I&>\246M\204;Nn]\275,f\267\275\353]3>\225\353\020>\210\326+\276$\261.>!\254V=\027^U\275\207\264\032\276\245;\020\276\261]\031\276C\343\034\276\344\276\272=\303\256\001\276<\240(\276S\2148=\200\200\016\2763\273\203=Bq\032>p\317\335=\320&E\275\222\214Z=}*\367=\347\364\371=(\277\027\276\270\261i\275\216\216U\275\275\240\311=I\354\250=\325\254(>\317\322\025\275\214\014 ;}\303\321=\340\256\t>\200\307\312\275F\327\360\275\225\321\264=\274\350\036\2760\340\231\275(\326I=\262\301\031\275[v.>{\252\031>\220-`=\205N\256=x\216\000\276n>{=\202\\\347<\332\345\223=\317\231\033\276\215\023M=7\177\365<\177\207\314=mE\311=A`\201=s^\020\276\362\266\203=\365\213I<\301\210\010\276\2700\007<\237x\013\276\325\033\036>K?\032>\247\240\002\276`\266\317=\257g0>\267>\345=]\274\000>\022\024\005\276\322Y!>\245c\321\275S\242F=.\277\362\275&{\375;bgS=\373\000a=p\241\275=\347\252(<\036]\273\275\200\320\037\276\367M\311=fg\360=j\335\265\275S\362\r\276\013\205\n\276\217Dm\275\202G\020\276d(\336:\361\3654>\235\250\323=,\004\305<z\270\365=\371\032\206<\201\223>=;1\352<\222i?\275^{\262=\375\n\305=\310,%>\236\276\272=0c\220=\212\020\260=\330\020\033>\244\227\024\276\3201\255\275?@\327\274x)\257=3 \252\275wd\033\276CR\336=\013>\206=?K\003\276\365\010\207=\022\230\272\274\324\271\004\276\221\244\267=\310]\255=\002(\035>x\'\352\275\317l\312\275\330Y\314\274\221E\264\275\022X\204\275\256+D<\213\277\204=\263\3323>]\325\251<\037\245\274=\212\305\034>O\246@\275\255\014\250\275*\177)>\314\207\361\2752Y\311\275\315\022\327=5\266 \276\340\356\377=\364\235\267=\361\332\313\274f[\326=o\326\373= 7\217\275\317C\362\275\2742\346\275?\350\302\275\375\272\234=\3450V\274\252\022\235\275\266\003\007>EM\316;S\247K\275b\250\036>@\362\036>P\257\340\275\240\205%>\0346-\275\273\260\373=\256\255]\275\331R\243=%\270\353=7\350\n\274\177\'\037\276t\226\t<\207\241\024\274\0204\326\275.\306\'>\320\032\'>kX\000>\205\265\330\275\205^M<\252\350\373\275\365\033\314\274\010\220\263\275\224\254\320=0\360\245=\237\035%=\330\024D\275\326\325\035\275\221e\375\274\002\217\252=\007m\212=MJ\374=S\243\221=\331T\275<mv{\275\016\271\255\274\323\3319\275Q\342\207<\347\215\204\275\r\035.>\264*\024\276\246D\002=#\370\032\276\214\021\362=+,\014\2761\035\254\275t\237\353=\232\255\r=\320\354\032\276\245m\014\276\250i\253\274t\241\333;\033\0218\276\203\245\342\275\377\037\333<Ko\264\275\3735\002>,\t\311\275\211\271\244;\376\240L\275\310\263\325\275\343\r\030>\017\360\006\276\263\374z=i\320,>\004\222\034\273\022V\241=\033g\r\276\354\001\"\273\004n\311=1\0009\275\372\344\207\275\205i\t\276\352\350\003>z\373\367\275|Q\236\272\013L\343=,/\215\275\204\326\304\275np:<\214\322&\275\376N\037=\227\261\212\274\177J\324\275\213&\266=)\247\340\2758|~=\361\"\020\276\\[\345;\355\223\t>\277\210\014\276\211\215\027>\231\351K\275\304P\276=\355\n\253=\366\320\245\273\265\034\361=\365\206\t>\026R\347\274\001+a=\350\226-\275\207\336\325;v\226\270\275\354@d=\316G\211=\033v\342<Et\004\276\234\247\334=\216\320\247\275\255F\001>\302\021\274=Bg%\276\256\372*=\260\211\363\275+E\341=h\335\243\275}\354>\275%\n,>v\215\247\275\343\327\323<\347K\t\275\312\320\264\273\221E\335=R\023\214=\231\266.\276gj\374\274\310\212\325\275Bl\210;\317\277\265\274\226T\334\275w\375\256\275\271:\n\276*%\007\276\231\\\353=\350<\320\271\322\177\250\2726R/\275\343\031-=\346n\372=\375\340\206\275\277&l=\342i?=\2054\326\275\253\000\244=\316u\t\276\020IC=\307\032&\275\005\300\365=l\014\331=6>\375=\270\371p=\224$\233\275v\230\237=\333\227\342=\221\374\242\275\356\346\257=\224\363\263\275X\216\367\275\020\340\016>*c\017\276\251\005\276\275\302\355\375\275\024\016i<6Q\004>\375P\213\275\354x\376\272\340\004\001=\\n\256\275`h\211\274\'\365\365\275p\324\324\273\320\322\304\275)Y\021\276\017\372\310\275\003k\206\275\001N\t>+\360\215\273\304\227F=\214\n\214\274\201\250\347=\006\362\225\275\335L\'\276\350\327\016>\311\027\307\275\331\326\325\274c\261;=\333V\376=`C\035>X\312\276=!\027\315\275\336\"\007>Q\262\013>\027\261\235=i7\237=\0247\014\275-\211P\275_Q\031\276\032\311\027=\304\361a\275\211\200\354\274\324{\014\276\225\317\333\275\021\215\035>4/\241<H\250o\275\'\236\252\275\252\242\364\274o\025\'>\024\244\035>\027\200\215=\200$\374\274\253\336,\275 \312*>\366M\312\275\237\202\350\275\2723->\315\360\001>\243f\"\276\210 \'\276O\235->\237\037\013\276]\327\017>\362\220T\275b[Z<\334\220\365\275\346\357\313=\307p\255\275\300\216\017>\273\304\032>\\\354V=\315B-\276SV\367\275\303v\303=mx\305\275Z\336\247\275\237\270\215\275\214qq\275\rMS\275\244\213\343;\033\320\177\275/\014Y=\304_\327<\311-\347=\261L\324=7F\213\275\241\234\013\274\202\305\255=s\306\301<\331\325_\275\263\247\025\276d\220\002>\217\331\307=E\224\024\276.\262\014>\261~\374=\362\205c<\261\330\373\274\263\037\316;\373\366\305\275\274\375\002\275\034\302->m\357)\276\341\335\016\276\220\344f\275\221\343\010>\23142>?\375*\273\334.\n>\266\237(\274~\246\r>\253\3724>vp1>A\003\365\275\214\'\253<\266\327%\276r\204e\275\275C\002\276\000o$=HX\306\271\371\353\267=`<\037\276\013V\236=\216\372\275\275\370\261\030>\347\365\014>\322y\261\275\213M\263\2745t\333\275p\203n=S\332\021>^\017\013>W\217\275=\004\352M\275\340\2014>\345n\275\275\035Q\307;O\336\024\275\177\002\330\275\233<M\275\004\224\010=)\254=\2753\232\n\275\005d\033\276.\374\013>\206\013\t=\226LO=Z\243\223=\212\361\037\276\251\016\340\275c\211i\274g\202=;\360\026\263\274(~\034\276z\247\016\276\301\265\361<\320{\216=\340\001>\275u\313(\276@\260o\274\221\347(>\277\244\004>\203\316\225=\222\237\031\276\"\211\034\276\210\331\256\275\223\270\001\276\354F\000>\307F\032>\316\r\024>\272\315s\275\2008\014\276*p\267\275\211\352\305=N\224\372=\3707\324\2754\210_\275F\352\375=9\350\001\276`G5>b\231\245\275\316\317\346=\342\273\324=\310\330\007>2\203%\276N\336\265\272\207\364\013\276R\026\246\2750:\204=/v)\276\255\303\255\274\237c\376=Nu\205\275fj\014\276\271\260\230=6c\024\276j\034\204\275\"\236\232=\331\273\177\2759\205\314=\235\372\345\275\204T\253\275+\341\201=\346\212\t>Q=\215\274g\320o\275S\257\247\275\025\255\254\275\253\357\232\275q\303 >\0044@=\r\306\310\275f!\024>\262\004\n>)\314\271\275\2746\300\274\324R\031>l1;=\004\354k\275\274v\361<u2\240\274\336\3153\276\326I\347\273%\202\250\275\236:\326\274\341\204\216=\376\213\370=\372\014\021>\027\000\227\275\261\036\312\274~\345\256\275u\312\200\275q\373+>d\352\"\276\251M\266\2754w\035>\220.+>\252n\030<yw\320=r2\254\274.\024\005>\032\355\230=\202\177\034>Pz\314=6\262.=\230\374\243=Jv\213\275:\307L\273\227\227\253<lt\332=\343y\335\275\022\262\270=#\035\200\274\020X2=/|&>$\327\\<\227\277,>\322\254\261=\366\247\326\273\302#\243\275\034\r\222=\003\304\026>s1\027>(\256\367\275d#\037\276-\265\254<\264\322t=\361\025\'=T\r\315=F+\256=\004\357\237\275\035E\020>\to\177=\357\360\360<\334M\001>+P\037>(?\240\275r1\024>\271!\263\275o\224(\276\004q%\274`\202\334\274|#$>rN(\276d\204\363\275\321\002[\275\242\013\025\275\340\036\310\275\277\005\035\276&|\375\273\024\317\r>\235#\211\275\333\371\246=\306\264\\=#\034\233\275\305\261\365\275_1\250=\242\222\344\275\371Z\224\275\0176\n>\264\345\314;\3343\261\275\2117\274\275\264\"\236\275\215r\\\275R\336j\274\242`\213\275|\266\244=`\345$=*\247\202<\364}J\275V\347\201\275@w\254=j\\\376\275\313\321y=-/8\275t\206\022>\351{\312=;n\021>\236\310\034>he\220\274K\201\267=\342\333\036>Or\272\275\350X{\273\364&\240;\022P\r\276\326v\036>>vc\275\341+\r>\372^8\275A\"\256=\215\217\004<;\240\022=a\t\226\274\277\343}=\253b\306\275\335\355\231\275(I\367\275\370\320\200\275\027\227-\276\271\027\257<\363Y\033\276\247<\002\273\275wf\275Y\333\354\275I\260 \275jf\255\275\217\303\036>$P\300=`\267\031\276\236\013\363\275R\000\027\276z_&>\222g\003\275H\254\234=N4#=\306\005\254=\0041\020>\326\031\013=\25631\276}B\224\275\354\256\335\275\310\374\030\275D\027\014>\265\300\270=\nu\346\274\244N\232\275\276=\032\276)\227\035<\030KQ\274K\362$\273$\235\355=\355\340\014\276\375\322\220\275\244\233\255\275\317\0025;\234\243T<\362/\002>C\035\334\2720\304\276\275\247\200\233\275\334Q\337\275\027\3455=\335\020E<\310W\250=\270m\202\275\201\243\323=j\300\'\276J\346t\273\231\261e=\375\200\026>gy6=8p\236\273\310|\022\276[\326s=\215(!\276\001d\000\276Y)\222\275\246B|=\357q\336=Rf\021>\266\005,>\264m\325=\n\002\253<\265:\032\276\010H\016\276\340\234\022\276de\336\275\356\027\273=\261[\233\275@x\251<\3354\266\275\020p\350=~\362#>\327\027\326\275\264\205\035>Y{\233\275\002\272E\275Z\302\255=\270%\013>\377\272&>r\335\223\2751\340\263=\236M\371=\302\005\332\275.\247#=SP\020\275Yz\265\275\314\361)\276\357\013n\275{\004s=\036\017\220<#=\221=\023TR\275\241^\017\274\336\031z=\314\310Y<WS\016>\254\002\315=\"\274|=\005\027\224\275\253Q)>\254t\352\275\355\261\275\274T\033\310\275\267\315\"=\276\270!>q\307\014\276d\177\354\275\206\004\241;\373\377\274=\212_g\275\025{\354=\345\324\033\276\351n\024\276\304\203\240\2750\320\211\275h|\327\275\273\275\273=\007\231\004\276KS\027\276\304\373\277=\301\002\020\276\3253\205=n\246\250=%|\260=CH\'>\326|\026=F\367\376;)B\354=\375\235\356\275\236\342\262\275\234\353-\2769t ;S\032\342\275\262\325\253<\272\233\301\275S\307\227=\"\031\352\275\275\217\344=c@\232\275\365\030\036>\245\206\024\276\037Z#>\210\334D\275\213\260\305\275\250\300\234\275\354@\275\275\2676\330\275\210T*>\273\007\252=H6\205=g<0>O~ \276\010\322\206\275\223\347i\275=2A=\266=\010>\245\317\030\276\224\301\005>D\231\326\275\377\312\031>\200\023\266=\300\372\260\273\334T\372\274\032Q%\276#\372`\275\032 l=9O\240=6\227]\2744\3040>\276\232d=\205j\025\276\026\026\203\275\347\360\276\275\310\306\351\275je\020>|\225\013<^\327\232\275\230A\3049\235\325\'\276~A\375=\327\177\245\275\322\026\324<\343\302\250\275\023w\262\275\316J\304\274\200>\370=T\304\260=\002\030\016=\233\336\314\273-\376\006>\\\277\217\275[\231Y\274\' J\275\037a\031>kT\035=\261\371\334\275\336<\350\2755z\"\274|\250(>\005\334\352\274\307\225\026>\201S\357\275\237\362\035>\360\231\0079.L\031=\371\026\030>$-\003=\371\261\267=\365\262\330\275N\032\225\275U{\205<\031\311u\275\304\004\331948/>8\262\'\276%\233\336\274a\314Z\274\255y\341\275\007\034\374<-EC\275`p\202=(\225\331=\251\261\037\276\261\307\206\274\272\005\335=]\376F\273\213\202g=!.\332=\034J\326\275\2242\037\276\253\256\257\275\024\313\343<\221S\347\273m\323>\275x(\007>\271v\312\275)v\323=:\326\023>\236f<\273\017\"\013\276\210\025\311\274\301J+=\277Bj\275\321h\026>`\025\000>?\247\255\274^\370\005<4\013\020>\366\273\254=\202l\322=\216U@\274\306\373\307=\360\207\"\276\350x\014\275\332)\010=\262R\021>\250r{=\223\375\201\275\023\252a\275\317\322\264\27580\270=\317\037\037>\374M\027>s\242\317\275L9J=\277U,=h\326\311\275\021q\262\275\257\330\347\275\020l!\276y\037\364=w4\324\2757I\001=\330\246\006\276\253\342k=|-q\275\300\306\013>(\367~=\"\375\r>1T\035< \363\227<\246\264^\275F{K\275\203>Q\275\001\342\265=\267K\332\275\200\305\234\275y\230-\276m\214\026=E\252\007\275\255\0072>\264\276 >\207\027\334=zl)\276P\223{=b\335d\274j\331\256<\347\340\204\275\024R\277;\347\000\224\275\367j\227=S\205\371=\215\0304\274\207\367!\276\256\211\r>\251\201\377\275\267\223x\275@\304d\275\257\035?=\215:\355=,T\214=\220\223\244=\351\276.>\361\341g<KB\213\275\351\"q<\262q\320\275\210j\t=\210\301\177=\007(\221\275\246\n6\2747\262\252\275?@\371\275.\360\005=\364\200p\275\301\255\303\275\355\275E=\233~\276\274\007+ \276\027-\026\275k2p\275\006\231&<\006\273)>\2627\020>\242\275\032\276H-!\276~\226\307=\342M\372=\030P\366\275\300NL=?;\303\275v\211\004\276p\034\231<\333\275\007>\200\210\252<\231\365B\274\2357\367\275\342\350\265<\261\220\344=K\351\034\276\247g==\334\235a=R\267\023\275\325j\023\276-\036\262=\216\341\370\275\036l>=\341x$\2768\"\274={\336J\275\\\326\325=\246~\274\2751L\220\275\002\365M<\312\025%>\277\367\002>\274\311\225\275\342\351\366;\223y\307<u\347\372=\230\203\260=S\211\324=\262\251\010>\025\233\036\276\221A\245=\243\030\362=\323\006(>f />0A\316\275\267\035\322\275\030\216\023>S\331\273\275I\214\202\273\234\200\035\276\322=\031\276\221)*>\016)\025>\356H\r>g\\\211<\350\215\326=\033\202B<1r#\275\033\255\r\276FX\177\275\253&\004>\357\265\341=\2316\322;\225\245\322\275\223\027F=J\033o\275\260\"\365<\364a\306<\322\346\320=Z\315\325=y\306\017>\005xu\274\237\375\331\275iK\347\275O\210E\275\333\031\343<\006\n\014=r\330\221=\227\234\214\275\373\n\264\274\3112\033>\272\014\331<\274/a\275Dg\300=\360\025\361=\222\377\200<\223\3253>\277G\273=\311\263\254=\370r\177=O0\244\275\303\256\000>\017\326\t>\314%\224\275\006f\373\275\274H\301;W|\035>&\336#\276\352\037/\276U\314w=!\243\357\275\367Q\t\27624\330<\177\202\020\276\204\355\261\274\372~W=lN\353=n\227\323\275\223\230\304\274\246x-\276j\007\025>\256\211\004\276j\245\027\276\345\310/\275\365^g\275G*\246\275\1774\315\275\302L\317=\242\t\r\275\300\206\351\275p\206\300\275\315\344\261\275,\227\364\275\326\377\005>l-->\177Y%=\337\311\353\275}-\235=hJ\032=\3654\357\2752\351\306;!\024\017\276G}1\275\232\216\t\276W\005\364\275\304>\223\275H\375*>Pa\010\276\007\035\353<w\337\320=_\204\201=\357\222\272\275_\002\235;\006C\321\275f\177\352\275\216^\305=iA]\27452\022<\325\237\027=\335\246\217\275\250\004\025\2768\207-\275v\037\243\274s\213\353\274\272\207\257=\300\"\017\275x^2\276\rV\014\276jW\321<Q\332\220=\312\320\031\275\234GA\275\226>\020\276]\325,\276\346W\023\276\240\231D\275tV\242\275f\033\204=\241,\004\274\303\341\021>\337\202=<\235|\227<\310\371,>]F->\270\257\232=\\E\275\275\0327\017>\363\373,>3\006\311\274r\320\351\275\327\372\304=\317\004\037\276\031Z\002\275\27002\274\231_\"\2762\225\026>D\r\034\276\223\002\020\276O\"\254=Q\214&\276\353\275_=>*\355<\333l\260\2754V\307\274\"\357<=@\007\265=h\202\377\275\267\261\r\275\276h\265=\247\006\301\275\232\002\'\276\373\227\243<\026\345\266<N@\327\274\312t\237\275\260\305\354\272cm\014\276\2346\021\276w\311(=\317\200\321=\023\247(\276>\026\232<\226XC=\013_\325=\242E\223=m\377\'\276g\272\230\275\356\375\374=\224:\r>\025\354v=4k1\276\355\202\263<\024\206\334=jko<I\017\024\276V\002\214\275^\303\310=\365Tb\275\273_\216\275\266@\010\274\262\322\n\275\3210Y=\260q\355\2759\027P\275\256I\031\2753c\214=\306\036\211\275\211\235\035\276B!\342=\346{\356=B\375/>g\036\003\275\te\031\275$\242\376\274\005.\230\275\356\372j\275\233\014E=@O\023\276=\370\277\275\363\353\307=\221,\202\274\256\246\016\276\262oH\275\374\270\341\275\362\312\256\275f\237\256\274\267\207p=\023\226 >\366r\354=\\\267\346\275\376`\273\275^>\276=D\237\324\2749^]\274$\234r\275(\225\211\275\313\\\365\275Wn\037>\247\004N=\226\206\261;@TU=\001\351\001=y8\325\275\367\315\307\275\247h$>S\360\227\275j\200\316\275F\356\010\276\210\221\302=,\274\010\276U\250\350=\350\306\006>\325\031\220\275<%?=%\177/\276Y\010\277\274\334\326\034\276m\351\t\276\306GM\275X\363\037\275^1\261\275\215\315+<\350\210\005\276\212\233\254\274\210\321\357<\3619\333=\204C#\276i\030,\2769i|\275\267H\031\276\244~\221\275\024\243\345=\207\220\355=`\016\344=I\303&\276\334U\024\276n\357\030\276\304\3152\274*\372c=\343\331\010><\207S\275\n\322\177\275\312s\353\275\001\241\021\276\226\257\376\275\2346\242=\027\335\021>\241\245\217<\314\362\017\276\232]\257\275\353dI<\016<\221=:\321\237\274\227\275R=\345\323\256<\260V\311=\307\004\354\274:\016\274= T\326\275\022\211\211\273\022\200\307\274\307\366\243=\252\3257<V\217\373=\252\226\030\274\270\326 >`\274/>\265+\265=\217`\360<\2714\267=W\005\037>\306Z <\267\t\223=4\257\007\276\326\377,>\336\231\201<\275]\216=\350\363\211=\031M\302\275f\352\264<i\032#\275\272\177\363=\3473\272=oa\276=s\300(\276\276\214Z<\206\366:\275\300\264\017>a\223/\2766s\245=o\023\215\274\366y7<\244\305\272\275^\034\221=S\215\002\276\201\315\366\2750s\252=eM\227=\350\362\256;\252\301->\025\301\240=\273]\021\276C{\352\275\242Y\230<\2212\366=Z#\343\275\003\210\305\275\335\363\001\276Sd \276\010p\217\273t\r\037>:!\002>\301\317n=\314\203\r\276\021\213e\275\203\243D=O\332\365<Hm\332=)I\367=\231)\'>F\351&\276\025\273\364\275\272\346y=\031\315\205\275\311\255\033\275\217\265\223\275\034\265\272<\034\222\364\2725\010\321<T\301\335=t\030&\276r\351-\276\361\321%\276\3767&=j\363\311\275O\342\357=3\302\032\276\'\270\335\274\360\000\347\275l\354\024\276/1\270\275\334\357\017\276dq\332=\307\024==U\353\304=\253,\272=8\232\307=\225H\366\273\321\234\006\275E\257\323=t\310\213=\251\337\216=w\023\335=\326>\240=\214\242\010>\300t\220=\214w\016\276P\233&\276\330\324->\361\227\260\275@T7\276\037\263\366\273\035\306\026\276\365R\032>\225\267\017>$:b\275\336\220\224\275\323\030\312=9N\247\275\333\3023\276\335b\035>\010\t\'\276\244\0270;= \245=u$\270\275g\274\'\274\375\275q=\204=$>\020w{\275z\270\361\275\273\033\377=Hd\027\276\344\362\031\276v$\276=\301j\035> \t\214\275$\332\202\275\251\031\025\276\"4\256\275\251\330&>\032P =\224\tu=\265\010\302=\207\006z<\027\266\345=\215\373\241\275\346F#\275\2004\004\276\376\234\355\275\006I\024>\276\000)\275\214.\332\275 \326\205<\234v\276<\364b\032\275\307L\360=f \373=N\212\203=\372U,>v\016\202=:\221\325\275\315\035\005\276\276;4\276\374\202p=+\246\227\275IF\320=\361\2374\275\233\333g\275\t\217\t\275,\n\301;4!-\276Vd\034\276\001\243\006\275\220\022_\270x \226\275H\030\362\275RhK\275\377\314\254\275fj\252\275\326I\353\275\260\205\231;\024D\033>a\0030\276L\027\325=g]\312=u\004\037>\364*\027>`\306*\276\217t\242\275\025\305\250\275\017&\r\276Ms\236=*\023\315<\340\306\212\275\350\230\371\275\2509)\276]\013\252\275\336\231\340=\"\010\242\275\211>\317\275D\000+=\235\235\237\275\267|\t>,\332@\275\311\237\023\273J\267\020>YO\232=R\211+\274v\026\277=vf\302\273]%\"\276Q\036\215\275\334T\333=zo\217<h&\027>m\215\230=\226~\003<\324k\340\275\t\320\217<M\221C=\215 \000\276\212\234\324=_\275\267=\203\'\237\275\324\246\017>01\026\276Q\333\260=??e=\3706\000\276\244H\352=\374\312#>p]\n>\3549\327<\n}\270=\326\035\260\274\274I\022>\000:c=\303\250\371=A\032y= \312(<\357Z\356\275\036\023\371<a\227\022\276\372\266\243\2758\272a=\334\267\264\275\374\'\270\272)W\207\273\324\267\374=\216\306\342\275T\265\'\276\010\253\355=\265#\215=`\034\227\275\264?\244<\002O\221=\307\321\310\275e7\034\273\246\206j=\244\023><8\301\002\273\267\\\026=,\252\235\275\002n\225;\306F\215\275J\377\216=\2743*\275\372\n7\275g\325\345\274\256\341\023>:X\035\276\224\373\211\274\226\010\030>8\205,>\000\213\017>\210\007i\274\344\211t=m\375\242\275\3676\031\276\252\350\212=\023\251!\276\252\254\257\2755\265\n=\244L\263=W\267\277\2759\343t<\346\225\003=\014\310\235\275\224\026\r>\003Z\245\275\206\250\353\275\206\363o=\301\361\236\274\334r\207\274\022\313\361\275\372\353\n>\356\337\243=H\251R=eR)>\253\031\022>\231\004\'\276\240C)=++\031>\347\251y<\n\273->\376\241*<\375\036T\275$\233\033>\204t\254\275\313*K\275\035,\n\276\0213/>\016w\324\275G\347\217=Z\221\226\275\217x \276:\213\374={z\001\276A\006%>\n\330>\275\313+\035\276m\342$\275,b\005>\265#\217<\245~\267=-\354\360\274iv\364\274\235J#\276\312W\001>\223\326\207\275\345\246-\275\2043&=i\244\336\275\205\352\006\275\034\221Q\275\371\004\r=\262\014\351=i\254\246\275l\245>\273\326\211\260<=\002\026> \212\2018\226_\261=\247\253/<g\227\003\276\261~\">\331\276/\276\353\037\353=%H\257\274\224Q\252=6\032 >\017\007\366\272\377\207\264\275x\264\207=p\304\344\275\331H\316;\231\226\364\275\361\014\257=7\306\"\276\340u\0219!\006\'>\335\324\004>\355\305}=\265\263\017\275\021\240\253=1&\201=\270&\314=\2558\205\275Q\341\207\274\322|4\275j\374m<\031\353\025>>\310\003=\222S\346\275\026\\\005>_F\037=\346w1\273VIu\275\226\251\244= \"\356=`\252\377\275\316\304\036>\036\036`\275\372\304\227\275\222\264\035>\260\235\241=\313eJ=T\206k\275\032\336\321=#\204\337= \0251\276\316\031\271<\352 \005>\340c \276~\246\232\274\003H\000\276\017\034\022>\373\361\233\275j\322\370\275\237By\275\332\321\t\275\327 \346\275 \225\004\276X%\217=M_\357=Ug\003\276\347U\004>\330!\302\274\232\257M=\330\030\023\276\235n\303=\327\014)\275\334\232\032\276=B5\276W\030+\276\'Q\271\275\006m\'\276$b\305\275\325\216\346\275\365\n-<%\252!\276\351\312\234=\321\330\351\275\271\223!\276\326\216\366=\332\254&\276\272\266\275=$\352\004\276Z\366\'>_}\327\275\355D\321=\374\"\000\276\003\347\027>\362:|\275\r/\335=/N\003<\205$^\275\364!\362=a\203\215=\255\251\221\275w\241\322\275\376\310\315\274\321m\223<\361\256\275\275\341$\"\274jN\212=\005\033\254\2757\200\022>\376\274\250\275\032R-\276\240\321\002\276>\252(>I3\361=@F\217\2757\235\031\276\270\326\252\275x\324\305\275\327g\372=\276\230\321\275\216\366\322<\'\277X\275\"\361#>\005\373\234\274W\346\320<$wI=\232m\">\254N\350=\3604^=\207<\277=\330\356\260<\345z\337=L4\374\274<g\034\272\334\312\302=@\320\034\275\363\316\023>\205\t\257\273\374\350\353\275\271\210\342\275UW\260=\036\037(>\352\226\035>b-\303<|\007==\260\271\261\275T\'\314=\377\030\357<\222\033\370=\304\022\332<r+\'\275* 8\274\r\241\343=s\371\304\275>\353\216\275}\307\241=\315\023\t>\310\300\177\275\367\n\013\276\255!\315=\314+\002\276\314\315\037>\273\233#\276\370\003\026;!\006\370=\245\232U\275\240\231\306\275\337\177\325\275\241\343\377<;\034\204\275\212\311&\275,\352\316<\270\210\331\275\313\347&\276z\240\037\276\334\363\305:\335\304\030>n\315\307\275^4\260=2\275\307<\2044\035\275\014R*\276\334\234\r>O\240\204\2753-*\276\376\223\014\274\343\216\322\275V\225\034\276pv\327=j\014\257\275w\313n\275\336\245\034\276\325\266+>\274x\020=\345\034\334=EQ\320\275D\210\033\276\235\264\320=s\024\260\275?N\221=\375\306%=D\023j\275\350\304\016=@\373\343=,z\217=\3555}\275\302#\366=`\024\035\276\275\244\337\275\266A\002>\216\370\302=\201$\023\2766>\245=\300*<=8\345\340<\340\357\323\275\305vr\275\207u8=j\211\257\275YKu\275\276\210\313\2753\322q\2750\311d=\366\315\234=h\3002<%\313\t>*\220\013=p\245\314=\264\244!\276\213)\254\275\020\\\276=}R+=\036]{\275\340\017\005>\021`\242=\233\025\216=yg\371\274]a\002>\260\324\333\275\0373\310\2757WC\273\257\005\310\275\006^\241=\221%\353<\234\355\354=\201\006,\276p\330\350=$\361\306=\246/R\273\226\235n=)\300\037>\231\006\263=\356W2>\037\266\377=\342{\016>\004\353\">\320m\274\274\244\276\t>{\220\306\275\200\005\n>\036\033\323=\363\301\017=\224\232\355\275\014#\007\276\304G\017>\347\035\363\275K\252\341\275e\345\263=$\201\216\273)\177\226=\306\273P\274|d\006>\231\210\360=\247\024\225\275:\236\002\276[\227\030><\274\001\276\302\315\301\274\2700\251;2W*\276\347\241\016>\025-\255<\324M\302\275U\025\235\275Vo8>\205\212\027>\305\\.>\030+z\275N\215\n>~\277}\274\321\260\254=u\277\024\276\303\232\'=\241!\253\275\351~\022\276\036\356\313\274~q\032\275\"\001\325=\205\225(>\222dI\275\364s$\276\nr*\2754\233\257=v\377\273\275&\320\220=\227~/>\211\254\024\276\031\274z\275[\347\331\275\356\262\243=zr6\276\371\331\021\275\306f\376=\317\262\257=\"\026\275=f\'\031>\037\'\\=`\002\"\275;\223\266=t\336\024>\t\305\025\276`\3660\274\200\226\373=U\225\376\275\206Z\240<\254\223\327\275\262^\254:\336<\t=\343#>\274q>\255=\257\222\020\276\3709P<}Q\020>\344\267\r>\267\365\257=\351\355\200=v\204\331=\204\244K=w\"9\276\362\346\323<1\215\216\275\252\311\237\275\361\0324\276U\340\213\274\270\tH\274g\"\'>n>3\276I\243\360\275\r\216\023>\024\343\274<\257\312\025>DS\004>\225\206\231=JDp=P|\013>R\'5\275}\316\376=\210\337\033\276$\303\373\275\002 \331\275o\214/>1\026Q\275\222LZ=3\354\355\274V\033\003>\336\226\346\275\013\350\303=|;!\276oF\355<Q\177/<\227\025\004=p\345s=\302ay\275Q\200\024>\340^\335\274\264J$\276\334\204\307\273\221\306\315<\225AS\273y\227(\275\376\017+\275k8\242\275K7n\275\265\2542>c_.<XW\273\275z;\030\276\205-\306\275\222\371\262\275\325\232B=\271\273\031=\317\307\027\274D\254\234\275Y\363\020\276#1\023>\024\304\342\273\t\372%\275\024\301\251\275r8\320<b\355\375;\204p\001>\366\261\367\275\004\020\331=,\236\034\275\233\277\214\274\304Ac\275\376\310\025<K/T=\240H&>\317}\362\275k\217\202<d\224\255=>\251\274=\375\227\014>\265\013\325\275~`\311=\030\323\354\275\367\324\002=\354g\026<]\236\347\275g\336\263=\217\0010>\234\301\341=\225\375\330\274?\366\253\275C\250\213\275\212}\251=\221\324&\275G\336\375\275\334M\323=\360\234\034:\324\337\273=\"J\027>\215\304\364=\t#\032\275_\327\327=DY\003=\261\247\233<\305X\275\275gM\333=e\332\016=IK\350\274\260l\222<|\026j=\024\3119=\262\303\275\273\226\205D=\033j\031=1L^={x5\276\362\2316\276\343\322\311\275\221W\255=O\375\030\276\365\372\032\276\035~\034>>\253G=\374\302K\275\236v\252\275\275\275\205\275\2334(>\362\004\304\275\360\326\n=\010<\"\275o \361=]\254\037\275\024\213.:\275}\017>\n\312O\275\365H\341\275\223%\270=>\203\356\273$\233w\273/\234\026>J\'\347\275\035(#=/\'\313=\014\263\376\274\215\230K=\r\300\210=\225f\351\274\202\010%\275E\204\031>}\260\300\275\'\357\370\275C\303\371=F1\244\274^\264\247=\020\261o={F\002\274\303gw=\227\215(\275\003\344\247=E\310\346\275\177\215\334\275R)(=U:\033\276\036\331\027=`0\231\275\215\355\362\275\345\3672\273\030\200\">\304\336\222=\323\336\261\275h\350\371=f\363o\2756\322\207=\237\202(\276\2337\275\275:\014\220\2753J\362\275\001o\017>\304\332\274\275\256\274\237\274\370o\225\275\360`>\275\324\242/>D\221%>X\264\233\275p\\\307\275\216\374\014\276\330x\242=\232\036\230\274W\323\315=\362\312\017\274Jr\017>\014\370\004\276\327e\357\275\033\321N=V0\347=\253\221\325\275\375\204l\275\2262\317\275-L\250=\345\316\365=\2278 >\177\343\240\273\343\244\031\276\224\031(=H\nc\275S\340\023\276[\335\022\276\202\210\366=i\342m\275\307\332\355\275\276\332m=\017\360\246=\371|\013<\250\271\306<K\001\230\275\000\303\271\274/\nT<\373\242\232=\337Ig<,\020\005>\236T\274\275B\276D\275u\202\230\275\315\344\357\2748\217\200\275\245h\240\274T\027;=\202\031\n\275\004\343\024\276%b\n>\3504~\274q\373\026;\376v\007\275U\037\013>\377\321\025\276*\270\242\274\313\023\256\275\234\274!\276<\337\031\276\256~\245\275\326\355,>\316\207]\275\311\303!\276\"\227!\276\241I\234\274t\302\242=\023\335\236=\000\005}=\351~&\275\275\221\221\275S\275\020\276\357 b=v\262\024>\\K\000\276P\003\214= \033\026>\236\205\025=V*\213\274\000\235\327<\315\342\316\275\243\273\216\275\316\t9=\010/\371=\320\321\026<\373\027\025\275\324\025\021=Pw\020>1G.\276;A\006>\312\237E=Pn9>T-\035>~L\017>\325\242\022=\327\320\231<\236m[\274ku\017\275\310q\235\275\213\313\001=\n\"\352=Y?G\275%\301\335=\353\214\003\276\321\2720>$<t<\001\024\226\274\366\273\276<\257\255\030>:\0249=6A\274=\363\002\005=\003/\007\276}3\003\276\363\274\323=\277\256)\276I\222\333\274\372/\246\275\257\321\030>\234\033\354\275\311N\313=\323\031i=\314\252\005\276\035\276\334\275\254\357\236=J\231\376=?k)>:\210\177=\206\013\361=\r\300\324\275{cW<xp\331<*%\370<\337\264*\275\336\214C=C\203\307\275\013\307\341=\014\201!>3\317\027>B\2511=\223s}=\207\033-=p\024j\275\225\024\374\275\003\312\035>\264(\313\275\005\350\024>\345\307+\276Q\243L\275\353\016\223\275\276\325\002\276\252\240\327<\255\216\206=\361\3118\276\317\0108><\013\351\275N\317\030\275\032\001\001\276I}\204=\277U\330\275*\326y\2755W\227\275RV\301\275\342>\n>\210a\304\275\311Sc=\332\341\272\2751\005Q=l\322=\2744C\333\274\'4\'>\213\224E<\024\376\205=\322\201t\275\364\377\020\275\272\034|\273\30470>\271\241\027<o\327\023>\233\322\034>u\272\367=e\214\271=\'D]=\223\305\370=\231\263.\276\205\376\274=\240\241S\274\264\026q\275&{N\275\352\274\244\275~F\230=\0204\000=,\216\025=\375c\032\276\270#\020>\364\241g\275\250T\n>\320Q\344=\332\263\032\275\231\325.>\242d\034>\214\'\264=\200\262)\276\257\314\333<\016\204\207\275\245\375\253;p\013\213\275O},\276\270\331\252\275\252N\024\276\360}\257\275\317\350#>\001\353\365\275q\325\345\274SX\261=\3304\266\274$\317\032\275\010\274,>\330G\315=W\356\307=\033\007(\276\002\367\265=\302\255\025\276\223.\025>\265s\334\274\362\326\204<\211.\023\276\334%\201<\202\363\352\275T].\276|\"\230\275\005(\034>\254r\361\275\205\224\031\276\215[\314=\375\"9\275\372k\321\275\350\177\022>\2608\357\2754?.\275A9\346\275\271O,>\022\316\224<0S\227\274\235\024%>\260\263\030\276\321\253S\275R$\333=\201`\237\274 \023\311\275?B\256\275<\241\034\274H\016\024>\300\372\262\272\331\353\036\276\3424\233=\327\021\314\275D\243\037\276Gz\247<\316!\030>\214\201\217=Z\255\226\275\2228\273=:\227\240;o8\216\275C\307\t>\330\315\264\272\327\325\311\274\367R\026==\317\212<\210\300\035=\0275\256=,#\360=\342%c<&\202\277\275\000\237\276\275\'p\370=\306w\224\275;\030\351\274\006\375\256:\300D\266\275\352L\033>\273\275\037\276\340\226_<\305\006(\276\027\211\001\276M\016\001>c \273\275\020t2\276D\337\265=\333H\027\275\241}\316=\213\344f=\371w\035\276D\211\017>\316\262)\275\"_\n\276]\324\362\275D\200\356\275\211\234 >q\\+>\266\205\254=$\300\036:s\374{=\274\246\230=\275\251\303=\220\356\327\275\006]\251\274\36367\275d\231\337\275ttx\274\0301D\275\314C\247=\"%*\276\374\333\322\275|\221\024>\360\355\027>\236\031\037>z\306\243;\351\220\320<r\247\320\2757\333\355=+B\301=\271\020*>\221\265\023\276\364Q\020=/5\n\276\370\026\332=\232$e\275\301U<<\276+6>\345\366\021\276\032\005\036\276\366I\336=P\347,\276\tE\014\2765\243\346\274\367\306\314\275\216\201\267=\366\025R\274\006\n)\276J\350(\276\021\366\022\276\212s\022=\031\253%\276\226\300\376<\2258\277=\356\021\335\274\341\331D=}1)\275m\026(>S_\001\276k\343-\276\0131\375=^\354\310=\314\340L=\332\310\003\274\3278\377\275\316\361I=\254(\032>\000\033\302:R\032\010\274\312\034\300\275T\026\363\275\264\t1=\316+\310\275J\322\003=\362;\327=\351~(>\356`\026\276[\351&\2760\226\320\275\326a\231<\237\300\372=\302\200\350\275FG\376\274mSW;\303\227*\276[\003\006>\212\3666=\303\306\035\276I(\313=X}\252=\262~a=\373\320\022\276\371D\247\275,A==\336\177\233\275S\355$=\361]\331=\205\201\001\276\223\312\005\276\206\271\207=G\220\267=\004\245\335\274\245\202]=\3243\"\274\036\243J\273\222Hj=vU\271=H\016h\275\014\003\024>\205\350\264\275\036\032\206\275\221\205\254\274c\344\377=D\216\242\275\336\364\022>\207\203~=G\300/\276\322\010\345\275\237\243\">pmX<\222\036\316=o\361\377\273|D>= \261n=2\310\002>;\365\253\275\342\003\017\276\273\020#==(\353\2759\324\215=\230\030\024\276**e=\270\303,>\367@\211=\336N\371=\376\377\021\276\2630\301=\224B\352<\350f%>Q\323&\276*\242\226\275m ~\275\313A\314<A\317\r>\317\276\t>\242\265\r\276\372\2232\273)\223}=\234\220r=-8J\274\256l\001\276A\\\367=S\372y;8\265\030=\206\312\021>!b:\275\302\342\023\276\240\036\355\274q\340 >,\250\036=\367V\375\275\244~\333=\034$\n\276\311\212\267\275\357\247=\275\342D\027\275\2150\004\275\370:\017>5~\360==\315\313<\372X\316\275&,Q=Ei\034\2765x\021\276\201\213{\275\330\005\363\275!\235\027\276\334\030\027\276!k\366\275f\0201=:\341\020\275\207\034\353\275\322i\264\275\227A\214=\273\215\251:.\315)=Nq\372<\217\2514\276\222n\214<\314\241\025>\216M\t=\2459\333\275\253\357\253\275V]\027\276\200\310!>\314\235\271=m\223h\275M\205\351\275\346o\231=t\347\214=\216\311\007=\214\371\000\276\344\330\017\276\251\022w<\377`0<\344+\232\275\212\275\300\275\221\014\n\276\236\313\264\275\234\215\302=N\276\346=\302\257\326\275r\233\244=\270\216\265=\325\206/>E\275\027\275 \353&\276\025\322\343\275\222W`<\306\347\370\275\031Q\t>4<i\275d\251\244=\007\005\010>\224I&\274\013\306\253\275\335\372\313=8\024)><\237\231=e\025\315=;\300Y\275\331\250\034>v\377\242\275o\277\332=\253\330\022=\204\370\236\274\240\003\014\276J\232\321<\332\254\227=T\312\254=\300\317k\275\254\2504\276\261\221)\276\024\343j\274\236\316\236\275G\r,\276U\344\304=\372\207\337=r/\233<\304\355\030\276\273\335\265=\325\253.\275oM\360:\244\242\264<NA\206\275Q\264\353<\333\363\024\276\351?\323\275\206\337\362=\366\007\007\275\316\237\306=e\271\233=>\315!>\200\324\355=\357\271\254=\217\030{\275DS\024\276\206u\311\274\347\005\362\274\274:\267=\213\312\374=m\020\326=\331l\202\275\2141\034>3\217G\275\324\200\350=\014\277\005\276c\251\'\276\275E\201=\2745\030\2765\020\202=|\367\214=\203N\273\275i\341m=\225?\374=\260a\010>HC\372<G\370\035\276/\020\031>\361\222t=\314b\371=!X\221\275\215\201\221\275\324\032\277=Jv*\274\022T\247\272\025\027\"\276\360\350\'\276\245\031\245\275%G\001>\215\031\352\275\340\205i=\030\237\344=\321.X=\357\2654=R\301\">\307\010=\275-\'+\275\344\203\335\274\037}\357=&\014\322\274\264\214\352<\200G\262\2751Q\035\276ed1\276\376,%=\314\257\271\275\026T\327\275\357\330\310\274\206\000\232\274\352\277<\275\036\031&\276\300\247\025>\302<\006>\234\332-\276\242`\016\276\251\216\003>\001s\377\273\270Ib\275\200X\014>m\310\343\275<\316m\275\023\361\226\275[\001!\276B\035\264\275\346o\017>M\t\205=\343W\332\274\010\317\224\274\017i\262=\214j\001\276Y\303Z\273\326\'\332\274<\376\232\274\002\0253=X\037,\276-|\017\275\312\300\245=\024y[=\332\010\272\275\372\345Z=\303V\225\275\200P\t\275\0063I\274\310\272\t>\222l1\276\323\032\344=\246\213\374\275\350.\314=*\305\010<f\317\020>]\215/>I%4\276\t\334\367\275v\357(<\213\356\374;a~\024><\033M\275\004\365\234\274.\344\225=W~\354\275\324\013\355<\362U\275<Q}\203\275RF3\276\364\003\305<\265\345\374=\201\035\305\275]\323\252\275\204\301\341=\277\366\314\275\235\037\271\274\371\357\013>6\004\351=\010\353\r>\344\321\"\276\262\277\376\274M\223\r=\373e\343=.4\037\275\312\332\310\275$\"\037>u\035\000>}c&=\006/\216\275\333@\337<\031i\263<WW\000\276\312\254\274=!i\360=\355M\220\275\2762\345=\253\r\305<\217y/\2769\272,\276C\327\374\275\272Q\212\274\335i\032\275[\224\271\274\312\006\016\275\035\361\r\275W\300\347\275\264\206\033\276P\323\001=\365\253\232\274@\262\352=l+\225\275\027\\\340\275\027\374+>\360\323\355=r\000\030\276{\217\320\275\377\221D=\237\335\331=z\225\000\274\360\035\351=\022\333l=d\227\372<Q]\022\276G\212\243\273\342\t\302\274!\363\331=\312\363\345\274\022\221\376<\263\370H;~\263\'\276d\004/=\342^\352=\211I1=*3\340<s{\262\274\265\326\014\276[\\\273\275\256\024\002\276\247m$\276\222c\226=\215K\247<\373P\361<\223|\235\275\204\244\354\275o_x\275\211\223G=\237\3353\275\335+e\275\2037]=\025\362->-I\316\275\352}\022>\034l\273\275\212?\374<\230\264t\275\234\340\036>\351\203\022\275{\227\024>\223$\204\275\001\366\261\275\346\314\331=\224\001\347\274\013sM=\367\032\272\275\365\206$>O\212#\275\372j\354\275Z\370\001\276\023\325\245=\000\235\027=\002\3025=p\364\314<\234s\027\275\212\214*=&\215K\275\303\206\027\276\260\274\370\275&\025\020\276\326!\033\276\247\243\212\275\021v7\276N;^=M<\254=\254\321T\275q\255\212=\326\027\221\2756\000+\276%\257L\275\306Y\257\275<\235\226\273\305\352\003\276{l\245=4\025\311\275\236\001\230\274\234\000Z\273\030\252.\276P\267\246;9\236\315</\313\342\275\324nN\275\315\204 >\001\n*\276\262\216\035>\335\325\032>\273(\240=\356F\021\275\023\034\311\275\234\226\323=[\303\025\2768i\335=\271>\240\2750\225\007\275\3023\324=LB\033\276)[\262<2w6=9\252 >\236\327\222\275\214\232\003>\241 \267\275\336\214\254\275\356\252\224=\327\317\037>\026)\357<\320\007\014\276\327\253\005\276\321`!\275\235\306e\275$\315\320\275hF\263=@\242>=\372Dy=\370\023\220=\035\347\217\275\251\2703<\034\276\226;\305M\335\275\340~\263=\036\242k<|\017\260\275c|\370=\212\3710;k\006\355=\231\311\013=\240\241\016=\245\375\357\275\310\335\t<8\013\300<AI\273=tT\224<d\261\334=I\302F=\344\375\316\274\370\005\257<q\242\005\276N\030\316=\305_\033\276\364\000c=\026\214\237<\245(\266\275\365\226\211\275w\273\244<\370?\361\275\342H\215<\212_\270\275\357\373\303<\273\323\370=\324\235\014\276\024\273\201\273\033\357!\276\262\026\254\275\265\033\013\276\205\326\006>A\000\266\275Nw\t=:\005g\275\365k\307\275\231@-\276\222\033X\275Z\306P=\330L%=\273\226\000>\034\371Z\275\200\207\003\276m\375\031>\0271\305<\205\334\027\275\225\236\332=\010A\230\274\375\274\354=l\251\371\2743\211\000>c\260B<.\247a<\030]\241\275 \2666\274\017\037\016\275z\350b=\246\271\366=\201\247\315\275\326\262t\274\334] >\242\234q=\314|\326\274\351\367\211=\246M\n>\255Q\032>\345T\224\2754\200\234\275\327V\213;\321\3412\276{\236\247=\230\344\020\275Y\332\017=4|\345;\214\271\002\276;\234\"\276\3710\000\276\312:\237\274\310\374\346=\nT\304=\277\373`\272@\210\t\275\221\210*\276\013\340\222\275\203\333\220\274:\364\016=\004\234\304<\214\255$\276=:\027>(i\322=%\366W\275\020\024\254\275\002[\025\276\2271\375\275aU\335=\314\242\203\275\345|\245=\304\373\324=\020\371\"\275{\217\007>\213\205\n\276t[\230\275\204\203p\275\021\263\023\275\\\243\254\274\316[\025\276D\311\023\276\013\247\303<\030\325n=\376Y\265\275\007\353<\275g7\005\275\003J\037>\373\231K\275\203\247\222\274O[\021=J\304\021>[\221\002>{\335c<\341\267\276=d\217S\275\300H\252\275\221\363]=\303\250)\276\273{\223=\202}\217\274-Q\324\275\333\357(\276\353\344\014\276\333\330\037\276\231\350\022>\217\250\226=O\033:\276\332\377\273=\257P\021\276\272\272Q\275 \020,=\230X*\276\336\010\t\276@\223<<7\225\017\276\177\257\342=x\\\031\276\037T\230\275#\374\272=\030\370\367\274.l\324=\273\265\016\276\300\251\025\275\222\346\'=\376!\021>\2601\320\275\222|/\275\201^\265=JA/\276F\214A<w\260\275\275\022I\330=\361X\255\275l\304\215<\003\373\202<\345\316\335=\333\026\355=>\331\302\275\371\010\226=\262>(>\331O!\274\217\206\275=\303@\330=\355J\200\275,F\235=\223%&\276n=R\275>\223\201\275):\210=\204\003\255=\014\327\303=W\245\223=\213R_==]\'\275Z\004^\274\222mL\275\222N\270=Z\343\036>\360?\226\2751\\\361=}\251\031>\360\035\n:\033\031 >\353\037S=\340y\037>\337\272\322=\321|\n>`\331v=\346H\250=\034AU=\356\367\271\275ElJ=\346\263\026>\311\211\263=\373n==$\332\035\275]\021Z=\020\226\232\274\360\r3\276\032\000\222\275FL3\275+\034\'\276u\215;\274\354\312\224=:\367u\275\253\340\031>oK\230\274\325M\275=\355S\372=\301\346\266\274Q\316\225\274\252S\026>)\315\006\276m!\344=\375\022\342=\022\306\374\275\036\030/\276\005\233\026>\200\022(\276)\033+\276-\200\031>\0304\317=\220\376\325<\264\274\032>\343\314\001\276~\255\014=\260\365\000\275l\337\037<J\033\034<\264\236\226=\211\253\025>\371\342\331\274<qU\275T\270#=\265\354\324\275\2641\344=\000\206#=\202\260\371\275\330\030\302\2750\215\327\274B\"\377=\260\245\347=/\277\210=\274\327,>\237\305\017\276Y\366\021\275\200\210,>\352d\030>\252\2208\276\356\250>=Na\026>\030\013\007\276\210\350\371<\201!\346\275\316\244p<\261\301\010>\306u\014\276\222\231z<\'=\200=\3409M=\234N\340\273\035\211{=*k\022=&\357\035\276C\241\030\276T\006\030;\372\211\244\274\371\276\303\275\000\341#>\017\266\311=\240!\331\275\227 \360=\245\323\346\275\037l\033=Cq\231=\2020\n>\006\2362\275B\213\033\276{\177\370=RX\210\274\230\353\207=\212\315\310=\374eg<\303\373\247=\354:\031\276E\035\">p\265+\275__$\276\032\274\247=\317Y\234=\222\332W<\231~\215=SS!\276e\226}:\314ao\275\032\317\256=\365\311\346\275Le\'>?R\\<\314\375U\274.H\'\276\024o$\2751\266\266=s,\206\275@{\032>A\035\365=\262\204{=[\025d\274\200\243\024\2759\240\315\275Z\244\222=\266\326,\276\364\337\217\274\250v\225< \005\n>\325\364\317<P\323\233=ib\027>\313\2379=\315\304\270<&\025\323\275\000\270\277\273Z\237$=\263f\302\275\2235\265\275\274\020#\275\200\310\027\275$\014\371=\205zi=\2567\310=!\203\005\273\310\377\257\275DJ\347=\036\261\370=\033H\355\275F\203\031\276x\005X=!6Q\275\232p(>o\331\366=\350\324\006=\303\204\007>\343\322\230=\314i\343=\274[W\275\350A\033=\314\314\014\276k\327\263\275\226|\362\275m\306h\275\345\237\200=\010\321\244=\210\345\251\275a\354\250=\223\237d=m\352\310=\333])>op\241\275\"g8>\261\033!=\261v-\276\220\t\373\275\212\245\006\2769@9>\212]\363=\245\313\'\276\356\261\363\275\004\374\262=\241#\014>\363\256/=tYQ=\r\255\003\276\033(\021>\353\225\033\275\257g\232\275\323\377\315\275\214J\300=7\363^=\'\3157\276b^\035=\240|x=\022\373\027=t\356\213=Q\371\010;\241\273\302\275^\024\272\275\361>\036\2762x\227=C}<=\000\343+\276\200\333\304<^\304\020\275(H\002=\255\343.\276\262\300\033\275\242\266k<\255\345x\275\001>)\273^\212\r\276x\014\361\275\262\006\017>\365\007\367=\237\343/>\024\021\346\273\227%\215\275\312^*\276\250\024\344=\262|\307=fp\351=\027E-\275\333(\363\275\311<\204=\210\355\327=\244\377q\273\242V|=e\020\232<v\215\026=\347y:\275\017)^=j\316)\274\354>\">P\337\210\272q\331i\275\305\0028>;\267\021\273\360\032\033=\332Ml=$\202\202<\217\306\r=D\270\212\275\355r\373=*\031\251=\301\276\337=\252\0272>=s\221\275U\317\333\275\361`\261\275\353-%\276\031\000h\275\002\216&\2762\223\341<\010@X\275rt\\\272@\3172\276\367\357.>\035\034\026\276\036\275!>\262\205\201=>*\017>\006\353i=h]\025\276a\364\202\275\261\345\315=\342P\206\275e\020\r\276\332\024\353=\304\002\242=\226B\302\274\267\310`;\352\223t\275\004G2\276\263d\303\275J*\373;\376\004O<\223{+\276\027\216\230\274\310\353#\276\010\020\025>\013\2215>u\337\030\276\027g\324=\260L#>\326\346\351=\002\006\000\275l\031M=\332>\315=xL\347\273U\217\326\275\002S\347=\302\210d=\246P\376<\004^\246\275\002X/>\306\343)\276c\351\253\275\023\333`=\240\371\302=g\004\025\276<?\301<\260|r\272 \363\213\275\005\271\024\276\024\333\n\276H`\'\276\000A\314=\013q\246=27 \276\324;\311\274\322a\260=\241l\275=S\226\305=\202\376\364\275\215W\n\276(f\223=\2154\372\275\264V\222\275\212\214\030=\276~\020\276|\276\023>\014\366\014>\347\030\355=5\322\013\276S\216\010<\345\017\344=\214\322\302\2755\320\n>\365b\344=\215\260a\275\026\326\014\276\216c\310\2751I\211\274\311\201\210<\353\247I:qB\250=\370|,>#\240\331\275n\247\277\275*\r\315=\243\323-\276ir\376\274z\027\254\275\177\275i=\341\230\255\274\237\r\377\275c\326-\276\261\016\341=\315\342\254=\276\"\355\273\020\2641>\245i\020>\037\322\270=\240\315\023\276\014\330\256\275\222\014&\274S\027\330\275\356\370\253\275\342\301.\276^m\227\275y\265\331=\322X\251=\360\272\255=\241;\t\276>\303\023\276\330\023?<}:[=\243\356\026\276\202\3711>%\370\037>\325\363\227\274\262\244\226\274\273F~\275_\206+=\234\340\t\276\006\234\337<\344\236\005\275V\325(>Owi=\272\003<\275^\256v\275\240\276\243=m\3376>\377\373\322=\361jz=\006\344\316\274\346\r\020>\247\323\034>\t#1\276\347\3632=h)\374=\275/\232\275n\245\301\274\273E\273\275\371eE\274\316\030,\276\3359\200=\322\245\303=RT\221=\304\302\333\275<\r\272=\361\211v\275\244<x\275@\326\n\276\303\260%>\206\247\036>\373i\022>\014\005\306<\275\262X<\000\342\021\276\215wA=0FC=,\250\370\275o\337T\275\272\013\244<\361\362\365=\265\341\230\275\016\034]=:p\274\274\227&.=\271\314a=\257\2020\275\024`\370\275s\315\313\274\006-f\275\000)\307\274j\356\251\275~\032:=#\016\325=\3260l=\243\217\230\275\340\305\">\371\331\033\275\215K\275\275n\257\351=b\014\006\276)X\252=\226pi\275\262\272\306=\247\3416=\232E\031<a/\001\276\\\211\321\275~Z\205=\306\310->X\233?\274ED\000\2764\374\347<\330\252\t\276~\327\004\274\0148\336<\270M\261\275\246g\320<\300\002\344\275\371\354\347=\350~\205\274\227\263\016\276\334p\302;\324\231\004\276\321G\371=\300\364&>\321\"\260=\261g\025=\234\317\230\275\261\033\231\274\351\202\273\275W\036&\276\3365\316\275f\367\034=x\253\345;Yo0\275\364\340\206\272fy\002>\305c5>\365w\030>e\315Z\275\266\036\005\275\357y\337\274\023\005-\276\257\265\001>\207e\277=%\177(>\310h\302\274\023\206\025\275\221\022\204\275\225y\206=;\027\211\274f\322\001>\250X\004\2764\357\266\275*9\334=\340\205\027\275\321\177\250\275\264V\373=\005X\330\275CZ\265=\300\327\003>\t\353\226<F\367\353\275Z\005\335\274\305\\+\276\r\000\236\275\032\031\302=\221\266\006>\254\274\376\275p\2218<1\372\030>\025\251\344=\221\370\244<f\352\224=I\220\003\276=\237\006\276q\000\266<\313;\347=\376@\'\276X\336\002>\24331>\216\352\231=\004/\026\276\2122\277={9\010<{\035\004<\226\307\032>\035\'\364;\030\207\277\274\316- >\020,\342=d\204\202\275|Y\272=\352\333\220=\276V\232;\310\300\000=\342\355\252\275\243\325\357=\271\221\026>\002\303%<f\336\374=\003\026\230\275\271\230&\275b\003\r=\333\312\330\274p\312\322\275pQ\222<\346\341\020\276\374q\354\274\314\320!\276\271J\006\275l8\335\275\306[\257=\277\020,>\3561\013>,\326\364=\373\"\022\276O%+>\354>7>\255\263?<^\376f\274U\'R<*Y\222;p\201Z\274\031\325\t=\227\312\210=\200\353\241\275\246\310\336\275\240\350{\274\321\016\010\276p\370<\274\241f\331=\224*\005\276s\303\007>b\307\276\275\276-\312<p.\316=\254\245\003=\024\357\035\275c|\366\275\003\342\274=\301C =\273\320\005\276\212\0271\275~\230\006\276\251v\t>\016\365\325\275\225[\240=\263\372->\371I\346=\014\357%>_\237\'=m\226\">\\8\234=\247N\035>\224P\007\276M\026e<Z\257~=\233|\350\275\205,\036\276\350\376\000>BUh\274\377\320\034\276\353\177\345=\214\353\333=\265r\351=\370\220\017>\253-/\276\332\305\365=Z\243\242=U\367\372=^\367\301=\202\273\370\275\"G\277<\2367\272\274j\030\377\274\366\032\253\275b\323Z=7\021\300\275\235\371\241=K\260\t\276\206\265\006>\322\320\016\276\224\200!=f7\334=\3335\006>\2305\031>\373v\014\276\001\356\234\275\021\352\227\274\r\300\323=\3439\t>z\324\255=\006\204?\273b\023\016\274ZN\220=ob\302\275\234\010\355\275OV\247\274\310\355(>Zv\221\275\355\316:\275h]#\276\362~\242\275@\213\355\275\374\343\373\273\374b\276=\n\237\215\275\3063&\276\267\343\">\377.\211=\211lK=\331wL\275\370g*\276\333\244\364=\264$\367\275\370\336 =\252\245\214=1\243\007>\320\206\270\275[M\353<H\332\305=\231\355 \275\021s\213=\205v]=\306k\001>\314\333\344:t\n\216\274ZK\266=>\317\254=&P.>\300\364@\275\227\241&\276\250\365\351\275\304@7\276\020\266\331\274\037Y(\276\217o\247<:\245\346;:5\235=P\223\263=Gi\321=\333\233\226\275R\017\010\276\210\027\310\275f3=<FF\201=\261\n\t\276\373\245\345\275\373\034\013>9\271\017=\227\343\244<\3331\317\275\202\316\017>\010\231\245=\273\312\201=\355\324\031\276SM\357\2758\256\265\275\261\221\016>\324\343\362=\204y\303\274\333\251\362=\030P\204\275\275\235\333\274!8\277=Z3\033\276\247\007\031>\265\221\214=\2157\032>F\241\031>\037\365\235=\235\272\252=\225\272\200;\031\255.\275T\031\351\274s\263-<\225;\264=\266-\252=\266\277\274\275iH\227\275\025\262\014=\332@J\275\200\312\240=\010*\276<\353\377\260=\270\027\233=\325\004$\276\271)\322\275\226\365\032\27619\344=\025(\024\276\251\307\004>\nv\230=\351\300\342<]\337\235\275\215Vv=\320\300\223\275\250\243\353<\347\351\010\276"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "<\036\223;\256\352\223\27345\242\273\3642\230;\260\232\237;o,\210;\nS\023\2722tr\273\002C\240\273\231`T\273\224\346\241;\376\305n;\"\214C:f<\224\273\340\256\366\2726\350\243;\016~\350:nm@;\360\003\237;H\215\243;\214\242\235;\354G\213;([\267\272ZmE;9\341\241;\026q\241\273\000\277\242;\276\222\201\273B\016\242\273\252\343\212\2725\033\275\272\251L\241\273D}\222;`\353\227\273\0220\242\2732^\234\273\330\212\027;\344\240J;}\241\221;\2628/\272\221\030\304\272UF8\273\321\016\003;\202\307\222\273\233\322\225;Ag\232;\007\t\323:\270\301\242;\363\246s\273Pzp;/\360\243\273\332\273\242\273\274\245\231\273\203_\243;\374\264\316:\376Ux\273aK\030;\236\323\030;\233\324\237;\026\212v\273\263\273\243\273\330\2249;\215\303 \273E\327\004\273\030F\226;\303\226\232\273a\224\243\273\333\262\220;\001u\243;9\316\216;\220\314\243\272\300\212U\273\332\210\237\273\255kc\273\2503\241;6X\222;\242\3119:\350[\224\273\004\243\t\273\300\273\243;\224\325\020;\230\225\222\273n\352\243;L9\243;\235\267\226;I\317\200;\214\253\364\272\261\272A;&\\6;\360\014\242\273\255\340\243;\245\206i\273\303>\222\273\024v\227\272.\203\312\272\026Q\240\273\312Kz;\353\270\207\273l\330\243\273\231\204\230;\320\004\242;\374\354\017\273\276\001B\272\252\330_\273\363Z\235\273\n\277w\273\347\374\242;v\317\242;\302\202\217\273X\203\240;u\241\361\272\270\236\243;$!}:\230(\233\273v\326\362:!F\000\273\\\324\226;2hd;\rNN\273t,\026;\002\253\243\273\3449\242\273D%\260\272\033-\207\273\374?\311\272[=\007\273j\312\275\272\305\361\241\273"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "=\235\257\273\243\031 >7k\033\275\316Z\254=\354\006\006>!\002!\276p\227\023\274L\256F=@ \277<b\'\362\275\362\374\213\274\037\324\237\275o]\020>\213\302f=\311c\312=\314\005\r>\303WS;m\0161>\002^K=7*\317<l!\022>sq\362=\351\212\356=\362\216u=4\263\222=\006\021\374=\223\020\354<\353W\256=7\241\n\275\237\204\020\275\n\010\261=t\025D\273(\276U\274\211\003\310=\3706\201=]\360\211\275\305k\301\275\357<P\2755\202\314\275A\367\031\275\221\273\025\2766\321\027\275\324\226\344\275\214\004 >G\237\035\276g\016$\276\370\204\302\275\227A(\276qp(\275\263ZC<\377\211_\274\004\324\323=0\r\017\276\014\202\335=\032\035\306\275~\333g\275\036\235&\273\352,\270=WI\375;h\034\331=\372R\001>\\;\003\275\021pD\274 \232\033\276Q\241\300=\361\273\374\273\307\270->\260\264\003\276w\313\005=\304E8\2764%\237\275]/#>\253\266\"\276v\201\r=X\270\367<\035\033\321=n\214\303=H\266z\275\373\302->o\0020\274\036\363&\276i\001\320\275\252\027\371<\014=\241\2753\224(\276\312\033-\276\375\374r\275r\310X\275\360\230\000>i\177\031\275\362\016\305=\026\"\223=\261\273\211=\363\306\324\274:\272\335\274\205\271 :k\t\252<c\305\323=\024\201\313=\336\000D\275\025\321L=R\006]\275V6\255\275\373A\235=\311\307\034>];\035\276\223\r >\355\361\002=\"\204\\\274(X\324\275\277n\223\275\213\004\242=\277?\317=\205\240\010\275\336\025u\275\223}\225\275s\224g\275\030)\'\275\231(*\276\027z\344\275,\325t\275\341\216\036>_\363\035\275\330* >\355\270`=4\244\021>\223\261\221=8\202\002\276%\233B\274\333\331\235=j;&\276f\244\r:*6\033\275\366\334\035>a\337\376=\262T\202\275\031\2450\273\220\247\237\275\233\300\002>\344\354\033\276\225I\025>\232\242\213=\336\2046>\r\213#\2769_\206=\022\302x\275\031\272\364\274\207\'L\275\230i\311\275!z$\276\276\n\242=\265\351\371\273\264\362#\276\243\355y<\340R6\276Y^\">\224k\016\275\274L\200=\275\023\335\275(O\363=\301\315\027>\202\207\250=+\354U=\266\226\022\276\360\267\037>\337d\005>s\365\204=\231\300\314=\2231$\276\247f\325\275\365\342#\276\247\313\031\276\234\241w\275\206hd=\'\t\221\275>m\t\276?6\317\275\312\n\027\274\203>\224\275\031%q\275L\030O=c\201\014\276\352>\320<\t\210\035>\272P\221=\202\017\033>PK\021>\306\332\301=\252\251\214\274\331\237\233\275a\373\346=\265\301\357\275\021\310+\276\273\270&=\264\3225\276C\032\023>NS\r\276\303q\351\275N\252\242\275\241L >\334\262\251\275\005i\377=\031\347\222\275Uh\023>\271\002#\276B\360\025<r\2330>v{6\275w{\354;c1\334\275rT\027\276\361\376\270\275L\262\020>\234\361\'<\016|~<\263C\363=\371\2045>\224\310\254\272\264\231\034\275\236\210\037\276F\373\225={\024\276\275\202\311\265\275\010B\325=\230oG\275r\333\375\275\3157\320=\024\203\343\275F_\375=y\rv=\321\366\364\2755O\206\275\217q\306\275\013\366\276\275\340\320\327<\3606\002\276\031D\022\276\303\336\263\275\213\257\307=\320G\331=\274\222\334:\327\331\256<\031\315O=.\003\222\274O~\331\274\013`(=py\002\271I\337\034\2768\301\024>\200`\017>\252Y)\276P\233+\276r\227\204\275_\376\026\275\375\350\362=\314Mh=)\372z\275\343\315\256\275\254\225\036>\327\275\010>\250\204\224<+)!\276b\377\014\276E?\003\276\204\000\177=\245\016\025\276\257\217-<e\263\304=\227\304\306\275^\276\205=_[\033>Z\313\366\2743Lt=P--\276Z\027\007\276\243\270+>3\223.>\"&\317=\352\251)>\2620\003>u%/\276Kd\304\275\275\251g\275\022T2>\375\354\277=jl\327=\230\243\361\275X\0136<\246\277{<?/\356=\251|\351=P\261\266\275\252)\036>\312V\221\273s\0329\276\006\271\360;g\217\034>u\014\227=\367\313\266\275Lj\235=\032\214\017\276.N$\2752\310\255\275\220\345!>\013\032\t=\252q\266\275\372z\215=t,\276=\216Rd<\234\310\264=\271\275g=\315\026\302<\366\242\005>9/\344=\021v\\=C\r\375\273\220\367\326;y\037\027=\363\031N=&\337\n\276=\275\333=}\350\277\273\371J\363\275\371\224\327\275D\203\355=\217\333\014\275\272$\333\275<\325\366\275\2104\270=\266\322\t\276\rH\333\274o\221\032\276\220\200\323=D$\265=uR\266=\352a\004\275\234\266\305\275:\207\316=R9<\273`T\307=E9\255\273\276^\">\035dw=\000\267x=[4\237=\367x\035\276F\246\221=\327{\002>\006fH=3Q}=\251\025P=}o\227=X\256\360\275\016\006\337=\022\025B;\252\347\261\275\225{\035>\027\020\005=\234\230\353\275\033\343&\276|\021\221<h\001]=\221_\036\276\271\327\352\275\030\301\002>\013\314\n\276)\371.>\354\036\340<\321\212,\274\274\244\343=\357~\225=\365\334\223=\373\200\001>\373b\344\274\253\232,\276\3508+\276\222i\020\276\315G\227=\224R\030\276\321c_=\005\224\034=\036?\n\2762\351\215\274\374\214\325=cE\234<\031\032\266=\340.\326\275\276\226j=\357\003\271<5\323\031>E\312+<\t}\034\276\233\347\247\275mH\216<7^\243=\235\357\022>@X\033>\305\016\252=\020\340\035\276+!\016\276\206\256\362<d\277\256\275\272\272_\274\302\3661<\304\305#>\351\254\006\276_\226\361\275g\237\005\276\225m\306\275\\\007\224=N \'>\256:\241=X9,\273\035:\017\275\336\343#\274\311\216\337<\377\263%\276\204\356\207=\337\215\375\275(\350\301\275\004-7\276b\252\r\276\321\370\367=\240\'X\274\346\265b\275B\r\035>\t0\303\275H\312\254\275L\036\017\276\326J\027\276\340*d\275\363r\207\2753\205\216\274\375\0278\276v\272\'>\n\361\035>\211t\376;)\013\371\275\322\327\365\275Z\250\341<x\361\305\275\333\346\304\275\037R\275=\245\r\341\2754\365\017>8\200\243\274bd\023\276\347\350\225\275:\036X\274\202N\020\276FZX=\027)p\275[\203\344\275l\345\017>\317\336\267<u\333\350\275\362\025&<\344Y\265<\025~\262=\204N\005\276i\323\035\276\313\005\370\275\301\226\010>\236\314\005>\177\240\222\275\317=\001>\243\035\331\275\376\025(\276\273\200\365<\007g\004\276\252\265\303=\327\220\023\275\235|\265=JXg\275\357\205\\\274\276V\034\273\332\322\375\275\202\3239\2766\230\252\275\212+\013>\263k\341=\2179\224\275\334\303E\275\\\317\237\275\377lU;c\267E\274\323\206)\274\302\213\367=dQA\275xo\300\275\307\342\355=\'\321\361\275V\010s<y\326F\275\345y\t>\250\350\001\276[M\305=\2611\214<\323\366H<>6\377=\311\204F=\206\2753\275\322\204R\275\344\264\003>\230\354\325\275\324\353\270\275y\313\000>x.\370\275\002r\366\275h\362\030\276\204*\372=\344q\t\276\257x\004>\313\010\251\275\034\365$\276\216\021\034>\312\213\023>\276\362\356=\013M\276\275\200b\277\272d\177\351\275\316\204\223=\245|\351=u\243\033\274)\207\014\275J\022\001>\320o\3539\331]\'\276\341\266\364=`\024\252\274#\255\354=\330\n\302;\317\202\t=\013-$>}*\377\275\304E\215\275\027\231\251\275\023\270.\276\010\332^=M\026\332=1\2422>\341i\312\275\023\363%\276<\261\n>\004\247^<\032$\305\274Y\232\035\276\253\2732>Ii\215=zd\356\274.i\002>!\231\020\276g\200E=\3414\235=P\333\030\276n7\263\274\266*\243\2750\251T\275\370\371\324<H\204\216<\242\346\025>z\0077\276$\310\311\275k2\262=\277) >\362\223V\275OV\376=\230C\371\275s\370\031\276\371\255\204=\254\003\300=U\3147\274\366[\356<\216\227\177<\304\030*>Q\223\030\275\274@A=L{\330=\014\364\241=\364\276+\275\021}\202\274\203\352\032\275\306\355,<H&3\276-\331\225=A\267n\275\324\373\001\275\2427\252\275\004\016\216=\200\030\013>\212W\304\275\nW\006\276\221\240K\275\010\374\377=P_\272<g\214\r\276\325\212~=\373\177\032\276\344\255\270\275g-\336\2758N0\272\323\247\001\276\263\373$\2764\374\204\275&\265A=\035~\260\275\375\003\343\275daU\275\014\331\320=\237T\000>\261W\361=\370\206\007\276\364\356O\275\364\034\304;\031v\257\2757\337\324\2741\275&\276\325\031z=3\242:\275\000P/>\322B/>\025\251\227=\262:\n=\340\311\t>~A\305=\024G\214<\032\024[\2753lu=>\231i=\256f\005\276\026\366\356\273\327A\t\275\341L\200=\17714\276\005\347#>g\374\377\275G\237\204=\3379C\275s!\004\275\331\315\033=\212}\021\275\211\352\320=R&\257;\'\237$\276\357\'`=R\025\364<!\210C\275}\245\004\276T\320\241=\004z\366\271\303z\317=\322\324\017\276\240a\240=\271\010\261:\320u\236=<?\314\272q\207\n>T!\322\273\307M\210\274\3170 \276\016\3217>\335\301\034\275n)\276\275`U4=\311A\006\275\020\261+<\024U\317<k\001\212\275\334\360\253\274\313O,\276\344\335;<\362\342\025\275\250\222p=\277\375\025\273k6\'\276O\235\367\275\345\"\340\275\277+\220<\324\377\020>\370\r#\276p\251-\276d\271\024>\321B\014\276\274^,>;\3249>KX\024>\221\236\342=\266\215\362\275Y>&\276\330\205\\:-\nk<\223\2626>\030V\001\2763L\027\276FR\003>\325q\334=\022\303p\275\032\320:=]\201\365\275\350\366\020>s\020\034=\216\326b\275\367DP\275ov\247\275\345\376\t>\\\345\215\275\307\217\032\276\305\021\243=\223>\236=I\251\032\276iF\'>\204V\024>B\215\322\274>Q\255=\231\243\374\275_P\245=\362\302\225\275\373\340\311=\313C\344<D\023\">\202]\020\274\254\340)\276\335\234\330=\017\233\003\276\304\213 \276~t\013\276\300{\264\274~\251\014\276\312\221\302=,\375*\276\352\316x=\205?\002\276|b\022\276\022\366>\275o\205H=`\204\215=\246\325\014\276i\327.>\2611\350<\317\367\351\275\201\355\350=\323\213\214=6S\'><)+>\336\\\000=\313\250\363=\351\025\227\275\360\323\331=\274\177C=\351\001\004>\240\271\003\274?\001z=\205\247#\274\250\030\264;\230\2127>\234\325\020\276zy\022\275u\027\240\273\222\330\323\275\3456\273=\361\321\n\276\233x\367=ti\023\276\260\024a=\253\356\205<I\025\251=\022\n\262<>f\345\275\226BI=\370C\025=\324 \t=\203\t\345=\027\257\222<\225\366\201=2\310q\274\361\021\227\275f\237)>\314\004\365<\324\344\262\274\275>\302;y\330&=a6\017>|\251\017<|\000k;\234\367\031=Z*O\275\026n\036>\226\336\027>Ul\031>p\301\"\276C\313\246=\260\177\365\273K\325\036\276\366\237\320\273h\364-=n@\325\275\205\201\275<\300\307\026>^\200\023\276\245\016\370=\333O\034\276:\357\013\276\027+Q;\256\335\316\274\241\330\001>d\036\023\276\350\271\344\275\306{{=>\'+\276\321e\\<\270\265\3768\201\272\263\275\307\267\237=\'\261\003>b\314,<\237\300\030>|\347\313=\311[\204\273\033\217\026>\"\366\355\274\314\206\317\275\234\002\367\275{\301\346\275\225)\265=Q?\331\275\020b\332\275&gs=9\251\023\275r:\246\272\272\266\r\276\242\3728;\214\245\314<\315\203\360<\360\216\370\275\274\332\337<\303\300\276:K\220\321=e\321\252\275\0268\354\275\'fi;:\347f\275\353\005#>T;t\275\347\207+>\327O\344\274\365\374\351=\202\305T\275\346\347\022\276\023?\314\275D#\372\273\027\003I\275>\013%\276|\371 \276Z2K\274\332\316\037>a%\231=\375j\265\275\365bF=\202>\226\275\212\022b=\362Y\307\275\006\033*\276v\253\211=\003\022(\276(\363)\276\351Q|<H<\031\276\'8\236=\260\032\021\274\243\303\212\275np$\276\017\255\276<\203\224\363\275\346P.\276\375\345 \276\340)\323<\036U{\275\023\026\026\276?\325\'\276\031g?=\003I\217\275[Q\354\275\372g\010>\210m*\2763\255\261\274\2507\014=2\034\274=\306\235^\275\265\207\215=\323\251\237\275\214\006)>y\345\370=\200b5<\206\261\227\275\332\333\273=\253\214\002>\277\223\331\274G\225 >\'\014\272\275\313\0241=\351\235\257<\214\371\206\275:e\237=s\204\336=\007\227\243=\242\267 \276l\"\023=^PN=\013@\t\276^\215\361=A\245\021\276\270\"\004\276\223\2302>]\2419=\373M7=\326\023Q=\306\035\201\275\335Oi<\264\"\256\274\244\252\026\276\247\273.>]\220\240\275\037P\343\275\265x\375=\327\031o=t\262\250=\016S(>=\006.\275FL#>/\361\220=\217\027\356=\341\316g\275J\230\027> \277\371\275\372\340\335=\251 \347\275Uw\265=\021\203\274\275\035\232\n>\023%\242\275\023\361M=3\343\342\275\306\337N\275\230\237\260\275\003t\353=k\351\212\274\235\245&\276s\320\317<_4\030>\271\376\004\276F\257\001\276\353\331\017>\033\304,\276\332-\306\275\356\036\227<r\356\301\275Z\230\036>\355\r\200\275\023\350\325={\262\225\275\242>\244\275\353\345\326=}\025w=\036j\242=\363.\342\275\001\217\037\276\262\262\023\275,\320\263\274\360\013Y=#i\232\274$\203x\274#K\212\275\263\315\232=\373`\345\275\027\352\'\276\331@.\276[\233\377\274\312\005\020\276\374\034\265\275,y\223=<g\261\274A\360\">\211\237\204\274\362\325\360\275\256\321\t=\005\245\014>R,Q=\321h}\274\307\250\325\275s\245\216=\373\252\322\275\207\367\033>\016\334\023\275uC}\275\362\300\364\275\271\231L=9\236\221\275\301\326\302\275\326g\t\276y\036\'>i\3550>\'\022\334\275W\217\'>\201\253\037\274Jh\020=s\210-\275\217\342\324=*\314/\276\330\213\367\275\21556=\340\263X\274c\0002<~r\005\275C{\246=\274\306\267\275\354r\250\274\242?.\276\000#\265=V8\277=\357\233\021>\347\213\354\275\332R\362=\250h!>y1\023=\251\231\033\276H\272&\273\277\333r\275^\364\034>\257\307C\275\260%X\275g\272\030\2746\314\334=D\254\031\276\277\262\020>\337! \275\205=\343=\0042\356<\356\260g\274\024+\034\275\t\301\274\275C|\005\275KO%>\241\252\030>\240\374\331\275|\263!>\350\301\026\276Q\276\001>\2714\266\274\372\237*>\315\230\251=\301=N<\304E\222=\014\3164\275\024M\025>!\274!\276=\264\251\275\217k\315=\'\274>=\322\261m<\3110\240\275\351\020\003\276jm\217=\211\363!>\230X{=CW\211\275g\250\215=8\r\022>\325\337\006>p\010#>\022\031\254\275+\177V\275\036f#\276\363\330\004>\250\027b\275\247\017\262\275\001\321+\276/\276\010\275\263\256\023<\241\275e\275\346\226\261<\204J_\275l\240\002>\350G\035\275\223]\n\275B\352\034\2752E!>\305,\n>}\036\356\275\325h\274\275\230\322\231;Z6\314<\361\251\013>\323\016\274\275\357>\302=\022u\017=s5\306=\025\205\306=:\020\327=\331n\203=&\025%=\276m\254=B\374\261=\005\225\r=)a\034\276\211\234\304\275\271\n\033\276Z\367\226=\375Z\'\276\244:\357=!\277\246\274)\211x=\272\265Y=\250^\n\276\242\337\336=Q\245\232=\036*\221\274\1774\362=\370\301|\275\256b+\276\206\3651=nJ\324;\272\177\376\275\016\177\375\273]8(\276\240 .>oR\206:\"\024\022>\204\346\037=\2442/\275\007\301\317=\004\350t\275\300\307\036\276(\017\004>|\322\n>\300\355\327<y`\320\275lk.\276,\310\260\275\206\343\231\275/W\034\276\311\007\322\275G\254.=\376g\027>5d\233\274B\243\276=\200\2611\275\222\3405\275\366\217\033=YD\035\276\001\353\032>=L{\274\021\233\030\276\313\267~\2754I\030=\366\0357\276(8\303=\004\314\211\274\032-\376;$-\022=\221$\017>\325\362\026>g\360\274\275\316\362\235\275Y\021->\310\337m=\337\214\361=\245\322\372\275\001\247\304=\302\311\360\2752\"\250\275X\252\361\275\033\213\306=58\021\276z\010\275\275\370M\010>o\376\323\274d\275\365=-/\003\276\242\021\037\276mm\007\276=\276\'>i\3635<\365\021\036\274\324\2500\276H\006\254\275r\345 <\242\331[\275N)*\275\361\t\034=G\014\004>\266jm\274O:\265=\024}\\=\201\027\260\275\305`h<\017\344o=\370V\001\276\373\304\324=Z\350\r\276l\277\'=U\343\030\276\371#\n=^H\361\275D\355?=xs\215<\016\r\023\276\245\252>\275\0235\305\275\t_\232=A\347\330\275\331\023\200=\024\022h<\314N\364\275QS\026<\202w\306\275P\337\305\275\333\223\306= \277\327\275\374\213&\275\375\205\262=a\0236\276p:\243\275a)\244=p\214\326\274U\231\n>\005\037\234\275\200\346\370\274(\342\277\273\302(\021>\373kt\275\025\341N<\327\300\262=\245\301\010><3:=6\250]\274*\017*\274\370\373\344\275\025\242&=\017\272\320\275\263\213\007\276H\006\255<\2259\264=\324ut<`\362\261<\252\306\355\275\334\007\330=~\374g\275@\340\004>\014MX\275\311]\007\276\016=\263=wt\017>*\310\365<A\177R=\'V\332=zL\203\273\231z$\2760\232\302\275\227\272_\2751\263W\275\330\236\361<dW\357=\276\372,>\260\246\220<\265<->\257\263\356\275\336I\r>[X\024>O\376A=\303)_=R\022\t>\373\275`<k^&\275]y\024>\026C\r=\006\020\344\275\250\024\034\275B\245\277\275k\234\316\275Ql\277:m,\030>\2571+>\337\232!\276oi\017>9_\030\276\247\313\305=gp\335=3\343\306\275\270\212\363\273\022u#\276v\201\006\275\364\373\336=\2012\272=\031\260\351\275\341C\272\275\031\'\241=\274\242u=\243*\326\274\026F\001>W:r\275\344\227n;\211\216w=@\r\264=\202\220\352\275\262\005\357<&\234\357\274\363zD\273Q\352\356=\032j\020>\032-o=\3179\354\275D\270\007\276o\0311>\242X\333\275\3008D\274i2\256\275\316|8\276\212\202\356=\001\236\255=\360\001\027\276\001\344\216\275H\266d\274\334\0036\276q+\271\275\213m\240=\217,\335\275\334|\344\275\3053\013\273,\234\237\275\264\356T=?\024\034>L\325\016>\326\"\010\276\334m\013\2765)s\275e\324\r>\341\272\375=/Y\322=\213P\031>\2643\024=A\037\316=\n\025\370<u\001b\275F\232\016\275\272q\354<k\001+\276\0273\266=|\272\327<\323@\024>`\200\023\274\207\226\034>c\204\267=\357\341\032\276\256\213\024\276\345\337]<\247\326\351\274\2656\t\2766\'\346=\232^\247=\311\373\243\275\304*\356=\253f\260=\272R\001>\3340\023\274d\343\231=\322\356\034<~*\'\276\314\250\340\275\352\346\241=ME\225=\354\365u=\034Y$=xZ\342=b5\203<\2414\376\275\300+\276;z^\234\274~\264l\274\006\031\253=\353\r\253=XU\200\275\255hH\275\317\266\226\275\271\326\010>=S\312=\376\274\341=\004\3641<\347\373\263\275\324\376\207=d+\316\275\016\251\247<\375e\345=\351\330\023>\244\327/>\307\2139<J\270\256\275\004@\372\274\241\212!>\342\200\203\275\345\276\363\275\371$\002>\232/\247=\302\236\010\274\0021l\275\177b%\274NZ\203=\365\002\377=\334\232\031\276\275\205T\275\300\031S\275\315\211\341\275cO&>C\345-\276\272\007\360=\223^\010>\264\031\032\276\212K\370\274Z\256\256\274Ss\227\275\224z\">\013C\032\276xFu<V \245\275P(\265\275\215|\340\275\323\242\313=Nm\324\275\326\325\001\275\242W`<k>_=\273\350\274\274\245Q\350=\022J.\276\262;8\275L\036\037\275\211\'\t\276\343\374\001\276\373T7\275\264W\225<U\216\006\276#b\373\274P\251\245\275\330\256.>\306#\311=z\014C=\"\251\'=\267=%<\333\3229\273\3305\013\276z\343\025\2761\005\372=\025\302T\275\247\203\262=8\037\262<ry\'>j\014\010\276ES1>/\003\360\272YP\357=z\371\203<\254\007\275;\321\232\035\276N\316\302\275\010\\\030<\202b==\206\276\274\275\377Z\277=\314\000\004=\307\221\217=\357\250\034\276\302\257\022\276\222\006\'>\241\307\301\275\303\315+>%E\265\2752\014\244=\020\220\202=q\"/=\223\007S\275L\235f\275\352\354\002=\232\241\245\275z\355\220\275Hgo=\216\237\027>\264\0262>\251a\216<bM\004\276\366U\235=\361\006\231<#\247\r>Rl\230<o0\266=B<\000\276\351W\236\274\300\301\305=T\0251\276\237W\345\275\216s\337\275\026O\374=\n\327\344\275I\200\022\275(\035%\276TT\276\274f\002\321<\312\037^;\020\006c\275e\223\215\275\271\022\326=\360\272#>\337\312\306\274XE\212\275\222\261\025\276\017\274\316\2740\245<\273\222\336\017=\233\347\301\275\314V\032>\226/\235\273\3573\257=\257\276\346<\351)$\276\335c\215\275\317\272\244\275q\333I\275\352\245\223=\216\365 <\014\331\331\275\315\037\027>oz\021\276\214;\206\275\016`\301=\276\325J=\217\216-\276\014\242\316\275e\222\265;k?/<\032\222%\2766O\204=\321!\017\275\245\3011>;=5\276j\351\214=:\3573\276\361\203\023>\275\351\241\274\244T3>\034Y<={\271T\275\n\331\302=f\255\201\275\355\205\210\275H\2211\276\247X\207=\\\232\371\275\255\354\207\275\214\243\367\275SK\023>\235\036\007\275p\020\022<\226o\241\275tY\322\275)\016S=\242\331R\274\256\006\221=\335\207\226\274\302l\024=\264B\036\276{\325\262=\210$*\276\333K\026\276,w\265=\236P\017\276\267J\357=\021a\225\275\265\210\263\2752\032\024>D\360\305\275A\305\251=\3458\244=P\247\007>\010V2\276\224\210\001\276d\253\373;o\rq\275X\356\006<\013\326i\274\210\264\332\275\257\255*\276\216\006t=P\307\357=cZ\215=\343\225\365\2759\234\001>?\241\246;^\343\023>n\221\023\276\227N7\276\253UX\275\364\233\341=\350\340\005\274bB\202\274S\347&>yh\017\276\245\342\013\276x@\026\275\244\307#>1:\374\274\'A\273\274\215\031!>!<\t\276\363r\006>p\326\247\275\032\264\252=\314\027\313;\261\331\302;Q\020\221=<\261q\275H\250\302<@\365\320\275\240\206\217\275\005\337>\275\264\335\215=\003\235\030\276C\341\271=J\240\232\275\022V\205=z@\330=\242\366\373\275do$>g^\241\275\331C\346:e\\\020>%\226\322<\371V\357<\213\321\234\275:e\306=R\326\'\274\310\301\">c\312\214\2756\037\'<\n\261\223\275\023\335#>D\0173\275*\320\257\275A\030\246=\260\270\330=tR\363\275\274\243\223<\021\324\212=|~\217<7L\372=a\264\261\275$\n\010\276X\0101>}[(>\234\223\022\275&\004o;\201\2371>\363\227\251<\3269\034\275J\337*\276D\225u\275\376e\252=g\266\343=0\0213=\245AS\275\316\377\336=\252\273\324=\033<>\2736\213@<-\366\311\275\"\007\237=W,\001\275\314\200\324\275\241\322\324\274\225*\360\275\375\340\235=\257\341\245\275\215\326\275\275HF\275\2754b\037>k[/\276\365K\205<\024n%\276\327\374l=:\210\215\275\207<%>\024\241\261\274\330\371q\275\215t\260<M\013\245\275\032M+>\2222\201=9\325\r>\221\251\360=\3037\t>&U\267\274\342s\347\274\244~1=0\217\206=\222\177\024=r\024\373\275\0240L\275\"\226\256=\314/4\275L\210\033>q\277\000\276\2609H\275V\376\351=CZ\305\275\350\027\214\275\362\205\033\276-\312\274=\275\002/>\372n\204=\374nK\275\206\201\207=u\240X\273\225\364\306=\200B\216\275w\333\217\275nA\'>\332\027\233\275qLE=;\356\314=\356\t\014\276\300~\306\275\232a\342\275AR\360=\311\2056\276\240\265\304=\262\314l=\317_\254=\034\003\">Ti\241\273\3224\214\274\3017v=\000\231\205\275\260X\270=.\375\"\275\236\310_<\337\224\237=\206w\n<\337\271\223\275\3205\361=\272\026w\275\357\312/\275W\350\020\276\034\332\241=x\025\216=\355\034)=l\210\202<-\'\216=\333B\032\276\034(\200\275\320\336s=\312:7>\243\256\035>\2540\361=\232b\001\276\356y\330;\271\343\025\276\205\320\301\275k\021\361\275R\263\210\275\370\210\007\276\272m\215\275\2703/>\0239\332\275%c\023\276\017\2511>\365>m=?>,>BJ\023>\214e%>7\240\240<\255\240.=F\263\270=z\'\034>\242\006\347<\213\204\001\276\326g\214\274\370TO=\211&\232=\305\261\'\276i\237\007\275;D\026>c\333\242\275M\2019\274\225\254\247\272B[G<\247\357\016>\035\351!\276\010j\233<p\215\354\27574\350=(U\343<\244\246\002>D\246#>7\017F\275@\263\322=\261\347\025>\370\342\035\275\303\242\000\2765(!>~\016\375\275\263\320\"\274!]u\2751\261\n\276p+\226\273\270\312)\276\013)6=\035d\316<\314\rI\274VE\342\275\233\003\337=\220\242\232\274\226O\t>F>\324<\274\332!\275O\004\024\276m\0034>\007\255Y\274\360\220{:\222w\263=\361\030\354=\246i\340\275\363\357\'>1\2152=\277\220\006\276\246(\262=+k6\276\306\244\033>G\212\030\276\324\372\277\2752Y\313;\355\344\216=\336\266\305<\304Dn=<O\350<\\\361t<y\225\311=\336e\205=\235!\370\275\031Q$;9\361\374\275h\331\373=\013\323\022\276!h\261\275thF=\276r\030\276\256\307\351=\231y\357<\252\211z=\231k\032\276!d\262<\\\220\206\275Ma\r\276\275!\200\275_\017D\275\312\224\223=}\265\342\275\024E\233\275\014H\326=\222\376\030\276\356\022\236\275l\207\014\276\035\327->\207B\025:\032+\322<\nN\346\275\233T\'\276H\220\006\275\260/\003>\362\377\231\2753H\016>\340\374\226\274\301\350&>~2\221=\335\316\213=\\\3211\276\272=\035\276\356\243\374\275\354\205->4T1>J_\216\275\243A\363=\022\034\232\273y\374\032>\275\213\026;\365\035}=>\300\206\275X[,\275r5\217=\200\227!\276\251~\375\274\327a2\276M\245\244=\330\346\006>\264\201\236:\373\230\375\273c\315m\274\352\351/\2767S\264\275\020M*>V\206\327=\'\341\007>fx\017>w\366#=>\207+\276Y\264\331=!\262j\275%Q\340=T\261K\275X\353\250=\372-\270=\241K\316\275\005\032\251=}>/>\306*\314\275\007\003->^+\247\275\377c\346\275<|\337\275\330\212\347=\342\271h\275\266\300\005\276\377\034\036;\211\222\234;\361\377\247\274v\\g\275\312\177G\275fn\317=wD \274@\214\037\272\324\315\n>wE\240\275x\224G\275P\336K\275\262\224\317=\001l\222<\261\267T=\205\030\347<\335\332\t\276kJ\017>#\267\021\276z\034\307=\235\035\311\275M\257#\276\251\201\307\275\315\367E\275\244(H=\244\021\313<\236\335\344<\035\366\244\274\025\337\206\2755\013/\274Sxm<\221M\350<J@\030<\374\n\300\275U\274\340\275\021\241y=4y\221\275{\267\317\275\313\336\244\275\177\2420\276<0\366\274\030\022\014>\2259\013\276:(\252=\260m\001\2768J\327=\261f!\276e\221j=\r\203\t>\314\024a\275O\214\265<\345\2543>\324\366\307\275\rg\034=/\337(\276\205\240\256\275\306q\377=Mf\214=+\276\t>sc\326\275\331w\355\274\017\0242\276i\263\253\275\004\341\203\271z\373\371\275A\272\024\276\365cs\275\"\345\024\275\333\370\377=O\307\377=\221K\241\274\246\240\210=\0042\025\274ERN=\233\363~\275\235&\303<\n\301\226=p \377\273:\037\220=/\200\003=\233_\206=\321\237\003\276\211\337\033>P\313I\275\022\024\303=\212J\031>\254\303\262\2745\224\270\275C\335\313=\331\201+>\2214.>\274\032\264\275\221\243\216\274\304n.<\225\nF=\013\342\274=\t\023\333=F`\341\275>@%>\347\247K=\026\302\006\276\312^\227\275\013)\325\275\232\\\300\275V\372\013\276\240fu=\376\007\034>\304\226G\274\215\236\305<Nu\351\275\220\005\342=S\265\201\275\337\276\310=0N\316=\312\273\023>k\272\010>\344\025\373<\357\361\217\275m~\357=\255P\374<\374\005}\2758\373}\272\r\2306\276U\320\306<\366a/>\227\242\350\275\332\337&\275S?\004\276L/\331<\350\205\004>\211?\335=\017\036\362\2755\261\263\274\037\177&>6\037\376\275\r3k=\031b\203\275\263\177\365=\232\037\246\275R\213\217\275\207!d=}B\235=\370\240\326:=\007\211=\274\255\016=S\021\030\276\330\237\312=\373\345\306\275\301+J<\2715~=ch\035>\220\262\364=N\317\342\275\024\244\336\275\013K\237=}\034y\275<\322+\276\237\024\004>\373\240\222;\223\320\351\275\"\337/>.S\363=\034K]\274\345\3261\276\202\025\227=i\026\216\275&`\317=\333\331\240=jH\227<\330\255\017>\235\005\266<u\340)\275\313\033\242\275-\277\">$\352\371;\250\037\010\276Wcv\273\353d\036\276\236p5<D\322\377\274\033k\247=\205Cs\275\3726\276\275}\230\372\275_r\022\276C\307\005>l\375\317<I\t\031\276%\347\273=Q<\362\2759\267\023\275\300\274\030\276Ul\005=\343\241\035>\375\002->\246\266\017\276\354\"\301\274\314\314\006=\321b\305=\213\314\263=,u\022=\257\307o\275\205\004\226\275\004\237\253\275\371\224\217=\314\006\272<Y\352\033\276\037\360\310\275I\307\031\275\014\030\247<\301\335\230=N\3164\276e~\017<_\"\223\274\360&\026\276\t\013O=\213\201Q=\313\222\226=I\271\207=\313S|\275\247Z\324\275\361a\216=|\006\316=\356\340\022=\253i\244=\006\225\250=xS\341\274~\020\027=\r\344\261=c\0143>OT\254\275Y\321M\274\371{\342=\273x.>4\023o=\300\354N=<\304\251\275\"\3555>\341Z\374<\226\205S\275\014Te\275d\350\343\275wO \276\014\374*\276H\342\316=0y\313\274J\240\025=\254\025\360\274\"\242T\275\364\210\313=\212\367\246\274\334\237\254\275\032\364\004\276L\224\203\275?V\262=0\217]=.z4<\304\214t\275;\363\007>\n3\272<\004\313\325=6\315&>\273r,>A\002)\276\020\326\'>[\316\260<\264\337\\<K\233\361\275\263/\022>\022\220\232;=\246V=#\360\362=\357\242\212\275\351\223+>j\200\034\276\261\277\205<}W\027\276\314\327\376=WRb\275o\244\255<\247\233%\276\311\202$\275h\340 <bQ\202\275\267\2406>\244!S\275D\342%\276{9\250\275\253\327\255=,G\350=\332Q\022\276\347\324\017>|\264\302<\2030\020\276\235g\037\276e\356\270=v\203\263=Zm\323\274_\247\037>h\306\224\275\026\333\016\274M%*=/\004#\276\005\030\370\275L\321k\275\360\346\021<\331d\"\276\035}*>\324\026\364\271R\034\321=\013\017\017\276\023/5\272^6\353\274=E\320\275\315\200\340\275\241\327\332=\020\205\332\272\006\211\354\274\036\230c\275\312\034%\276\006)\026\276z\005\020\276E&*\276\010\361\034\276\037C\230=q\342\034\275\316a.=}\2565\276\014G/>F\211\324\273#\260\263\275\201\365\t\276@\325\033\276*(+=t~K=k*\032\276\207r\340=@I0>\246pn=w\211\206<E*\232=H\001(>\241\037\312\2750y\223;\25132>(0\013>\024\213\003\276. \263=\275\373\000\276\273k\314\275\371\177\262\275AQ4=\362\265\263\275T_\253=\227C\254\275_\337\213\275\3437d=\256\316\343<>\300\353<^\363\266\274+^\276=\003b\"\276\3549\002\276\344-\226\274,\263\321=T\246\177=9\370\016>\3510\342\275\274v\255=\330\324\027\276\246Z\370\275`\307\006>.w\372=\330`R\275\366\305H=\2543\375<\231/\311\275\330\213\220=\016:\346\275\256\261\013>)\006V;\004]\232\275\037\362.\275\262\005?\272\212\020\320\275\362\204\362=<\346\022>\236\271\343\275f]x\275\237?\251\275_\330\222=\t}\231<\354\246!>0\271\010\276\251\346\363\275\225\005\214<\223\202\216=\320S\026\276\340~\275=\030\r+=\321c\300=\017R\236\275a\356\270\275-\316\314=\275\270\024\276~\"b=\276\266W\275o\242I\27545\204=t\235\225=\302\351I=+\245 >l*\000>o=\004\275\363~\264\2750ds=w\237\020<\230*\340<Fz+>zu\302=\016\317\233=[W\205\275\227I\311\275\324\214\267=[\302\'\276\360\350!\276\242\315\010\276F\005\262\275;\210\304\275\317G\317\275\242\253\'\276\\\263\255<\320Z)\2747Hl=\302\003\003\276\310Q\031\2731\310\326;\020P\332\274ZD\334=Q\354\337\275\245\316\310\275\311u\022\276\321\337\250=\376(#\276\243\264\364<UY\037>:\231\206=\317\313\033> \362\034> \207Q\274\246\001\014\275J\251-\276G\242\350\275x)\236=\205n\"\276\"L\372<\0322\311=h,f=n\231\016>\270Y\304\275\305+\004\276\004\377\024=\237\224\346\275\261\225\022\276\014\214\223=\325<\010>\307\001b=\006\361\226<\014]&>$\220\341=P\317\017>\364U&\276\257\264\277\275\343>(\274Z\321\003>I<\322=\013\367\r>\335m\216=p`\246=\303@%>\235\202-=\227~\270;\324/\233\275\037[\026\276\0012~\274\372\250\226=#9\255=\244r\t=r\3470\276O\261\236\273?V\260\273\243\033\007\276\300\212\363\275\030\261->\013F\020>\364\374\372\275\220\275z=\324\361/\276\343\214\236;^R\022\276\006\262L=;\033.=y@6\275\222\203\004>\330{D\275+d\217=8\343\210=>^\"\275G@\215<%T\025>\007\304\203\275\353g\021=\317 2<\254\341\264\275D[\217=hu\210\271_\030\200=\002\325\301=\177\302+\276W=\323\275d\213\246\271^\0003>\303\267\r>\302Dw\274E\364Z\275\306\357\357\275q\344\211=f\267\013\276\317\367\271\275H\371\340;\252<R=\024\002\313\275\267\2339>\226\327\322\274\357B\372=\000\337|=\002\330\260=\306Xe\275\362\320.=\303\320\245\274\nf\020\274\300\r\335\275%\313\305\275N\344\010\276\021\214w\274\300\330\270\274\231\037l\275\313\262-\276\253x\250\275\347e\246\275\032\350\255\275~\316\373=\377\331\321<d\334L=\003\010\035\276+\335\252=?\232{=\276\321)=V\324\360\275\310\341O\2758\344/\276)\321\007\276\351\206\004\276\274\310.\276GQJ=\253a\207=\336\373\r>e\003\374<\206a\365\275\177\035\373\275 Z\243\271\226\210\245\275\2462%<\250%+=\257\210\273=\361\033\'\275\305\344\221<\310\317\203<\210,\036>\004\022\"\275\353\226\316\275\335}\033\276\275\341\315=gO\003>\256\302\307<\263\037\254\275\375J\007>Vn\357\275G\202\233\275?\347\007\276\333\033\365\275\001=\t>\007\346\374\275f|\324\273\304\207\004<\316\321\230<\204U\310<\322\311&\276\034q\032<\331\026\007\275\301\253\000>\343h\006\276\200\002\367<Y\334\367=\026\236h\275\3319\277=\223#0>\276L\212<r\212\326\274\263l\362\275\310\2337<\257\320\212\274g\017\246\275\014\316\020<\236\235-\276o&\366=\001ki\275_C\215=^\277\'<\302\347\224\273vb$\2740o\257<\207o\025>\304\266\022\273uR7>= \206<\327\304\007\276 }\240=jA\030\276Q\232\010=\321g5<if#=\221\263\021\276{C$\275\004k6>a\367%>\367C\217\274L<\250\275\246\312\214\275&\366\016>c\366\300=\373\000(=0\243\"\275\362%\007>\327\231\210<\024^\t>\276t\227\273\252\377;\275 \225\031\276,Y>=M\206\225=1\336\346\274\261\n\"<O\010\306\275\034\213\000\275w\\\344\274\373\360\r=\237\272\002>[(\t=kq\t>ue\276\275>\032\242\274\307\260\267\275\362w\025=w(\002\276[\021\350=Xm\311\275\265{\030<\301$\357=\340\036\306:\226\252\370=\261\0275>\245\007\313\275\302\217\276=\3769I<\314 \244\275\227a\022>\266\230/\276(X+\275E\035 >\035\353\345\275\355\247)\276\244\223\351\275\322\022\255\275\n\355\272\273\371\214\326\275\3240\225\275\263\3052\275\206\034\017\275\371y\220\275/%!\276u/\013\275\241\221\272=\352_/\276\233\034,>CA\002<\341\347[=\034\225\031>-\334\223\274\221\330\032\275gp!=b\014\320=\177)!>\260\307!>M\010{\275\306f\241\274\300\353\004>\374\222\370=\203^f=\342P\001\276\034\342,\276\317\366\203\275\243\217\277=\213%\264=\202_3>9m\341\275\nb\345<\344\313-\276Mw\204\275\024\370\020>\263\277\334=\274\365\267=\021\017\263\275\221\273\221\275\364I#\276\032\274\203=J\256,>\305\252\006\2766]\212\275\333\310\372\275a\347Z=\373\016\270=g\305\306\275\325\307\035\276l\276\240=\3034\025\276f\215\026>\010=\035\276b\363\003<\251r\233=gg\335=z\375\221\275\230\274\001>7l\033\2765[\024\274\252b\024>\034ck\275\225^\221=\204(\016\276\014g\372\275\250\032\222=\t\262\225=\177\321\265\275\202\241\001>9\307\020>O\r%\275.j\013\276\344D\0279@)\335\275\217\245b\275_\217\030=\277\317\235\275\345\210\320\275\200\205\212\275\231\263\337=(9\306\275\276\024\206=\307>\240\275\033\231\304<@\343E;,\247\371==\257\257\275?v\200=r\255\000\276A.\257\274\016\211\246\275\341\346\374=c\'\266\275\334C\037>\224\033\253<\343\037&>\375$\362\275T\360\332\275\016>1\275we\347\275t\264\222=:\235#\276B\371)>\342\210*\276\251\325\033\276\016](>\203\030\036=M\257\226=\021\023\323=b\0034\276\033\330\343=,M\">\302\240\276=v\r\257=E;\036\276\202\222\307=\226B)>\267\314f;\035\277\326\275\035Pv\274y~\013\276\342\363\377=I\220\r\274M\213\016>^\361$>A\246\354\275I\326\306=\234\345\201\275\230\0342>\270\343\206=\342\376\001\275\211\261\010\276\336\347\032\276\210\217\340\274\022h\256=\235\302\206=\327L\256\274\214\234?=w\325,\274\364\032)\276l\267\027\276\376!4>\005n\177=TO\n>\013\234\031\276S_\215=\275\347\007=[~\237=\224\305U:/k\010=\267\265I\275,\234\303=\343g\275\275\364\210F;\031\003\302=\306E\361=Ox\253\275A\261\312=z\207\315=\235\267\366<\253\235\362\273\224/\303\275\025E\231=\226\2024=\371d\002\276\373\263\371\275\252\271\r>\002\236&>\317c\005:\001i\341=\300\200\241=t\020\221\275\345Y.=\0339\207=\200\021\227=s\346.\276\'W\347=\202\305\244\275\023|\334\275\360\351#\275+\243\243\275 \325\032\276f \n>\246g\r<\224V\310=\037\353\302\275\304\3420\276\201T\350\2755=!>i\236\203\275\201\027L<@\242\313=\215\375\221\275\325\331*=\026\010\t>U\007\301\275\202F\036>\3649\036>\270\335\003<\307>\323\275b\341\342\275:\234\006\276\024T!>\377*\252\274\372\2477\275y\374\010\276W\337\303=\360\257m\275\025\266$=\330e\272<M\211\316\275\350V\337\275*\005\027>\327O\204\275\301\377\204=HE\005\276\335\000$>9\034\021\276\267\\&\276\016\261\020\276\226\0266<\375\374\006>\245Cu\274\036\273\251=P\2375\274O6\002>F\266\204\275\2626\301\275\177B\360\275\322\315\014>;\212\274\275;S(>\013\033\006\276\270\010->\305\326\003<\333\361\316=\356\244\362\275\371\350\013>\323A\025>\377I\316=\353\340\210\275\225\031\316\275Z\0267\275\230;\350=\027\036\255\274\246\265e=(?~=s\375\021\276.\344\333\273\001I\236=\207\311\246=\271\323\037\276\365\302\343=u\366\225=\230\353\370\274\255\213\304=\274\004\300\275\256\035\376;ak#\276\234\240N=\211\374+>L(\314\275f\273\023>\245\223\210\275}\354\027>\256&\035\274b\363\347=FY\017\276a\365\204=\255\350\270\2757\005\037>N\361\022\276\355R6>\006\020\333=\361N\251=\0009(\276\252\347*\276\267\341\025\276\352)6\276\373\305\307\274\344\332\343\275Y&,\276\243<\263=W\2561\275\033\205\006>\000\3740\275\210\230\252\275\337u\351<\314\\\233=\226d\204\275\347\354\375<\372,\270\275\273Mi\275\312$&\276\247b\022\276\'T1>.\357\035\274?^\334\275\341bj=\303\321\256<\242*\036>r{\250\275\314\304\205<\254I\t>\334\362\366=s\261)>2\354\r\276(\240\326==$\365\275/T\317\275\2603\002\271\014t\362=\313qe=\2376\254\274H\000\244\275\370\215\026\276\222\213\275\275xi\031=\330\233\274\274\335\003 \276\217/\022>\315\362\027=\224\255\206=\005\270\003\276\350\0013>\224\303\206<78==~\n/=\336;\r\275\200\257\332<\3328a\275\341\207\205\275/\217\255=\204h\237\275Kn\220=\256\n\320<\227\337\020\276\224A-=<n\010>:\013S<\332Q\202\2727\036\005\276 s\031\276H\010\326=y\001k\273>v!>\221\211&\276MX\315;\241K\264\275\274*\263=\357\372\004>\355\211\002=\351\371\005>\314\366\335\275li\006\275\030\321\364\274]\370\242\275\271(\r\276=c\247\275\250D^<\000\003j\275\032\215!\273\357]\336\273\270\372\013\274pL\377;\025\331\245\275\213\246\225\275\336N0\276\273\"\362\275\246\\\007>\235\302-={O\346=\000\332!>\274\206\270=\225)\336\2750\036\370\275\363\026\025<\260s\352=\256b\025<6o\025>xR\311;\322/\362\275\260\357b<\231s\354\274\244\205\252\275\320\350\261=$\210y=\336?\302=y\216\310=\320n\345=a\270\304\275\202t\213:\260\260\261;\022V\201\274\326\271\013=\341\344:\275^\346\016\276\252\205\273;i\265\013>;\224\253\275\373\362\'\276\000\274\004>\372\270\272=\305\210?=\266\243,\276\330-T\274\371u\004>7l2=\343]\300\275h\336\363=\210\343\035\276\320\000i=\204u\243\275\370\022\032\276\214\334h=\223=\206=\274\016e=Q\276&\276\365\375\267\275S\252\024>u\262\263\275\322\217\274\275\261\224\260\275>\022\'\276\376\311\005\276\343d\r\276\237\026\342=#\234\254=N\326E<\202\035\373\275\203\231\313=by\341=m\000\r>\367f_=\006b\\<r\024\331=\332h1\276\270\361\032>\023\004\204\273T\315\027>@\244\023>\232cC\275\341\345\276<nt\242=\r\303\027>I\t\211=*\342\225\275$\247\255;@\031*\276H|\024\276\226F\037=\032O*=~a%\275_\205,\276a)\014>\364\025\257=\211\345\016\276\002\032\013=\322\317P=\315K\246\275\'7\022\275E\202r\275\336H\022>\214\367 \276\340j\207\275\240?\226\275\356U\006>\304\030\320<\325\243|=\036\362\021>}S\315\274\370\345\351=\3776\025\276\220m\252=\251\033\274\275#}\003=\202\0223>$W5:\374\224S=\315\323\007\276U\360\331=\206\260\014>\250M\'\276\2774\345<\343I\r>P\202\021>K\366\027\276\010T\333\275~\361\363\275\360\350\t\275\tx\252=\246o\317\275\023\303\262=\351\352\205=!\370\350<\351\000\220\275\234\357\310=u\027t=\322f\004\276J\205t<r\273:\275F\312+\276\336\225\020\274 \310\016>\324M\206=\315\211\336=*z\346\274\210L\r\276\307;\\=\202-\277<as\263=\233\204\230<\227\004!\276W\370\236=`h\222\275Ia\000=\211\230\007>\364\264\036\275\201\017;<\246\362\312=\232\252\005\276\273\353\264\275A\021;\275\177m\344\275\003R\004\276V\360\014\274\266\364w\275B\221m=\266d\310\275\214\t\320\275\344{\265;\335k\266\275<\005%=\315\211\273=\026\323M=\337C\353=\224\004+>\351d%\274\225+\325=U\253\010\275\206\345\016>\207\207\361=9\203c=V@\020>\026\332\244<\361\361\273\275\236\313K=Pv\310\274X\242\337\272\374u$>\211\273\035\275\240\273\377\275.\023\236\274 \276e\275\254z\233\273Z\020\t\276,\206\n>\331p\004>n\327\251\273w\225)\276\030\311\363;\3349+\276\2451\003\276\332\331\202\2758]\026\276\221)\033\275j\324\363\275\262\217\032>K\234\245<2=0\276\314\325v\275\315~\372\275\250\027\360\274\203\002\204\274\222\270\260=*<\371<\327\261\340\275\360Fp\275\226$-\276\336\360\005\276\266\321\344<\267\241\321=\034\001v\275\220H\255=\370\223\372<\034\343\206=z\211I\274\376\031\031\276\332\353e\275Z2\023\276$N\326=ZG#\275\226(\002\276v\237\003\276wS\242=W1\t\276\241\210T\275\367\374\022=Vu3>\320S6>S\343\033\276\320\272[=@\325\004\276\333\274\246=\024\206\265=\013S\006\275o\270R\275h\214,\2764\021\236:\007G\220=\033|\007>\221\260\333;\300x|\275\333\010/\276\036\301|\275\336\335\363:D\000\234\275Jkb<\274\225\330;\016\345\020>x&\031=\177\"\303\275\265\371u\275\023\024\205<h\233\350\274\371\354?\275n\277\017>\364\207\302=[5:\273U\376\262\273b\350,>\354\342\212=\273\365\241=%\352\332\275\r\004o\275u\271\023>\362\257\314<uU\004>r\367\302=|n\302\275\202\005-\2763\312\266=P~\221=\336W\221\275\004\300\025\276/\374@=\355\263\237\275\353D\327\275E-\376\275\323\277i=\272F\300\275\375\240#\276\362o\026>\320\355\263\274j\245\017>\344m \275\267\312\251=\020\216\002\276\220\263\001\276,\237\021<2\324\331\275a\371\247\275\234\220\320=!,\274\2759\035\003\276\324V2\274a4\340\275\013\245A\275\225\016/\276@\350.>\3216\003\276x\\m=A\317\337=\035\334\020=\211\251\036>Vo\266\275\223\275\217\275i\246s=\027p*\275\t\277&\276\237\315\">\255>\242=\316\255\204\275\301\362\256\275w\360z=/=:=|\002\010>\232\373\374\275\273z\022>\225\311\222=!\365\313=\024*\030>?\212!\276\375\037C\274\215\177\021>\352\333\266=\256\316u=\025\005\024=\377i\334<\001\345\037>I\274\346\275\304\241\332=\373\'\365\275\365\220\245\275\243\303\311\274\255\273\"\276\031\010t\273f=\374=/\205\n\276W\201\341\274\375a\010\276q\027\033>e/\313=\014\317\237\275t\277%>+\215b==\246\274\274\006\310\372\275\206(/=\250\030\271=}\036\343<xCX=#s\206=\273&\331=P}7=\352\257V\274z\353\017>\214\234\310=\257Z\032\273!\230)\276\017\031\340=k\2605\276H\003>\273\201S\020>;\220$\276\337>\227<D\003\037\2762\\\344\274\372\374%<\031X\210\275\235S\001\276A\223\005\276\0247\333=\253\204\205\2754W\370\275#P\350\275\220\253\036=a#\014\276\275Z\014>\346\301\315=\326\246\255\275\320\2703>4*\034>\025m6\275\302\030\003\274\206\276\255=\340\246\036\276\037\t\034\273\356\267\374\275\357\237M=\251\036\000\276\277\252`\275\t;\240=\361\213q\275OS\006>\013\306)\275\226\310\014>\312oX\275c\032\020\2765n\000\276\271\253c=\360\216\036>\257D\254=\263\273n=]\252\212<\315Q\350=\225\023\371=\213\315u\275\266\343\213\273\370O$>\250\n-\275\244\241\031\276P\013\273=\207\223\276\275Ne\004\276\334\323\300\275\003\243\256\275E\021\005>\246\205\345\275*\344\232\275\257L\263=\t\023+>\361\002\367<\004\315\233=\373\014\335\274\310\035L<\351!\240=\235\023,>\016\333!>\352m\330\275\"K$;P\022\270\275Ws\023\276\3612\022>\254\311\023>`V\252:\262\203\227=\272\270\230=\230\340\234\275Y:\221\275\006\247\">~S\234=:b&\276\307\320N\274\007J\204\275:\344\014; |!<\327:\326=A\366\275\275\372\010\013\273\203\353#>\301?Q\273\247\262\037\276\t\017\243=\356\210\317\275\342\302$\276\216K\r\276\030\263\226\275W\236O\275k\014!=\347r\221\275\327\256\274\275A\261\300=\022~\037\276\277\213\332=\236N\356\274\323E\013\275\021\202\003>2q\250=\301\335\002>\234\371,>\364\307\334=B\233\331=\025I\027\276\242C\005>{\202\214=\322\246\207=o\254\204\275\243\371\234=\366\311\034>Iz\267=\232W@\273\032\nF\274\326\330\223\275\273\242\177\275\316k\200\275\006\242\304=\230\2512=\263\364(>&s\034>\344\034\n>\257\310N\275\032;\007>K\362\344=\210<\315=\314d,=J\214\220\275Kg\374=_z\004\276\r\007\t=\254\t$>\264\223?\275\243\013\030>\216\311(>\210\372 >\262N\327\275a\0225\275\341\322\022\2757xZ\275\214\255\002\276\200\001\022=\351\252E=\022\247\250=\312\234.=/\t\326=\245\316\234\2736\034#>6\256,>\3523f=\211)\007<\2204\020>\234\240\253=\2122<\275\001\341\005\276\324)\342=7@\352=\203\031\243\275y\217\033>\354\235\031\276\351\023\320\274\325~\016>\006\r\030>V\010\214\275\010\207\336\275C\215s=@\220\227\275\277\337\317<$\204\301\275:\035\252=\264\375%>e\353b\275X\316\n\276\000\2317\276\251\257\205=\3261\212\274\252@p\275\365p\302=V\256\247=\000-?\275\363N\367<\374\017\027>c\200\000\276\202\232.>y\025\317\275\030q!\275\332\332)>Y\222\343=pcy\275\264\332P\275\342_\250\275&\373\024\272\204\027\266=\017\023#>\361\260\335\275\260o\032>\n-U=\335$\214\274\213\025\026\274\007\331\001\276j\212\244\275\324\271\017<\314\302\253=L\005\006=#K\363=\221\360\346\275D\307\221=\222\201\307;tn\236\275C\267\005\275\272?\007\276{\016\354=\336\3144=Y=\021=\253u\260\275\220\321\004>b\364\034\276>\357\363=\332\376\371<Gj\340\275j\212\013>.\034\214<\255\325\001>\306wb\275\351Q\255\275&\372$\275\002E\246=\252\334Z=\317\272\333\275h\314\254;\202\t\264\275\315\371Z\275)B\313<1e\375=\366\320\360=\361\027\313=\001+\254<@\330\276;\020S}\274\277X\271\275\301\010\016\275(\256\277\275\235\"\000\276a\333\341=Q\177\377\2752E\237=\254\234\236\275jK\211\275 \013\000>\220\226\300\275\250\346\275<\335\225J\275%\303\021>\351w\360=\036n\205=1\023\024\27600|;3:\020\276\336\341\262=\245\313\361=7\215\036>(G\317<\354\225\256=\205\362\303\275<i\315=!o,=`\357\003\276\036\324\333<\371K\303=<l\315:\313\334\271= %\201=\337\302;=\035\247\237=\315x\225\275\372\0256>\363\022\314\273\327\257\035\276\027\3714:\325}\203\274\021I\270=\315\000/\276\242\307\333\275u\031\231=%\373M=\312\240l\275\316\376\343<\016\345\236<\311M\020\275\004\3530>\215\362\000>\334\"\306<\324&\324=\rH\016\276\277\335\252\275\200\2624=1dQ=\352\311*>\257\257\004=w^\273\275\257\277\365\274\316\3065\276\233\010(\276R\024\374=]\244\212\275\322PA=\356\323\260=8t\274=Y\215\315\2749\004\201\275\2565\340\275\2610\356\275v\0174\276\217\n\033\276\361-\234\275k\254\257=.*,>\370\225\331\275\014\003\r\276\212\257\004>\033\256\236<\304;\035>\316\275\212=4\023\210\275k\264\t\276*sc\2759|\376\275\221\266\271\275+ .>3\303\273\275~\213\323=\014\204\251\275^\237\023\274iE\362=\335\334\217\275\n+\344\275Kh\030\275\307\375\030\275e\2442\276u\320\250=\313\346\231\274\343\035\314=\260\213\364\275\r\032&>\322\256(\276\021\245\241=\030i\270=pVt:\013}\025>;\022\227<e\222+<\"\352\355<\234s\"\276\374d\001\276\253\035\222=\014\0224>\010(.\276\031\206\356:R\022\034\276\351[\335;\336\377\243<c\\\320=\301\223\027>Tw\t\276\031hI\275O3\334=\254\310\014=I\254e=\214\342\265=\260\374 \276K\214\305\275\365\343\330\275\212\320\232:\320,&>\314\177\376=(\003\352<\244\354\327=\026\237\241=\273\237->/q:\2759\323\352=\022!\013\276\236Z*>\014\333\032\274\330E\331\274B,\026\274D\362\200\275\302\270\223;\305\253\025=\033\336U<\344\224\216\274\241R\256<M\332,\276\232\261\236\275\022\216\216=<\007\231<\244\207%\276d\337\300=\250Z\336\274\322\321\227\275\275S\326=\372P\264\275\367\275)\276n\317\261\275\215\324\356\273\267\027*\276\270_\020\276x\260\020>s\3779<\330VX\275b\267\240=G|%>\203\371\026>\010t\037\276\377A!>\002\032 >\303\362\237\275\016\245\337\275\247\033\022\276\353|\250=\032^\342=@\231\n>\006\010\275\275A\353\200\275\026\201\262\275\345s\007>#R\010\276\002q\220\275\205c\364=x\242\370=\271\2459=\013\275\364\275\2270\267=\371\002\321=\213\201\001\276^t\010=\330x\024>\323W \276\216\016\217=l\270.\276z:\234;\252\2051\276c\220\216\274$\364\342=\013\356\320=\325k\374=6\371\317\274\211T)=NX\211\274a\240#\276\026\374~\275\3055(>Yu)>\'\335\217\274\276\n\354=\374\306\210\275?\245\006>\313\306\366<\243\350x\275\307If\275+\204 >\212\025\000>\252\231\364\275Jv\032\275n.\271<^\242\264\275$\360\337\275\t\t\373\274S\340\313=\250l\242<\276[&\276\237\365\361=\314J\036>\022\205}=~\373\'>\222\332s\2750\272\t\272\341\031\004\276@\225\r\276\275\215\312\273)O\027\275\237=\033\276G\007\254\275m\036(\276`8\"\276:\205\372\275\030\211\342\275Mx\200=R\313r<Q\267\315\275{\305\031>\212\232\036\276\r3\031\276\341\242\016\276\n\"m=\236\245\004\276\264/{\275\261\367\224;/\237\221\275&\t\360=@\360*;W{\033\276\2426\r=\022\031\234\275\276\356\001>~\330C\275\006\367\031\276NB\367<S\\{=\204\210\270\275\353,\255=\251[/\276h\321\032<\242S\320=\262@}\275\231\266\034=: \006>rY\327;\354\231\213=\370\342\032>\330yV=q@\211=E\244n=\364C(>\005\314\337=mX#\276N\343\034\2756\301\005\276\013\270\016>5\3413\276^\311\264;\333gW\274v\261\r>\010+\344<\314\303\t\276\240<\022>\217\206\214=\027\025U\274\271\034\004\276Ui\021\276_\260~\275\244\334\237\275H2\233; _\261=|/\023\276\201\235\347=\354I\235\275M3l\275\376\037\t\276\335\013\330=\367\030$=F\202,>\330Y\272=\322\273\232=\376\272\036>\262L\314=`VH\275\336\251\234\275\357^v=\322L@=;t\377=\0349\202\275\273\362\250\273\362\0046<v<\365\272\210\340\002\275^\304\343\275\362\347\037\274\000O\010\276$M\233\2741\326\235\275\373F\330=\311\337\230=\310\314,\276\352\377\">9j\254<}\341\325<\036\332\013\276\3722\315\274Gn\207<\334\203\000\276\215t\203\275\tG\343\275F\312\021>\241\001L;\226\361v=\234`\226\273S\271\226=\2542a\274\306\350\334\275\020\002\331\275\362\254\256<8\206\361=\230q\010>1\341\016\276\237N\325<\3306\247=r\256\342\2758\220\260=E\341\214\275n\251\302=)\275+>\271\335\006\276y\370\245=\272S[\275Q\375[\275\037\347\016>\261\227\366=\337\207\r>\ts\316\274{\276\352=>J\312\275[[\336\275\252W\031\276\247\372\326\275q\313\210=\345U\324\275_\002+=\222x7<(\n\323\275\250w)>\207\300\324\275\025\222\304=^t\033>ij\265=k\373.\2764-\t>%,\000\274w\221\026\276\\\317\314=\031\224\035>/\027u\275\351\356%\276\340\227;\275\200c\327\274\256\002\321=x\377w\274\240b^\275W{/=TS\'\276\311\320\301=\230\341\n>\026\227\020\273\375\t\000>\035\357\313\275(v\'\276!3\355\273\316\202w=k\000\211=GT/\276\333+\262\274\204^\215<\"\233\261<\007:u\275\013,\254=\007\306\325\275\333;\203\275\272\247d=\200&*\276O\360\003\275\202\243\031\276H\363\n\276\342\037\036\275\221\322\203\274\257x\005>\013\321\037>*X\347\273\227\265!\276\013\214*>\025\256\214=\310\027\351\275\357\016.\275\342\034\013>Iu\t\276\036\003\221\275\264B\037\276N\000)\276\331\003\376<\264\321N=\204\272\357<\005c+>\257\3064=\365\010^\275\256\355\240\275\203]\237=\211[\244=u\277\007\276\371\004%\275\361D\370\275]9\000>\274<\026>\213\0007={A$\276@cm8\030f\232=x\350\261\275f\231\353\2758\311\352=\233\361\027\275\335\234\344=)\253\025>\260\372\271\273C\312\022>\010r\222=\224q\367=C\027\n>\270\310\027\276r.\010\276\235\370\330<\270I \275D\'\001\276Vc\003>\255\021\343=\375J\235\275\362qR=*\264\345=W\2354\275\255w\374\2743\177!\276\314!\312=;\277\373=\301\254\005\276\221\350\370=\332\241\020=\226\022c\274\215\233$>\177\005\t>\023\025\312=\374\233\323<\324t\301=\264c#\276\371\356(>,\027\263\274\312\246\353\274\306(\264<\212\214\337=\212{\223\275;\334\014\276\226\256\025\276v\276k\2758:\301=\270F\333=?\213\315\272\'\356\276<\2708\350\274\235\377\333<\021\013\207=\027F\241=\325\0106>$\356m=\032h\035>\257\323\\=\037\023\t=\2432\023\276\337\210\005>\3451-=j\2430\275\362\202\341\275\303\021\204<\372\274\260\275\261\362\027\276\361t\236\275dY\334=T!\304\2758\274&>r\002\025>@K\345\275\336x\376\2749\350\212=<Y\020\274\214}\367\274\303\230\022>\223\021#>]Z\255\275\230\363\002>>\300\265\274\216\"\014>E:\352\273\003\017\203\275\253sh\275\023\230\030\276Z\346\360\275\010\245\3179Nx\223\275&V\213:\210=\341<\250\251~\275\326\313 >\263\307?\275P\316u\275`\242\024>B7\337\274\360w\032>\262h\326=\245\335\236\275z\331\227\2759{\301=?.\032>(#A=}\347~=wa\335=\336F/\276\203\327#>\327\266\177\275bD\305=\204(X;\350\326\312=\306\205!\276p4$\276\260\032\372=\2379\r>ZXp\275F\003\001\276^\227\300<\245\324\020>\337$\223=\2017\273\275\274\010\232\275BJ,\276\224\256 \276\234\317D\275\024\277\326\275\253\005\004>\210\251\262=*\263\252\275\000=\272=\313-\340=\322\\\367\275\033p$\276[\357\224=\306\037\001>\362\020\"=dy\240=hx\2569+T\r>>\253\025>\000\026\302\274Al\002>[\\\233\275xn8\275#\322\026=d=\327<,\223\200=\211\006\036>\307\274;\275\n\254\367\275\276@\270=\'\207\352\275\251\360\216=\303\323&>\253\254\000\276\247R\237=\252\337\374: L\375\275\213\010\255\275A\212\020\2764`*\275F\377\340\275\222\341\356\275\003\006\237=P\313\247<S\271\226\275\337\257\356=\367\333\025\275\372>0>xR^=~\266\276\275A\375g\275\206\311\010>\366\271\303=\350\302\236:\025\226G\275\237\010\024\276\340\317\367\275\307\343\241=\373\034\001=\220\014\271<G\351?\275\014P\333<\302H\002\276\037\354\t=\3115v\275\3572\235\275\310\315\305=n\014\213\275\021\017\204=K|8<+\245\267=\373\257\253=h\247\030\276g{\024=j\267\372\275\204\361\210\275F\264i=\336\203\242=\331\356=\275\212\001\353=m\016\373\275\344(\231\274\316\374 > \363->Lf\t>\031\366l\275Hr\361=\212\265\317\275\365~\276\275x\327\323\275\252\234f<b\346\323<M\211\253\275\177y\232=\004L\277\272o4\017<\247\250G<\332\371\244=\260*\017>\243_\266=\\\341\320=\215H\225=\217\273\201=\313\003\305\275\306BB\275\325\361 \276\274q\207\275\202d\243=\354\341\372\274.x\317=$\034\273\275w\n\216=\177)\014\276\310\311\027\276\236\221\347\275\226~\360\274(\202O\275P\367\324=Q\0343>\304\316\036=\341|\274\275\213\320\235\275\2710\250\275g^\016=\252V(\276!\337\330\275\320D\345=H\377[\275\361$\177\275\017]\317=|3\'=\036\225\342=\007\014;<J\315D=\202J\017=8\272\001;a3X\275\2566\n>N\204\006\276.\t\241=\313\335\306<*\\\352\275\276\253\257\275{\366\317\274!\234\257\274|\023\332\275\207V\\\275\002ZQ=\343\206\037\274\270\231\317<N\377\177=\361\031\217<\343k\203\275\304W\027> \271\034\276\374\023\364=\371\364\252=\216\202\017\276\017\2063\275Qqp={\237,>:\271\235\275\022$*\276\310\r\316=Y\003\033>1\211\227<R\264\t=\272e\230\275\037`\225\273\372I:\272\333j\200\275F@\233\275k\205\372\275\021\306\253=\254\362\034>\367\274$\276\315A\346=\335|\021>\232\342-\276\311&\214=\240\225\344\275#D\r\274\n:\231;,\275Q\274I\301\277\275Q\365&\276<\025(>\342;\300\274\227\207\006=Wkb\275\307\256\003\276\262\360\357\275\022<\017><d\310\275t\221]=n\276\314\275]!\025=8a\301=v\202\272=sZQ\275\240\021\347\275\244\025\017\276x!*=\\w\013;R\036\"\273u\031v<\203/8\275\335%\"\275\325i\025\276\020A\314=\321\222\333\275}\234\306=\017\0254=\035\000\n>S\375\">\244\275(>*+\205\275\031\335 =\375\233\276\2757\201\221\273\244\306\374=3\376\306\275yJ\215\275\0325\'=-\345\256=\241\205\340<~v\305=\202\344\345={\343)>X\006\027\276\326-0\275\314\303\366\275\377\345\271=\246\313@=e\351\325=\022\206\276\274\354\3330=P\363\016\275\341W\260=3\371\030\276\267\222\376\275H\234\036=\203q\256\275\212^\312\275\372\006\237<k\313$>\244V\005>=S0>\275\034\n>V]M\275W.\003\276f\001\351=\"\312\034>\245\004^\274V\001\301;\372\323\335;],\274=B\017\307:\373ei\274\"`\226\275\227\032\246\275\350p\004\276\352L\230\275\242\260\311=\306\257\201\275\370j\360\275\1779n\274\326V$\276\371\316\213\273\344\347\204\275\010\037\326<fY\024\276\333\021\002>,\214\242\275\321\221\204<\352\036\334=\370\346\016\275+<\201\275D\234+>_\350L=\221SF<\276=\334=\302\017T=\024\373\">\324\341\226\275q\333\263<\336\217\263=o\303\001=\275\373\026>\314u2\272\026`\322\273\373$\030>\353\225\355</\013\267\274\361\345\347=r\315Z=\026\030\017>\t\033\014>\2262->\031\265\337;l1t=@r\357\275E60>^\031T=\214\003\2509\306\0352\276%\177\271=\211\226\200<`\232}=\354|\032>4\002\355\275y\017$\276f\032%>\326\016\373\274\245A\352\275\217[\256=\357\227(\275U\024\342\274\357\305\356=2\365$>*D\013\276\r\252\245\275\343tF\2742\342->\020\033\306\275\221\"\241<C`\030\276t[\234=\016\003*\275\2158\265=\317\325\346=\000\353(><\030\372\273\354\203!>\215\234\254=\245B\026\276\215\211\324=$\311\254=<?\022=\2543\346=#\357*\276\225\345\257\274\312\227\006>$\2279\274/\256\r>\031\234\217\274 \361\266=/\\\350=7\2575\276\233\001,\276\331^/>\272\211\257=\340\333\312\275\253\206\032\276\365\010\271\275\342J\365\275<\206\270\275\244\026\216\273\361!.\276\322\021\335\275\323\r+>+\247)\276\031\260\020\276\327\320\030>N\213\025=p\265\027=\034\343\004\276\312\256\">B&\311=\246\362\014\276RR\366=\006|\260<\034\375N\275\245k\006>\002e\327\275\313x\312\275\005\261\356=f\312\313=\032\227\322=z\226p\275N\354;\275\347\302.=\345\030T\274\377G\374\275\250\324\207=3G\'>\321\"i\275\264\261\036\275\030\307)\274\356V\302=#*\233\275x\251\265\275\270\222\324<\002\025\007=\262\364\\\275V\036\334=m\327\243=\032lW\275P\211\255\275\313\260 <]\351\323\275\347^\024\276\302\242\317=\213\342Z\2748\226\202\275q\026\205\275\254<\320:\334\325\255\273\224l\033\276N\3611>\333@\016>d3\274=\246\006\331<\003\277\226<\275\335\245\275Y\370\024\276%\261\252\274\310\320\377=\360\2405>\335~\240\274hM\013\276\223\026\242\275\365yb=\324\212a\275\255p}\274(\320\262\275I\277\351=}o\263\275T\205O<\347S\006\276\266\350\023>$C\214\274\244\331\333=\273\024\261=\024\365q=J\210\313\275d\036*=\247\347\274=B\277\271:\023\336%\276\240\354\355\275\226/&\275\252\211\021>\224\326\254\274j\205\223\275\252\0204\276\230\204,\276W\214\324\275\227\242\t\276\326\221\363=\244&\270=Z;!>}>\017\276>U)\276\333\204\232=D\273\000\276\230\212\021\276e9-\276e\200\016\276\310\314\037>\364\277\215<\325\320\342\274C\247\307\275Or\216\275\266\350==\224\345\">\236\330|\2755o)\275\376\366?\275`\316\266\273\364=\\\275\256\275\335=\243\377\017=\220A!=g\033\036\276#\246\017>L\274\350<:p\337\275\253\016\263<\366\035)\275\360\312\370\275W\020\"\276\331\257\230<\315\030Y\274\321\331\022\276\304\220\333\2755\2227\276r\361\250\275\007\255\275=\245i\261=t\322\264\273&\374\333=b\235\372\275Z~\025\273\366\203\277=\007\265\344\275G=\r\275\222\304\035>s\315?\275q7-=\333\177\016\276\240\355_=E\337\274\275\231^\224=V\022\254\2752#&\276Tc&<6\325\274\274\312\250j\274\256\307d=\210\231\002;Ia\017>\305Zg=\200\213\321=,\000#\276\322W\241=\254\307\241=\351\332g<\230F\022>\236\316t=\314\3745\2749)\030\276\254\314\221=&=\021=j\217\223\275\234\371\307\275 \226\000\276\243\266\337\275\223I\202=\371%\021>\235x\266\275\356\037\225\275\367\304\374\275\260\'\2739\341\322\211\275O\351\312\275\231\342\036>\362Ik=\341\232\325=\351\003\340\275#\021\010=E\303\335\275\340@`\2753A\321\274\313\326b=\266\275\335=\264\266\200<\262\220\230\275\365\006\317=\3566\033\276:\304\220\275\346\363.>\005t\306=\001\362\">\224R\355<\317\220\217\275\034\010\027\276\204\360\360\274\235p\003\276\272\212t\275\261\221%=\222\263\345\275\370\327\333\275\332>\206=\274\347\233\275\266\366\315=\202\200\313=\'\220\035\276\212\211J<D`!>\304\033\201\274h\365\247\275\371\357\245\274\261\255\003\276[\274\230=\353\002\202\275N>\247\274\373~\243\274k<\212=\2551\220\275\222R\216=\330\033\344\275\246\245S\274\205\210\363=U\354R\275\355r\256=\263!\201=~8r\275\017\374\362=\270\311\211\275\323\234\266=+\005\224=\3324i=FI\025>\361\\|\275\254E\366\275\335\013\273\275}\n7\275+s\014>>\215\013>\013]$<\300\375\271=@h\362\275\206R\332=Z\315\266\275\361\007\032=\021\211\300\275\264\037\274\275\355\0205>\232\211\355\274Is*>\352@\266<\206\302\r\276\255\342\205:\355A\007\276\340D\214=\352\373H\274\310\377\033\276\003[\007\275\331\337\320=\037\250\006>\360Cc\2743.\'\276\312_$>6G\254\275\276\376\034\276a\355\305\275\005\275u=\014\t\"\276T#\002\274_[\240\275| \213=D\257\036\275\207c\251\275\364\204\003>\212R\031>\307`\301\275W1\376\275\337\024s=\274\2678\276\233\252\313\275\255W\010>\203\003[<\203\343\014\276\272\240\361=b\021\215=9\230|=\360h\337=\222]\373=\\K\261=\021\220/\276\205\214.>&b6\274@\271\327\275y\205\322\275<\026\221\275\304\201\017\276\270\243->\271n\030\276\263\206K\275\241\227\275\275\203:R=HB\266\275\251X>\275\216\031\n\276\255&\216\275z+\204\275\376\332\352\275Cm\034>\322\356\037\276\212\327(><.\222<\346-\351=\036$\036>\254\344{=\354\321\340=v\357.>T\323*\276\253\0178>\361\201\217\274\ru\233=[\212\036=j\330\367=\025\256I=\037\264k<\330\214\332<\244\361\021=\036V,\276\027\356N=$ \311\275\304\034F=lt\\=)\224\267\275\210\374\375=\021\037\304\274\n\336\242=\234\207\242<i\234N=\333;\n=\201\371\222=c\024\370\275\366\264\032>0\246\004=\202\353\224;@\357\325=XQ&\276_\341\211\274\016\236!=\232|\r>4=\223\275:\373\243=\013s\005>\245t\035\276\333k\316\274\321\3756\275<\005\350\275\363\255\330\275\304\304\243\275\301\251#>h\217\001<Tx\261=\366\022w\275\330J\346=\260v\273<\224\377)>\347\036!>v\323\330<\270C\211<H\213\255\275`\245P\274$\253\030>q\265!>\247h\224\275\007\r\017\276\246\347\320=\362\374\362\2757\230\334=I\335\r>\263\350\201=\2728%\275\"\1770\276\371\247\315\275\202\312m\275\207\362\n\276\263\363\270=A\025\'>\326\034\'\276\246\034\r>\034u\004\276\366T#\275lp!\276\326\302\t\276\362K\213\275S\265\246\275V\356\006\275}xY\275!\265\323\275\0350\217=<8D\273\217t\245\275\325\357\025>\257\234\375\275\2264&\276\234\210\331=\367\004+\276\231\257Q=t\245\036>\206:L\275\312\203\001\276\006\'\">R\326#\274A\334\265\275\323\262(>\220\344\017>;\201\200=\271\005\237=\205?\037\276\256\361\n\275\2106x=\314x\270\275x\\+\276\265lz\275\006Gj\2745\032\007\276\2352\246\275\354\260o=C&\301=\335o\"=U\017\247\274L\313r<\316\255\202\275\210\223\274\275\004\031j<ws\373;\274\026g=8?\351\275\3403\247\275h\2701>\256\222\026>\343\314\250=\r}$>PL\263\275\350\363$\276z-\016\276\353\324\364\275~\032\027\275LeZ=\3431e=\016\332+\276=\275#\276\301\017\017>\275\006p=n\237\027>\333\217k=\361\334)<r\246\375\275\026\227\332\275\230\220\250=i\327\200=\212\271#\2739\256#>`\322\322=DY\024>\201\263\251=Gg\323=\000\351\350\275@\013\207\275\365\270h<\"\350.\276\302\262\315<u{s=x{\020>8:\304\275\347\327\310=7\003z=\263@\004\274\330[\335=\343\032\233\273\302Z\035=y.\354\275\217X)\276\275\264\010>\221\202\243<\n\213\316\275 \263\251=\323Z\">@\212\317<\211i\253\274\216?\003>\036\231\224\274u\006\n\276\266\013\370\27572\355<_\022\254\274P\222\033=\335\014p\275d>\251\274\215\336\356\275\314\344\223\2750U\226=^7\023=E)\276\275\004G\217\275\216\263\303=Y\275\255\275\322>\362\275\277\376*\276\322\2670\276\010\364\356=\335\312\256\275\021_X=#-\337\275]\356\020\276\035\326+>D\262\245\275\310\311\263=\371\271\014\276\357m->\327\226\231<\203F\255\275\351\367@\274\315a\370<\305\241(\276,L\026>\367\261\216=vH\327=\\1p=95\201=\237.U\275\216\236(\276\277\365\301=i\310\257\274\025\344\276=\371\001\327\274\025\3636\275\354,\251=\332u\364:\343\320\022\275\265\2655\275u\321\254\275\374\251\025>\025\221y=P\272\016>\272\256\223=!\323\272<c\023~\275\342#\263\275\334r+=\356b\365=\300c\023<_~\302\274m\234\244\275t\202\340\275\222\344\037>\014\264\'\275cg\024>\324\022\225\274z\223w=%\335\264\275/\203\314<\014\266*\274\313t\035\275\264\242+\276(\353\177\275\365\206\027>\0271\301=\224\276\016\276\177\307\262<\212I\212\275\022\345.=\2328\247\275\202\253)>\313\333\375=\241\314S\274\325\373\007\273>(#\275\1779\000>H\243P=\332\220\034>V\374I\274\002\030(\276E\232\376<\007\237\036\276\306\276\360=\2109\005=bD\335\274\227\345\020=sb\006>\2629~=s\3621\276N\323\037=\250jw\275\250\353\032>\025\231\222=\302\363\020\276 \034W=\215\364S=\203\375\376\275$p\020>\310\246\024=\357r\350=\034n\n\275v\257]<\027\313Y=*\310\331=\2105\334<\305\007\r\276\200\006\022>\226\227S=\026\326U=\342\232\024>:\003\237\274\300\314\243\274\242\273:\275\326\014\217<\337\004\030\276\375\264o=h\002\321=\210\312\360\275h\207\311\275\311\035\277=)|\317\274\260\243\003\276\237\251\363=j\352\260\275\t\273\257\275\252t\014\276\210\302\014\276=Y\204\274\262z\242=/\224\223=6M\355\275\005\\\211<\240?\216=1\220\003\276\202\260\347\275\226l+\276\014\217\013\274\020.+\276\356\370N\274En\203=\323t\014\275\257\\0\2761\210(\276f\263\302\275\326\373\006>\202\215\202=~\000\026\276@\320\205<\\E\206\275:e\037>\256P0\276x\020\202=e2\362\274Z\350\017\276\320\235\301\27534\210\275mu\247<\007\237%\2762\303\334\275V\314\021\276\222\274\324\275\035\250\031>\241\313\276=\337\200a=\332\312\013\276(\204\306\275\2577\"\2768\315}<\267\235\353\275\014C\007>\276\357\327\274l#\247\275\007\023\014\276\312\225 \276\2200\305\271|\001+\276\360\216\235=\351\252&\276\177\205\036=\306Y\213;[\201\022\276\205\320\225\275\273\320\333\274c\264\002\276\340\221\372<N\030\'>\td\035=\200a\023\274\221n\311\275\022\'+>\233j\037>-\266\037>\336\205\031<7_\271\275\350>\205\273&\035$<\315?\257=\2270W\275i\210\266\275\ni\343\275\264F\025>\372\354\001\276o\267$>\217\361\n=Tv&\276\224\0302\275\2241\362\275O\300\376\2751\247.\275\204\037\267\275\366\272\026\276-\207\326;\226\314\253\274\376\034\274\275\374\214\014>h\336\202\275j\337\316\274\220\244\313\275\005\'\346=aN\304=\222\321\223\274\254\371\307\275\370]\021>\035\304\226=\271S\t\276;7\366\275\222\362\021>\264\017\036=\324\277\020\276\337e\024\276.L\337\274$\r\347=\327:\275\275\036\306\r\276\244\354\036>#\241N\275H+\007\276[&\341=]1\330=\307Z\224=N\247\'\276\254T\t\276\306\360\342\275\314\222\t\276\252\023\'>\260p\212\275u\346\003>y\303\341=\037\243\337=\025\211.\276\033\251\374\274(0\035>\242=8>\027\200\254<\352\354:\275\301\313\024\276\203\372\250=\2479\037>\211A:<\373\310\235=\017\023\225\275yg\343=N\020\371=1\234\305<\312T\235\275-\320\n=\007\212\312=\226z <\033K\017>\226\303[=\354\301\253\275\266\262\033>\001\274\241\275v\262Z\274\253]\265\275\214\364\r\276\265\261<;wGm\275\264\366\242\2741c\000>s\247\325\275Y\251$>\"bi=\016)G=\206\214\240;\357\350\332\275\320r\034\276\262k\313=\233\206\202\274\216\3746<\236\240\260\274<\371z:\340n\364\271m\001\302=]\224\263\274\253\013\327\272\013\345h\275\303\346\030=:E\240\274\356#\236\275\276\326\217\275\311m\205\275j\216^\274\007\367\n>\177\263\377=\265\367\313=y\025$>*\236I\275^\360\256:Z\327|\275\371\200b\273\013$\320\275\304~\265=\021\210\010>\377H\361\275l3\206\275Y\351\352<P\222\025\2759?i=}\346\025\276e~=\275\201\347\234\275\372\363\350<df\032=+6\">\241\203\235\274x\306\255\275\234\004->%!y\275\216\352&>8G\371<A*$\276Gu4>\266\240\275\275\222\233\030<\227S\235\275W\007\037=\201&\021=\335\316\251\275\252Q\355\275\375\0018>\006J\271\274\335\211\367<*\354\'>\327\325]\275h\245%>xL\344\2756\371\213\274\013*\024>Fr\n\276\320)\271=\351\311\016\276\016//\276\270{\013\276\233\n\277\275\342\003\266=\317\255\245\275\036\337\254=Q\256\010>\355\254\345=\257\333\035\276)\001\031\276\246\351\002\275\021\221:\275\256\013\275=\031\341\336\274]\321\320\275JQ\346=\272\302\010\276\026M\033\276\026\320\'\276\371\207\267=I\373\346\275\220\334\352;*+\r<Rc\001\275\370\225\r>8%}\274\"\230\301=\005\365\311=\020\314\023=\371\177C\275]\035\362=\024 \324=4\270(>Hz\270\274O\365\232\275\252\213k\275\273\036\250=;W8=&\032*>\240\353\t\276\317\032\t>\241bh\275\267u2\276\323\312=\274\244/`:\272I\357\274\022Y\005>\0173\007\276\036l\344=>7$\276H\271\300=O\311\330=>\")\276\277\334G=\241\253\026\276\202\254\202\275\210\272&>\370\240\323<\351\203\001\273h\'\031\276\376Y\333\275\274\212*>U\376\331=\352Ct=<\"\320=\215O\000\274\\N\360<\267\2551\276\216\201\010>\\j\313\275\302\343\327\274\313\035t=\001x\367;v\346\n\276\3014\034=\257\314+\276\210r\210\275ls$=\356\365\031\276\370\376\327=\325X\301=(\342&=\237\002\032\276\263\307\301=}\341\217=I\3066\276wD\303\275j2\254\275HG\350\275\317\305)>\3536 \276\036\224\216\275\321\276\264\275q\277\266=\207\007\\\275=$\304=U\376\352=Z4\016>\370\211\202\275\204\254\260=\331|\272\275p]\201\275\032\204\031\276\"\333\017=\366\213\031\276\013\272>\275\010\255\310\275\247\254\356\275\225\241\315=r\023\315=<a,>m\262\273=\270\347\035\276y\2020<\215\265\263=\2233\310\275\336o\312\275\231\322\007\275x=\n\275C\035\354<r3{\274\364\315\322=u\000\035\276G\351t=*|\'\275\027r\312=\000\201\372\274\324=G=S\210\211\275OnI\274\004\n\\\275\236\377\353\273\312#\255=\r\352C=\206a\006\2762_E=\242\352\005>\361\354\264\275t\343\267\275\351a\032\275M\240\273=H\013\317\2753\023O\275\210\274\202=\242g!\275U\371\207=\242_%\276-\250\024\275\237\0318>\036\307\340:\375\177\334\275\377u\227=UZ\004>C\347\020\275\010\272\244\275\030\376\201=\316\355\"\276^W\214\275Y\000\237=\2569\257\274~\323C=\177\r\n>\212D\230=\373\312\220=\327\375\212=\206\261\256<21\024\276S\031K=\026\2011>\261\020\037\276\204H&>\223\304\242\275:\024J=~\376!>\222\006\007>\347\264\264\275(\275\217\275o\2360= \257\367\274\234\3201<\2408\032>i\036\255=\272\362\004>\244\216\361\274I\374\026\276y7,>\270``\275c\037\246=\001\243\251=g\351\264\275\034\237#\275\244T\036>\227S >\376\017\370\275E\020\256=4\303\023>\271\035\206\275\031|\303<.\013\014>\331\362\222=\343>b=\'\216.\276\330\325/\276\225O.\276\314\305\362\274+\3461>F\3424\276\0214\263<$N\271=\237\002\210=\000\013\024\276*\323\031\275h\340\027\275-\311^\275\020%\305\275\236=\346=|\255\341<\264i\273\275\3712\013\275\212\023n\275\341\216\"\276\332T\354<\320>\266<y\270\255=\027\207\323=\030\031\010=[\364\372\275\341\263)>t\324\007\276\201M\242\275l\330\323:.l\225=\213\267&\276\365%\230=\372\235\322\275\360j%>c\r\217=;\200\n\276\003\330\347\275\341l\257=I\201,>G\374d=\361X`=\350\203\332=k%\"\276y\237\377;\232T\013>\005i\272\274<\024\\\275T:0\276\010\276\321\275\310\222\377\275\360\t\020\276\240 \273\275\2175\001=\265w\342=S\357\327=\235\216\276=La\250\275\262~\265\275\356v\257\275\362)\334\275\216\0223\276\206m\252=\232\315\304\274\370\232\021\276\375%\'\276\177\035\301\275e\355i=\215\304%>\310\003-=\212{\347\275\226\262\257\275\344\316U\275\306\323^\275\225Y\317\275\025\263\t>\005\233\t<\274\352h\274\232\262\320\275o\256\264\274N\2372>*w\003\276\177\257\331\275(G\237\274\252%S=7\225\203=;c\251;\321\237->\245\227\330\275\203\275\372\275\244E\236;A#\267\275E\235\'>\001\017\005=q/\234=\rJ(>\354\237\002\276\023z\347:\352\'\204\275Z\202\243\2759_\213=\202\355>=yTa=`\257\311\275\326\201\226\273\213#=\275\205g\233=\002\254\034>\026xz\274\215\310U=\215h\007\276\250\246\366\275f\251\234\275,\311\025\276B\251\013>\217(\231\274\032\210[\275\0340\266\275>\243\347\273\027\217\034\276y\346\261=\343\027\356=V\364)\276\2251\016\276\017\376\347\273\253NE\275\005E1\276\242\324\025\276=\\\265=\254o\364\274\275\326\357=\305\351\034>N\244\034=\333`\001=\365\033\244=\310%\325<\210\004\022\276\232t\031<\324\202\250\275G\215\351\275Q\353\345=\276\341\307\2757\230\207<\3278\002>\236P\243=\333J\206\273z\203\357<\270\230\245;Y\361\250=*\377\034>~T\232<\226u\337=\326\330\024>\253\312\204\274\352v%\276\250\177\321\274\000\366\337=\210\000(\276U\022 >|\372\325=\323\005\217\275\360\315\'\276\240&k\274(J\243=f\302_\275\2268\n\275\275\335\251=d\010\000>\335\364\034=\220@\006\276\341\023)>K\211\006\276\005\233\000\276 r,\276\214\017\260=\244$\344;`\226\274=~yq\274\355\020\240\275\350\007\023\276%\220\376=25\025\275\003{\004\276\351\346n\275\370\035\343<\206\223q\275`i\340=\333\336\003\276!\245\337;L\357\033=\337e\033>2F \276\010\233\035:\210\234\254\275\010%\211= \021\326\275,\265\215\273#\242\032>\206\327\271=\355\241\373\275\"\025%\275\013\340\266<pv$=\267\032\032\276L(\330==\3679=\361p\212=\306\242q<\330\201->.\262\030>\213j\032>\220\301\027>\016r\377\275ch)=\372\363\003\276\247ZI=W\226\351=W\017#\276\325\236l\275\323-\317\275\222+\232<\n\256\002>\267\217-\276\004\312\010>\257s\027=\3064\217\275\262\351\373\275?\267\201=\234\rR=/\374\014>9\211\007\275<{U\274$\323\215</q\014=\241\332\244<j\363I=\210\231\323\275\335*\314=\305\274\177=G\257\230<\377&!\275S?9=s\226\221\275o\037\305=\373\210\320\275\n\025\370\274}\236Z<\243%\023>l#\277=\303\n\006\275U\275\347<\276<\357\275P\031\360\275i\264#\276P\014\023\276\330M\037=5A\351=\246A\204\274\2456,>s\365\233\274\344\340,\275\271\021\\=l\325\310\275\220\3138>\205+\032\275M\361\276\274\021k\202\275^\231\236\274\266{l\274\371O0>\367B\326\275\312\273\261=\326\000\225=\270\017v=\036D\240\274H\377q\275\272\226\342\2743Q\277=}\347\303=\277\214\247<q:o<b\276\003>H\313\310=\t\035\"\276\362\335E=M\367\365=\203\0148>\306\024\277<\376\327B\274\320\305\333\275\320\220\307\274D\362\022>B;\313\273w\306\241=A\033O\275\363*\024\275\322\344\021\276Ou\234\275\233c\322=\325{\017>\322\265\362\275\246\206\016\276\337\'\277=\032J\023\276\213\237\016>ch\010\276\334\004Z=\352\254/>\021F\340\275\240\000\324<\315\223s=T\2326>\357\\\356\275\230\371\320:\'\247\031>\3655&\275D\236\006\276\345\211!\275V\221F\274\377\211\376<{\212\237\275\'\312\271=v\214\304\275c\311\020>\226p\004\275\270\3403=7\367\210=\007\021F=\265M9\275B5T\275\337\265\314<cbS=\'\rZ\274\251\243\230\275\007\022m=\272\030\237=X\303\230\275x\r\006>g\333\020\276zC\300;\365\367&\276\004\305\'\276\211\370\344\275\027m\307=g\213\245\274\034[-\274j\346\311\275\t!\010\276!\354 \276\002\235\r>.\276\341\275\231\013\255\275\241\000\022\276\204\233\227=\364\267\014=\253\316\362\275\302a\252=\371\034\212\275g\3306>\260\232\246=\3712\235\275Ye\003>sK\220<\375s\227\275\265u4\276K\257\243;\205[\357<\"\237\212<i\340\030\276]%)\276\222\\+\276\037W\r\276\366\226W=#S\035\276Si\\<\001]\007\276\212Z\007\276_\260\025>\375\022\'>\357z\017>\373\t\242<{\335\235=\221f\344<\034\224\375\275\236\222\367<\304\266e=\237F+>r\016\037\276\354z\215=\324|\301<\200\\h=!\010\357=\252\022\307\272\257\365\353\275\t\277\005\276h\376\023\272\214\032\217\274V\221\257\275^\032\363=\'-\346\275\"\252\251\275\361\031\324=\317\335\013>\344\005\255<\034\371\202=\014\363\016\276P\373\323\275\264\346\014>|\017\010>\227\002\377\2750\2717\276\021I\210\275\222X\226=KX\312\275\332\223\324\275:\257\316=\345nB=\0321%\276g\275\341=\204\206^=\210\224s\275\226\325\033>\225\367\256=p^\345\274\030C\026\276\363o\027\276\217\177\313\273\316`<\275\030P\252=|F\354\274_[\222=\010\203\312<0\212\021\276^-\273=d\270\266\275\"\033*\276^\024\316=\342X\023\276\313\307\376=\3550q=\004\336\">\376)\267\275\344`\026\276\036|\010=\006\"\333\274Tv\364\274-x\266<~c\031>\231\013g=l\324<\275tZ\262=\224\215\265\275\260\225H\275(\204/>\274O\342\275\033\330\314=\227\244\037\276\301\373\261=\2337\020\276aj\345=3>\033>\366\210\251\275\022l\271\274J;\325\275\226O0\276\273\3228\276.\376`=\211*\014\275\322v\r>\266\3728>\006\326\033\276\344\220\026>|h&>\322&y=\3139\007\276\233\276R=$i`=\353p\022><\307\274=\002\273I\275\353&v=\376bP\274e/~\275i\274&=k\257\324\275\3329\243<\260s\243;2z\207=\344\350+>\3259+<mR\371\275Z\304`=\0169\257=\035\256\363=G\'\206\274R.E\27578\272=K\236\247\275:i\304\2746\242\251=M\252\306=\323#\200=]\206\331\274\344\366\270\275\213M\014>\247\363\t>l\275\007>\311\022\244;\312\262\350\275\301n\370\275\272\323\257\275\\=\352\275>\217\027\276\024\300\340\275\335*\245\275\2208\006>\233\3555\276\300:U\275\341\263\243\274\020l\002=<\375k<;\2577;\t\312\304<\224\356&\276\305\210\253\274\361\310\210\275s\024\016>\010\332\023>x\372U\275\300\340\273\275\243\204\035>\273\200\346\274\031\272.\276\253\210\364\275m\'\001\276?gW\275\343\335\354\275\024\262a\275\250!\014=Iu\n>\372*\207\275\2279\241\275b\254@<\354\262\357=\316\0134>\024\277->p\022\367=\354\351\024=\247\347\022>1\232\252=\032q\373\274\366\273I\273a\357\006\276\247\027\271\275\254\241\035>\277_\341\275\244\275\032\276i\325s=\341V4\276`\334\r=ND\031<9B\351\275\212VU\275\306Z\317=x\013.>\350:\027>\230\315\000\276\337\250\005>+\031\351\273\3508\013\276\211\234\260\2758,\331=j\231 \275\214i\207=+T\206=&W\234\274\222\354\025\2764X1\276\207!&\276\242\234\250=m\"\223=\260\243\006\276R\002\355\275\350\237\225\275\342\316\226\274\343E\031\275X\306\375;Bb\366=&@-\275o!\342\274\260E\033\276\340\220\254=t\346\342\274\314E\267\275\314\000\346<\3209\320\271\305#/>\200z\022\276\3637\315=\252=\342\275c\303\336;\222\001\250=\335\t#\276\363e\024=\357u\302=J\222\357\274\206\222\017\273\272\023\033\275\255\377\205=\024\321\204=\350\203\030\276#\326\233\275G\313\363\275\t{\035\274\212&\001\273\231\322!\276\005\363,\276\276\307\000=R\276\302\275\\\2669=5n+>\365\000^=\301)\022\276#\355!\275\335\225t<\237\236\356\275\027\262\030>\210\273\030\276\334\032\033>(\321\246=\036.\000=@/\267\275\253H\007\276\303\230&\276\265\257\317=d\366\211=h\273\312=\202\273\261\274\312{.\274s\305\322\273Ih\220=\325\027\'\276$\341\021>T\230(>UD\260\275\201\327\226=y\270\367\2757;\330=\314\007P=\315\233\310=l\301%>J8\353\273\314\203)>\020b\005>\020L\267\275\252\033R\275\347\251\357=\320\306\002\276\210(\022\276\277\026\007\2764u\262=L\336\273\275;+\315\275o\010\231\275\374\227*\276\242\342g\275\356\273\320<\334\3614\276\213\236\201=B\364U<\306<V=\262T\013\274T\242\263;\320j\000\276\316\350\320=\360_\362=^V\031>\177^-\276xq[=\"\205\027>A\004{\275L\r9\275\034f\317=B\330~\274\243\034\357\275i\3543\276\320O\025\276\220\023\265=Fi%>J~\006\276\230\030I;\005q\300<\027\272$\276\007\003\021\275u\334\344<\232\034\031>\265q\035>t\035\035\276\243\270\231\275\272V\024>-\213{\275S\244)\276\321\353\372=Cl\253\275*P8>\000\303R=j`\036\2760\214\350=\225.\306=\265\215\354=\2765\327:\376\2203=\301<5>\003 \035\276\317;\004>Y\222-\276{\223\255\275\235W\002\273q\334\037\276\363P\016>\233\341\210=\303\360\007\276@\245\004>\016-]=O%/<\256\311L=\\T\252=\004\305\340\274O\010\001\275\276A9\276\035\354+>8\337I\275z\261\024\276\302p\026;\212\365\020\276\260\302(>\304[\035\276\356\"\033>\355\277\010>w\306R=\220\355\360\274\257\262\215=P\007\324<\r\205\357\275\370j&\274ns\031\276qs\240\274$)\356=?\351\003>\024p\023\275H\227)\276\010\345.\274\267t\014\275\366m\306\275Lq%>\200\254\037\276l\263C\274\350\341\245;\370\314\321=\353\361\222\275E\372\270\275\334\031\277:\322_z\275\225(,>s\274\031\276\010\031\001>\237}\252=v\000:\275\245R\023>Bb\000>a`\244=\272\210\013>\312}\014\276\265\200\031\276\235\311\342=E_\022>\236\t\203=oeB=\036\237\221=\321J\207<\037\221\345\275\035\250\202=\3207\216=\221Zi= p\253\275\212)\273=\301\245\261\275^\001\265=\000X\247\275\324\360d:2\214\255\275\212y\225\275i\030?\275\246$7\276\301\3014\276\376:-\276\242\206\347=\020`w\275\236\177\021\275\227\360\023>9\342\255=\"9\310\275r\006\355=\320,w\274\3009a\274\226h\037=~8\231=s2\374\275\034\262#>\217\225\357<\257\375\263<\247\320\335\275\257\035E=Yw!>\023\223\020>\326\355\352;.}\030\276J\261\352=]\006G\275\207\033\000\275\326q\230\275E\261\274=;\032\026>\241\t\n\275\347\336\033=\316\tn\274?gV\275:\201:=V\237\022\276\221\257\032>\217I/>\211\376\371=\226\332\201\275\233\363\257\275\006\261\252<g\277\243\275\'\253\201=\323\276\006\276\344\246\255;\243\013\236\274>\345\n>\255Jf\274\351\226\"\276\000\325\307\275/cr<\341x\306;\312C\010\276\341\316\222=\221\341\344=+\233\247=\206\2531>\002o1\274\253\227u\273\247{\201\274M\203\214=\252\030\274=\3170\235\275\000e@;ngH\275{\310\025\276\314\205D\275\255\362\'\275\342\356\345=\263\3663>\004\313G=\223}\374\273;.*\276\221yH\275\356\005/>\320\371\343\275\"\313\215\274~\034\373<\010\327\360=r\372\367\275\234W4={\210W\275\324\375\223\275\013\367)>\322\004\362=\242\001I=\233\260\256\275\002ZQ=\260\336\217\275)F)>{_;<z\004\354=\036\264\010>\2459\256=\235@\204\273h;\273\274$!\302\2752\3439=\004\373\n;\3153\032\276\\l\226=;\372/\275)\232\001\276\237Y\313\275\260y\311=\333\215\243\275\342\207\373=\3058\310\275+B\031>7\003\211\275d=_=O%1\276\336\023\017>a\030\362\274\016\230=\275\016\320\021>U\204\340=\n\264\031>\231\326\250\274\361pc;ZI\355<\000b\255=Z*\021\276\217\007\001>:\376\234\275\374\306O\275\304\260\n\274\270Y\310=\037\203\315=-\375\257\275\245$/>\334\331\2469\263\016\243=\202O\002<\361\351\007;\252J\033>U\0304\276\342;\321\275yj8\276\3350q<B\255\265=\177\322\257<4\3019=G\243\344;*\354\n\276DA\272<z\302\203\275Xw\034\276\203(\001>\023]\203\275D\374e<\230\236\332\275\315\317\022>\344\226\245=\336\037\014\274\332E\035\276\n\377\241={`\036\276\242F\306=}\013\350<\214\357\016>\221\010\024\276.\000\266\275L\022\021\276>\341\261\275\340\351\216\275$\013\021\276\3741\216\275\025g\337=yr\024\276\340\267W\274\n\317\263\275&\031\300\274\345\245\'\276D\237\372=\271+\237=\177)s\275y\241\365\274\341\370\211\275\003w\225<T4\314=\201\014\200<y\t\260\275\267\260 <F\234\205:\304($\276I\340\312=\354\231&\274\242\316\235=\036\020\202=\274a\206={\n\203=\3566\322=}#\351\275\"\263\225=4\3346>\020\304\237\275\246\025\006>\212\247h\275:6\262\275md\276=\336\027\255\275E\003\002\276\271\236\263\275f\206/>\341\335\325=\373\271\014\276\201\265\301=\350\020\340\275\324\240\251;\314\027\335\273\363\221\026\276\236\177\223=\023N\254=\3516\302=\276b\327\275{\004\314\274\276N\255\275\345\003\204=\022O\315=}:\352<B5\311=\304\244\247\274\320\2271\275\334\n\024>\213\246&\2760\302\344\275\222\226\210=\277n#\276\221\343\262=\235H\006=E\321\331\274\014\014\'>\202H\333\274Ps\375\275\023`\003>\0160z\275\226p\021\276\317D\003>k;\312\274\314M\000\275y\242\230<\356]\004\273!\267%\276\342\370\242=s1\277\275\372=\035>\201T\234=VC\002>\231i\226<\340\356\230\275\377p\032\276\354\000\204\275\210\"!\276\2303\334\275\227N5=\317\304%\276\262g\222\275G\202 \276G\226->\233\354\341;\345\205-\276\225\206L=\276\036\323:X\313\321\273H\010\223\275}\247\343<\203\307\034\276\025\321\364\273\017\330\210\275[\201\010>p\323&>\226\231\220\275\315\354\003>\213h\222=\306&\270=\303\257*>p\270\020>\n~3>\231\030\316=\250i\214\274%D\231<%H\270\2755=\\\275\346M+==\347\231\275u4\303\275\031A\344\275|\253\227<\302\261\244\275x\r\025:\005\354\t=\034H\030\276\363\326!>\026V\023>\002C\273<\303|\377\275\261\r\347=\023\375<\273\374\017|=\216m\221=\323\023e\275j\315\025\275\261\344-\2761\275\376\275>\r\237\275`\022\007\276\267\325\021>AR\201=\340\250\031<)\303\356\275\321g\311\275\252\365\010\276\3676\337=\250dr\275j\251\270\275\n`\013\276\020\231F\275|\254\355\275\372\255\021>W\314V\275%\341\370=\000l(\276\020n\t\276\3727\017\276&\241\327<,\206\352\275\363\314\310\275\304\004\017<\270e#>li)>\237\316\235\274\204p\230=r\301\270\275\210\343*>\256\2257\276X\265b=\202c\372\275,\276\217\275\241!\375=z\237\351\275\236\'H=4\244\264<\207\226\274\275\267\250\342=\301h+\275\253i\005>\261\344\017\276w\216\307<\215\355~=\301\2138>\240#8>Kp\024\276\332\263\313\2759\031\336=\364\331\271=\035\315\303\2757\027\000\276B\335s=G\304\245=\233\300I=\323`|\275\362\200\037\276\221\3159<\353\201\344\275\362x!\276\342\337\360=\353k\305\274\346\344\227=\026\030,>\317\354&\276\206\244 \273\333~\355=\275g\351<\370$\226=\244\213\212\275y\010\021>\037\374\350\275<\031\"\276\\\366M\275\352\020\227\275_j\031>\264f\361\274M\033_\275\366\320\002>\034\017.\276\035\356U\275\366\371\025>\361?\334=1r&\276\372I%\275\307\273\300\273@\006\225=\350\247t\275\212\304\016<\373@\271=\272\224\360\275\3102\313=h\366\277=\201\240\314<)\035\345=6\272\343\275m\305v\275\373\362\032>\202\304Z=\3200\026=\206\262\374\275\351G!\274n\234J=\022\027\335<\030\003\217=\242\273\322\275~?\312\274u8\355\274W$\363\275\352\354%=\327z\267\275\274\354\271\275Y\374\022\276\333\013,>\315=0\275j\275\365\275gF(<\223\202\r>/1H=\272Hw=\365\002\340\275\255O\032>j\304\342\272\345\226(\276\362\320\235=qK\207\275\261\220\302\275\001\352\221=\367\202\036=\366|\251=~\270\">\320\236\364\275\257\224\006\275\004|C\275j\033)>\246{\016=IV)>\265\3048>ur\234=\367Q\001>eV\024\276t\237\003>\033O\273<[\303\002\276\214\266E\2753\344\376\273l`\035\276H\r\214\275\037U\323\275x~\232=3\273\013\274:L\343\275\005\320\026\275\255G9\275soN<pUD=\031\301\262\275mj,\276\223\320\362\274\234q\340<\376(\033\275\337\220\234=\004\000k\274<\227\317\275\207\333\262\275\355\000\325\275\243\251\037=?q\001>k\351:\275\322\375\t=\360\313\024<]\242\366=C\000C\275\225\344q\275[\033(\275Z\013\327\2734\013O=\373?\026\274?,\275\275U\356-\276P\2053\2768\352\325=\325&3\2767\216i\275!\363\355\275\345~\372\275\341y%=/\220\253=k7\247;\330\243\023\276\350/k\275\361\327\224<H\277\025>p\222\262\275\366@\031>+k\375\275\300n\303\275\237\033\322=\307\253\311<\306S\375<\223o\341=\353\360#\276h\001\272\275\305\370\032>\201E\020\276\000\251\245;P\317\336=\020\341\314=\\\013\320=\323/\006\276Wh\206\275b\264$\275<\360\221\275e\304z\275>\221\026\276\215\255\373=\202\211\310\274\022\030\301\275}\232\320=\031\306\250=\023%\014\276V\\\'>\016\326\377\275k\020\020\276\037\003\272\274\274\300\020=\314>\017>[PI=B\2350>\261\342 >\220M\"=\354\325\'=\2279\201\274\240\330\330\275\303\331\221=%g\014\275\366,\002>!\202\247=\016\376\265\275)]\324\2752\223\216\275\341F\004>\247\371\206\275r\246\204\275\214=4\276\352\360\034\276\372\227->qw6\2758\363\023\276\205\032\317=\006Z\337;\332\226\r\276\305d\022\276\234\373\014>\346\317\234=\243\345\213<]\266\316\273\006\263%=t\2451>\023\321\320=\321Al\274\324:\273\275h=\033=\210\036U\274/\243\322\275\240\253\274\275$:\013>`\223\001\276\n\277\330=\314\3210\276\035\337\307=S\251\025=\215\3124\276\2113\037\276\236\010\337<\365z\023>\376\375\341\275I2\310\273<V/\276\302\326\321\275w\374?\274\312\374\356\274\250p\273\273\220\255\223=\330A\365=4L\020\276\003g\314\275\004\022\013=\371\035\034>oP\016\276\220bF=r)\355\274\301=\277\2752\304\267<!\365D\275\237\347_\275\302\023\365\272K\004\264\275\357\031\003>~NV\275\366\217\315=\362H&\276\215\317\017\276\344\334\244=\227\317\313=a| >}\204\n>\313\304\265=L\002\231=/\222\343\275\223\337<=}\350E=k\373\021\276\324)\256<\246\272i\275\240\227\275<\257\220\030>-\245\205\275>\304\036\276(79>\356\333\326=\372\252\345\274`\330=:N\214\253=\245\305%\276q\233\205=7\373\276\275*2&>\3413\241=\332\\#<d\204\204=\2371\241\275\034\013$\275ab\235=\332\217->\013\350\264=\205jn=\003\361\026\276\230\375\215=x\337\310=\017\321\020\276\'\001J=e\347\035\274\017U2>\177\"?=!^0=\022-)>\304\001\030>w\230\357\275e\030\006\276\350\273\315\275;\306\254\274\"\225\327\275]v\006\276F]\207\275\205\337\212\275\302\311\013\276\361(\227\275B\311\002\276zh\354\275Ga\234\275\335\331\266\2759S)>\355\223\345=\354\234\371=H\347\332\275fZ(\276\326I1>\'\021\221=\0368\355=\340\376\332:\232=\360;\257Q\037>+-\363\275\371\370\037\276Oz\"\276e\023\240\275\0037\320\274\316\001=\275O\224f=\2127.\276F\326->\325I\005=\260\033)\272,ct=\350\265\235=\323\355\177\275\3570\013\276\203\245 \276\257J1\276\374n\334\275\357\267\313=\235\247\026\276k\"$>=K\225\275z\232\201\275:\252\024>\215\254\271=Y\036\317\275(\317\'>\342\375\300\273\226(\007\276\225\017)=\343b\310\274\303\326\334=\2107\270=\244V#\276\r\301\216=`7O9\334\r\006\276z\\\014\276\204\341K\275]\342\210\274\275tz<\217%\215\275\322\256\241=\323G\234=\271\325\021>\230\331\364=\232~\002<\004i\351\275\177\2770\276YS\261=R\210\232\275*\261\t\274\262\266\330=\334\017+>T\366\272=\317QO=d5\003\275]v\r>\351\016\310\275\260^\024\276\355\365f\275\255 C=\224\037\000\276\303\013\016>GvA=M2(>\r\"\313\275\273\252\234\275\327\322i\275\206\264\026>T7\032>*\340\026>>\217E\274\364\231\326=O\314!=\300\226\030>\225\221\341\275\333\337\'\275xN\337;\256sU\275\317\3103=\351\306+\273\206B/>\267\340\234\275P\024\240=\257/\240=\276\023\211\274\274\3205=\231\262\363<\314\371\201=\220\236\'\276\'\241]\274\273\371\262\275\205\266)>\231#V\275\222\356a\275\004\342\205<\201>c<\372\362\013>sx0\276\271n\t\276\223\262\304=\315\307\002=o\220\265\275\202\373\356\275\325\032\220\275nh\331\275\204\2631=W)O\274c\217L\275\276s\376\273\200\2532>\202&\247\275\361\303\251\275\345G\224\274v\334\033=\266\n\210\275;\237\207<F\204J<*\034\312\274\220\210\255=\022\356\016\276\216\023O\275\361\304\301\275\275uk<\371\362\030<\016\251\377=>\024\212\275\343\345\005>C\023\353\274ah\t\276\027&X=m\217\243\275\331X\036\276M\013\025>\000\037D\271\211\257$>\360\014\371=2\001\227\2755\223\207=3\025\367=\253\276\200\275\324\036\336\274>H\205\274\231\373\266\275\2148\364\275\337h(\276\033\321\361\272\031\355\266\275\376r\006\276 h(>\377/\235=\025\n\277\275\366\271\017\276\020\335\004\276\037\320\341\275\266\346\034=<\013\006>\243\007\024\275/ \023\273\255\3042><\026\006\276\036\277\035\276\233\215\000\276d\342\300\275\253\361\'\276z\377\031=$\365#>I\241\200=\310?\327={\353\245=\220\205\276\274\272\252\263\275\010\203\331;\353\235r\275[\306Q\275++3>B\333\004>\010\355\215=K\221\r\276\230\342/>\2475\233\273\223\250\005\276`\266z\273\027n\331\275K\022\234=5\210,>\201\033\374\274zlo\274?EY\275\037fr=\325=\215=xt&\2751\256\001\276Pk\313=\t\335\276=-%I=c\3725>M\351\305=L\366.\276\035\372\005\276\375\254\035>\346\357\202;\021d$\2764\347\327\275\300\240\261=b;^\275$\235\364=\306\300\035=\016i\344=\003\002\003\276`\331\252\275\257\027?\275\214>#=5\035\326\274\031\217\035>\272\3071\275\210\355\016:BE\224=\272\351\204=\244\211\r\276O\203\003>\215\312\306=\236\357\343=\313{\217=l\374)\276ld1=\007\311\253=\351P\014\274kF\306<\252\241D\275\225\347U;\322\034\034>0J\367\273@\335\277=t\257\023=\242\226\346=\010\270.<Lk*>$n\t>\033\310\366\275\212\273\361=W\335\347\275\217>\037>x\224\252<\272\366\326<\374\231@\273l\373\n=\312x^\275\177\014\t=\247X%\276C\201\005\276\214\230\356\273\262_(>o\241\241\275\226\257\252\275\373jx\273\006\270-<L=\'>F\354\">,\271\331\275\245\366k\275rq\033\276\tJ(\275\207\033\241\274\260\000\373\275J\200\340\274\322o\267\274\375\253+\276B\220\336=o\326\t\275\377\005r\275\364E\177=y\3613\276\376\0233\276\343\276\322=B\326_\274uL\001\276\212\220\036\276h\266\237=J\300.>\271\225\007\276\351\237\213\2750-\345=E4;\275X8\213\274\240Z\252\275\223\003$\276\255I7=\313C\005\276\212EP\275X_J\275\210,\307=\031\256M\275@/3\276\335n\321\275,L\312\274o(\302\2754?\036\276L\364B<\002\233\240=<Z\017\276\314 \r\276\322O\007=#\000<=\274D+:\032\216\256\274`=\203\275U~#\276\375\374,\276\372H\260\274\347\256\033\276p\201\311=\240 \213<\314\274\241\274u;1\276\020%\224=0@\020>\002\007\277=\247\265 ;g\361Q<\002Yp\275\341\200\006\276\352\3524\275\350)7\275sG+>\313\330E<\0058\004>v\243\357\274F\256k\275\277\277\030>\035\225\314=az\014>\244\366\'\276S\237\230\275P\006\207\275w\006?;\346\252\030\276\363\232\037>\333\233\016>\317\342\023\276\016\320\266<\304\226.\276\314\000a\275\'-\362=\364\244\n\275\223&\031>\312\0340\273\305\272(\276\270c\217<T\361\013\275\\]\244=\277<\024\276\207\025\020\276\030ct=P\340\276\275\364~\255<8\241\263=:\013\254\273\020e\022=\035\251\217=\346\023\272<3\352_=NnY=\033O\000\276\235\321\002>\354\212\262\275K\302\002>\210\t\364\275x\374(\276\275\002+\276z\272\241\275)\306\277=~-<=d\264\003>\243\247\253\275;\254)\275\036\356#\276\273\201\236=\234\220I=7\277\214\274!,!\276\222z\306\275\350\302\317\274\346\262\010>\331\226\210\275\310A\016>\237\222\360=\344\014\004>|5\371<c\371\010\276\031W\241\275\301\337\037>\010\365\313=\244R\361\275\252\260\335\275\\\244\032>\274\306\200\275iJ\t=\2316\003;\363\177\266=\333\344\037\276T\230.=\330*$\276\037\355\014=\342\373\245=\"\252\010>\025$\365=?\252\"\275\345\252\037=o\247\222\275\r\256B=*\317=\275\301\225\272=KY@\275\346\216\025\275\256\356\020\276\335\254\016\276v\207/\2760\353\335\275\002.\343=\334\372\006\2768\233\264\275\303e@<\352\356\337\275\'\334\317\275\352n\251\275$S\212\275\267B\004\276\274\347\'>7\t\030\2753\343\357=\304\353\031\276\331\337\236=!1\022>\2470\n>qi(=$\221\037\2768\362\307=\206\311\034>\225\375\360=\320\277\372=\303]%\276\034S\266=|\231e=\215\230 \275\352U.\276\365PO\275_\032+\276u]\t>\036(\260=\345)\240= \336#>\252,\336<\"\036\024\2760\275\243=\254\333n\275\204{\005\276\020\322\027\276\277\n\022\276\252\316Q=\277\344\307\275^\004\355=%\363\350\2753J\014=\t\260\322\275\305\361\027\276\365\306\200\275\303,\027=\036\3341\275\035\261\022>\350\'\025>\217$!\276g\320\255\275|\244\t<X#b<\353\006\325\275\020\301=\272\272|R;\261:!=\247\005\003\276\341>3>\\\004\331<J\374+;~\370|=\243\3345\276\246H\271=\310w\324=\225D\267=\275\270\002>\371\330\261\275\351\323\337\274/H\222\275\027\2478>\306y*\276d\200\003>\036\002\342=\346+K\275 \252\314\275*\220\034\276\347O\214\2758t\034\276\317\030%=Y\347\245=R5U\275\356\t\204=\337\037\016\276\360q\260\275\307h\345\27494\022\275\233\335\013\276!L\006\276\301C\210=\251\034\002\276}\'B=\325?\305\275\345\221T=\365\271\003>\321r\313\275\345\275\245\274\325\374O=\360J\256=um\261\2755i/>0\313\220=\301\231\314\275\276\272\304\274\271,\230\275[^g=v\362d\275s\303_=\207\"\033\275\014\3774\2762\306\374<\371\334\213=|\001L\275f\221\270=\304\266\005<+F\246=\037\323\247=\360\355}=\2502\224;\005\004\314\275\353\300\033>C\024\364=4p\273\274C\331(=)\016\350\275M\313\203=@\3553\275[\246\315\275\200j\375=\307QG\275>I-\276,5\313\275V\334\224\275\325\267h\275\202q$>\200\2551>f\003!>\0177a\275\210\351)>\340\340\013\276\337\036\207={P:\275Oo\233\275\306\017\366=\277\307E=e\362\257=\335\215\022\2753\020!\276\243\001\211=\277.\022\276W?\022\276\013XW=\031\300m=.\3462\276\327\022\205\274\274\233\242=}\275\023\276\262\005\003\275\252=\357<\310\371\344;\231\315@=\343Ml=\317>\220\275\243\020\335\275\377\267\350=\022\233\212\274\017\346)\275x%\236\275\317\223\n>\203\375\341<\363\030\227=\024\376\027>\364\034\003\275\336\232\267<\035R\236=\372\225&\276\312\242\004\276\274X\004<\363\210e;\277\261\"\276Yd\323\275=\344o\275\253\214\231=\257\231\314\275\274\301q\275\216D4\276\204U\267=\367s!>\215%\025>G\367\032\276\362\240^=\207\240I\275D\324\323<\370\300#\275\304X\252\275\n\237\r>K\325\200\275O\203]=p\367x\274\377\210\247=]\0307\275\312\213@=\335_\005\276p63>\250`\002>}\tV=\345\373T=>\304\235\275\217\336V\274Z\344)\276\337\267\375\275}\274;<\351\353<\275.\1773\276Sy\231=\320F\014\276\311]\340=\205\370\017>Q:$>}\\\016\276\320\035$\276\270\326%=\276\003\231<S\t\356\275<\236\022\276\370\343K:\212\270\324\275,\320H=6\333\177\275\021I\207\275/]\315\275z\310F\275\205:\335=\273^:\275L\344\226=3KE\275\310I+\276\231\331\350\275\322K9>R\r\037\276\257u\014\276{\332\036>\027{-\275\025Q\031=\212\333\201=\211\027\377\274\314\030Q\275u\301:\274\256p3>\346\233\001=,\365\034\276\316\261\\;\221P\023>)J\232\274\227\016\354\274\220}\'\273\2627\242=X\242)\276\r:\r\276\024)/>h/\014\276\343\014j<\345\306%=\3643&>\253\206\331=D\345\272\275\241\225#>\263z/\276\017\210\005>;\361\264=\313q\211=\014=\025=\271\244\350\274\352\364\031\276u\226\262<1\200\007\276\352\275\306\275\0005!>\263\355\360\275l\241&\275\024\325\317\275b\247\357=\312n\357=h+\371=&$\256\274\216\325\225=\340\333\035\276\205\226\351=\2706\000\276\377\372\212=\222\032\370\275\215\257\362=\317g\240=?\370\002\276\n\242\032>\314\220\327\273\211\317\030<\r\372\334\275\024\372\032\276D\250\231\275> \'>e\177\254\2754\314R;\"\337\323\275*\274\034>%\222\223\274\227\352\270=\031\376j\275\331\325R\275\267}\322=9\346\005>h\343E9\363T\021=\232_\t\275\"\361\202=\020+\014<\235\324\034=\326\231N=+\031\n>\370\312\325=z\n\216=\345c\017\276\350\276\251<X\177\310=\014\233\306\275\334v\035>\211\375a=\211\223\220\275\373\007)\276\335\355\"\276~\303\225\275Y\265\">\"=\252=\3568\326\275]{+>\2437!>:\177\331=\233b\314\2751k\216=\236q\234\275\372\253\023\276\354m\265\2746j\005>\267\273\226=\306\020\220\273\330w\005>H\'\365<\370\231\246\275R*\014\276\252\276*\276=\277\237=\242\"I\275\257z%\276-\346\247=L\354\300=\r\354\246\275 \323\006\276\\\217\234\275sm\376=\017\202\307\275G\254\201=\014\267-\276j3\r>o\347\340\275\000\340m\275.\350t<\367\227\030>\230\223%>A\303\333=\347\321\026\276\263\207\004>\353_\322\275\216C\360=\315\305\272=\215 \036\276\276\334\376=\244g\016>\\)\346\275\3650.>\024\314\000>\r^$>\227[->0)\353\275\024\354(>\331Z\032\276\362\232\240\275\250\223\006\276\273\021\271=f\361\350\275\333\313\025>Gb\337\275\207=\n>\315\031\035>\261\000\272=\226\247w=\345\332\253=\377\214/<z\rM\275T]\004\276\207[\264<\321\226(>\202\255a=\365jX\275\253\217S\275#\343\210=\201I\272\275\2666E<\247FA\275\203\253t=\335\371\335=\204\213\221=\206\363(>;R\007>&\217k<\226\177\261\275\376I\250=\241@%>,5\222\275\254\362%>\222\t\256\275cD\021>\270\226I<\370\204\021>\320\001O;\324\025\244<U\374\003>\2778\303\274{\221\240\275\230\275\307=\266B\354=\260\331p\275\333\355\360\275\032\253)\276\365\210\027\276$\322\016\2749|$\276h}\026\276\234\371\353\275\362\340\030\276\245\374\262=X\271q=\036a\244=\324\262\376\275\2615%>\255\3270\276_4\313=\007\342\014>\210%\026>\010\325\330=\215\340\\=\226}\372\275\204\235\362\275\275\324=\274\004\030\272\273$o\244=<\222\001>\213\311\006\276\357\270\224=+\024\t>\300\233\322\274\241\'\255=\306:&\276\230\322\240=+\013$\275\357\236-\276\302$\211\275r\342\326=\n\025\263<\3339|=\250\362\302=V\t\344\275\034\205\224\275\335\302\014>\031\261(\273\017\336$\2764M\210=N!4\276\274\021\203=\272\315\035>\201l\237\275&\201*>\322K7>\244\352\223\275wX\202\275\354\374\214<J\0240>od\037\276(\332\232=\337\326\222\274\237\310\363\275I{%=~\254\267=\374x\201=\263U\023\275\371\007\230\275\300\036\335\275/.\227<[\243/\276\273\007!>\254\345U\275\205\275\257\273/\007.>N1\006\276sU?=u\023\235\2758\025\256\275>\355\r>\254\230\347<jr\226=H\0073\275O\343\370\275\030C\370<\240\242\'\276w/!\276/[\333=\300\262\014\276l\347#\275W\026\016\276\211\355\277\275\266\'\t=\226q\037>n\277\336\275$\351R\275\001\271\035>\370\335\373\274\361O\305<\"\232\376\275C`\306=\031\035K\275\320XD\273:g\276\275K\225\026=\220\320\260=\027\002\237</\327\203=\211\034\273\274\333X\270=*\274!>\027`\t>0\2241\276\226\321\031=3\361!>x\221a=I\213\260=FU\017>_T\n>o\212\017\276\300\215\001>\224`/\276JR\343=;\220\030=\017\271\347=1~*=h\331\">r\211\352\275j:\313=\333\006\274\274\260\370h\275\014)\r\276w!\250\274\242`\001>*\'\214=\267\217\000>X^\203\275M\200\250\275~o\037;\2217\'\276\201\206\010=\245\226@\275\'\n\274=\222\254W\274\310\025\000\276\356\263\200\274\311\tc=\303\211\r>\262\230\325\274\253c%=\013k\316<\220%\214\275\n\365.\275\323\361\'\276\210\325M=f\370M=\322\256\014\276m\317#\274\2545\203<\263\225/>F@\351\275\217-k\275<L\257\275w9\271\275C&@=yG\320\275t\264\230=\004C&\275\332\026\275=\264\177\377=\360&2>\340u\013=f\032\314=?0p\275\366\t\202\274\303D\035\276h2\004=\254\277>\275FV\010\276*\342]\275\372\354\360\275T|z=\220\217\005>\224D\032\276v\262\034>$\267\004\276<{\n=\023\202\035>\357\231\005>s\025$>\025\270\247\275\221\200\030<ePh\275\241\375\364<\233 \257=\323\037\344\275\007U\233=\236\276\\\275\231t\n\276~\002\010\276\212\350\252=Q`\027<\032\367+\276\256\261\000;\nt_=\265\342#>\t.\'>t\2179\273\207\213\363\275\250jr\275\263~\344\274I\254j=\"\365:\274tY\344:\315\363\027>\"\262\262=\353\232\371<\375\322\311:>\013\353\275\244\361#\276c\256\365=B\2605\276\303]\204<q\036\r<\311m\217\275\315\275\024\276\333\026o\274\207\373\311\275\036\242F\275\353\315\200=?\203\002\276\340\037\372\275\371x\226\275\025\231<<\250\253\311=\221\247\177;!\352\275\274\260\272\007=\351\354\322\275\005\002\266\2750\317\223<m\245 \276\344v\331\273\245\320-\2768\276\365;\274\034\342<\033\341 =\202\311\201\274Le\027\273\240$\311\275\273R \275G\027\342\275n\323?\275\375\336\372={\006\312=X\2008\276.\3625=L\3653\276\252\276\223=\240\216\343<\225\263\033=\225\265\210=\345s\212\275i<\025\276Z\346`\275\335\034 >\217\006\325\274\277\314\316\275\022+\200\275\022\300\306=\363QX\275P@\034\276\000\341\026=\002\246\256\275\026\222\251\274\336\316\276;\203\347\214<@\372[:\014\251\342\275|j\026\274D\335\203\275E\220\314\275\346`\273=Q\334\277<*\020\"=J\200\275;"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\330\310S\272\360\034m\273\200\265\237;\226\024_\272\022\016\234\273\220\016\233\273r2\232;h.\013;\252\001\236;@\363\243;t6\234\273`\365\010;\240\362{;hp5\273\202I\224\273\375r\243\273\333q\240\272\213e\026;\243\217\267\272\242<\236;\352\275\226\273\020\240\233;\274\033\242\2734\206\205\273\256b\177\273\2602R\272-\246\242;G\312\026;\004#\242\273\316\353P\273\257Pw\273\307\033\336\272@\227\235;\324<p\273\024\235\243\273h\276\034;\344\301@:\354\270\221;\206\257\223\273\022\332\357:\n\305\234;y\022\235\273D!;\273\242ww;\223\366%\273\215?\221\273\334\335\030;@\251\234\273\201q\207\272_\215\213\272\322v\332:8\304\272:\362\357\227\273{,\242;\202\261\237\273\013\215i;\010H\000\273\022_\232\272\204\177o\273\n\331Y;\rR\210;*j0;lF\205;v\272\371\272\204\211[\272\276_k\273\212\303\236;>\304l\272\006\036\232\273\263\316\232\273\023\244\236;\262E\003;\303\241\235;\320\353\243;\320I\234\273\326L\022;\030\335\204;\306W7\273\340\331\224\273(\241\243\273\230d\233\272E\317\024;\321\361\273\272\352\n\236;K\177\226\273\306\034\232;\210F\241\273\264\205\211\273\360\361v\273\032\0330\272X\217\243;BT\r;V\016\242\273\036\014W\273z\211r\273}C\346\272\254\025\230;\232>k\273\n\200\000\273\206\315B\2724:\230\273\300\307\233\273\340\200\233;\265\020!;\260\317\235;}\360\243;\262\261\235\273\022sP:M\347\236;\006HK\273\224^\226\273\352\257\243\273_\005\230\272\010\344\006;\002|\271\272{W\234;b#\226\273^0\231;\312w\241\273\222P\214\273\312\010}\273D=\222;_\334\243;\326\326\376:@\251\241\273 \024d\273\354\023o\273\2742\345\272"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\002\202\373\276;\301I\277\276\252\010?R5*\276,\345\223\276\010\020\340>t\261D?\255\214\313\277qyz>\316\t\007?\016>\"?d\262r?\201\023\201?]\301?@\351\026_\276)\2027\277\303w\016\300(\276T?\2440\033?\237\330\235?/\204\300?/\311\237?[H#\277\253.\252?\202\225h?\231\307\235?\267\373\027\277\035\227\202?\302^1\2774[6>\"\266\254\277\273\326\307\276\337\244^\277\302\217\222\277D\031\334<s\235\260=\236\003\365=\253\224\351?Xd\276\2763s\205><\006\212\277\212\306;?\234\262\221\277,:\016>\225\031\027\2773\203\377\276m\222m\277\306\276\251\277\222\0100\276m\307\266\276\350\346L\277?\030\231\276\215\276f>rJ\377\274\202\017\315\274\222\342\n?\3474\370\275\265\177Y\277\002s,\277\261c2@a\375C@\260\305\373=\033LS\277d.\314\277P\n\022\276\274\245\003?\220~\023?Av\354>\232\262I?\254bo?\324\'\366\277\231\007\324\277\335]h\277\336X\001\300[\277]\277\005C\214>\022\024S\276\211\240\333\275eU\304\276\222\242\272>\336r\253\276\312\177\r@\025\n\342>\343\262\013\276>\223\364\275\326<*?\273\321\362>\334s\203>\003%\344\275/\032\005\300ICn>_\341\251\277\220\271\016\276g\212\323?b<\244\277\357u\226?\020\201\n\276b\363W??s\202\277\026U\002?\250G#>\251\254\000\277}\242\222?kO\316\277o\016\010\277F^7\277\016\315z?\023d\004\300\020\372*?\245\004D?D\233\000@+\277\236>i|\361\277@\346\333=w\233A\277\2413\222?}\316,?\365\257.\277\231|\037\300\232\0071?\225\261#?i\214\r\277\225\2667\277\377\210\230>F\213\277\277~\021B\275z\207\033?\324k\374?\030\264y>\321M\320\2767_\'?\2318\226?\275\351\322\275\372\230\320\277q\232\342\276\\\301:?|\026\r?hH\337\276!,6\277\322\335P?\351\245n>v\201v\277\022\342X>\274s9\277\\\034o\277\224\372B\277\215\324\332\277\351\026\000\277\032\231\016>\203D\035?:s\226?_\253\337\277\343lQ\277\026+O?Ur\240?{\366\205\277z\361\341?\210\356\020?\\\227\013\275j\303\356\276\315\320S\275\241f|?\301\241z\277\246%\033@\377\t0>\202#\222\277Y\271\333\277\354\350\223>\356\247\013\277,\364\004>\032y\025?I\314h\277\277%N?\003\252\302>\310\247N\277\t\301\266>\226\363\212?\025\371\006\277U\271\205\275\372\255\221\277\3147;\277\362\300\253?\036i\001\276\t\034$?K\217~?\026`\313\277>\220I\275\033j\273?\304\272\341\276\324V#=\020O\204?P\2558?"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\377\214g\276n\305N>^\236\235?]\363\317>\345\014-\276K\177\010?"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
