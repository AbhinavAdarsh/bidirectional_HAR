node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\334\302\267?\273\227\205\276\274\210\013\300\332X\316>\266\310l\277\271\340\210\277\302\226\260?\262\251\343>&\240\224?H+J\276\254#;\277\177\322\256\2770GM?\003\241\034\3007\010\363>\264c\206?z\243\023\276\223\345\326\277\214\3278<J\276\233>\253S\200?x\014\356?\302N\023\277\360m\347\277\317,J?]\364$?\031\254>\275Xic?(t~\277\034\212\202\276\244Z\263>,|q?\275-\307\277\223\350Z?\225\351\003\277&\226\002@\253sS\277\023~\026@\266\361\346\276.\276\226\275\344\223\234\276\037p\007\277\332\024\320\276m\004\027?\234>\327\276BQ\305\277O\344\320\277?\215x?Q\342\034\300\024c\206=\342\255\252=*y\240>\005\336\244\274\302\371\230\277\\\226\235>\266\245*\273\314\016\003\277\276\r\334?&Ej\275=>\006@\207\224 @\306\331\002?9)\351\276\035\327\200\277x>\221\276\354\330k\277D\262\241\276+.\241\277\205\371\366>\343#\035?\350g\"?\177\360\273?\201\301\234\2773\005u?\244@\370\276\005\217\026\2769\246\022>w\2430\277\013\207\243?Ss*?r\345\223\276\335v\217?\342\026w?\020\323\343\277\t2 ?\344Z\352\277\252\256\272>\341\032\257>\001\324\243\276\254\221=\277\265\246@?\207\321\243?d\247\215?HB\021?\331\342#\277J\363$\276(\240$?\206\252\221\277\346\235\335?\305\265\212?\316\202\222?\201R\005\277M-o\275\334\031\207?6*\311\275A\362T\275\247\361\355>\330g\302?P\203.\276\037\202\244\277\037\007~>\204\365\t\3003\332\217\277\306\375\000\277\022\352K\275\031\224\313\277\245\272@?/\373~?L~\265\277\267\007\322?\r;.?|[O?k\200\334?;M\242>\n\032\252\277*\3610\275\'#\270\276t$Z>%\037\030>\327\276E?o\325\217?\343\263\203\277U\353\007\2779\211\004?\3570\024>5\277^?Z\231$\2776\365\345?\'\332\253={_\033?\350A\026?\314\363\222\276\023\232\004?\036\253\375\277\334_\313?\360\274?\277\002\017P\277\366f\"?W\263f?\334<\306\277\231>\243>\255\234\270?I\352\315?\000q\347\274\207[v?\223\207\025?\205\356\244>![a\277\355Oo\277\374\212\206?\354\003>>\265[\307?\365\n@>\340\3500\276xY\204=\321o\301>\371\203\325\2772\373\200\277\376\225\320\275R\222\264>\017g\264\277\034\335\177\276>ZU=\016l\244?\211\362\034\277\240\217\311>\333\030m>p\234\357\276\004\220\244?s\263j\276\3616\017?\253{\244\277\332\342\273\277\214\027\007?B.q>\030\335\231\277\201X<>\302\307\000\277\'\322\313?7\232\020?E\306\321\274.\333\'\276K\336\227>\376\317\360?\3332\302>\204LK?\325\201\341?H\023@\277\330\234\240\276\263\336\203?\235.\372\277\370\002\312\277\022]\373\277\324\001i?)va\277\377\324\002?^L\241\277\272\367\200?\271c\004\277\313\324\260\276\205\313\327\277\360\236\023?\2248\203?*\252\222?\235\003V\277\317\037a\277\307V\300>6\211\250\276\353\375\010\277\025s`\277!w$>\371\007\374\277\206\321\301?x\304)?\207\3560\277\250\300a\277+\032@?\362\005\226>\037\006\235\276\315\201p?\365-\306>\322\316\233\276\033R\223\277\247\347\366>?\226J\277,O\256?\232\312\007\300c\370\r\277\202\016\'?\032\215\255\277\257\000\311\276\003\034B\277#\234\330>/\356 \277\027E}?\r\001\207\277N2\265?Sp\227\277\245\023\252?\0004%\277i\233n\277\366\231\351\273U\333\331\277\360m\260>D\335\322?\031\010\335?f\302\245\277\357\324*?\233O\275\274\330\225\214>9\363|?\367\324\r@\0148\266?\220M\204\277<\030A\277\022+\205?\005\226\330\277\"o\360>\333\020\307?O\301\'>\376\006\224?\333k\017@\020\357Y\277\"\006Y?t\243\217?\326\237\261?-\335\036\277\375\245\177\277\001>\317\277ge\376\277+o\n?\354\246A@2<\020=\t\331l\277^\325\243\276\014\3364?\204\222w\277\035[F\274"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "l\342a>V\373@?p\233T>\247=\310?\313\023\345?\2233^?\265\366\324\276{\365\312?\024\357\256\277\023\027\312?\"\022\014@\236l\240?\331\350\271?a\2203>\251\324\233\276K\033V?L\217\256>[\211\246=Y\006\350=\314g\251?n\356\010\277\316e\256?\013\312\352?!\010\360\276_\341\260\275\242V\032@\352\357.?\254A\n@\277\355\375?}\022\314>\265\273\300?y\315H?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\3428\254\275D\221\021>\001\200\362\275\324\327\031<LL\332\275\272T\304=\331F&\276q\233->\364\300\375\275\323\023\334\275}\271\272\275\230O\270\275\314\310{\272;\307\t\276\001\004\360=K\\}\275\025\265\367=y\255i<\200\347\205<d\310\302\275\365\200\341\275\310\"N=\364\257\271=gd\265=\014N\\=\r\005\336\275p\325\314;\\\001+\275c\333\255\275\241\314#;\276\374\250\272\325+\251\274.Lj;\277\214 \276d\363\000>\314\205\235=\320\0314\276\2367\026\274A\331\207\275/\202\352\275\343\227\031>\226\365@\275_\335\373=\245\242\301=\255;\347\275\035`\330\274k8\256=\002\035\253<\376\312!\276\364ZM=k\220\304\275\354\210\324\275\366_\025\275\230v+\275\363\016\022>\373Y$\276\350/\203\275\r\206D\275p\263\376\275\233!\026>\354\273.\275\315\366\237\274#\354\306=\261\206\224=\336h\216=!\346T\274\202\\\">\260\2510\276\373_\020\276\220d\304\275C\211(>\265m\365\275\317\237\232\275\227S\335=\2705\323\274w\017\205=t\375\307<\344\245\364\275w\177\306\275c+\026\276rY\'>x\222\006>\332?\216\275\275\213\235\275\024\032\037\276\014/j=\375;Q\275\223i,>\261gi\275^\227\004\275b\'\000\275\nh\027>b1\000>\000t\033>f\032\242\2753U\016>8\\\223=I\344.>3h%=\314{>\274\030\226\303\275\305h\251=\332\322\377<\250}w=\025\257R\275\311\036\001>g\022\000\276\264q\202\274\024#!=S\2216\276_b\362=~\326\372=\251\250\255\275\221\212t=\301R\224\274\312]\256\275\305\034\276\275\\\204G:\203\017\263\275*\027\003>MO\006=T\276Q\275\326\221\322\274r\355\265\275?\371P\275\374\342)>\357\251\">\016\322\344=\035B\271\275$\221\360=!=\266\273\265&I\275\362\236\370\275\262b-\276A}\001=0\235u;mA\\\275|\234\010\276\205:&>F\316\003\276\243\316\315;\3122/\2751\211#\275\304\200\020\276\003\333\247=P\354\202\275\236\267&\274*\310\273=\307\370\005>4\020\013=3\'\001\276\200\2763\276g\014\231<\344\343\241=8\331\3239k\0236\275\241\360\033\276+\357\017\276\307\333\211=\032*e\275I\021\335\274?\274\272=\324\3454\276\'20>\277\230k\275\215\035\304\275\253x\017\275\313\234I\274\256\334\026\276\034r\243\273_z8=@\247O\274\311tV=\3058\005>\201\370\243\275\013h$\276\246\023\203\275\257\211\325\275\033\2141\275\332h\034\276\367\034,>\002f\202<\255i\010\276\362\205\003>\320S\035\276\236\310\373\275\033\305/\276\212\202\r>\200\304\010>\215\344\312=R(\312=\211\210!>\210\363\206=W\031\216\274\014\206\247\274\035F\361\275\2654\335\2750\347\217=L\236\317\275\010e\267=\321t\377=mA\227\275Rx\333=(\243\235<u(\001=\325\033\343\275p\t\214\275t\354\324;%.4\276\345!k\275\220n\221\275\377\371)>\201\"\260\275_\251R=\202V\014\276;d/>\034\256\032>\201k\266=\\4\357=\216\271\016\276\367>\036>\024\376G\275\263\n\323=3\204\017\276D\221\304=\364h\343=\220\265\353=\236q+\275W\242;\275\275\342\217\274\211\326\006>\345\322\304<&\262\327=\366%\343\273\320\351 \2760c\027>\216zA\275\236\363\032>C\272\027\276\266O8\276\320\306\232\275\237^\000>\266C\333=\370\237W\275~j\313\275-\300\205\275\000\2732=\246\263\002=Gg\316=\231\364\033\275\317h\223\2753L\334=\025\221\275\275\354\307\252\275@\353x=\307E\007>\317\032\026>6\212H\275\276\276\307\274\224\223\250\275\177\277\037>\347\373(\276>\030;\275\270!-\276\017\335\265\275\237%\003\276f.\211\274aY=\275t\377\250=\277\203,\276\331B\234=\274\204.\276\214~\346=\255i\332\275\253\r\000>\026J\204\275kG\321\274\216\211+><\321\341\275#\315\013>D\377\317<-\017\'=@\020\374\275\360\267\001=\347]\360=W1w;r~\r>DL\353<w\242\017\276\274\240\213\274\375\316\257\274\244i3\276h\244\017\276\373\001\026\276\205F\232\275?\342\010\274I\271\034>\256\252V\275\007aj\275Q\245\020\276\252\021\252\275\0372\321\275\327\023\000>\036(\021>\225s\356<J\275\371<\2026{=\333k\371=jl\007\275\256\222\375\275\361!\275\275y\307\'>\325sm=?\357\266\275\373\303->\254\210\206=~Y\323\275\025\352\360<\243 \014>R\341\354<#\n\227=\313\307\303\275\257Q`=\322\232\211=\354\342\024\273\310\350\t>.\361\301=G\232#>Z\237\036\275\210;\340\274\226.\237=|\032\025\276\023q\210\275\\\312\030\276C\251\276\274\355\025\220\275\336\275\215\2754\321#\276\340d%>\320\343\t>9\247\270=\317m\222=\333\003\336=\335\031(\276-\325\245=\203\324\001\276\225\330\342=\024\304\222\275\010c\324=\")\307=m\271\257=_\326\001>\207%\262\275\350\276\027>\364\332\337=G2\350\275\"q\000>h}\324\275)\002\222\2756\364^\275?\314u\275\335G\230\275\001\333a\275\300>\232\275!{/\2762\376\016\276M8\"\276\302\025\301=w\247\250\2754\370;\275\305\356\377\275\300\270t\275<-\245=\".s<\322\036\t>\250\032O=\340\013\023\275\304\366n=\372\032\220=\321z\237=:\332D\275\231\242(\276<\2627>\264N\243\272\350`\334=\344\224\321\273\314 \013>S\275u=F(\313\275P\364\225\273\361\224\300=\227\021@\275e\013 \276\036\214/>!\2115>\344\005/;\217\366\222=\264\243\370\275E4\t>\235\276\'\276\325\334\001\276\032\314\261=\r\010\\\274I\311\316\275L\020\032\276j\377\212\275\2015\035>\312\276\005\276\256L\321=\00076=\351\230\035>\000\250\322\274\247\316*\276\22730>\035\224\326<B\210\354\273\3041$\276!\264\277=P\364\237=\177\362\341\275\r\1772\275\345D\353\275\\23>,\210\370\275\314r\242\275\010\336\254=L\326\360=\316\274\000>\242C\310=\376\357(\274\270I\313=IA~\275|S(>\ni \276P\004\332\275V\204$>CS\035=\356\004\007>\275\317\033>\336\025\034>\361j\271\275\013\350\\=\0340e\274\020\213\226=+C\343\275\231O\016\276\253\252\021\276\354u&;\022[\273=[d3\275\277 \216\275\303E\350\275y1\250=_r\'>\325\334\025\276\204\003Z=\360\004\204\275\\/\026=?D\036>\215\344\237\274\347\234\263<\214\205/\276\2314\373=\203o1>K\323\362=\250K%=\264\324\252\275\252c\001>\034\324\342\2759\321X=\315\331*\275\327\214\230<\234\224\342\275\\s\025\276@\031%\276\305\353#>\275\302\235\275k-t=\277 \234=\314\215\\=\3152\025\276\217qp;\020\351\231=-\322\004\275>s)>;+\"\275\251\021\265=w\212\376\275$\216\264=\311H\307=\304e\332=\\r*\276\020\345\000>\323\352\n>\361\337\217=T\202\237=\342\241\016>f3\342\275f\244\'\275\002 \311<\307b\365\274\017\023\271<m\273\032>U\2161\276\313\243\024>\365p\361\275\360~\352=u|p\275\377\371\024\276\363!&>C\037)>Z\0229\2743\361\265\275.\3476>q\025\023>\372\362X\275\206A3\275\346\002\033\276\254\311y<A\037\371\275\244\345\021=\362 \273\275f\177\377=l\322\036>\204\360\200;\254>\252\274\355\302\025=H\3512>\037L>\275v\317m=\325\355\343\275/?\224=l\357\t>|\345\024\276\236\033\222=\367i7=:Z\027\276\317\020\237\275\305\356\315\273\206\357\022\276\230d\346\275\007\200\200\275\311`\213<\220\264G=\272\346\261\275\333\331\213\2753u\270=\177\222\233;\306P\025>\363\265\377\274\306\332]\275\300\210p=\333\302%\276\016N\275=\242\210\002>\221M,>(\177\243=\276\n\237\275\262\351\234\273\020\005\212=`\037\337\2753\265!\276e\337\363\275\276\205\372<\224\r\007\274,m`\274\365\263/\2769\037\n\276pu\004\276\326\224\245=\210\300\327\275\252(\021\276\257L\036>\"\346\300=2\341\267=k\232\031\276\301\260\355\275\221s\305:\210\345\361\275\217\255\206\275\365\2431\276@\033a=\230\326\210\274:{I=R@\177\274\t\260<<SF\026\276\330\340\202=\373\317\220=`,\362=\257\270\315\275\2677\363=\02274\276\345V\250=B\307o\275\020a\333\275ni\345=\360V\021\276\326$\234<E\021\014>\007\026\222=/\367\022\276\333\265\202\274N\256\364\272N3\250\275\322d\327\275\032`R\275\3769\303<(\246\341< \245\337=\330\350\333=]\350\322=E\2003\276\314<,\276\360\376\035>_\301\n\276#O\n\276\032\241\r>\322^+>\277\254\337=r\0025\275s\267\306=\200+\024\275J\211\310=\3646\005\275\363\352#\274^3\001\276\024\031F\275\271\2345>\261\227\024\276nT\372\275\030\260^=\375\001\020\276*\007\306\275B[\231\275\307\347*\276\235\243\305\275\376]\225=<\233\t=O\202\030\276ng\266\274\\x\340\275\3114\037=J\262\241\272\026\276\252\275\312\221!>\256\300\023>\361\010~=\252\021\016=\207\375\014\276\270r\234\274\264\300\177\275<\321\034\274\353W\000>\030$\370\274L,-\275\244\225\361\275\2563\010>Ef+>F\263\330=\210\010\355\275\232\337@=W\005\303=\001\335 >\021%\362\273\t\352\r>De\014>\365\3273\276\n\326\030\276\211!\010>1\313\017\2764\375\222\274\210\270\034\276\022\235\320\274\373|\342=R\213\342=wO\034=\371\313\230=\035\237\266\274*^\347\275n\367\357<H\377\357\2751\374*\276\323\205\337=\224.\236=k\365\262\272Q\200\226=EX\270=U\236\357=\\\347\033=VZw=\341\222\233\275=\2422\276\316\245,=#\r\037\276\275g\013\276\351W\032\276\007\372&\276\033\360\">*c\013>\314\230\016\276\267\026\300\275)\242X\274m\210\351\275\225\033\001\276\301\357\010>\217\277.=\327\220`\275\250\202\004>\362\232\246:\001g\010>\230d\005\276\352\332<=\213\324H\275~\224\246\275g\236U\275 \310\016\276K\245\033=\346\343w=I\007\025\276\212\2731\276R\261\321=6\212(>a\2529<+\013\033\2764W.>;h\201<\331\240\267=n\201\205=\257\355\n=*\254\313=\204\353p=\024=\r\276\360q\"=\221\231/=\320f\025>w`\370\274]\276\223<\030O\225\275\375\300\277=\260\023\017\276F7\371\275\021\004{=j3\327=\370Y\031=\000\360\016\276\343\272`=\021\370r=\364S\315=\301i\316\275?\001\377:\222\006\365\275\244\254\000\275\374v\342\275\206\332\'>d5\">\226\201,\275\0161\305\275}\032\337=6\376\004\276\266wN=d\013\'>\304\204\210=M\255\367\274\304\322\'\2766Y\022=\316r\003\276{\376k\275=\323\003>\363\260\233\2756\326\035\276<\333\t\276[\225\032>\000d\313=\004l\320\275}\260\030\2769\024\221=\236#\345<I<\367\274\361k\271<C.\243=\rd:\275\346\265\267\275`Q\3018\016\004\032\276\266\377\020\276\272\313\033\275\212:/\276|-A=|\014w=*K[=IB\317\275\222p\007\276\212\241\023>B\200A=\330\002\013>\004x\234\274\354/2>\022\3365=\327\3259\275\231\235\267\274n\317\022>\252O\322\275+\211\005>\377\216 >\260\r*\275.\342%\276i\340\330=\300\007\315\271\021\311\364\275\321\364X=l\222\004>;)\320=\356z\263=\201\363\332\275u\021u\275\247\247.\276\370\244\276\275\t\317\323=u\301\342=SP\357=\214\365\311\275\261\010\207\2752)\257\275:\210\323\275\270\225\017\276v~j=#r\003>\203/\223\274\2453\"\276\013\316\367<e5\027>H\237\377<79\371\275\000\304?<\010\201\";\0267\022>\306/\'\276\013\275\036\274Rg\004\276\211\"\203\274\261W\201=3\366\272<4*\212\274\370:\253=\346\301\022>KL.>\362p\220\273\002\247\355<u\246\365\275\372K|=\364\"\224\275\324\214\207\275\314\035\304=\232e\013=\257\370\204=)\374\257\275^q\254=0\033\223\275\304\027\022\276\226]1\276\361|\000\276W\214\017>\227\023O;\013 \'=_v\327\275\346\"\252\275\254\252\311=\026o\025\276+P\375=\237\n\234\275\366R\013>\260,#\276@a\366=\273\2617;!60\27522\354\275\310\350\203\275\204\r\373\2723\337\024>G\366A=k\2271>\340\004\r>\340E\321\275\311\374\272\275\246\367t=\332I\244<\301\266\023>\356\"%>sU\254\274G\013\362\275V\206\300=\333\276\277\275\3458)>\236+#\276\200\262.\276#\302)<\214\250\325<\375\027\253\275\312\213\306\275\003\2138=h\005\206;W\243\020>I\037\004\276\226@\213=\323\262\220\275`0\350;\234L\202=\210k\002\275d\213\006\273N38>h$\024=\020\027\016>\323\033\"\275L1Z\275J\353\312\275\232\310\">\304G\273\274\214\311\230=\216\\!>\373\245-=*?-\275\014\003\210=\314\254\276\272\300\233\254=\004\317\357=\352\006\204<\214\304\251=\246\024>\273\236H\266\272\026\255\320\275\206\224\325<\375-\366=j8\322=\016\025\032<V-\017=W\365\035\276\315c\003>\370\2444\275\256]\322\275|\211/>\004\270\003\276\240\272_<<a!\275&6H<\016\333\226\273\226\227\n\276G\211l\275}\355!>\002\250\270<\274\224\237\275\340\022\035\274\010\'\206={\354\"=g\303\020=\327\341\201<\002tj\2751\316V=\246?\266\275\330\032\207=y\351\237\275\272\t\344=\303\210\303=\203\262\002<h\377*\276I\257\351\275\204B\213=!\206\"\276Y\260\252\275V\014\355<\267\341%>\020\204\327\275\200\316\271=*OL=\311a$>\274_\004\276l\276\347\275\240o+\274!y*\276i\326\r\2761\341\215=\233\263g\275\231&\243\274\273\004X=\271\224\277=\023\300\014<D-\270=\021\035\003\275\024\3676\275\020\226\t\276F\343-\2765}\312<\020:\301\275\014r\305=\014E\033>i\351\026>t\225t<|_(\276\032L\254\275y\034\032>\200\231\365\275.\234#\275\362\255\304=z\014\351=\231\236h=M\274\021\276F\336\241=h\271\324\275\241\321\020>\243j\314\275EC\215<\32774\275%\335\324=xo\263\274\217\006D=\272\022>\275\247\265\340=J\270\341=i-\010=\375\025$>\330\332\333\274\234K\322\275\"d\000\276+\276\217\275\273\031\345=\3411\023\276\215\233\350=\210~\031=\220oT<\036\244\201\275\244\375\016\276\320\355a\275\351X\310=\344Z#=\3617r\274\375\200\271=\254\312\035\272\337{*>0f\244=\321\214\305\275\032Y\210\272-\276 =\216J\026\275\274t\260\275\020\247 \276\221\352\226=\t\240\337\275\300\314\003\276\001\244\356\274\007^\037>\026\335\363\274\271\025\355\275\257\t\327\275\010\255\360\275\025\222$\276:\n(>S\006+>\200N\027=\247-)\2760\363\300=)?\226=\236{\255\272m\342!\276\337\200\307=\230\372\276\273\376/\213=\215\260\014=\366,$=\317|\237\275c\336\210\275\213\236\314=\252\261$\276\275\024\241;\335\357\255=\024\272\244\273\357\242\220\275\247\257)>\264\225\025=\356k.>.\320\321\273\275!\035>\020S\001\2750m\334=\007\355%>\372:\353=)\373\003>s\247\023>\201>\311\275\355\354\376\275\021\270\233=\371\206\337=\000\252\311=R\333\324\274\275\351\032\276\210\267.>5\320\371=Je\024\276\177L\206\275\020\020_<\'\003\023>\367\315\317=\324\230.\275y~==\357\003\371=\266{\307\275\234\201\371=\035Y\245\274\270\271\014\276\377\266\261\273\227\367%>X\r\357<\372\256\275=\0313\031=&yU\275!i\256=\307&\247;oO\322<\020\222\200\2751!\327=\236\024\027\276\366k\267\275\244\025\264=d\207\317=\311\374\001=\n\256\n<6\n2\274\200<\327\273X\276\211\275cw\021\275e\350\025=\325\237\305\275\301\376\373\275\342\261\006\275\316\265\221\275J\217\336<\311\027k\273\252\343\323=H\036\327=n\177\027\275H+\034\276\343\275\027>\010\005\252\275cm\003<\177\313\224\274\030\343-=3\314B=1\377\025>\214\327\236\274*z\017\275\201\034\004\276x{\202\275\33333\275\"\032\020>\326\215\225=\2701\207<\362\262\000=S\350\260=\322\323.\276p\321\001\271\032\354\230\275\177e5>8\232\033\276l%\245=\010\206\207=\356\014\020>\317\1775\276\320<\025>\205y\023> He\275Q\315\344;r;\213=\351#\266\275\002\321 >-0\327\275\274\2341\276\250\003Q=\343\271\305\274HS\252=\\Z\205=8\370\036\276\276|2\275\315\322\n>\031\311\344\275F\017\333\275\tY+>\035\t\256=(\217[=0k.>\203\277\306=9\031\006>\273\215\326\275\330\343\216\275\222\304\003>\227\371\220=\250\320\230=\240B\022\276\247t\023\276\210\362\010>\2323\230=N+\354\275\353\026\233\275\305\017\343=\305\200\225\275\177p\366\275\313\032&\276<\314\244\274*\217\253\275`O\035\275K(\331\2743:\337=\367\222\323=0\257l\274\rB\314<V\004H\2754\241\241\275\014\304\261\275\3524c\275ut\004=\342.2\276+#\014=[\240\001=8\252\r\276\035\004\265=Kh\t\275V,=\275@\274\355<\300\352\260\275\232\241\037\276`z\020\276X>\271<\237\204h<\346\336.\275\273\267\027\276\232\320\204\275\325W\177\2759a(>\305\356\020>\270PE\275>\261Y=ll\n\276\253z\023\276.\211,\276\261>\024\275\342\365\036\275ll\263=\252\322\344=\326\273D<\266:\300<W\327\366\275\232J\262<}Y\r\276\330\251/\276EM\363\275\355\3604>\005\262\373=e\227\200=\350\271\031\276\304~\"\276\203|)>\345>\006\276\027\235\n>\240\332\274\275\361\340\010\276/\246\316\275}\272\211\275[\016\257\275\341\300\346=\002t\233=\3263\374=0Vi\275\353Gk<$\373\266\275\364\354\027>k\361\364\275;\014\026\276\361Q\265=\205\343\002=d\331\n>\300\004\263=8~\007=f\343\211<\307\234\205=\336Q\'>\303\2362\275\352\023\316=\007J\343<\026N\213\275\313]9\275\002\320\273=\213\364\222<\345Z\247=Q\r\352\275\354\205\356=\324\333\324\274H\300\200\275\026\037\033>\2749\004>$\374\260\275\230\3427=A\352\020>.U\024>tZ\341\275\351q\305\275\376\373\"\275\001\376\205\275\320\323\262=#|\025>\2342\025\276\352{K=\036\211\260<?\342 >\365\3214>\373\250\222=\364\320\233=y|.>21\333=/\312\275\275c\242\344;\271\320\277\274M\246\272\275\203\247\273<\303\313\241\273\376\335\232\275\314\242\005\276[\344\346=J\265\226=\035G\221\274;\355x\274n^E<FS\361\275\035gC;Z\244\375\275f:#\276\330\357\340\274\347.\002>6\'\351\275D\264H\275fh$\276\356:\264<\005\216\202\275gO<=\337i\t>Y\271\205\275\226\356p<\223y\010\276\243H\023>8\024\221\273\242\010\010\276&Wp\275\2568_\275h\263\241\273\234\345\030\276c\263\032>\225\022\235\275\233\217\304\275fC\253=P\274\027;p_\353\275\370R!\276h\322-><Lo\275\233\027\037\276\332de=NT2\276\340\3031>\334\3762=hJ\332=\271+\354\275G\n\323=e\233\272\274\314\226\020\275\216\310\322=N\201\324\275\266D\257=R\005\340=\324\265\250=J\001\242\274\270G\034\276\341g(\276\212[7\2763Vr\274.#\356<\350`\223\275\343\362\336<\344N)<\325\372}\273\312\256\265=8A\031\275\276\303K=\254`\025=L\307\232\275\025\302q=#\010\324\274/#\001>_\017\350\275\346x\262\275\230\327U=Z<\271=\372I\222=\245\344\332=\032\026J\275$[!>h.\257<\306\312\210\275\366\r\245=M\336\232=\266\317[=8;,\276Bb\262=\217\355\t>(\275\246\2758\003,\276\335\033\375\275\307\036\014>\270]\272=\376\274\005\276\367\033k\275M.\374\275R\312\026\276\265\244\007>\315\234\207=S\207\247\275\3408r\275\315\265\250\274\302\245s<\007\251\236\274\273\006\273=\375\004\320\275\210^ >x\332\274=5\310\237\275\237\r\243=\365\245P=\236\267\036>\231N8\276\277\322\023\276L\n!=\274\243\007\274 m\020\276\010\240\266\27561\">Y^_\275\201G>\275\233\326\213\275\266k\347\274*\377\342\275\021$1>\240\231t;R\017\021\276\000\216\017>\330e\322=\237\035@\275\244\343\344\274\277\267\000\276\272)V=\244\250\024\276\356\330\003\276ba\273\275\376\242r<\303N\357\275\314\3151\276\307;\007\275~\032I\275\3251\240\275\224\356\020<\345\374==\272|H\2758\245\220\275{\325*\276Dm\345=#u,\276z\201\314<\005\247\312=\325\177\333=\352Z+>w \232\274_J\306\275\"\370\355=y\267\027>\201\306*>\021\317\004\276\242_\352\275\243\307\301=>*;=\261\300Q<\026U`=\020\303\203\275(\340|<f\016\374\275u:#\276ya)=\373\216*>\205\323\353\275\233\006\262\275\255\307\375=\035\322^=\024\000\004\276y\017 >q\223\317=)8\032>\272w\200=j\342\005\276OL\"=\255\307\322=1u\342=}E\003>~\351\253\274+\240\031\275\214z\220=uz9=&O\226\275\223\362V=\220\013\005>\371\"\252=\301\210\220\274\352\332\016\276\244\331\262<H\240#\275\325\236\225=\216\256q\274%\026\216;k\023D\275\262\345;;\234;\013>\204\275\336=m\003d=\0040m=H@*\276 \010{\273\262d/>\353\355\355=\214\323\311=\257>\002>9f\326\274I.S<\372[\326=c\353\317<o55=w\3553>l\256\221\272\250Z\372=\2623\035=\313q\373\273\274\236\222\275\356\334\323=_\325\"\276j-\324\274\220\274\256=g\253\312=\226\354&>vC\247:\243D\014>\372H7\276\3543\312=\322+\326\275\260\230\276\275\257s\362\275\200C\374=J\022;\274*\202U=m5e\275d\205Y=\273\305(>\342\345!>\200\250\301\275\001|,>\350\025\034\275\263\363@=\3507\260=h\277_\274|\301/>#\277\240=\267m\232=\373<\324\275`U\246\274L\246\010=\212-\250=k\2150\276\022\224\317=*\355\315\275\304\253\177=\237\343\016>\006\016\326\275\332c\373=\325\311\252\275\027\224\t\276\306\037\020>\367 \215\275\266\260\003>!\252\332=>x\207<\367\221\026>h\227\014\276\351~\346\275\275\327J=\235\310+\275|6\374<\204\274G\275\352\230\363<C\"\370\274m\265\037>\023l\313\275\336\214\272\275\201&(\276\010\216\374\275\350k\020>Jp\252\271\247\003\031\276\272j\363<X\0072>0Q\271=\007%\020\276~W\212\274v\242\201\274\365\231\253\275\347\360\002>.\254\371<\021\371\007>b\\\037\276\276|\000\276\364^+>\002`\024=\254=0>\023\251\366\275\027\034\005<0\333\234=n\304z;\010\240\263<{\245e=\260\207\355=qg3\274\306o\r>y\243\013>\205\245,>\030\355\022\2760\362\026>\014+&\2765\177->\023\247\260<\254\365]\275\351\267\367=\247>\027\274\037\254\356=\225L\353\275]<\021\276G\313\301=\374\025\347=4=\336=\225\304\374\275\235\3633\273\211{\250\275\265\340\t>|\367\010>,\205\354\275\035\260\035\276\267\250>\275J\2206>\247\2235\276\220e\021>\337Ra=~\000j\275\3339#\276\264\306\256\275V|\016<Q\330.\276\340\312\305=\370\322\370<\360(\257=[;\013\276\177K\t>\360\3215=\320\355\204<lF\377\275\037\275\236\274eO\257\275\363\356\245\275\310a\266\273\244\214+>\200A\256<\347V&>\202\225\026>\264\253\243=\027\303\306\275\323\253\203= \276(>9\356\005\276\217\202\351\274a\201\211=\323\377-<\363\256\n>\313Uj;\215Sy\275\316v\315\275Dt\325=\340n\n>\213\271\r=\374\025%>\262\205&>\005{\010>^i\375\275\333\025\002>\252g\273<|2\277=\322q\207\275\311\210\033\276~z%\276\004.\345:\317\034\361=np\023>;\025\200\275\366\243G<\215l\254=\265&\312\275h\326\265=J\244P\275\357\270k\275`]%\276\320\333\354\273\316k\224\275\006\342w=_\220\025\275\3024\267\275\216,I=Z\'\007\275\204j\013>\354gu<m\020(>\330\tV<\016\000\332=\320\260\265\275\321\260\247\275\361\256+>\320\240\201=\014\223\013\276,T$>\350g\221\274\026L\316=a?\036\275\247m\024\276\245\306\307\275\301\304\267\273zv\346=\3706M\274A\346,>dx8\276\010\214\033\276\306\033\'>B\276{=\2478\022>Q\241+>\021\006+>\324g\'\27345\n\276\236\324\t\276+\254&\276\0301-=RU\372\274\252\224\322<\017\201\005><\200\253<I3\311=f\034\327\274\r\177\n>DL\221<w\315\355<\263.\006=\264g.\276\035=\236=\002a\232\274:\355\327=\201\037\341=\n$\343\275\022I\225\275w\025\343=o\'+\276>\244\\\2735\\\'\276\312t\310\275H?}\275\2000\240=\347$\350=\376a\215\274\3307\232\275*\316\216<\332\000\016=\232\037#>JLy\275\230\307)>\343\271\263\274\361$\267\275)\330\335\275\345;\355\275\262\363#\276\220\345O\274\241\275\343\274P\375g\275\"\n(\276+d\316=\003x\363\275TU}=\316\315\230:Z\027\324\275\354K\t\276\260-\002\275\r\265\217<\355X\331\275\0135\377\275\303\333\242\275Qw5\275\312_\020\273\243\315\252\275\262\373\226\275Q\r\025=\n\245\036>\252P3>7\227^\274}\313\357=7\307\014\275n$\376\274J|\324\275\320\2270\276\267\213\244\275?\362\372=\"\246\302\275\363\265\026\276\021b\275=\327\344h\275\205M\021>\ni\021>$$~\275\352G\035\276WG\271=>3\002>\n\330\272;\354\235\006\276\355\002X=\320\024|\274\362\023z=\322\315\013\276]V\273=\225h\206\275\377\320\367\275\371\350F=q\242\256=\336u\255=\2235\371\275\370\177.>\024\2149\274Lo\214\275^\324==\177x\r\276\244\260(\275\370\227\377=\266t\233=cz\032\276\"\331\344=?\310@=\345\217\213\274\212\322\226<\\\000\216=\267\327\355\275w^\013<\356E\340\275V[\310;R\253\361=*\247\031=\304)\037\275\374\304\n\276($\013\276>\255\002>\207c+\276\320\030\334=\204\005,\274H\303\177\275\210*#\276\200g\356=3B\332=\212+\237\274\014\315\311\272\267\356\004>1?a=\230\030\347=\316\356\232\275~\2270\276\334/\027>\306R\236=\357\222\016\276\232L\214<\375A\371\275\212\024c\275\324!!>\nA\254<\t\351R\275\221\2372>\254\236\036\276T\320\374=\316.\272=\305\033\375=o,\007\276\037\"\303\275l\014\034=\007\336\330;\3145\037>C\026\031\275D@&\275*>\362=\337\3061=\314Y\177\275|\013\333<QI\353<\204\347\321=\273H\005>\364\273\237=d#\003>\372\341\213;\326#\227\275P\001\207=\033\335\371\274g\002\251\275\\\2171\276:_\026\276\337q\376\275\327K\350=\357\037\014=U5\340\274\262\037->T\023\272=\363\256U;\316\367\004>\257\236\266<\311\025\333=s\343&>\205\337\355\275Ps\330=\023\016g<\234C\004\274\376\002$>\3715\312\275\361M\215=S\274\003\276Qz\364=\340\250\357\275K\342\201<\353\241)\276\261[\026\275cb\243=A\350\367\272\335\021\263=T\250\206\275\244:\201\275\266\323#>\266G\214\275\220\272\242\275M\275\007\276\342\336p=\271\014\026>\235G\327\2750\244\"\276\371\215\202\275*I\031>\254\251\001\275{~R\275\351\322\007\275S\022u\274D\373\213=\3500\362\275\205\020\242=_O\303\275)P\337\275\263\201\253=\020~)=g\027\300\275\335D\325=%\367\203\274\303\206\020>\001\031\006\276\323P\002>Vg\202\275\3072\373\275\257\250t\275r\210\027\274dJ(=\236\216\006>\334\216u=\247\350\233\275\24081\275\224E\254<\277\300\177=N\355&\276\354\270\200\275\035{\301=\020\021\353;\372\001\236\275\267\314\315\274\\\303\370\2751~\365\275\235c\026\276~\242\223=\026n\340\275\321w\370=V\002\223=\335\301\234=o\023>\275z\0165\276\254&\010\276X\352Z=\323/\363\274\213\336\215=\322\353\333\274\267g\226\275h\241\262\275\201Q\254=:5\261=^\341\322\273\0062\247=d\260\323;\317%\'\275\257&\010\276\000-\251=\'v\214=\343$(\276\354\311\236<A\301\305=\342\325*\276.\242\367= \300\n\276\021\212\025\276\322p\000\275^\177)\276\275\376\277=n\337\335=\261\207\025>\250\272!=([\373\275\274\324f\274\376\220\244;\225\264\211\275(,\027>\266vE\275\357\342\001\276\203-\262=S\366\311<\033\214\256\275\023\326\025>p.\004\276\277t\n>\337b\013>\223\366\266\275\035o\237=\364\321v=\007\016\312\274&\332\014=\315\217\202=\r\345\324=\222C#=zZ9\276\260\030\002\276C\201(\276\206Cw=\372\230\342\275K\247\005\276\301,\367\275\337\022,\276;\375\022>\233\377\221\275h0\344=\367\036\230=v\2067<\264i\001\276\006\016\251=\211\373#\276Z\276\003>Gl\003\276y\325\370=L^\203=\267>\256<\300i\022>\314\331\240=\357\004\013\276\202\005\271\275&\024\303\275\010\316\t>}z!=k\246\300\275\320\201\213\271B\251\226=D}T<\324=n\275\347\245\227=n\200]\274\020\223\312=\215-\320\274\254uo=g\351\035>gp5>\017\262\367\275\313\001\005>\225\216<\275\364.\253\275\323\217\241\274QQ%>dl\331==M\261\275v3\004>r*\002\276Z\r\326\275=\2045\276V\004\354\275\035D\201=0.\036>_\025$\276\370d\307\2753\333\016\275~8\017\276\367\3012\273Hc+\276\375\271W=\310\276!>\370\253c\274\235*\253\275\n2\r\274\265\2025>\0232\024\276`\223\323<\353\017)=\317\267\032\2744\236m\275/\363F\275\361R\230\274d\331\035>Tt\245=u\020\">\313\214\325<\341H0\274\376p\024=@\353\256<\204\'(\276t\227\030>B\243\263=k[\t\274\377Q\024\276X\302\r>\310\342*\276\3470\000>\315\306,\276\2632\276\275p\305 <\233\005\226\274\375\031 \276\344\331\272=\372\r\243=\305T\003>.\275U\274\233\'\271<\272\264\313=r\367>\275\272L\003\276y\256N=\350\377\206=\312\373\021\276\312\276\270\275\026\337\033\275\337\362\216\274\214B&>2\307\226=\364\t!\276\211\251\030;V\372&\274<g*\276qS\254\274\016@+>\203\r\240=\3206\010=\230\372\000>(\234[\275\355\234n=\036{\013\276\225\367\006\276\305\3524>0\263\210=DJ\177\275=\227\243\275\250ch\275\033\027\001\276\275\326\212\274l\344\t\276\312Y)>\344d\375\275\206ha=\340\001\t\275o\001\027\276\240#\200\275x\326\016>\005\245#>#\246{=\326\310\225=\305\222->\340X\177\272\005\230\376=\205g\'\275\206\230\253=C\204\007>6\345\304<G\223\355=\347\244[\275\t\2312>\211\347\t\276\331\014z<(\217\374\275\344\332\006\276\3451\307=\365\006r=\373\335\206<,$[\275f\2468>*\230\337;\211Ef=\026y\t\276L\017 >\022\263\201\275UY\340\274\235\344\r>h\245\275=\316\237\357:\272\247\\;!\376\026\276\005v\247\274\344\224.>\0344\316\275!\030g\275[\206x=@\027\374=\301\032\032><\344\350\275i*\003=\200\303c\270J/\217=\264[\255<\251\207\337\275\236\306\346=\266\371\033><~\250\2759\266\367;8Mo=\274\322\267=\364\371N\275\320\307E=\004\r\000>\030\337\031\276\256\275\346=\375\235J=y\367\340:\036e\324=*\313\'>\355%\366\275*\337\326\275\363\342\013\276!\022\232\275C\215#=\242\351\314\275\237\301/\276-\206\225\274s\010+\276\202\376\375\275\350\211@=\t\316\275\275\005P%>\333,\235\275\005O\202\275)\017*>\316\343\214;\206\315\235\275p\316 >\277F\237=\3118\007\274x\n\201<\246X\026>\265\375\036=\332!\246<\033\264\305\273\007~\242<\t{#>\304(\367=\236R\231:)\372\366=\262\200Q=\231\356\351\275\247\354\310\273#\355)>\215an\274\021\247\300=\351\221\006>\367&\025=\216\243S\275\206\264\223\275\246\217\003=2\004\201=[T\306=\263%\t>\243\321\003>n\326\304\275\264V\212=\311\346(>}\300a\275\337\350\031<:r\350\275=\013\345=\201\361+\276\243\030\261=\306\353\202\275\250\345\351\273g^\305=\305\351\233\274\312\'T\275\361Y\302=\254\344\361\275\262\023\364\275lSR\275\270\222\r>\352n\000\276\022\2301\276i\267\351=\265\334\016\276\01425\276\351\031\020\276b\032\335\275\347\243\223\275VY\374=\n\2042>\243\234\034\276\346\362\270\275\310]\202<_[\"\276i\000\322\274\306\232\275=\263\363\267=\346\263/>\330\000\333\275\222\255\340=\203\232#\276\004\245\227\274\321\361\311\275\300W*6b\017\357;\210k1>\371\336\017\276\261\231v\275I\355\233\275qg\354\275-\007)\276D\254R=\006\326\256=\214\372\265\275\" \222\275\351\037\033>o\314\351=\272U\023\276\3766\024\276\0340\t\276\304~\000;\241:\335\274$\230&>\266\332\301=\025\341\037>S\370\027=\210:2>\356\212\302\275x\345\017\275\026\316\334<\352\031\024\276:\363\374=B\027\263=+i\204=\"I\003>*i]\275\001c\035>K\014\031\276s\'b\275J\242\016\276K\237\005\276\001\244\243\275&\303\020\276!\223\005\276\000(^\271C\233\233=\205\t\007>\266t\t=f~\016\275\372\202\276=\340R\013>0\255\266\275 0=\275n}\371=\226H4\276\350k|<\352J\206=mo\000\276\232\310\020=\227\262-\276Z\220\300=\324\323\037\276\314\342(>\317C\021>(\223\201;|\3671\276\242\010\312\275\013\254\037\276\254!\321<\241u\214=\233\'\345\274\227\3464;\304Uf\273\343\200\001\276s\355\241<\274\277]=\025M\010\276\362/\250\275\331\326\013\276\261\232\n\275A\330\000\276\006\340\021\276\372\377%\276\026\311\241\274\014\206l\275@\006\317=\373\261\032\276\377:=\275U\324\254<\323\221\245\275\2634\032>\357\014\203\275\326\205\217\275H\r\020\276\0001\300\275\230R\024\276\330Y\007\276\314f\310=;f\005>&\200\246\275\321\222\266\275\330\366b\275\006\306\207=\003U\247<\336\200 \276I\'\017>\030\331\356==\237\003\276\360\240O=B\307\221<\025[\266<\313(\334=\372\222.>W>\023>\254\214)>\002*^\275\260\305\002\275\313\244\004\276\261d6\275y\374h\275\004\227\213\275<_|<d)\356\273\343\325\372\2755\206\353<\272\247\020=\234D\336<{3\004\276a\357\021\276\225M!>V\027\006\276 [1\276\372\353\245\273E\334\353:\240\320@\275N\246\033>8\367-\276\342\245\215\274\031\227\n\275q\323\345\275*\265\326<h\255%>u\200\211=\262\250\231=R\250$\276Z\273\036\274\256\253\"\276\250\254\034=\266\361\204\274\315\343\236=Q(\217\274h\nE\275\230\352\000\276\025\210\225<\263\035h=!\337\002\2764@\000\276\263N\360=$y%=\345c\004>\210O\224\275\233\037\020\275%\307\030\276\370\021\213=\305\017\032>\\\377.>\254\301\247\275\340\274\010\276Q\017\217=D\217m=\311F\035\276\331\211\t\276\363M\356<\367\025\026=~\346M\275\013\262\n\276\2077\023\276\263\362\030\275\331{\030\276\032\231\002>)s(>\'\264\017\276kd\277\273\267\263\007\274\366\361\351\275\343\370\233\275\016y\363\275\025\016\370\274\t\370\240\275g\353\276\275\274\244\360\275%\341\343=-\315/\276I\370\026\276d\325\367=R[\245=9\271%>\263\t\010>\325xy=\342\253\266\274\375\313\314<\350\357h;\014k\217\2759\333\023\276\315\335\311=\024r\034\276\321\311(=jf\230\274ln&\274\203#/\276\301\360\264\275b2?\275e\370\275\275\373\200\250\275\323=\244=\247\203b\275,\306\213\275\026?\207\272@\007\333<\216\204\262\275\216\327\362=[\244\242=\304t)>\300i\343=\202\222\351\275\273\241\231=\220L\355=`N\003\276\245\333\007\275\272\235\227\275\034=/\276\263\210\214=<\r$>\002&\347\275\331\216&>\035\236\310=\322\341(=g\001\033\275\276.4\275\024\013\243\272\324\032!\276\027}7>6\323\340=\270d\233\274\200\246\252\275\234>\305\273X\311\314\275\256!\262\273\0227\272=\005\367\022<.;\250\275\375k7\275\032+\207\275\030&f=<\230\260\274J\333->\241\330\014=T\306\215\275\244\\0>\33203>U\3273>v2\232\275W<\317\274q\355&\2760\2012>\364\270\300\274M\332\262\275\206\014 >\375\032\005>\367lg\275\316\r\215<\200\372=\274\350q\356\275T\345\242\2756s\022\275\r\362\303\2752d%>NcD=S\255\026\276\232>H\275\326fV\275\017\307\252\275\t\205\221=\013]\017>\332\346W\275\354]\n\276Sw<\275\004\223\264\275\350\213\335\275$\361\362\275:>\370;V\332\370\273\207\265\356\275v\032\016\276oj\257\2730O\220\274\001|b\275c\353\277\275{\225\314\275Y\365\201\275I!4>${\">8\351E\275\240\217.\276\273\000\010>\263{/=\355\004\031\276z\013\030\276S\017\266;\210\036\322\275\024\r\334\275\036\357\343<\260\2111=p$F9\350\264z<\314\324\265\275;I\224=\274|\366;\213\351\221<\375\201\033\275d\234\255\275\215\352\034\275\367R\032>\343\332}\275\255\032\337\275\200\251\307=\2367\204=Il\032>\356\240\342=\002o\324=\213\203\373=wr\034<\233\265.\275q\367z=T\353\374\275\331\232|\275\351\201\330;\366\017\370\2755\"\274<\330\320\356=\304\230\367\275\241\255,\276\232)\263<2F\230=Q\236\322=t/\242\275\227\\$;\000a\311=p\351+\276\324#7\276\252\337\315=\223\260\007\276\305\033\325<\343\313\342=\"\205\346\275\\%\205=\333?&>\256\200\037\276dZ\336\275My\242\275\341?\216=\206\336\n>\220\037!=\241\236\030>\251n3=E\023\'\274\021Q\305=E\357\030>a\357\230=\267\014\001\275h9\261\275\376(\037\276kt\210\275U\335!<\357\355\022>\363\201\000>\213\261\271\275\362#\032\276\035\260\025>`\242\262\275\215\241\031>rPd\275r\210\232=\246\030\234=p+\002>\360.\203\275 |:\275\261\262\033>M2\331\273\221\353\367\275\315\305\247=\217\346\027\276\212S\220=X\031\356=e\362\357\275\364\227\025>\236{%\276~,\305<\317\251\022>\032B\316=X\366\350\274{\227\351=\304M/>\245\344\301=\0136{=\315T\231\275kp\033\276\0362\372=\371\352\311\274\372\305\216\275\362e5>\203=\033\276L\305\021>>\351o\275b*\032>\0332\345==\223\362\274\020\010|\271\343\243\013\276\377@\243\275M`\211<\r2/\276\366\005\326\275\357{>\275\266\250\003\276\320\277\277=G\2406\2753\372\032>A\355\216\275\317\265\241=nh\355<\325\304\211\275\367]y=\330e\275\271\333:\334=5\373\376<\212}\362=\215\']=C>[\274\262\346\030\276\2565\031\276\262w\351=Y\362\031\274?S\354\275\373n$\276L\"\033>\001\321\214\275\030\267v\274\r\315\024\275\320\313\210<\312\272$>\204\273i\275\245~\210=3&/\275\247\366\025>-f\231=\337\235\260\273u\353\272\275\227\322d<8\2103>\355(2\276OL\037>\373\321\033\276\237\004N<\273\277\263;\331s\377\275\326\324&\2743\032\031>\345\n\027>n2\362\274\277J#=\252fn<\333\036/\276\372F\031\276\354T\237\275\231\007\013>\264\232\322:\222\361\253=,\023\023>I\321\222=6\260\033\276}\177\033\275\31166\275.\232`<\241\205U=N\215}\275\376\032\276\275\337j\201=v\t\232=\372\2522\276ab!>\245\270\360\275\274\373C=j\027/\275\317\030\325\274\210?\031>\354/\320\275\257V\273=\007p\200\275P\226\'\276=\310\230=\347z\021\276ay\027>rAK=\021#\341\275v\243\355=m$$\276\276\257\321:\032\010\350\275\334\"\231\275\027A\350=\331sE=w\377 \276G\360\227=\t/\034>Jw\354=\016\257\r\276\314\325\003>\341\031\243=\366\313\230\275`\t\263;b\371+\276}\326\365\275\373v$>\034\1779\276\340\243\346\274\034\005+\276\315h\222=\267\025\224=\214\030\r>\250\245\026\276\241\232\217\275\333\3556\275\002\347\264=\032\330{=\207r&=P\001)\275\275Q\"=5\227W\275y\373+\276+\363->4\224\252\274r\013\037\2766\243\014\275\036X\024\276\337\005\342\275\335\321\341\275\256\324\232\275\355\032F\274\036\247\304\274\240\024L\274\240+\022\275\370[\337\274\346R\330\275~A\022>\222\360\257\274\206.\003\276v\244_=\373C\014\276\303\316\002>\0342&>T\017\313\275\031\016\031\275\302\334\336\2759\205-\275W\305,\276uz\020\276\332\324\301=\202\330\014\275\214lc=\262\\\252\275\237\030\027>Fh\373\275\344\333\202=\025X4\276GO\002\276\371\230L=!\340\r>\0312\237=\345\206\211\275\345\305\241\275\375a\005>\220\320\235:\363W\356\275\251\331\022\276*\"v\275\r\373>=\352\014\254<?\376\024\276)\254a=\030\313\376\275!1\340=\014Q\267=a#\224\274\240Q#\276H\273\257=\241%(>\000\305\023\276\257\221\345=Z\325\003>\336\305\347=\252\005&\276\216\001*>\265X\267=o\2107>Z\355e\275%\014\212\2755\321\035>el\230\275d\224\034\275\2057\010>\331\016Q=\202`\321=\346\347\017=^\232\352=\034[\010\276\376\024\334\272\245\314\336=\365Q\353\275\000\ns=_\243_=\035@<==B\241<\025\322\244\275S\241!\276\366Q->\353\262\216\275z\354\'>\336>\224\275U\001*<_\234\004=\030\245\016\276\323~3\276\267i/=\002\201\277\275\033G\223=\347\307\345\275\337I\321\275\273\336\010>xi~\275\306;%\276\271\346\004>\324o#\275-\004\027=\026\332\265=\3434\241=G\010,\276\000\204\334\275\342\206P\274\000\3764\276\275`(>k{\017>\374K\257\275\203\2154>\323A\022\276\210=\020\276D\225/:0\207\214<\370P,\276\037^,\276\256\336S=;\257\244<\340#\236=\242\331\365<\215;\'>\202Z\n\276\236\326\245=)\344\035\275\314\026\324\275\207-\025>y\366Y\274\007=\371\275\332\324\352=\251\250\231=\236\375\033\276%\352\365=\335\035\021>\242\261\232=\022\201*\276=\"\312\275\3157;=/\377\025=\344\365B=\317\325\003>\236&\252\275jX#>\366\265\n>\236\010\370=E.\275=\210:\211<\243\362\032>\373\202->\352\256\006>\032\006\211=\224\n#=\003\221\006\276\2060Y=\302\225\267<\002\023/=eWV\275e}\217\275\317\227\255=\273\203\216<\227\030\307\275\316\242\326\274q\332\016>\216\260q<\233J\000\274fD\236=\262Q\336\275\250-\246=\230\201:\271\233\257\262=\265\306\230\275\325\030\n>\021\013->P\007\324\274\'\030b=\262\021\033\275\000\017\356:\017%\271=6\316\022>\345\031Z=\232\351\326;\325t\272\275\262\265\t\276ZA\265<\346=-\276:F)>J\"\006\276\016\230`=\207G\004\276m(\027\276X\357\\<\024X\372=N[\025\2750V#>\003\206\323\2756\025\244\274\037#\344\275\316\232\003>M0*>B\265\t\276G0\302\275/\374\316=\354\033\363=\200\202\225\274\006\235->2\010\035\275!\004\014>\027\211\261=\347\336\n\275\370\277\202=h\301*\276\023\377\031>\353\n-\276\221\207\370\275\t1\336<N\315&>!&\021=\375\"8\276\026]\351\272\254=\027>\267\312!\274\211K-<\014\330\231\275\356>\355=nFy\275\004\027&>\226+\345=lm1\276N\270\236=\251l\364\275_\341\233\275\313\0202=\322\321\r\274\200\266\360\275\252\344\206<\331x*\276\374\254\234\274\267\336\217=\005L\341\275\337\222J<\007\247\347\275bu%\276\247\177\364\275\277\225\031\276\340W\"\276\303\371\006>\200\241.\276\004/E<\230V\025\276o\214)\276p\000\330=<\007\027=\337\367\344\275\202\323\223\274\210\233\206<\316\030|=\243.\354=q;\273=\t\310\210\275B\325\026\276B\221\001>\243\243\211=\250\001\n\276\2475\030>q\214D<\036\267\363=L\330\304\274V\314\224=\005\215A\275\260\247\207<O\032\344<b\274\237\275\034<\274\275\001\352\032\276\375\204\023\276\305\247\007\2768\203\217=R[\021\276D\025\211\275P|/>z\367;=\374\244\301\275Eu5=\316\264\207=\320\235\032>tj\254\275\312V\036>;\344\235\274\354\354\214=\355\256\027>:\2118\276\356s\311\274\366\257X\275\273K\275\275\374\310\013\276\010\223\372=\242F7>\336 \214<Q\255\027\276\271\366\324\275\305\377\226=/\221\t>l8m\275\010\250\366\275\301Z\227=\034\244\247<}\361\237=p\376\241=\305e\"\276\244\207\247\274\264\026\216\2744\372\214=aB\230\275\033\264\004\276-\271\010>\334\332\006\276\026e\355=\t\373\005\276\222t=\275\0008\374<\256\345\037\275\242\\\364=\000\243;;\"\211)\276\366Fx;\272G\004\27677\200=\357\373\234\275\272\205\224\275\t\0175>\246\336\021>cL@\275Bm)>\234\007/>\224\324*>\370\2076=\213\330\274=\214\240\316=\370\341\032\276_\213\371\275\216&\370\275f\245f=\307\006\373=\337E\321<\t\262\224\275\022\022\267=\036\2522\275 i\347=\270\305\250;\331\3172\275\342\230 \276#\004\355=nzQ=(\344\021>\020<F=\3228\230=Z?\277=\240s\342\275 \207\273\275\255\223\"\275\347\337\277\2757\2775>\245\322\013=O?\004\276\004E\034=T\375c\275\"g\367\275\305\022\260<1fl<=r7<\017H\260\275G\2224\275\241U\034>\247\222\332\275\223\036F=\377\254\266=O\274*>\024\031\037\275z\307\245\275}\340\006>\213n0\276\246\347\261=\372\221\'\276I>\220\275\271\226\307=\273\n\260=\330\312\346\275\367\333\234=\217*\357=\205\330\215\275\254X.\2765\010\207\275\031!,>X\022j=\220\235\301=\364Hr\275\025\256\252\275\033\247\030\275\321t\331<L(\010\276.\223\003=\3516g=\204\217]<|N\333=W\0277>\006\336\001\274Q\026\024>S\231\256\275\3778\n>\260\3334\276Om.\276\247\344*\276\376\351)\275\364L\312\2728\372\003::C\030>\2320,=:A\030>\201`s\275\374\254\307\274\t\323\355\274c\307\332=dS\315=\021D\300\275\013\267->\213i\221=m[\277=\302D\t\275\370\036.>\224\036 >\234\022\006=I\313P=\322\207\236\274l@t<\371\236\010\274*;\235=\227\030\352\275\227\260\205\275\233\265\313\275\350\317\315<p\177\033>M=\016>oB\t\276\031=\n\276&\370.\276\026\255Q\275\034F\327\275\236\014$=\375\353&>\266&\200\274\035\277\241\275@V\030\276g\3420\275ZX*>\256\321?\275\000K\036\276\220l\365\275\232\010\242=&\2372\276\004\227\025>\014\027m\275\366\303\233\275b6+\274\314{\241=i\006\365\273\005\241\014>\200Z\231\275\367\233c=\241\331\267\275?\301\231=g\323\224=]d\317\274[\302\263<\221\262\350<\0108!\275\\\310\003\276M\344\345\275\254,!>Z\033\"\276\262\230\221=j\326\037>\2428\003< \327\330<\260\030#\272p\205\217\274s\324<\275\017\231\230\275)0\317\275\231\205\230=Z\362\353\274\034\333\337\275\014\320k=\342\343\210=\241\252\317\275HV\256\275\357#%>C\274\267\275\342]1>\361P\206\275U\022\032\276\272\206!\274\264\304)\275\234_%>\216\246#\275\000\372\262\273\022\353\375\275oaa\274\001)\273\275H\300\304\273VfN=|\301$\276\203\312i=\342ih\275j\221\263\275\334\013.>\254\036)>\215\025\333\275\321l\273\275\277O\203<\247\364\300=y\366\264\275\370 \260<\036\302\353=\240\377\034>\264]\302=\3429G=\030|\236=\363\215z\275\024\364-\275^\260\264\275e\212\214=\3302\003>\030W\330\275>M\020\276\364\236\371=T5\017>/N0>8\343J:(J\024>\312\225\201=\0300\331<yH\013>}C\344<MP\032\276\3037C\275\241\304\363\275\317\257K=R\222\230=h\374\212\275\007\327\367=m \213\275\030\237\304=3h\210=\211i\366\275\316\202\235\275\234z\240\275\206\030\275=\021\\J\275\241U\215\275\034n\302\2758P3>\302\360Z\274\361\0267\275q\010X\275U\021\021\275\276V\013>f\214\020\276\022O\177=}\315%>\344\256\034>\207\337\207\275\207w\034>+\213->~Q\341=\"\t\236\275d\233\002>\025\003K\275\265\265\334\275\227\2659\276\247\212\033\276x\337\245=\004\251\037>\254w(=\253\357\n\276\035\002\225=\221\336\233\275\203\037\022>%j\265\2741c\006\276)\002\327=\002\360\024\276\333B\033>@\020\250\275\215\025\274\275\306k\341=$#\244\274\000c/\272\001\310%>\n\2439\274\260\326a\275qN\366\274%\004\262\275\312\216\350=?q\004>\365p-\276M\267\233<\224\323\264\275kn\037>O\3260\275\307\224\026>([+\276\204\353\027\276\205\003\030<g_\023\276\263 b\275%S\223\275+\317\007\276A\241\343\275\246\177\261<\365\270&>\024\233\027\276\323\270\177<\314\021\242\2758\213==]\"<=\016\364\037=TQ\363=\233\021c\275\335\374\276\275\352h\324=\030\325%\276\023\035[\275\016\'\020\276\377\315.\275]64>#\374\274<Ct\022\276\357\303\263=\322\301\354=@NO=5\272\033\276?\225\231<\247\2445=\000b\207=>\032\331=\266\026\327<\355f/\276\252&\265=B\242\332\275\314\335\033>O\017\005\276\236\362\277=\303\337\353=S.\256\2750\271;\274\313?\240\275\347\004\034\276`{k\275\214\324\271=\204y,\276\306\217\265\275\272\204\240\274\376{\356\273}\224\006>r\222&>\310\021\350<D\354\321\275\241\036k=k\2029>\020E2\276\302v\"=\305\204\376\274t\014u<\222\227\036>\025\334x=\007\210\020\276\016\362\216=E\036\246\275Z\033\251=\305\257\233\275\200\300\004=*\014s\275;\0146\276A\233\334=\217\350\024>?\326\347=\233w\320=<I\327\275w\255}=.l\205\275/\235\227<\2051\267\275w\342`\275\002\r/\276/\254\n=\372\r\266\275\320AV;-\327\210\275\244G \276f\246\000>\333\277\n\275Z\300j=\225|\210\273\035\264\354\275wn\375=\0329\033=\335\013\232=k\274\272=\017\025\264\275\026m\034=\231\032a\275\240\205\262\275c{\303\275zK\374<\211\305\222\275\302\205\361\275\t\005\023\275\314\275\026=*\024\002\276T\036t=\366\253\252=-E\372;/\216j\275RR\027>W\327\340\275R\257\233\274H\236\033\275\227\261\213\275!9\226\275\316\210\267<\\k\024\276\231G\363=\0348\241<\033\261\266\275P\325\252\274s\332}=\256h1>\314\226\334=\024\366\377=\264\241\r>4\014\016\275\237\t\332=\035P%\276\355|\233\275\253t\004>\271{\210=\3710\035>\240R\r>z\034J=F\2517\276\263\254\026>\360Z\320=\014\224\252=s\312\002\276B\357\227=b\357\315\275(\216\031>\317\325\r\276\364\273\243=gW$>\243k!\275V)F\275$L|=\234)\347\275:\2652\275\005l >*\274k\275\026\355\202=\237\316\230\273K&\341\275\370\024\360<\001\374W\275\346\331\203\275\240\202U=\374\2610>-D\367\275\036X9=\313-s\275\214G\246\275\177\207\215\275\036\354\337=\324\275\363\274<\333S=\353\205\000>&\346K\2752\237\"\275`\342\"\275\372\341\203=\036!\354\2757\307\367\275\217\t\n=\2655\023>w\246\002\276\004\376\244=P\361{\275\352\020\026\276\306\240\375\275U_/> \344\033\276!o\010\276\230\200\237=|\363.>\351\345\016\276\005\351\206=\246)\303\274\361\207\324\275LmK=\357\223\326\275\216\326\"\276!\030T\275\237\336\005=M\221*\276\245\374.\276\323\004\235\2753\356\327=\355\246\022>,\372\005>\005\341\342<\250\3731>*\n)\276\235\365\004>\254\260z\275(]\242\275*\010\263\275\265\253\324=]\241\265=\016\241\037\276\373M-\2753\370\014\276-\261\350\275R\241H=\362>\225=t\026\342<{\356A=i8\362\275\026\230\215=\010\001\355=\367\233\373=\\\265\264=}\332\022\276\201\336\333=\346\250\365\275\n\357\346=`\275\211\275u{v\274\366a\005>\212\242\302=r\355\023>\020l\304=l\3425\275\316\\\016>\204#\310\274\364\363\001=\006\267a=~\271\346=+\351\246<\220\006\237=\020\220\036>\007b\361\275\251\314\317=\213}\021\276\217\323\326=_\024\322<\232J\222<6^\256=z\276\243=\024g\006\276\326\340\335<G_\216\275\ti\234\275\200i1>\017\302@=\351h\366=\242v\235=\'\236=\275L\214Q\275\'\317\031\275u\034)\276\310\266\335\275\363\212\020>2\264$>\007P\275\275Q\273\254\275Iz\336=\214-~<\266\233 \273\0147\021\276\272\327\022\276\n\222!>\205\276\213\275\350\301)>\211\357\032>\006\271\213<\265\345\033>\372m\014=\312\254\255=,#\210=\372\375O\274\302\210j\275\363j\276<\241\241\250=\271\272\374\275\200>\370=4\212\221\275\367\340\305\274\223\275\354=M\374\254=\252\342j\275H\301W=\230\362]\275VV\">\316\237\372\275\340\337E<\204D\302=\247\235\246\275x\336\025\275u\2711\275\376\263$\276\340i\307<\004u\020>\214\267Z;p\'\r>\216\304.\276\354]\243=s#\237\275t\276\312\275Kl\036\275(e\357=\305\001H= \201\237\275\343\3147\276\300\033\274=\025%\307=\347\344\277\274\252\315\006\275\200I\026>\265\014\334\275\207\006V\275\364\036(\276\354\352\345=h\223;=\3134\204\275/\023\373\275\'Ko\274y\247H\275(\207\336=\203^\274\275U\001\275=$P\364\274X\310$\276Q\n\205=\212\307N=\350F.> \266!\276\025\341\t>\315\202\016>k\360\232<3fb\274\006\215\356=yC\031>HZ\214=\311\265b\273\231:\352<\213\2737>\237\237\031>\367\254j=\027\227V=\3702\223=\235\n\361=W\262\374=\235:\017>\356z\036\276`\301 \274\323\315\247=g\330A=\370\\0\276\237|\314=\275\371{=\343W/=\023#\020\275\027\203$>\020-\357=\230\330\224\275\316D\303\275\021\0267<\2721\013=1\277r;\223\352\371=[:6=[\3170=\247\014\212=_9\003>\223\337\377=\207\241\330=\225\370\017\276>\267\000\276\326\031\363<j\337\235\275\337\033,>\223\211\213\275\254\'%\276k\263F\275}\034\200\275\314\251\307<\372\260\320=\204\326\036=\235{\024\276]\n\026\276\240\216\002\275\371x\347=\204\211y\274\\\300\255<\221{\334\275[z\243=\024t3\276\227l+>\352\377\n\275\346I/>^~\307\275\262\210X\275=\242\364=\364\014\350\275:\336\212\273\232\212\037>-\344\272\274xk\254=b\037\377\275\241\331\327\274\006-\375<G\n\002=\257\320\343<U\016h\275\374>!>\211L\222\275\0163\347<\324\371\347\275\002\003\r>\001=\004\275\033\2466=3\020\256\275\273\347\330=\023\274r=\244\362\334=\352\352*\276$P\374\275\021\007\004\275H\013+\276_z\216\275\247*m<\315\2441\276\335\345\334=\371\251\210=E#{=$\300\037\276$\263\000\274\305Z\207\2753\333\007\276\'\235\020=nN\007\274fH\362\274\217\346G=\023\343\314\275\346?\216<\232\214\021=\244\226\346=\021\036\374\275aVW\274\246c\027\276#\315\314=\206\004\003\275\277H\002>g\357!\276\237\263\322\275\305-e\274\225\336\215=\346\240\t\276\332P\025>\030\321#=\270[\177=\017\017\n>m\314\033>l\005\233=\324\203\010\275 \235\345\275\244\231&>\211`\346\275\324\316\"\276\\\231\014=\264\335\333=v\322\005\276c\270\034>5$\017>v2\207=\321C\210\275T\353\311=\\y\030>\002\256\000\276\t\343\230=9\204\016\275\253\013S=\010\335\033\276\225m\023>h\315+\2766\240\214\275\337\235v=\302\025\350\274\277X\265=\207\300\251\275\"\r\337=&h\210\274\253\357\001>h\2734\274\206H\014> ~K=\205\237\310\275\007\307\306\275\014c$\276#\231\320<8\320\363=\3746\375\271sC1\276\311\353\020>\026\231m=\250\367\032\276\242\242\367=\343\230F\273\266\233\024>=D\037\2765\230\273=\353\231\260\275\006\304\354\275\261\0315>\350\370\213<\317t\027\275\343?%>EB\335=\260^\313\274\000{H\267\333\257\227\275\335\202\371\275I\030M\275K^Y=\304\013\350<\323\257b\275\242b\004> \374\000\276\3208\014>\251B\232\275\371a\367=\327y/\276\020\312,\276\204XS\274J\250$\276\205\255_<.\206\177\275dp\371<\357!\037\276w\265\016\276\225`z=\224\372&>EH\326=\370\251a\274X\370u\272\340\307\352=I\t\257\275\257\224\224\275\200n\312\274\374\320\232\275<\350O<\034\342\r<\236\240\316\275\030\230\361\273\027(\211\275\357\374\324\275\207@\310=\1774\036\275\335\267\005>4\210\270\275C\306\005<\201\330\254=m\351\262=\336\010\341=d\351\225\273t\232\341\275/\350|\274\217 \203\275\247P\"\276\270[R:Xt\342=X\226E=\224\0070\276\021\026!\276(\216\206\275\353\343\'\276\342^%\276?\n\335=\235q\010\275\000\374\3009\261x\220\274\224\265+>\251\323\276=\013\336\027\2757\253\317\275\331\367\250\275\017\002\352=\201[\374\275\021:\355\274\351\305\332<\206q\007=\273>\372\275R\204\222\275\350i\020=\'\312\310=\014\314\337=\304\272\246<Ms\265=\t\243\312\275\246\245\207=O\345\202\275\341\225\003>\301\263\020\276\022\027r<\242\230\314=&\"*\275p\017\245\275\326\263\343=\223\371\004\275!\375\250\275\371f\325\274\364MO<\251\003\345=\033\257&\276\372\020\233\273g:7<\346\243\235\273<`O\274\277_\267\275\264\313u=b\240\371\275\270)\260;\377\337\270\275\312\367[\273\024\307\177\275\306O\225\274\3210-\276,\277\t>\214\277\360<:\304\263\275\242\005\313<U\366\034\276m\006\331=\376\270\347=\267.\326=\351\304\205=\212\342\255=E\247+\275\251\335\010\274\n\343\257\273@\210\352=\360Z\020;\355\354\234=5\257\003\276+\310h\273,3\352\273\036:\002\276?}\355\275\202o+\276N\024\"\276\225\177\307=\320\274 >\177\247\327=@>\214;\301\320\371=D#\344\273;}%=G\353\371\275\347E\266\275\035/\007>\237\023\007>\033\262\366\274\271\0047=\362>%>\316T\034\276\307\312\305\275\311\347\313\273\264\024\036>\213\t.>\027C9\275\232\304\023\276\247 %\276\355n\343\275\024\210\017>\"\231\000=\210\037\376=rD\002>_\240\215=|\236$>*`\240=\262\026\370=\204\025\036>\031\355\361\273\342\260\360=jU$>6\027\014>W\255\230\275x\203\013\276*C\360=\250\377\030\276\034B\035>\3720~\275p\272\n\276f%;\275]\233J\275/\032\312\275\252\362!\276|\240,>\375\260\225<ah\322\275\273\265\022\276\t~(\275\272>4\276\333%8\276\3753\276=\371\375\323<q}\210<\354\232\363=t\243,\276\341\r\354=\302\257\021\276\235\245\036\276\232L\315<\361\305\034\275s\275\265\275\367\366\035\275\321\004\364\275\273\371k\275\231\316|=R\202\024>\306\220\375\275\347\024\244\275(\242\001\276+\240f=!B$\2764\007\317\274S\312\376\272\342F\352=\177\001$>#\224U<\322P\213\275\342K\r\276\231\342\327=\253\342\362=4\201\230\2759\250I=\235\2458\276~\237\242:d\377%>q~\276\275\274\340\316=\356m\327\275\312\247\031=\304a#\276\262h\301=\332s\267\275V\213\371\274\317i\220\274\225\256\370<M\002\316\275\331\031C=\242\332\n>B\351\373<7\235\034\276\211\200\262=\233\001\037\275\310\371\213=O\026\204\2745\255f\275]\201\336<\242\263\244\275\300\262\007>H\264\032\276\360\000\373\274\274\275\020\276\216.\314\275v\311\372\275\356i\270=l4\021>*\350\203\275\302\016^=0\306\237\275\345xl\2754\263\245=\304`\023>\025i.\276\257\355\326\274\336\350\022>\315\367\275=H\207 \276\027S\253=\013\246K=\372A\255=\270\305\002\276\245k\231<\016|\220=a\342\255\275Y*\035>\333\205\342\275se\346\274\023K\361\275\305\'0=\341>\240\275\360\242\271;\375D\232\275UFF=8\263\375\275\333\3409>\225<\004\275\376|\352\275\204 \256=\316tE<a\254,>/ \362= B\010>\305\370 \274\n\350+\2759\205/>\000b\337\275\343\271\360=\261\200\035>\005n\223=\005\205->\252\2214\276p\275\234<;\233\200\2752\351\242\275\270O\032=\246m\016\2768?\246\275)\016\332=\024\326\'\276\277\307\241\275kP4\276u\234\301\275X\205\346={y\264=\233\224\230<\017\232\021\276\344n\024\276\352\344\204\274\225\221\354\275\303p\227=<\365E\274\032Z\210;2\255\315=\037\254\232\275j\225\317\275JA\365\273g\367\021\276\267/\005\276\356\022\360=\345K\367;\275\331\370\275\3546\021\276T@0\276y\te\275\006\020\211\275\361q\264\275F\317\302\275\3715\335=\203\242r=H\213t<\325\312\010\276\030\037 =\302S\261\275\315?\327=\211%%=\261\363\314=\nU\354=x\325\211\2756\275\274=os\344\275Ny\021\276\034\246$>\356\351\034=\370\233-\276j\221\006\276\325\237\005\276\216\256\220=\311\216\007>\006\311\034\276\233\363\376<\205\200\271\274\370Z\010\274y\202\367\275\367\203\212=\274r9\276\312d\347=?\317W=\333g\343\275S(\310=:\337\026>Uh\223\275\303\2572\276\247A\360=\302\200\007\276\2039\014>\321\200*>F\251\346=\2317\264=\241\241\007\276!%\272\275\203\377\370=t\221,>+\327\363\275\354\270\247=1|\301\274\376\327\326\275\253\005{\274\026\007)\275\222\361\212\275#C\007>\275\327\253\275c-\343=r]m\275\221\036\310=Y\353\016>D\016!>[\2716\275\271\307)>\270\237\366\275O\216\273=\375\304\034\276\036\346\014\276\223\216\357\275l\366\027>\336\343\343=c\303\334\275\022\335\026\276\331\0109\276\003\325\021>\222\273\034\276\217\255\242;\211,\315\274([\344\274>\006\201==l\002=\311\257\004>\301hn\275\001\331\365\275\247B\223\275\2536\203=\001\363\344=\204\016\370\275$i\353\274\264\364\"<\202\233\376\273.|\233=\320\233\265\275\254*\372\273\204\345K;\304\336\236<\222\233u<d\274\036=ajh=\220\037\006\276\246\275\265\275\200\256/>\240\252\014>\300\264\n\276\302(\307=\311\334\225\275\303g\264=\235\373\313<\005\337\023>\273\t1\275\254\017$\276\027\362\320=Wv0=\035=&\275n\017\r\276$\372f<K\277\004\276\263k/\275\225\377\206;\347\351\265\275WS\032<M\303G=\377\245\r\276I1\316=\242\322 >\330\346\t\276B\007\n\276\354\223\277=\026\257\233\275~\313\t>\217.\221\275\337E(>\201\322\244\275\273T#\276\001\003\235\275O\330\370=\007\340O=R\013\334<\370\353\036=T\017\014\272v\216\314=\235\316+=\031\371\002\275\361\205\017\2768z\"\276\260\035\003\276\376h\203=\275\005\036\276\232\264\376=\312\353\\\275t&\261;\252\320\202=.K\230\275\r3.>\2506?=s\241\201=\203&\262=\244~\251\2754\334\250=o\3502>\247\330\234\275V\315\002\275\217=\023\276\254\206F\275j\002?<a\0236\276\2751\373=]\325\323=7-\272=l>\364\2741\254U\273\262V\025>\215\364\010>\2318/\276\345\333\333\275Z\261\244=\333v\224\275&\225\027>\303l\035>\007\367\264=;H\"\276)w\217\274\t\275\377=\340S\032\275\032%\360=J\215\027\276$=\266=?p\304\275m\342\270\275\227U\031>\342\310\303\275FH\273=?\344\375=\350\353\256\275BC\'>`\324!\276@F\277=\252\250\251=r*s\275\026y\336=@\355\313<\240\005\375\273\267\005W=\240\236g=i\256\301\275\372U\365<m\016k=\317\3441>Y\365U=\306\n\023\276\177\272L=\254\355\023>n\367\207\275do\277\275?\010\303=\312H+>$\262\324\275\310\n\262<G\032(\275\243\347\322\275(\367\210=\316\243W\2754\355\003=\'Z.>\276\266\300=\216\334\320=e\n\373=!\213\334\274q\325\323=\212Q\204=\207_\202\275\032.\022>:\245\322\274\353\274\274=\313e\345=7\263\003>\206\2666<\220u\253=\325L\032\275\330x\217\275g\324h\2758\313\345;H\246h=\'\034,\276w\017\321\275p\031\370\275\021\2113\276\335$\376\275\016\204\223=\200\013\027\276=\234\356=\217Y\233<\035X\255\275\302\232\n\276\360<\033<I\003\371\275\226\303\243\275^=P\275\364f\331=\"6Y\275\270m\366\275fG\325=6\245 \276\363\256t=\237G\000>_-\316\275xM\201\275\016{\021>\036\r*>\014\330\307\275\326\357\216\274\207\022G=\307\274\203\275\356\375\322\275\220b\223\274F\237\030\276H\375$>\241<\r\276\236A\203=\354&\325=\201\\\223\274z\255 >\211T\t=\326\232\036>\\\036\221=u\350I=\330\214\001>>\250\233\274D\336p\2756YT=a\223=\275*\024\024\273\036Z\205\275\025\204\261\273i\\\337\275\223\254\221\275\017\010\362\275\210\005\344<\240\035\314=f\311\265\275\221\336\031>\247h\331=\032\035{\275\366\253\345\274g*\305\275\366\020\234\275\277\376\372\275\333\032\205\275\020N\r\276\014l >F\255\314<\377Q\037\275\372\3462\276\236\234\234\275s\367\375\275|\177\023>\216\344\237\275\202J\300=\244\224\234\275Fo\226= \266\311=i\311(\276\323Q\300\2742\010\350=K\352\r\276H\366\0058\261\364\374\275\320\2510=$\306*;\227S\246=+\275\346\275_\302\210=w\372\231<\215\340\'\276\211D/\276\226\363\325=\325\2245=\376\264p\275,{\334=\324,\341=\327\215\010>\000\r\006>\252\3517\274\033\233\242=H\0078\275\366\3121>\340\360\353;\356\223\215\274\353\014\326\275o\332->\363\000\313=\205\232\265=\374\013!>\266W\370;\034\335\266=~\351/>\343\357\300\275\251\317\017\276\375\353\275=r\036(<%,s=`\026.\276\330\214r=\235\333\343=\2104%\275G\205\023>\334k\001>aA\t\274^\306\021>dv0\276\273#==\345\311\274<\341co<78\027\276_p\025\276C\277\317=7>t;\263\251\004\276\320\272\277\275\253I\217\275\237\3331<J|\004\2750\234\241=\r\366D<\252\032Q;E\333\017\276I\310\331< \003\360\2746M\262=\037\363\321\2752_\002>\242\250K\273\207\037\035>8\010\230\274\250\344\006\276\213n\020\276\321\260q=\370\272\207\2757W\r>\270\237m<\004\242\311\274i\243\334\275\207\\\030\2766*>=D\260-\2762\034\231\274\216\023\320\2757\r&>\034\236\205\275\026\350\345=\314\234j;\325\203\245=\3523\374\275\3217\273\275j\301\017=\024\303\021>\203_&\276\254\376\034=h,x\275}\200h=\235\356\336=\274\033\350=B\034\017=^\000\003\276\203\254\261\275W\010\017>\216l>\274Y\363\005=\307\230\250=\274K\353\273\310\342\r\275\221\250I=<\201^=\302\034.>\250\361\227\275\327\336a\274`\232\363\275\305(\025\276<\036\320=\343\323><\322Z\216=\213C#\273\201\2457>\365\376\216\274$\0039\276Yc\350<V\343\327\275`@0<\202 \330\275\266\351\273\275\341\200(\276\243\325\226\274Xz\202=\256\307$>\201\300/\276\226%\361\275\316S7=-\3477;\203\013\t=\320\271\"<u\215\000\275o\036,\2763\213/\275$\267\341;\263\233->\230;\203\275\342\013\367<e\3533<YB\354=\264(\273\275]\217 <T\214\316;\347\311\313\275\017\375*\275(\017W=\253\035\020\276F\307\220=\2277A\273\255&\n>Nn\347\275\024\272\252\274|\010G\273\014\313\256;\340\363H\275$+\023>\027P\356=\357O\026>\211\201\274=\353\177|=G\366\'\276\245\001\254\275A\342\355\274\347U\006\276\2423\211\275\037h/\276\213\024\033>\330D\276\275t\026\334=\025\372&>\255\367\251=\007\375\233=\t\300\013\2765\275(\276\224j6\275\013\362\025\276\024\231\275\275\270\300\321\275\301\345\020\275f\355\276\275lu\233=\320\226\032\2764\363\357\275\320cu\274It\231=@\006A\275\036h0\276\264\303\003>\010L\214=S\363\032>\027G\"\276\247R\032\276\022-\363=\267\027\037=\nf\310=Q\224f=w8\272\275}L\027\276eF\035>A\t-\275\332`E\275\325r,=\024\257F\275\345\010,>\365q\026\276\356l\010\276\242i\256=\026\"\323=\313\271\207=av\345\275i\362\000>\003\276D=\201\310\252=\033\245\t;t\374\212\275\255J\002\276cK\n\276\252\254\204\275\034\377->G\303\373\275\371\010\t\276\220\275\332\275R\'\n\276\260\374.>#\266\361=L\326\036=k\337\364\275\006\004\003>\347N\362\275_IK\275\245\020\276\275\317r\016>\260@\027\275j\244\312\275\262\375\257=\t\205\002\276\317K\004>[\256\322\275\251\2612<\211-7\275_\026+>\270\351\242\275\255Xy\274Q$+>Z\'\313\274\r\326\364<\3274)\276\232\211\204=\364\252\006\276\354{\032\2766*5\276LM\377=\035\312\250\275\231\020\017\275\355y-=\007\\)>\373\342\r\276H*\222=\275\214(=|\364\001>j\276\227\274d{\037\276\370\257\270=8\203\267\275\370\004\007>\032\0238=\236\376\323<\216P&=\260\025\270\275x!\241=\344\323\373\275\265Y7\276XZ\237=\314\306\324<\300ol=[\332\260=z\244\372\275Z\222\325=\303@\235=u\264H\274\211j\210<\334\264\271\275v\"\r\276\244\371\305=\313\310\261=?{\272\274.Q\021\276\205\235\025>\014\034!\276\356\301\374=S5\350=\224\210\023\276.HI\275\356\277\254\275\212Bg=\031/\203=\365[&\276\371\346\233=\023K\260\275\036.\276=<p\351<\301\317\025>K6v\274\322%$>VZ\301=\345N\262\275\026U\032>n\260T=\264\360\336=0\230\n>&\270\023\276\335\254\371\274n\300\235\275\327\312\025=\233o\274=n\266\202\272\021\025,\276+\276P=\332\211\251<\356\222\230\275z\001\377\275a\316\027>\027\245\024\276\257bj=\323\311\245\274\241\210\313<\227}\356=\037\260-=T8\224\275rU\037=t?\357=iT\356\275\306\247\276;G\2767>[!\263=\366\316\246\275\232k\371=\005\310B=\226\313\003>J5\037>\354\340!\276H\'\020\276\277)\272\275\206\345\313=_6\313\274\327!\344\275VE_=(\271Q\274\214\352\217=\355n\205;K\204\302\275u\027*\276+\253\034>\317L\261\275$[\016\276\370x\273=\245\031\013\275\367\271\303=\234\234R\274\325\003\007\274\257\001\206\275\270\2665\276\321\334\371=\033\331\206=\300d\377=\002+\n>J\310v\2752\314\006>w\200+\276c\207O\275n@5\275V\3759=\261-\273\275\332\016\013>dS \276\264S\312\275/k\331=\327v\006>\225\035\333=w\n\'\276\372\3076=c\221\244=\331k\'>\356\330M\275\360\346\361=\225\374\207=\000\226\326\275\367K\300=o\371\034>L\310\016>\005\177\000<\\v\211\275\320\207\215\273\007m\271<\365\344\354\275\313\210d=4\373\203\275F\221\351=\016\037\210=\376\262\266\275p\342W;\201\220-\276\3361\226\275\377\333$>\320\017\032>\212\212\007>\262\304$>\254\311\021\276\244c\251=`\347\313\275 \324\314=\034\343\005\275\231\362\267\275\'\362\022\274\227\342{\275O`#\276\242\203\035\2735@\004>\347\337\t\276yN\374\275\341\377\207\275\236\024\021\276\006^\304\275\031@\017\276w\301\005\276b.\337=O\013\207;\025\332\240=\327\025\027=T\236\n>n\263R\273\267$P=\031\0360\276\367l\027\276\370\204\361\275\273d\375<\035\214\226=\204\260!\276\016#\030>\352\211\363=\372j\200\275\224\257\006\276<\250)\276^\243\022\276\277w\020>z|\373\275\236\304\025\276\355^\244\275^\364\304=\241\216\323=\210s\360\275\374\013\003>\017\200\033<\211C\013\276\202\3742<\360\355\325\2753 u<\202\300\330<\272\003\021\275a\301\025\276\212\275Z=\372\303\263=O\203\234\274\"\200\334=B\2521=\030\230\333=\232\216n\275?]\223=3\267\361=p\207\025\276\276w\337=B\0278>\246\241\320\275\246\226\247\273\207/@;\320\203\312\275A`\340;\301?\030\276\365\000\000>\242\216\324\275)\247\350\275\n\213%\276%\013\320=\300l\201\275\314\317\253\275\234<1\276N}5\276\334\370\253\275\211\026+<Emp=\327S\001>\237ik\275\270\234\267=\301$\017\275Q\303\333\275\325\341\271=A|+>\255\201\034>\014\020\374=AZ0\276\325<\310\275RA\347\273\033l\243\2759\212\250\275BN\024\276\223QD\275Ae\022\276\220\353\037\275V5\301\275YV\000>+\3065\275\314\332\034\275P>\223\275\242\235\023\276\341\311\244=\272V$\276:\000\356=\306\307\247\275?\265j<\313\324\350\274\261\211\010>n\331\342=\222\264-\276\355\033\205\275\347\322\302\275L\321[=i\376-\275U\314!\276\322\026\316=\017\2212\276\366(\252=\260I\002\276x\211\302\275\337\210\313<\023z\354\275lb\035>R\202?=C\242I=j\024\007\276\345\324\201\274`Lv\275\302y\363\274z\r\334\275\204^\036<\300\323\'\276\250C\252=\317\311\314=\341\025\t>\032f\307\275\325@\255\275S\263\225=h\304%>6F\274\273\306\367$>T\343\t\275i\262\221=\302m\201<*\223!>\224x\324=!j\305\275\365\010\022>O\304\352\275\036\221\331<\274\364\255\275x\264-\275\346\255\241=\323\3439=\242}:\274\231\342)\276b\273 \273\243\372\216\275/\r\025\276\210O\215\273\223u\021\276tHZ\274\3715\271=\231\350\014>\r\252\020=\t\322\326=\317\010\347=]\016\005\276\327\326\030>M\351\'\275\342@\376=\211=\276=a\256\n\276Cq->\207[\032\276M\014\332\274\327\354\235=\033\275U\275\036%r=\332\247\362\273R\003\255\275\362D\n\275y\356\023\274\272\232\013\276\225\227,\275\355cU\275\262\343~\275\234\331\227=5\235\237=\271\217\334<\205y6>M\022v\2751\204&>\362-\006>X\210\211\271]\306\360;J=*>\214\317&\275\036\276\336=\357\234\270<8`\310;73%> \256\2779&\013\315<\234\032\365\275]\361\004\276a\324\365\273vA\"\276R\244\003>\212\266b=\244\224\272\275C\322\305=\354\021g=\372k2>\360\302\200=\253\265\232\275\345\2408\276d9\352=\017\315\331\275Ui\314=\215\342+\275\3316\340\275\203\004\275=\326\032\323\275\215\366\351\275\220\221\345=\246<\267=\214\276\201=\251\246\270<\031\211\225==\267&\276K\214\232\2754\210\323\274WA\003\275;q\243\275b\301\253=\016\316`=\375\010#\275F\267\027>\336y\006>\304\267\037>\341\235\">\346\372\364=\342\365\350=\033\2174\2755\006\030>\002\007p=\325\373\326\275\306\275\004\276F\322\017>K\267\376\275@r\230<\320\005\245=i\325\001\276\375}\244=\307T\262=#\252\356=8\325\034\276\004Q\242\275\031\322\351\274\315\2204\275BF{<0]d=\005\310\252=~\214x\275\336B&>\227W\023\276\221k|<\373\330.\273\305\032\243<\224e\236\275\233-\265=\2559\353\275B\301\330=\353\001$=VC\235\275\321\300T=@\225\n\275=\256#>J-\307;\324p\337\275%A\271=\354\322\326\275F\222\224=\034)\021\275\200->\275\211)\232\275\342W\270=\224Q\246\275,\206\r\276\235\215\326\275>\266.\276l?7\275\343\030\300\275\333f\221<\362\374.>N\201\t>!\234\013>\3030\324=0\300e<*V\022\275\225\342\303\274\371\337\261\275v\332\302=\363\231\005\274,\023\r>\203H\307=`\331\245;^\0277\275\347\313\303\275\310\262I\275\347\350\366\275\352d\374=\024\372\023>\237\225\346\274\200\363\221\273k\352\263=\315\211\254\275\351H8<\263\001\020>\254\240(\276\302\325\360=\200h!>\333T\206=.&\n<G\204N\275\363\275\256<\001T\003>\360\205\023\276\344\320\357\275\3440\020<\034\326\005>\206\240\335=\246\322\304=\324N\005>5\244\005>3)\215=\376\211\034\276L\372\277\274\273\262\t>\332\202\340\275\301\223\245=P\'\334=\035\374\022\275\326\331\035>\214\203\007\276J\242\351\275\307q\025>O\261;<\010@\361\275SP\224< \321k\275\031\010\267\275A\t\307=?\240\234<\n\211\326<\005\234\024\276\347\353\217=\016l\006\275\265\037\342\274\373\2740>\261\207\200=\365\n\217=\301\323\025\276\211m\206;\204\020*\276\233u6\275C\372\205\275r\210\000>\\\317|<\301[S=u\255\022\276jSD=\327\226\t\276\030\254\204<\201\001\'=iR\016<\365\355\257\275\r\005\224<dc\355\275\261\000.\276\024\267\337\275f\242\033\276\"\017\013\276\250\007(\276\010\365\037\272\032\352t\275&\335!\276\217M\027\276+:$>\250\261m\275\305\225c\275V\2431><\304\022\275\245\213}\275\253O%>Y\177\236;=%~=2\360\237=\354!`<\331\206\323\275\331S\'\275\246\311\315\275v\000\332<4\305\251= 5)>\337\355\032\276p\272\002\276u\254\355\275>\024\034\276\364\030\276<4:\310\275\340\207\235=\376\017\003\275\302n\260=H\372\t=\305ph;\374j0\276e\304\272\274\262g/>\347!\237<\253\352\304\275\241(|\275(j\377=\336\231\336;\021\223\212=/Y\342\275\241I\371\275+W\335=\336A\346\275\314\206\013\276\332T\024>\371\022\347\275\363$\'=Sn\345=u\034\217\274\244&\031\276\222z\220=\326\214E=b4&\276.\343\013\274\310\261M=C\254%\276\375\366\372=0UZ\274U\316\032\275\267d\027\276\006\213\334=m\375X=Y\265\301=\032c\266<|\353\276\273\306\237\271={\326\\\274\3244\227=dO\007\276\001\225q\275XM\221=\273\350\207\274\332\352#\275\200\337\322\275l&\013\276\251\264\036>tF\227\274*X\221\275\306U\302\275\263\031\002\275\n\374/>M4\013>\026b\006\276~\003\002=\333\306\000=\373`\023>\013\340\255\275\014\r\033\276\222\314\t>i-\227=q\362\026\276\367X\205\273\333@3\276_\034\000>\021\375\017\276\331\355R\275\256\343\363=2n\237\274N\320!>\333\322\212\275\275\315\317\275\301\214\035>\177+o\273fE\242\274\355\356M\273\250\320q\273T\230\255<\340\305\315\275k+H\275DM\246\275\260v\305\274\276\264\362\275\226h\036\275T\274\000>*6U\275W\000\272\275\235_\223\275\025-\t>\0062&\276y\265\333=\002\307\327\275v\353\352=w\237\037>\342U\261=\016\365\303=\"\277\364=\266\356\373=\003\355\272=\021\252\320=w\214\211=\211h\002>\225\345\362\275\0323\203=GK\006=\371\375\202=\332Yd\274\020\020\236\275\234\341(>\276.%\276#\342\364<\004d\010\274\036\016\273=\262\220\261\2752\351\367=2e\233\275h{\317\274\330=Z=@}y</Rv\275\'\2020=\210\345y;~\216\035>\331V)>\263\327\024\276*$\006>hw\032\276H\273\277=\232N+\276\220\000\207\275\351\200H\275\323\373\332=6b3\275\344\354\255\275na\">\n\024\311=0c\007\2767yb\275\n\253\224\274\302\2274>\"\274\035>73\010>\245Q\313\275\023V\037\276\367\361\367\275\030\263,=*\375)\276K\022\314\274\222\013\304\275\354\253\235\275\226\014\260\275&\210q\275\231\261\305\275v\240%\276\331</>p9\345=*\340<\275\333\261.\275#\303\230<\345U =^\263/<\362\236\r\275:$\027>\222\245?;k\215.=\372\022\275\274\210\223)\276\177\276)\275d,\202=mL\321\275F?\361\275j\375\030>\351\364\357\275|\212\000\276Usx=\234\023&\275\005N4=\323\330\371=\246\266\311\275\373K\037\276CK\005>-\013*\276\356\021\013=\035}\016\275\306\033m=e$\321=q\311&\276\227-\366\275\302\271\213<u\321\002\276\203\260\253<\361\272\027\276N\232\332\275\236\253\005\276\324>\'>u\262\365=\360s\006>\226\205\337=\231\343\271\275\204\322\r>\312\361\004=\031zG=(n\030\275\207\\\002\275\036\374\034\276K\027U=\005\'\210=\027\315\345\275\236k\033>U\305\013\275\033-\310\275\014\357\026\276\255f\354<\341\300w<I\253\372\274\340\313\316\274\212n(>$\202\023>;W\237\275R\375*=.a\272\275\316\004\034=:h-\276hl\231=\205c\344=\300\247\246=))\036>\326\335\230:<\030\364\274\214\224\234\274\025\256\257=8\004\276;3\2128>\322S\271\275l\247\276=\351\014\003\276\237\023\350\275`\272\324=\344\021\333=\264\233\234\275v\264\241\275\255N\323\275k\220\334=\037\277\312\275<\342\267=\356^\025\276n\007\265\272\373;\214\275\200o\032>qI\r>\224\216\362\275c\211\336=\263\177(\276u\330\023\276\264\327\006>\307\341\231\273\224\314/>\343\362\007\276\226\367\030>p\331o=\t\017\006\275\244\037\371=\022\372\026\275\371\363\271\275D\212\020\276\"\362\246=\371]\032>>\321|\274Y\353\315=\224\3120\275\240\026.>\251D\275\2746\201T\274\301\324\025<^\355\002>\343\363\373=c\217\320=\033UF\275M\336\305\275hC\261=Z\325\217\275\322%/\276\304c\333\275\343_\006>\305\006g\275\356,\276;<b\037>\244\016\000\276\265\277\274=\265\032\022\275\3555\024\276\313%\340=M\2663=\001H\000\276\242{\315=9:&\275\317\037@\275\002\224\025\276[6\327\275;\211\210\274R\226H:\342\267\374\274r\204&\276\356+\034\274\2269\326\275\007\\\250=6\200\307\275r\264\231:\025f\030\276\007G\213=\346\n\233\275\232M\036>3 \360\275n\200!\276\223X\030>\346\034\271\2758\251!\275f:\'=\375\005\313=g\022n\275\205~\001\276\362\270}\275\236gm\274\251\226\252\275!\300\025=\272\037\010>\034Se:\215\266\006=\246\026\307=D\013\250=\343\216\201\275Dj\225=k\244*\276hl\347<\027\027\030=@\021\t=6\310\021>\212av\275\205q+\276F7\255\273L\374.>,MF\274\016=\005>#\304\266\275r5\226\274\256\372\265\273\237\250\354\274<S\004\275\276\234&>\246$\207\275\267\033\264<\000_\263<\242<\006\276\203\223&\276\201\345\375\275w\352e\275\275\324\025>\014\254\026>\006\315&\276\030\2049\275PR,;c%\373\275\372\247\003\275i\r\221<\300-\314\274\362\177\235\274Y|\332=\334G\377=\324\203n=LC~\275\2030\211;\235\317\003>\307o\005\274\2372\256\275\021\336\260=E\340\254<\212I\'\275\236\265\222\275S\3372\275=\253\365=\241\353\320=n\'\250\273\330*,>!=\263\275\217K\362=\343\317\225=\334v\237\275\245X\035\276\305L\274\275AH\265=\327&\322=\336Nk\275\224W\315=v\333p\275\255e\027>\274X\362;\277\373\227=g\310 >\2632\335=\210\316\263\275\010\027R\275\373\302I\274\371f0;\214m\304=k\246\001>\275\221\345<\033{(\276T \377\275\020\343->\010\221->\250\250\210=\201\236\022\276\2217\024\275\367\031\201\275\273\333\036\275\310+c=Ir\025=\320Y\341\275\247\337.<\354>\000\276J\253&=w\336\235=p\225\252\275t\3065\276@\233\202= C\034\276g:T\275\223\270;\275h\002\000>\276\224\n\276\237\350\256\275\375o8>\232\203\350\2746\3367\27694[=kj\244=\201\260X=$\re\275\222_1>\357\226\303\274\356\302\241\275S{\237=\223\004\000\276\0025\352=9\"y=w\222\035>\234\240\220=\225\211\037\276\342\037\004\276h(Z=\323D\237=V\377\214\275\307F\030<\201[K=\r\347\314=\323\233\036=\301`\006=\217u,\275\223\377)>r\371\266\275[y\367<\336\313\327<d\034z\274\362F7\276\306.\014=\307\350\036\275m$\201;\177\017p\275\010\365\274\274\n\303\003>\224\245\034>\240\005\306\2742d\255\275\275\014\336=W3\032\276\036\232\347\275Q\027\362=\265;>\275\363\224\005>E\313\311\275\006y+\276\270Z\243\271f($>/\357\004>$\032\001>\213\215\020\276l\325\237<a\202\221<z\316.\276\t\376\006>\364R\204=\341\256\321=\377\202\214\275W&\003<B0->\364\010P=\217\230k\275\372\023<;\023g\333=\216]\335=ap\237=\261\332\344<\220{(>X\362\204=\315\277\014>\335\007b=\225\223\024\276\225C\262\275dNn\275\">F\274\337G\007>1\374\354<\214\014\373=/83>\026\257$=[|\r=$z\024\276\033\343C\275\027\374&>HR\251=\206\241\324\274#\346\032>\262}\233</Q\215\275I \353;\007\205\324<\202\254\375\275\347\202\334\275]\205\022>\006\tX\275\320\265\364<#\255\354\275g\212\330\274\255\"\356\2753\216p;\216\342|<wI\244\275\317\326\366;y\261\233<o;)>\r;n\275\250x\277<m\274Y=\036\242\022\276\210>\307\273\007|\020;:\025\036\276\222\252V=\302\362P\274$#\230\275|\206\244=g\257\037\276\356\216\227=\215W\004>~\020,>r-\212=2\035\007\275A\030D=_W\026>\376\310\274=\272\327\004>g\231\337\274\335\232\005<6\343+>y\250\254=\320g\314=\323\355j=\332\202\277\275\226\036\327=\236?<\275\031\361)\276\271\207\340\275\204\263\030\276\"\267(\276\261\364#\276\004\014u<=\245*>\260B\r>\3641\242=\305\270$\276\346\205\036\276\024\204==\216\035m\274\347&|\2753\372\375\275r\277\372\275\377\222$>\302\252\212:\377\024l<\262\247\260\274\234\027\364\275\330\276%>HA\256=&q\333=\304y\261=~\237\n\276\217\220\301<\200R\211\275=\031\224=\346[\203\275\302\237\'>\205Qq\275w\211\367\275\005^\324\274\364\t]\275\330\264\266\275{\315\303\275\304\022\343=\357\206\262=\207!\013>\206t\326\275\340\2066>\241*.\2742!\227\275\010\276\001\276%\370\021\276\007\2004=k\203\323\275\233\376\233\272*\263\225\275\016u\'\276\316]\232\274K\352\026>z\205\231\275N\320,>\255\216\010\276\303\255\266<\247\307\224=]~\353=\372j\321;\223F\242=\202\010\316=e\001C\275?\232\213=\266\214\241\275\206\226.>]b\277=%\351\033\276X) \276_\346\352\275\031\301\317\275n\225\021>6\234\344<\302\264$\274f\307\001>aJ\035\276_\215\336=\355\256\010>\022\205\033=6\277\270\275\001{\261<\002<\364<\027\232\241\275\364\313\273\275AcA\275\025\035\004>u\212\267\275\307\006<\275DO\370=v\241n\2759y\255=\252\345\276\275\013`,;0\022\247=\320\360u\275\036\377\370\275:r\210=\306\375u\274\367\027\001\275&\342\370\275\361\2745=\243\363\035>B\177\016>\266\342\321<\005\246\212=\014B:=\214!\232=Q\027\225\275\302^\311\275\204r+\276 1&\276\262\221\027\276\233\307\303\275\000\361\253<\344\007\205\275*N\010\274\261\002\346\275;\" >\241\331\335\275\260\366\253=\222GS=\356\245\"\275\002\272\235\275n\\\335=(\310\305=\352(\271\274z\366\t\276GZ?=$u\360=\001\r\025\274\334\250\376;\350\350\027\27647\252=s\r\033\275\217\317\273<\234\226\374=\232\252\231\273}I-\276\\Z\006\273\2235\177=\235\310w=\020P->\006n\013>V&\240\275\004\242h\275\214\327\036\275H\363\000\275N\202\024>:\026\334=\266T)\276\237\260\034>\007X\022\275ELB\275\265\310\227\275\241\235\217\275\007\223\022>mb]=H\nY\274k\236\031>\206\0140<r\254\020\276\250!\003>\277r\032>0\335\023\276=\355\365\275\244M\233=\352\032\336\274\326\031\234\274\216\241\335=\2239\335\274\256\361\340;%\375T<L\035\343\275\273Z\032\274\200\026\244\275y|\216=\177;\226<\371\336\221\275s\307\212\2757\205\354=\316?\246=\206e\355<\351\371\037\276\007\263\037>Z\027\241=\002j\200=\376\363\031>\210\331\317\274\377`\273=\244P\005\274\362\335\"\276\311\341\003>\005T\334=\233\333\025\276\271\006$>\325\331\253<\306\242\222\275V\241g<\303\301\231\275\215\206\205\274\274\203\200\275*\250\031\276_\250\303=l\245\372\275\321\266*\276\235\r\002>\306\236\322<c5d\273\021\3574\276\212\375\300=\252}8><\312p=\311\211\240\275\003~\021\276*\346\227\275\035\2403=\240\200\361\274\335\231\324=\223\252\305=\223-\342\275\370z\024>\300v\017>6\326\205=\343\215\260=\276n\334=\013\2533=\376\227\017<\242\345#\276\354\317G\275W\337e=pm\240\275X\353\024>\341T\374=\002\253\335\275/$#\276\371\212\376=%\305?=\277\334\327\275\347\227\261\275:L\206;7\317\224\275Q\352&>\326\261u\275\314\201->w\025\336=\271\337\023>\340\314\274=+\340\246=\277Z\030>\261\333\032\276\207\024\267\275\273\307I\275\363\004#\276\370g\n\276}1%>q\344\037>\211i\003>Se]\275`X\001>\222\370)\276W\364\267\275w,\202\275e\312*>\227x\304=\320\243\263<pF\260\274\364\303\203=\316\275C=\036\275\017\276\245\330\336=\266b\014>\206\237\274=\006\005\264\275\350\2216>1\026$\276\037\347\356<s\217\300=\255\271\230\275U\0245<W\002\373<^\324:\275\262f\301<\356\363\303\274!\235\021\275\r\215\340=9\206_\275\\\036\375<\233^W<\264\235\203=\247n,=5[\317=\270\212\300<o\235\357;M\027\006>\262{\275=\352\261\002>\346}\333=\244\\%>\360\330\001\276\023G\353=\373\326*>\254O7\276\t,\312\275\336A7\274\027\224-\275\373\025\t\274+\2601=\020\0160>\313\217\005\276@\307\327=|\211\371=o%\355\275\367g)>\314\374\322=\215~\256\275\303\324\313\275\346\231w=-\341\025>\357\345\013>D10\275\314\252\340=+Lj=\213\333\030\275~B\t;\276\010\010>\361~\365\274\244J\305={\223\357\275\371\305V=\312cK;\366\\\233=#\362\270=\365\346G\275b\037\344\275\276B\021\276\376\312,\276\033\325\016>o~1\276\325\354\307\275\335\241\023\275\010\254\303<\353\004[\275\315\203\027>\251\257\001>\235\010\021>\230\325i=Oc!\275cS\037\2768\363\313\275L!\255=O$\344\275\241t\024>\266^\372\275N\344\n>2\214/\276\020\035\336\272gE\027\276%\t\205\274\002\327}\275c\316\274\275\264\305%>\\\202\r<,\300\215\273p\353\341\275\253\206%=\037\273\336\275!\342\335\274\325\312\033\276Z\322\374\273\365A-\276i9\333\275\003\021\361\274\030\221><vL\246<\300\244O=v\032\002\275~\364\241\2742g(>\240\375\223<\007\346-\276[\017\'>\243\327\"\276i\023z=A\266/\276\240\330\026\275\203\346\376\275\340:\337=\361a\032\274M\307\'>\2138\014\275\313\353\263=\035g\337=\2321\340<J\031\370\275\"8\330\275\210:\241\275\025\352*\276\360\315\224=\276\220\245\275\274\n\262\275V\320c=\276T\353\272\377\016@=\311\214.>\310\2408;\370\030\'\276\200\n9>$\350b\275\261\306\221=L\273->\025\352\274\275N\354\">\025\213\311\274Q\355X\275\2520\254\275\233\240!\276Noo<\024\220\346=7b\376\275dG\224\275\203~\362=3#\255=\017\026\r>\350F\334\275iv\031\276\227\004\255=\026\377S\275\314\003\212<\275\034\247=\t\2243=\002\016\255=#\277F\275F\244\031\276\353\360\365=\257\355t\275\344_\362\2754L)\276\274\261/>LSy=\221\370\032>\274\357\213=)1\357=\232\251\014>k\242\252\274{\014\376\275\020\335[\274\327f\005\2768Qy=>A\331\275v% \276\244\034\220=\016>&\276\330\231\035>\311\211Q=RC\022=\004\343\205\275\003\322\246\273\303\371\035\276:\323\340=\271r\213\275#\352\307\275&\352\254<Z\372\261\275\222\260\242;\035\357\361\275\204\376\020>kz#\276\227$\016\275n\027z\275\023\276\363\275L\260\247=\240\005\277<s\237\341\275\276\216\340=\211\333\003\276T6\215\275\374<\335<\'\202\311=\365\257A=\237^!;s\\\233\275\203\276\024\276\226\241#\276\264\344#\276T\267+\276\241\2673>$j\321=\376]\275\275\323\375\303=\377+\000>\014-.\276\226%&\276\303[\346<w\365\203=\325\262;\275wa\206\275\247\220$\276\205\233\020\276\ni*=\025\2302\276\374v\311=$\215/>E\365f\274\215x\270<j\272\211=\375`,\276\266\234e=\3658,\276j\336\254=\233\320\"\275Y\276\t>Um\t\276\177\2430\276\276\310\321<<\3702=\327I\363\275,\270\035>\324\263\355=\017U#\276\216m\032\276\213:\001\276\374+\033<\2455\370\275N\233\245=h\264\034>\341m->\314--\276~m\">\367\3239\275W\3052=\246)*\275\377\\*<jj\210=\034I\006\276\335j\275=M\2457>]\364\016>\037\236G=S\313\276=\347=\005\275\236\345};A?\227\275Q\254\002>\037\245\021\276W\311E\275\201U\275=\2144\202\275\265\032k\275F*\244\275G\035z\275\325Z\010<\"\006Z\274\311\233\245=\245u$>\206E\246=:j\246\275\200\264\204<,k\030=Q>%>\221\303\360\274Yo\345\275B}&>\023&\263=^\2202\274\247Q\024>A\373\230;\t\024\201\275\2165\365=\357\027\263\275\346)\270\275\251d\003=\227\r\331\275\266\222\324=\340\271\326\2735\203\255\275\222\323\006>\0267\216=s\223\314<X0\233\275\303\"j=!\2652\275\306\374\023\276a\253\004\276\322\341\031\275\265\370\034>b\371#>\245i\035>\221@\014\276YL\337<\271B\374\275H\321.\275e\233\315<HO,\275x/\202=\244\302\317\275^\344\201<T\314\374=\177\267|=%\213!\276\006G\365=\303q\004>\225\270\327\275\353<\316=\201z\243=\226\200\252=\211\202\036\276\330\253\005\275\"s\307:-\330D\275\201\352,\275\032\237\014\276\237\336\325<Js\010=#\027\221=\274\'\003\276\365\341B\275s\361\301\275b\0317=\207\271\254=f#\245\275\261Ol<\003\006J\274h\346\003>\370\236\336=w\254\356=\276\360\216= \277\304\275\014;\205\275\035@\201=k\213\357\275\004\325\004>v\021\357=\370`\254=)^\300\275\001\r\213=\316\002\363=\352\321_<\002\237\334=\312W\350=\346W\273:\214\372\020>\266T\262=#\005\017\275&\032 >0\375+=\3244\303\273L3\n>\027\303\263<\245\372\342\275\364\274\206\275<\211\215=m\217\347\274S\276\334\275\324\006\350\275\307\251\031>\273?%\276\236\363E\275\300s\364=\\\364\003;\ta\232<\210\322\310;4\203\002\276\314\003\241\275n\205\034>\315M\r\276\031d\016\2760\275/\276\350N\t<\023W\347\275t\326D<\327p\006\276\362;\027\276\262\002{\275\017\353\255=\210I\030\276\"7j=\356\265\014\276\355\372\035\276}\237$>!\231\010>\214\344&\276\344\322\204=\014\215q=$\033\234\275-\366\360=\014*\354=\324\034g=\n\242\222\274\311c\\;\247\232x\275\233\021\344\275\202x\331\2753\213\260\274\220\345\035=^\330\363\275L\226.\275\211E\243\274\025\3770\276\315\203\365=\232\306\026>\031\265\330\275\200Q\'=\002\272\200\275\305A\230=\205\307\337=!\025\022\276\354\217\337\274\200\354\004>\266v,\276/\335\020\276!\244%\275P/\335\275)\2466>\313.x\275:29\276\001n\373\2751{\027=\273E\254\274\337\310\314=\230F\376=\236\374\014\276R.8>\241\025\227\275\020Z\331=n\344\242<tZ\230=\212;\001\275u\020\326\275\300\232\266\275.k-\276\214\020\212\275p\375\327=\235\210\317\275\242\213\253=\350\237\031\276@\325\253<\364\241!\276\321\025\204=[)\377<S\2633\276nVx\275%\003\316=\266@\215=\254\024)\276\265\212\023\276\210\346.=\217a/>\214\246-\273\205\005\251=\233x\222=\032\276\330\275t\005\346\274?\230\005<\314I\241=\016\230\'\276\212\033\003>\241\201\216\2751\222\361\274\231\264*=M\247\314\275`\302\t>\024\333b;\371S\216\275>Q\002\275\266w\024\276|T\352\275\327\370\351=\317O\242=p\311$\276\202\031g\2750\237T:\026\234\271\274\346Q\312=\325\300,\276\212c\006\276F\007\031:\212V\326\275ECp\275A\252\031\275nI\353\274\343\3328>\353\372\314\274\031M\036>\357Y1=qg3\274k\256\032>\351\tS\275\225]\376\274\331-\024>N\344\005>W\303\006>G\371)\275_C}=z\333\t\276\224\025s9\370/\036\276\n\030I\275f\305}\275t\274\351\275\201\0213\276\374\235\301\273\006\022\311\275DD\354\275\220Tk<\306\322z\274\010N7=eoe=#\3727>6\013\230\275\016\261\r>zq\354= \325\025>A\024I=,\225\354\274\3759(>\260\332\010\276\201r\016>:\314)\276\352-\353\275\344|*>\304\006\265\275\233\2406>\007e\022\275\216\226\002>\367z@=\t\266\221<fT4\275\254e\226=\366\277J\275zOo\275[\326\235=f*\250=\340\325\002>5\361\340<\202\025x\275{\233\200=\233u8>\010X&\276\376\370\362\274\320y9\275\216\001\022\274ozk\275W\274+\275\367\"E\275\370\265\307\274\261\033\323=\030\350\r>\3209\257\275\217~\305\275\344\0266>\205\031\222\275\325\002)>\257e\223=m\031\351\274 EB\273\037u~\275\213\372\n>\255v\005>\342\007X=\331{\336=<\252\240=m\014\311=\344\210\331=\230)\017\273\321\240w\273\260\266\020\276\262j\200=\244\277\007\276>A\255=\364\243z=L-\032>\014\201.\276\237#\375\2740\355\r\276\034\312\007\276WZ\232=<\336H\274\277>>=6\275\032\276\2144\253\275\301_\342\2755h\311<\300\3458=\356\234J\275\361H\273\275\321\017\273\275\275\225\364\275\2752\007\2768\266\372<\210o\017>u\375\301<Z,\202\275\356\267P\275dbk\275\305\377)<\306\211\010\276\340\340Z\275\2071\354\275N\337\353\275\276\254\037\276\260\220\"\2769\350`;\241*^=\267,\254\275\007\021<\274\025\200\013\275\275\246\366=M>\232=\326Z\334\275\320h->\313\305\214\274\226\345\020\276]g\367\275\322\030\013\276\032I\321\275b\322\334\274\246\3720\276\201\353\245\274l\330\277<\316\353\352<\301\371\262\275l\365\212\275}\223#\276N\262\033\276\311\342\033>\315\006\272\275\226QZ\274\201\343}\274\346\241\241<,*+\276\336B\000>\214^\201\275\311\205z<\334[O\275\010~\036><\022\341=)\016\234<\3079\013>L\'\337=\033\333/>\254\030\004\276r\375\026\276\245\332\370<\334+\"\276\323\"\263<\036\031\031\276\016\211\274=\177\2215\275\0369\236\275\nZ\016\276\263\266\024\276rs4=tK5>\276\301\371\275\022\275\216=\311!,\276$\353\363={\310\375=\236\264\374<\212\036B=\334\363\031>\370O\327<@\271\231\273\245\nF\273bG4\276\353\005\366=E1\260=\235\340\315\275;\005\033>.\032\243\275z\333`=Q(\221\275\306y\023>\314\207,\276\336\177@\275\3251\002\275\226\0130>P~\356<\017!\377\275q\257\n>\021(\343=\303\3032>\202=\207\275i\340\010\276\3635\254=F\3105\276\026\364\017\2761(\r\276\244\tj\274\261 5\276\3720\003\276 \252\022=\363\277\036\2760f\303\275I\264\022>\246U-\276^\r\r<0Y%=\345\021\021>`\317Q\274\322\371=\274F\363V=\360$\001\276\245\317\373=a\317\301=\325d\027>\311\343?=d\n\220\273\223\350\035<\224\215<\274\340\'\'\276\374\034\231\275\350\371\215\275wr\374\275\260i\216=\276\213\213\275X\3510\276\310\220\377\275\223\201x\275 \256\234=\374N6\276\266\006\216=\022\177/\276\301\224\020=A\356\265=\364j\307=a{\345=?\315\r\276z\007\201\275=\360\321=\271\376\377\275\307;\032\276\244Qw=-\2605>\222&\376==\212*\275\022x\024\275\005\305f\275p\200\034\276\322\002\327\274\250\361)=J\222\001>\225`*\276\267\345\035\276\266\250\311=\212\024\354\275Z9\332=\001\334\202=pV\005\274r\203\017>\023\320\363=\355\003\020>%}\210=\212\344i\275\332\200\324=\207\005,>y\272/\276\240Y\300=j\2432\276\245\360\320=\244p\370=\334<\341\275(\306\372<\330\n\201=\205\350\202\275m\327\210=\233>\333\273\007R\013\276j\006\217\2752&\272\275\203}\226\275z\356\326=L8\212\275\315\256\361;\346S\205\272\224\263P\275d\320\033\276\367X\000\275\312\007\325\275\263\353\017\2760\"\032\2766\321C={\271\363=\317\342&\276\007\313\272=\206E%\2769R\262\2756\372\000>\275\356\002>\375h,\276c\370\222=v=%>k\3220\276\233\245\215\274\377\001\227<\276G(\274\354\210\031\276\024- \274$\270\347<\306\033\276\275T\261\212\275\336-\031\276\206l\315=0\267%\275\322\303\244\271]q->\211\277->\211\344\330\275.\014\322=\345P$\276\3538\235=\334*$;K..<\324b\026\274\335\317\202\275\002\324\323<p\324\305\275\255\330\335\2753\364\213=\205\245\203\275$\260(\276VT+\2762t\225\275\364w\214\275\276\003\024\276g\"1>\365k%=\334h\220<\234\322\025>~X\'>\'#\211=\245\333\353=i\026\237\275?7\271=\216\344\375\275\031\221I\275\360U*\276\367\263\237=\362l\013\276y\000\003\276\377U\252=\353\037\324\275I\256\305=\351E\247\275\300\3764\276\032r3=\262\262^=\321\024d=Q&\020>x5\324=X\310\030>\006\233\001>#w\245\275\331\3020=\220D3<5\\ \2769\232\203=\203\354\264=\364\350\347=RX\037\276\215\346\016\275\306\322\247\274\017\216\345=\033!\345=\260E#\276^\316\211<\212@\037\276+\007\270\275\243\022\336\274\'\300L=\3325\342\275\372\222.>\214\346\023>\355q \276B\r\215\2748\304\277\275*\3250>\022\307\215<J\365\251\275^\306\317\275\272\262\034=\021\202\340\275nf\346\275\217|\341\275\2463==\336\231\006=v\240\241=Ms\036\276\235\357\024>\335\204`<\214\277+\276/\366\362\2741Fx\274\2371$\276%\006|\275\234\215\364\275C\020\267\275\357\264Z\275\274@\361\275\031\217\313=;\357\351\274\342<\276\275\245\225 >\354\322\210=\3131W\2756W\014>\005\237\214<5\r\224=4\322e=\350\225~=x\2519>\344\263\255\275<&\306\274a9\010\276\320\337 =k\244i\2754.n\275?\213?=\351m\257\274`9\324\274\241m\236=\"\331\337\274 \t\000>7\"\323=\317\260\032\276/\331\312\275\270\363\312=<\312\026=\375n\266\275\246y_\275\327\321\251\274l};=\031?4>\0318\017>;K+\276#8\207\274\020r\365<\210\363\025\276#\3511\2768\241\352\275\244\260(\275L4\022>\264\026\t>\345\257\327\274\200:\271\274c_\307\2752S\003\276\300\347\325;\212>\375\275xUh=\352\037\351=>\005\206=U\333\332\275#\354\364\275c\240(>\335\031\375\275\333\270\223=&\253\210\275No\021>\017\001)>\312\305\023\276\177r\312=\312\361\263\275\215Vy\275)b\205=\033\253\n\276oY$>\271\211\303=\306\327A=\266\361\255\275\004N\021\276\354Z\230\273\260$&\275+\002e\275o/\017\275t\2237\276M\234\350=\334|\006\276\026\231\255\273\323P\314\275\022\034\377=\325\333\002\276\013\366\024\276\177k\027\276\340\026\326\2727\275\373\275\013P\010>\233\t\252\275\271>\033=\312\"M=\273\335\007=\000\240\004\275\221\006\201\275=\211+\276-/%\276~\017\201=Gh\263\275\373R\253\275\334\265\357=\2419\257=K\322\"\275\222\n)>m\000\211\275\256\324\004\276\215\377\006>\363\346\034\276\267V\251\275\361\251\311\274\220\274\300\274`1\r=7\220_\275\223\205\334<\2721\013>L\276-\276-b\010>\234\327\334<\317\366\024>\246\274|\275?\207\321<%\273)\276\244\0342\275\372\216\232=\265W\333\275\035\326\232\274*;\265\275\210I\375=\227\312+>\000\220\204=\3471\223\275\002\324\035\276\\\003\274\275\235\253J=\005A\017\276\3438\356\275\017\204\203\275\234\237\230;\317\036\364\274\370\203\023>\302-\322<Y\250\'>\236)\035\276\224\254\031\276\r%\361\275\310o$\276\270G\342=\306\t\002>b\317\245\275qU\'=\240\3770<KY\263= \242\275=~\2454<z;\317\275\030\370\373=\037\024\204\275\022g\200<\310\375\274\273\226\346\265=6\212a\275\265x\016>x7?\274\334\211\231\275-I\">\310*\341=?=\316\275\304\262\354=\334\331\227\275\325\210\017\276!#\231\275\222\210%\276\341S#>0\323\"=U\263\273\275\305\201\017>[v\241=\3122\340\275X\007\325=B\352\204=\350\000\302\275T]\033\276.\2347\276\035zw<\322\377\037\276\221\004\354;\376D2=id)=\ne&\276\0268\013\274+\001\031>Q\336\267=\351\367\217\275d\021\237<\275\324\014\276\343\344\271\2758\267Q\275\236\'\351\275\205\342\332=\024{^=o\t\200\2750\231\347\270\345{\311\275\236!)<\370\272\230\275\2675\032\276=\323\252=o\207\321\275!\370R\271g\000\237\275\253\263 \276\213uW\275\256\274$\276$\342\226=\357B\226\275\251\3660>\221\243\266\275\246\032\301=p\005\373=\242\034\025\276\030w(\276\3455\256=\026\3008<~\261\204\275X\300\302<\002\231\002\276#\235\263\275\324\244F\275S\003\340=\313\3726\276\206n\t\276+\213\205\274m\021\003>`\212\307;\265\265\034>\301\374 \276u\303[\275f}\346\275\014\247\026\276\220\005h<\335\253\027=\355J\307\275+\235\014\275f\"\370\274\014\225\001\276\337\036\320=:U\032\275\207p\026>=\030\003=nA\245\275\374)\254=nT0>\335\322\217=7y\031>\232\n5=\3718 >9\020,\276(l\031>\267\322 >\317E\204=\252\271\357<\020\004\3718\272\300#\276.\213\266<D{\260\275Xf\205\275\273\301\"\275m\251\306=\202\210b:\203\014m\274j\240\306\275\224KJ=\202lI=JZI;\240\010\236\275\317Hr\275\356\026\300=?\212\025\276\266c\246<\234f\206\275)\034\334\275\315\356\004>-\375\025\276\017\203V=Cx)\276\n\327(>\031\341\270=\026\252\016\276\035\376h\273l\003\026\2762\351C=\207\240|\275\312\366\000=Q\242\322\275)\001|\275\334D\006>\305\321\007=\274\300\336=\276\223\262\275\002\035\330\275\360Y\241\275[\"\037>\362_\006>\330\224\313=\362\231\">\245\206\217=\017\243\365\275\2350#>\204\314\241\275\240:#>Mc&>\035T%>\027\330\365<;\307\022\276\320\214$\276%\317\335<+\265\017>\303(\014\275\334\364\233\275\314L\033\275\017vH\275\335\'\222=+CE\275\331\001\344\275o\2561\276\035\203,>\026\265\020\276Tt\027>/>.>8\033\006\276\351\231\252\274\350\326\367=`\264$\276x\026\020>\300i\307=\017(\366\275\305\247\231<\225\021X=Q\3601\275i\341\020=\332\333X\275r\327\025\276\022\333\330\275\202\353\250\273$oR=M\215\232\2752\340\265\274\340\276}=\033>\345=fV\222=\023\227\255=\007\002\316\274\231\3208\275\350\202|=D\016\265\275\365\250\001>X\323\377\275z?\267=\207\363\036\276\373\030\017\275s\r\230\275sa\027=\366s\315\274\302r\026\276\307\002\313=\250\360\010\276&\203\251;\372\244\037>\365\332\250=;{\314\274\207p\263<:\264S;\211s\252<M\177#>\317\365\245\275\355G\246=\230\320\210=\377M\336=\250\255\t=t\345*\276\211\326\363\275\354\005%=\333\225\033>mp$>\252\325\020=H;\206=\303\213\n=b\315\316<\356:$\275\336o\355=\274C8\276\306G\n>*\242\"\276\204\010\272\275\000\226\251\275W\007(>\036\010\254\274\324\002\301\272\316\2450\276\352U\211<`/\016>.R\252\274X\317R=\232\241\033\276o\000\367=\327[\217\275\031r5=6\274\014\276=\365\377\2754\203\375=\343\n\314<a\\F=\374\273\206=3l;\274p\277\300\275\246\004\361;\341\367`=h\355{\274$h!\274\364\2413\275\255\217)\2769\r\205=\244\346w<\337\320&>s\251W\275i\3071\275\216|5=fi\320=p\322b\271\242\310\023>\366\377\244<\235m\327\275\276\267\333=U\346\305=\271\034\205\274<\330\363\275\334h\002>g\356I;\243\254!>\212\236.\276\342\000\233\274>\035\031\276\271\212\r>7\360\373\275\225@\226=\r\215\000\2767\361\365\274\025K\001\2763\020\017>P]\356\274\013\033\006>\270lB=!s{=\334\031\211\273Gv\335\275\337\020Z=\014\254\347\275kTL\275\321\213\271=\241`\n\276\324\305\007\276\316b\330\275A\030\374=M\371\'\2747\275\r>f\366\222\275x+\010>eX\346=\0136 \276\206\210\245\275]\315\355\275?\253\271=o\231\363=\310_\212=\264O\202<\366\014\247<\324\207\221;\030\325\316=\376\321W\275A\221\037\276\345\0148\275\200\333\017\276f\372\346\275\363\230\022>\203\036\323\274\271\340\224=\016\214\376=\223+\002\274DJn\275E\2025\275fo\354<o\331\341=V>\337\275-\364\303\275\345m\'>p4\020\275\357v\316=I\371\321;\032\203\264\275\364\004O=\256n\005>\027\232z\275\032\345\216=\332\034\374=6\353|:\222/*>d\256\374=\275\351\363<?B{<\227f%=\307\204\022\276\214\004\030\273b\276\022\276\352\313\r\276\232\031\001=y\034\027\275\233k\301=v\225\202=\214\330\032\276\215\3108\275\251E\000\274\217\244\016\276\315\314\265\274\2066u=\213\230\030=C\201\271=X{\352\275{\312\036>\345\'\010>\326\306\376\272n\2100>\201\256%>\2469\374=\371\241\211\275\360\364\016>(\2118\274\323\265@\274Nr\026>fh\002\276I\210L\275\216\252U;\311C\t\275\\\025\207\275\270v\353\274\245o\030>\262\262(\276\240\n0\276\277\246\262<\356\215\266=\345`/>u\004\177=\260\241&\2756l\013\276O\306\237\275-\230\243=K\317\367\275\360:A=\037w\360=\320\220\355\275P\036)>EJ\003\276\216s\236=\001\213\320\274\254\273\244<:Z\240\275Jb\203:eQ\007>\2647\326<\017\237\235<o\203\353=!~\013>\360\303\270\275WHy=\035\265N\275S\272`\274\225@0\275XU\266\274#\255\344\275c#\233=\'\356\212\275\367\222\030\276im\"\276\311\251^\274\270\307\270\275m~%\276sw\362=\354}\215\275\235\300\241\275\214\267\037\274)\003\033\276S\030\\=\030\372\301\275\331\3138\276V\352\005>w\373V=i\207H=\241A\202=\360\343\356\274\344VZ\274\3171P\275\010Za\275\306,\371\275J\351\210\275\001\353\202\275?\244E=r\3170\275k@\250=\357)~=/B\352=\\\257P\272\360\344\205=\014 (>)\2061\275&\326\017>\274\352*>\031\317\224\274 \200R=\014\235\274={\371\360\275\nN\204\275\2226\372\275\323\225\255\275\230e9\275)7\021=h\316\320\275dc\013\276\272\374\300=n\001\331\275v\202p\275\246\276\251\275y\036\025>\215\030\201\274T\315\261=\023\330\340\275/\272\221\275+\347u\275\026y\220\275Z3\373<\330R\027\276\\\212\323\273\200\371\036\275\333\333 >2\033\350<@!6\276$\013\010>]\000)\274H|A\274\2411\033\275\205W-\275\372\337 \276\263\261\322=Tr\341=\265\205\251=\025\214\036\276\305\025\234=\213q \276)\231\023=\331&\007\276\227x\250=\367o\325\275\001\\\232=\241\203\377<\202F\215=\024\315\023\276b|\277=\266;\014\276,\307\221=Zo\r\276\344\301\003\276\372\231e\275\362A\272\275\245\016\022\275\226\0138\275\350\021M\275\034H\000\276\2700\270\274)\205\010\276`\320\311\275\213\270Y=#\257\025\276\022Rj\274\034\231~<\351\022\307\275\324\340%>\347\257\205\274\222\017t\275!db<\247|\357=\320C\272=\366F6>\t\327a=!4\246<\300\220\"\274nD\334\275D\372\226=e\036\277\273np\343=\344\307!\276\304m\360\275E \311=\337\016\360\274\023\0059=\244C_\275\324\372,=\024\275\017=]\300\377=\312\323\362<\004u/>\335\224X\275\335^\273\274\002\333)<\361\220\267=\322\231(\276\220z\217=\301L\210\275\240\274\'>f\"\336=ag\217\274\200OQ\274f\300k\275X\017\215\275\362F\321=/\255\035>\026\346\266\274\370\260\231=\252\326\016;\263H\177=>2\'>\213\003\232\275{\207p\275q6\262=\312\n\016>\342\261\311<\233k\027\276\000\351\"\276r\340\010\276\007\256\331\274\2577\231=g\204\017>\227\366N=\320\r\335<\024\037\225<>\367\361=\267\276\014\276\247\315\373\275E\273>=ie(>\223\303\346=\310\211\034>\"\034\315<\374\3248>fb3\276\265v\245<\031\256\217=\336]&\274\262\005\022;\324J;:\251\200\003<\354\002\021\276\206\036\265=\\R\215\275\322\245\032>2\360\027\275\204a\365\275G\307\200=yv%\275\0133\026>\367\304\264=\034l\006=i\375\352=\257\222\235\274\225\332\010\276\205%\010>F*\330\275-\331\352=K\024\366\275f\244*\273,\346\'=\332?\245\275y!^=\364\372\223\275\342\035\211\275S9+>\360Zs=\364S8=\rw\203=8d\226=>\3530>\1771\306=tg4\276g\032\006\276\244L\t\276\336\3620\275\325\322\030>\235\377\017>\036@\306\274\217\0267>\022\227\355\275\223\205\010\276\246\213\203\274\202\201\245=xO)>K\255!>yt*\275\202\353\312<\266\177\204=\205\002$\276u\326\267\275\344d\002\276<\021\327=KB \276\355y\354\273<A\330\275\207v\034\275\002\017q=\364\356B\274\315\t^\275h\"\274=\016\221\002>\333\224=\275\3414%>Fj\265\274t\226\010\276\203\301\310\275\202\271\333\275\032^\201\275&Y\275=\243\252.>\005\370\330\2758\357@\275\037\022\317\274\221\373\210<\321\016\300=\321\022\331=\364\022\202=L\255\010=\360\323\007\276s\373\317\274\224\361+\274,p\350<\304$\306\275*\213\355\274\374\1771\276\362_5\276-\266\201\275m\\\227\275\365\177\037\276\356\023\022>\337_\014\276\331\210\217\275\007\323\364=\026\372*>\273\3407=o\323\264=\330\357\034>v\370\215;x/\033\276\206\000\013:h\327}=?6\001=\354e\253\275\002&\321=\354\324 \272\267@+>\266_\022=U\326\035\276l\213,>ZR\337\275\345\321\347\273\263\234\025>\314x\\\275\220\203:\275\262\301\023>\023n\321<\243ia=\230\201\316=\367\205\026\275)\0103\276\0269)>i\255\014>\321\027%\275\360*\372\275\205\331\330\273HA\n>\371Jn=!\326\207\275JX\024>eJ\r>\343d7\274\001\0139>C\021\377=\020~\264\275\307S\"=\221\244W<\342\002\264\275X3;\275\033\365\035>CF)\275]\374\246=\247\201%>G@\211\274\311d\'=0\036W\2756a\335\275\256\300->\332\215\205<A\356\275<\222<\243<\000\374*>\332{\326:\315|C\275\207\n\275<\2455\337\275\302\202\006\276\317\206\250\275\247\035j=)\320\264\274\357\370\251\275\035]\007\276"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "B\024\317\272\255\003\230;,\277S\2728\325\242\273\304\r\243\273\227\251\225;\351\364f;\325m\240\273x\036\230;\236=\243;8\033x;$\006o;\251.\241\273lad\273P\267m;H\305\243;\336\016\243\2733:\224\273\030\214\230\273\033\002y\273e\341\243; \350\236\273\367\t\225:\230\333\204\273V\323\242;\241\307\243\273&\036\247:r\266\243\273\020\237,\273\206N\242;\222\323\243;\014c\';\366\362\237\273\206>\226;\347\226\271\272\270en\273Y.\243\273\330\317\234\273\206\370^;,\234\220;\237\177\237\272\245\373\215;\342J>;J\271\204;?m\217;\216\020^;\354\264\204;\003\255\242\273Z\350\243;\332\310\221;\3549\230\273k>M;\362\350\243\273\315\364\217\273\264\207\024\273\026\016\231;~f\243\273\314\311\237\273`^\217\273J\355\243;:O\240;*\351\242;\035\365\206\273\315.\234\273\311\016\217;\330mR\272\222\026N\272\241\252\243\273l\221\241\273\250\206\233;\005Ln;\332\266\235\273\304\246\226;b\352\243;.(x;\277\313q;V\364\237\273q\351d\273\264\360v;\214\271\243;\364g\242\273\334<\222\273W\265\223\273\202\341n\273\250\337\243;\222f\237\273\330@\335:<\244z\273\010\346\243;\000\326\242\273^s\t;\020s\243\273\361GP\273I\354\237;\216\351\243;\254\202\026;\277f\234;$&\242\273\342\227\220;\275\231\242\273\254N\243\273^\370\237;\254\014\200;|9\224\273&}\230;\323\321\243;3VQ;s\341d;\236\tr\273\346jc\273\024v\177;\030Y\231;,\356\237\273\235\224\213\273\306m\227\273\232\273\206\273\214\\\243;<\024\235\273c\306\321:Z\354_\273\375\303\243;s\211\243\273\036\270\235\273(\226\243\273\316\201i\273\201\217\241;\256\223\243;\307E\t;"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\345\021\r\276@i\377\274\320\362X=\324\\\n>x\270U=\340_\003\276(\026$=NN\210=\311\335@=\032\2530>s\027-\276\200\322\016\276b\223\322\275\355\317\324\275?\267\027=4\021e=\307>\371=h\256\247\275 \314E\275\030\006\277\275z\201s\275b\214\022\275\352\341\272\275\377\243\343\275\326\305\310\274\371U\013>\256Q\212=\022\306\221=\310\220\367=\271\231\007\276/\302\003\276R\325\013\276\356\372,\276Y=\370=J\342\200=\000\270&=%\255\"\274\342\310+>\264\212\225\275x}\263<O:8>\240\017\325=\320\377->\243l\035>b\3421\274h=$=\316\034-\276\251\\\202\275\216Y\232=\276\372\356\275\265v\256\275]g\010=\241\220\315\275\3078\017>\356\335c=\302\203-\276\3241\236=I\2756\275$d\000=\373o8\276jA\236=WH2<\022V\010\2764\031\006\276\235\024\006>b\034\033>\222\214\025>\3215\323\275\267\334\217\275\255\343X=\032\n\034\276\272\374\035>\251\320\263\275\372m\220\2755\371\017\276\271\312?\274R,\246\275\351\213\030\276\3731\177\273\201A\237=\241\221\331\274\227\217\376\275\362J\206\275\"\365\317=`\363\246\275\177\310\260\275\034s\250\275\271\302\347\274\021\324\211\275\213\302\304=(\002\020=\372w\031>7\030\265\275*\221i=\271\355\356\275O`\031\276\251\026\002\274\200\001\371\274\315\006\003\276J\352\027\276\352\006\016\276\253\0341\275\241{\331;sN\310\275!7\217=\274!\021>y\364\216<\t\237\026>\275\216\333\275.\274I<\270\347\226=\314\t\232\275iT\351\275G0\307=.\350\376\275jj\030>\231\363+>\376M\220\274\031%\245=\235\306\000\276\022.\001\276\370F\244\275l\271\266=\351\200X\275bQ\221\274\366\022e\275\320\264\312=-  >O\261\346=Z\276*\276\300\334\213\275\310\326\255\275\331\217+\274\250e\364\275z/\000\276\276\335\236\273\030\371\367\275g\216\317\275,\0146\275S\357\324\275Z\325[=\314\277&>Y\020\254\275\332V!>\330\340\373\274\205Q\014>\225$\004>\246\256|=\332\377#\276\316\200\232=\243{\020\276\347\361\311<Y}\260\275\345\257\037\275+\355\307=0\003\007=\327\234\373\275\003\360\213=\262\277\006=&3\004>R\031\\\275j\253\255\275\277\353\354;-\202\325\275\216}\305=\250\345A=\357\355n=\270-\251\275Y\366\372\275\301]\317=\240GZ=\371\320\242=\230|\033>\03069\275i\3215=\206lr\275\227\240\375=\2636 \276\377\211\367\275\371\217\203<j\033\351\275\025\177i=\021\200\262\275\024\025\331:\224\037\302\273\210\366\346=\354r\017>:\003h=\216z\277<\221\230\213\275j~=\275\361\310o;\345_\003>0\013\255\275\353=\025=\210\302\201=M\030\210\274\206\262{=\332\003j\275/c\355<\230\330\260\274O\224\002>q]\252\275\255`\303=\265\264\006>\201\006\350;\217\034\004>_1\005\276h\024\016>\3651l\273\303+\013\276\352\212\006>\377\n\307=#R\245=\243k\345=\326\342/\275\317\337\013=\267?\251=\330\373%>\214\035\245=*\355\022>\336p\020\276+\324\234\275/\347\310\275r\233\320=\n\321!\276v\336D=\023\250\254\275\225\254\003\276\346z}\275\"\"\037\276\177&\272\275i\377\326=Ob\021\276\032)\021>@\247\t=\367\224\304<>}\235\275\274\206\037\276\350\004\270\274\344z/\276:\217\305\275?A\004>\263\255l=\"X[\275\226\021\377=\212W{\275%/\022\276\377\031\326<\024\217\313\275\361\311\312<t\302|\274yV\213\275\226\234\242=\231\223\321\275\355k\274\274 (\034\276\320\376Y\275\013\'&>^\212\336=\250!\211\275\256*\361<\nE\035=$-i\275$U\203=\317-\021=\006\372\351\275S<\r>\276~\250\273`\344\267\274\372\000\337\275\333\224\204=;\357\374=\233\357\314\274\224\2416>\346\235\353\275L}\243={q8<xH\213=\342\241,>\326\302\307=\254u.\276\306&\'\276}\2771>O\337\005>\302E\t=X\255\235\275\301&[\275\224\0315\276\272\342%>\326\234\000\276\215\036j\275\277\240]\275Du\302=p\204\t\276\013[T<K\271\025>\3752\013>\264\224\233\275\242\266\204\274\220\306\371=\210\300&>\230z\010\276\rW\324\274\273\016\332\275\203\326\036\276\352\027\030=\316\203\303=1\272&\275\314\305\031\276\2610\246\275|x!\275\362\035\227\275\224\2155=[\206\320\272\007\215\022>\311\342\331<Ew\r\276\2429\267\2742\237\336\275.*\033>yO\200=n+\311<=\026\216=\324\315(>o\200\246=\034c\336\273\305\350\027\276]\230)\275\224qp\275\363\207\002\276\t\262\263=S\205\200=5V&\274*-\353=K\024\001>\003\231D\275\22105\276\222\333V\275\020\243\313\275\262\023v\275\\Mu=\312\316\024\276\'\373C\275\240R;\275\033\030\347=\353I\310=\255\220\204=q\377\'=^\206l<J\350\275\275\351\316\200\274\266\010O\275\241\317\361<wf\221=@\207M\275{\264\366\275\365\316\227\275\202R\231=\253\310\347=J\255\331=\316T\037\276<f$\276\372\020\310=e\345\266\275#\242\265<\001X\364:d\212(>\017\030\017>\r\370\251\275\351k\032\275\310,\371<FW\036\276\345\035B<\376\360\220<\306\225*>\224\317 =\211!\032>xc\264\275\337\330\000\276<\232\221=\031\347\242<4\323\037\276\275A\317\275\323\326\006>\323\2554\276V\225;=sd\031\276`\271(>{\314\002\276\316\007\255=@\251\272:\353\353\300=t!\t>\273`\317\275\332;\021\276\n\030\330;\377m\372\275\021\036\272=\221\022/=\234&\235=\346\310\017\276\n\214\364\273\367\356\305\274\276\277\253\275\016\356v\275\250{\357=\023\230\345=\212\324\023=n\201\371\275\3350\016>\0070\032\275D\373\'>\303@\323\275L\007\037=\251\223\207\275\352\345\030>\373Y\001>\231A \275\227\376\t=\nC\326=\263\306\264=\232,h\275\233\004\033\275\217\331\373\273\326H\014\274J\264\021\276\261\223\006>\013O.>\022[\366\275\325\244\304\275\227\365(\276\321\362*\275mC\020\276\342:1<\030\211\'\275\031\225-=\335\267\027\276\352+\017>\022\2279==\232\265\275c\036+\276\014\372-\2762\221\243=\313\231:\275h{\353<<\375\026\274\325\302.>\363F\212=+\366\246=\346\321\037>\232;\016\276\265BK=\036\330\021\276\261\261m\275\362QX\273\266\256\007>\214\334\374\275c\357\n>\362\220\025\276\250c\250=\260IW=rp\257\275\177\"7\276\336]\372=\336\216\223=9\337?<\3556\000\276j\225/;\306$\374\273\033j\n\275\n\340\'\276\020M\252=U\363(>SQ\037\276\207\374\244=j\375\321\274\025\223\023\276\033\0339\276\245\0010>\007]\002=\256G\365<\272\304\250:\315:\271;\023\000\010\275\373o\'\276\023\340\033>\201\221\031\276t\373Q\275$\307\334=\033$\035\276\216>\277\275$Y\254={\237,;\301/\\\275\375@\212=\255\350\302=06\254\274\244\261\032\276kA\036>\367\277\000\276\372\321\212\272\233\016\264=\275o\210\275\305\017\301\275\244\310\327<\330J\014\275=\276}\275\351\205\027\276M)\330=\234\254\205;\360\022\010>\272%\300=\266\236\266\275_\r\224=q\316\r>\034\223\026>\245\272\024\276@x\352\275\366u\331=\215L\272\275\000\216!=\226\200\326:z\217\361=\237q]\275\372T\335;\271D\001\276,+ \276=\016/=\2642\244\275\240K\001\276b\330\354:\223\243z\275I\241c=\254\267#>\234\263\357\274%\024.>|\033\347=\\\253\216\2721\240\004\276\237:\330=\332\035]\2747\335\016>\r\005\303=\217Ba\274\213!\370=\177\235\027=7;\273<\212h\200\275/m\277=\221+\r>\263\307\026\276\264F\324<\372\2220;\371\240T=\335u\223=\023^\n\2763=\372\275A\342\014\276\362\224\363=\332\331\307=Sw\346\275:5\312=\355\222\020\276\345\363)\2769\276\267=\224~\223\2757\r\326\275\357\322\216=/\360\210=eI\253\275\033l\335\275\210}\025=q\213\217\275\315\005\000>W\032j\275\334\340\270=W`\355\274\033\315\267=7\007\355=\325\211\307\274\2475\023>9d\027\275\221\256\321=\347\202&\276\246\002Y=\005\353 <\032\025\217=8\032\235\275\3010.\275\021c\214=\356\017\302\275AP\340\275d*Z\275>a\n=\353l\276=f\215 \275\235.\276\275\376\334\302=\355vn\274\246J\234=\367\\\034\276.\332*\275\016Q\374\2752-\343\275\223j\315\275\262\276\035\276\305\310\276=@!\005>\223N&\275\305\001\246=\007l#>EI\r=\210\367\215=\342\026\376\275w\236\227=\261\345\277\275\355\251#\276\007\261\362=O\264\275\275\223|\344=\222\273\300=\330d!>L\262\212=&\004\n\2766F\026\276\016\247\370\275h\352\007>\230\203\217\2750%\303=\'2\354\275\204\032)>8\323,\276\235\227\003>wP\215=\376\275\334\273\3600\242<\021b\373\275P}};\245pO=\220\030\214=\323\343&\276^\'6\275\004\007\263=\005\212\361\275\330\340P\275\200\346\006>*3[\272q\327B=L\'\334\275A)\210\275<@\242:\000\206\'\276\203\257\031\276N\240e\274W\274\204\275\0259\366\274\013\365G\275\273\343\311=\311V\373\275g\270\272\275\356\t\022=;\211l\275\031\004O\275m\014\320\275I\243q\275d\220\304;l* >\035T\203\275\376\323K=\205\271?=I\3161\275\367\223\201=H\315g<oo\014\276\241\030\312\275x\034\277=\310\3115\273\342\271\367=Uw\227\274\237\321\022>\272\217\010>C\267\"\276\221C\247=\357q\322<\264P]<\'2,\276g\217\272\275\235\315_=\'f\247\275F\"\211\275\031\275\243=\334\277\200\275yza=J\345\237<w^\252=\302>\200;\272p\217<\337d\377\275#\262:=\023i(>\351\322\231\274\246\236\350=\t\232\231<\212\237\220\274\317\3323=6\344\004>oK\213\275\205K\r>W\213\240=!~\311=\360\016\262\273A\023\205=\260m\246\275P\221\360<\253\311\337\275\336-\245=\273\034\005>O\353J=x\206\354\275E\306$>(\334\245=\3755\352\275\217\273\225=\0339\265\275\254\315\211\273h\264\331\275\214\240\222=a\014-\276\177\244\364=\237\344L<C\354\267=6\334\010\273\022\343n\275<De=\317\177\343\275\252\026\200\275\261P,;CO\341=\177\234\030\276\357\032\376<\017\336\276=\327\003+\276[\366\001>@h\016>\253\230\206\273\253\t\"\275\264\351\030\276W\2205\275\214\307\365\275\255\323&\276\344A2\275p\343f=4\026\001>\2346(\276\n\316\000>\322\321*>\254\177\214\275\320\226\267<EL\354<4\263Z<\216\236\017\276\204m\337\275\334\370\314=P\356\374\275\362+\261=\335DV=\206//>\206\256D=\\\332f=\247c&\276v\365<\274\202\221\214\274\255\242&>\362\234\302\275/ 5\276`\340+\276\rA\242=\366\314:<\225\254\205\275o\010?<s(#>\303b\010\276\322\372 \276\377|\306\275u4\'\276\237\024\255<\234\235%\275\215\353(>\013&\316<<\316\272=\201\270Y=\250\314\'>\0040/>\"\211\032>\3714\320=\247&\273\275l\021\241\2755\325$>\253\220\023>\373\232=\273\312st\274\232N\343\274\324\243\324\275\360\253 >\325V\323\275\340\375\315\275\220U\374=\205\244\313<\267\020\363\274\314\364\031\275_\3467\275\366#\377<\360g,>\356`\221=\233r\">\356]1>\264\022\255<3-\327\275<\345\001>\226\302\023\276\007Q\t\276\270\242 \274\t#\354\275\025T\023=\255\263\273\274<\373%\276\334\335)\276\301\027\310\274\257j\020\276V\236\211=+\350\005>t\nG=\2045,<\003\034\332=B\177U\275\321v\265\274@g\325=\235\250l\275\361<T\275\2417\260\275Z\230\342\275\031\267\345\274\006#\315<g\373\242=\246L\035\275\024\200\266\274\325\222\332=v\377\020\276\t\216\307=[H9<\215\014\025\276\365z\263<\352\337\376\274\252D\025>b\031.>+T\007>x\034\362\275\377z\035\276?U\035>\242\033\001\276VF\262<z\320\206\275\322\234\267\272=v\031\276\250_\023>}\361\255\274\316\337\036\276\323\355$\275\306\311\n;:\027\224<zk\001>#\244f=\312\214\017\275m\020\353\2758\016\022>\251Y\031>\260\314\314=\376-:\275\364\214\261\275\274\326\376<\202\250\023>\211\261\307=.V\004>f\272\023\276\323*\315=d\233h<u:\236=\340\257c=\272J\375<j\n\006\275c7\007>\214\214->\346/\300=\320\355\357<#\271\026>Y6)>\224\254\247\275MJ%\276\300\030\360:\035\346\310\274\001JF=u\222\325\275j\360:\275[\307\203<\315\033(\276\334\244\037\276\300\351\305\275\330\244\203\275\021Z\023<\351\t:=]\330\021>d\205\026\276\264Mb<\030N\361\275\376\336\231\275\264N\035\276\256\360,>\315\306\r=\373\2562\276o\312\027=\371\317\036>\200J\337=\260\221(<\322\363\230\273\037z\214=\374\225\366\275\3116\321=t \372\274\235\t1=\017\360\017>f,\000>\3166]=\244\025\234<4\336\315\275F\300\324\275.\020\002\276\321t\307=\233\267\'>\261\023\177\275\353\023\374\275V\240\006\274\301[\014>W\2271>(#\023<\3155\254\274\251\263\360=O\273c=U\223\002\276\250M\300=\246\237\335\275\311W\227=s\245\236=\356\220\007\276\252\000\'\275\005\\.\274\004\224\022\275\362S\201\274\2008\032\274\211\340\364=e@\020>\373\267b\275\313B\362=DI\250\274>\307\304=m\347\243=\341\307\006\276\301>\004\276!\341\265=\244t\024\275\273\337\227=bh\324\273\322\363/>\021E\337=\255\034!>4\366\257\275\t6\373=\346\314{=N\232\202=\000\347\272\275\364\273\004>\275Q\360=\277\002\231\275\300\022\211\275J$\034>\330\336\t>\216\331\023\274[\035\\=\316\021\242<r\365z\274\017\202;\275~\314Y\275\244\2124=\244\340\036\276*\031~=\010\377\375=\014\2613=e?\353=\300\352\325=/\304\211=\305z^\275\031\024\353=\244\213\025\276\323\321\215=m\277\035\276\356\360q=\010+[\274)\236\031\276\252\255%=6\306\327\275\341f%>G\366 >\263\014\003\275\350c\310\271t\244N=6\241%>\3721\357=\267\205\004\276\246m*\2766\320R\275W]\271=e\030\377=\204\312,\275\251z\r=\320\355\026=\277\013\307\274)\\(\276\327\306\352<U\301u=\365\024\031\276J^.=\256\314K=\360i7\275\323\310\373\275\312\255\240\274\224\267d=\356\356z=bn1\276\356\260\212\275\307\230\006>\236\213\302=\232\010\272=\253s0\275\r\352!\274\364H\231\275k\035\007\276\3217\037\275!t\001\276\306r\342\275\251\203\354<\242\267\312=\317\206\016=qZ\034>\266P\333\275\373\316\342\275\275p3=\273\201\362\274\366\177\347\275iD\261\275{\031\024\276+7\024\275\224\312\037=\361V*\276\250\356S=\375?\221<s0q\275\026*\305\274\254\370V\275Pi\001\274\022%\001\275\361m\255=\335\222\277=\305\201\364=\227\236\306<Z\210\340\275\335z\020>\222\316\232\274\355H\351<\315F7>q\\\">\3518\t\276\227\223}<K\340^\275\'\312)>\216\243\245=?\236\r>\206v\033\276Q\270o=\337z\256=\302\177\336=&\216\354\275M>\002\275h\375-\276}\316\341\27561\n>\210\245\007\276y\264\346\275\034\003\001\276\037/\236\275\260\031\265\2759\004\007\275\202\003\253\275\353\273\200\275\254^\250;\033|3<\362\361\261\275\203\361\203=\312o\033>\311\237\371\274\277\031\267\275\253m<=\250\256\250\274\344%\364;^LW<\3353]\275\202\266\332\274*\256\003\276\343S\002>\236\006\300\2753\227\354=a\342w\275\200\301\354<\252\233\r>\201\341\221<\020\271\251\275\260\201\306=F\000\341\275lh\330=8\200Q\275Vr\343\275\306\217,>EH&>\370\335\002\276_\n\312\275\256\037\343\275n:\257=\227\350\270\275\263\242&\273#b^\275\205\267\n\276\334\330\200=N\3646\275\255=.>\037\305\362=>\200\374\275\t\343j=\236X\235\2747}\364\275\364\325&>\231\337\204=~\215\244\272\235\026$>\364%\r>\254\260\326<\265Jh\275x\203\352\275\224,\262=\3273\244=;\352(\276\000f\006\275\3619/\2756(\266=#\022 \276\241\024\022\275GU\256=XF\224\274\216\311\037>\252\365\367\274U\230\375\275~q}<\333\004\320<\230\332B\275\307;\230=\033-J\275@\235\344\274\227\233\354\274\370\375|=Lk\264\275HB\224=\276\200\324\275\367\343\331\275\352\322\n\276\312\267]\274\254\266\003>R\342\020>\3339t\273\342\252\005=\207\234\003>c\331\357\275[E\035>)\205%\275\373\267\352=\221$\030\276pV\'\276\000\010\340\275@\344\'\276\006\201\033=\313\207\347\2756N\324<f|W\274\262\235\243=\221=\302\273\271;\370\274IS\233=\370\201\342\275\274Q\305=\372\262\242=\360\206\036\276\350\276\200=\201\236\207\275\253\177\354\275d\031\033>9%\302=,\304n=\'\250\325\275\375)\371;T&\002>D\267\224\275\005\031%\275\330c\252\275\377\236\360<\235\032\253=q\200\342\275K\366\033=\235B\347=\244Az\275\330U\260\274\215\203\350=\342*\007>\353\t\212:u\2471\276~\227\022>>\327\">\332\323$>\353O\212=t\227\252={/\231=\0208\265=\374\n\327=\0143\202=Tq\371\274\226\024\016\2763\364\265\275`\026\331\275\205\304\331\275\014\177%=\204p\221=\207\347\225=@\316\000\276\217\352\372;\241\317\000\276p\226\322\275@xS\275\342\325K\274\030k\330\275\212E\265=i\0368=a\303\220\275}\311\031>3\275\373\274>\325\316<\205\230\260\274R\272\306=G\024\'>\326\234\327\275-\"\200\275\233\212\014>\220\247\025=8\270\016>|Q\266\275\240\336\263=O\361D<`3\031\276\334\016&:\353E\337=\010u\360=F !>J\377B<\254>8=M(\377\273\200\276\2609\367c\343\274EW\276\275\340\327\007\276\027&\333=\356\316\200\275\n\022\354\274\361U\317=\324=\266\272f\251\034>\222\177\360=h\367\235\2753(\250\275\230\033P=l\332\233=\340&\004>\314z%>\231F!\276\244a\305<u\314->\253\341\001\276\316\370\027=nw/>Qby\275\211\004\001\276E\375\325=\201j\014\274\303g\234\275\021\361\014\276\375\207\303\275\230\n\340=u\303/>4V\252\275\251M\253\274\366\277\373\275\260\033\252\275\215\347O=#\274\255=C\310\033\276\007\311\231\273\344y\021>:l%>\361\330&;\016\204\342\275E\204\355\275\321\255&>\334\223\231\275z\035\t\276\365}\225\275(\345\361=\275r\n>\354!\320<\3412\355;.\261\266=\311\336D<j\265\322\275\247\212\341<\r\302/\276\233J\214=\331\261)\276S\356\315<?W\001=x\270\001=\'\024\337=\221\336*\275d\324\035=\200R\234=x\326+\274~\037\021\276\257\314\346\273\237f\203=\236\323\020>b\261\023\276+&\330\274hO\007>\000\273F\274j\n\201\275i\330\276=5\362\352\275\201R(\276S\214\346\275G\001\274<\307\343_=\242\3740>>$\272=\341\320\272=U\276\031>O\220]\2758\261!>?\246\221=\223$\026>.\323\332=\2564\224\275F\260\034\275\330}#<\344\334\343=+\300*\275\301\\\262\275*\260f=4\331\351\275\262\305\373=\251\350\364\2755\2559\276\366\206\037>Z\250\324\274\020\240\365=~\3352>\375\330\324=\003|\034>A\371\325\275\221K\335=,Yn\275\335\2120\275\207\325(=\363\323(\276i\367\245\275\017\235\217\275\371;\366\275\341\320\241\274\3239\031>\212\242\205=|\272+\275\036\337\223=\232U&\275s\225\360<2T\262\275\240Y~\272u\266\020\276\302$\223=\206=\235=\343\301\207\275\223K\374\275\212\034a\275\360\314b=lE\220=3\324\216<p\277R\275\210c/>\331d\341=\007T\236=\304\036\361=\243\3779\275\375\024\r>\021\2706\276\301\034\025>\032S\t<\016\316\034=\270\005\202=\031\216\031>)\010\007>\253\377\353\275w\261\005>\"\346\274=R4a=\305\\\006>\274@\271=OB8\276\336\212\365=\334t\343=\nz\263<,\272\026\276\2573\261=\311\315\306\275\215\r\306<^\020\250=\341\327\344=\272\275\006=\010D\314\275$\200&\276\213\304\217\275{\225\006\276\224\017\231\275\260\345\357\274\307\3308=f>\014\273\372|\212::\362;=\273=\">C\201\314=\230y9\275y\014b=\230?\360=\361\362\004\276\214\313\261=\025\306\002=\030\2727\274\025\253\360\275\010\034\003\276\374\222\033=\027Y\245=\006\307^\275\234\022&>\0037%\276\2717+>-[\016>5\232\277=a@\322\275A\233\300=\377\030\233\275\017,\034=9\262\336<\'\240\251\274\275\364\t>P\206\212=(\251\253=tw7\274\335\035\316\274\364\021\313\274\\\345\211=k\020\364\275\244\242\204<\305\201&>\372l\323=v/\263=\013?\'>\302\253\030>\370\247\261\275\213f\373\275\242{\307<\000\0342>\326\006\n>\215y\360\275\242\253\227=$7\244\274\312D\200\275\227e\006>\323\211&\2735\320;\275\260\232\275\2754\021,\276\023Ps;\026V\200\27446\017<\205A\305=\341\343\024>\026{\321\275\032*\014\276\314T/>\t*\006>\005\361\017\276\245\373\034> :\034\276\314\037\217\275\036s\202\275w\251\254=\312i\266=+\307\031\276`\232\231=\317@\017>\031\255\001\276\251\212\205=[!\313\275\226\223M=\203[\005>\010\202]\275\2777\243<\n.\307\275\242\r\217\275\204\250\004\276v\371\">U\256q\275\005\030\366\273R\361\267\273\330\333\327=F\017\343\275\217\353\344\275\205Q\007>\306\034\276\274\345\367\022=S\006\307=Ym/\276l\210\311=y\275\033=Y\005?\274\246\200\236\275\213\237\276=<\244\264=\010k\203\275\366\346s\274/*\010>\236\272\314\274\226\016\316=\"i\200\275\020\231\352=\271\217\305\274 \350P=,\202\321\274\211=\277=\242\002\276<\373\321\001>\255\341\311= W\023\276\n\322\350=\0137\327\273\275D\367\275\021\027m\274A\217\027>\233^\312\275\005\017\247=\334F\231\275O\367\225<\002\320\216=W\204\261<|\251^=\245=!\276\361s+\276\272\037\013\276\020\372 >!\245\003>\366\031\2539\317S\272\275P\013\206=\363\020/=\004\366\323<\253\342\226<Y\326\034>\035\340\267\275AD\313\275T\242\321;x\271\363\275\342\336\026\276\232\204\213=9\356+\276/2\000\276\037\010\324\275\221\037\234\275w/\212\275\353/$>\240\230\373=$\334\000\276\343\346\265=[Z\254\275\214\215.>\177\3505>%\336\270=\343\340\261=y\177\247=x\342\006\276\331-\357<a\217\016>\230\207\037>\341\300\336\273\240\222n\274\350\310.\276\231\253\272=#n\016=\030\001\317\274\331K\033\276;\267\030>h\014\024>\007\240\004=\375IC=\361)\316=\357q8>0f\276=oM\214=\261h;=\334\035\317\274\223\025w=p\005\271=,\002\360\271X2\373\275\352\347\343;\322\317\200=9\202\006>+<\025\276\030\344\021\276\034<\203\275\355\376G\274\323\263\366<\321\r*\276\000\017\340=\326\227\\\275p\315\020>\030e\226=\340\3614\275f.\266\274\365\017-\2760\0009\276AU-\274\005\313\365\275][\002>\025\177X=||_=\206\237\026=`\216\036\276\224\247\376\275g\226\257=\254\375,>w^\003=8{;\274\300\002\027\276|\036+>d\314%\2766s\362=\353\0160\276|~+>\017\'\321\275\357\373\031<\274\016\021>R\246\215\274\372\026\211<\023K+\276v6d\274U\226\256\274\024\232\023=\000$:=\020r\254\2746\303/\274\356\367\337=\004\330:\275w\324\220<\034X\331=\023\336\202=y\356\010\276\0218\315\275\235\037\366\275\367\024\364=\030\240\026>\024%-\276cQ\003>\260\177\352\275\316\337\302\274\037\362\036\276N]\022=}=-=\0312\366\274h\223\017>\\\202\334\274Z2\n>s\246\024=\010\023\226\275\312\264|<-\206\t>\273g\202\275\021G5\276:\213\330=\n\213\220=\231\313\205\275\372<2=\247N\032>\325l\251\275(W\264=\377\274\360\275\321\356t=\203\033f\273v\347\034\275\232\370\307=\356\346\204:\360\002\241<\0273\223\275\370x\n\276WP\313=\240\227\267=\336\200\243=\303\336\300\274\230\365\251\275\032\254\010\276\001\266\356\274`\265\2149\026X\224<\274\006\006\2760S>\275\247a\202=\031R\350\275\334\"\215\275\266(\244\275\323\014\026>5\333\362=P\362\010\275\213\001-=#\234\377<\'4l=s\244K=\'\206N=i\017\206=W\361\355=0_0>\337\"\254\275\263/\010\276\243\017\024=\362\010\261=\220Y\271\275\277\377\360=\002_\377=\376N\232=\220;\306<\372j\007\276\235y\272\275\223$\267=\363fa\275K\000\236\275S\017\210\275h\026\223=b\240\352\275\311\306k=\321L-\275\250\352\010\276\033G\005\276:\317\177\273l\305-\276\252\255\240\275\317>.=\313p\347=\245S\332\274\371\273*>{\204\356\275Yp\010>\371\221\010=\276\016\377<c\270\033\276\353n\252;\3371|\275z\026\221\275\343\235\013\276C<\334=*\241\007>\234\200\t\2760F\272\274iG\210\275\240\033\002>X\343\341\273\277\274\234\275\024\3528<\366v\271\2732W,=m\353\001\276\0268/\276\211\010\263\275\206\351b\274\005\250\177\274\220z\025>\265\206\264=3\356\353<1\365\016>dE\010>\347kH\275C\366\300=km\006>\237\220\276\2741Xl\274\235\001t=\305\2672<)\336n=.\005\023>i|\377=\350s\257\274\315\343\253\275^>2=\271\3334>d$\006>\312\311\032\276\340\255\276\275\210\361\026\276\224\206\351=.\004\370\275l\204\215=\230Y\237<h\r\330;~\345\315\275\337\300\t>\026x\004\276\346\211\004\276\364.\036\275\234\020\256\275>\375\004\276\235s\336;\257O\242\275\236;\022>-\352\231=\365u\035\274^6)\276;\277\246=\266}+\276\267\360\356=\274\246\000=b\024\033\275\334\363\224\275\221V\037\276\250\234\213\275\246\347\r>\305\205\264=*\"\213\274\220\252\014>\257\220\353=\206\221\203<^\005d=dK\247\273\371\215g=\335D\032=\272\213\223\275\004\226\033\276H\023X=\316[a\275:D\036>$a\320<Z$\303\275n\310\325\275\306U\230;5\331\331=\337S\035>\235]\353=\351]&\276d\304\367\274\246}p=\360~B\274\256gf\275\320\016/>P}\022\275\252\001{=~\327\007=FI\272=\034X\357\273\007\t\337=EU!=\010\341\265\275\030\266\214<<,#\276\37626>\223\212\304\275\\\274\371=F\310\263\275Xd\002\276\364\334\306=\003\331\335<\332^\331\274\312\302\036>\376\252\206\27522\313=\272\255\336\275\230\356\222\275\022M\311=i\177\275=\3404\273\275A\234\235=2\t_\275g\\\356\275Kk%\275~E\331=N\020\333=\234\346\026\276\356<\336=\304\360\301=>C\335\272\023\'\235=7xl=j*$\276\214}0\275dy\312\275\305\313Z=\314v\334\275\203\242\031>z\277\277=\202\300\347\275},\327\2742J\223\275\226X\366\275\033\242\272=\177\177\017>\322#\276<\016X\017><\232V;#\2761\276\364,\323=\334\316\325=\"\267\340\275($\277=\204\213\017\276\301\347\202\275\036\271\211\275\304pk\275p\r\274=\006\352\003\276\242w\263=\276\024i<b\230\305\275%\270\210\275\rE\243=\202+\001\275\325\227f=$\250==\205\204\264=Y\374\243\275\365\215\253=\034\320\375<9\216\233=\032k\371=\307\376\355=@p\256=\365\324\220\275*\374\211=KK5\2767\226%=B\022\332\273o\277\016>\334\304r\275f\324D=\362\330\007\276\355B\214\275:\361p:\253\351\253\274Yw\364=\030\214\">\023\037\207=\352\323\036>\003\013\212=W\330\003<^\022(\276\311\374\275\275x\340\000\275\371\336\234=\\:}\274\234\356\r>`\201\321\274_\276k\274\004v\004\274T{a=Dw\333\275\267\025\252\274\345\230\300\274\323\021\316\275\030\366\221=\377p\312\274\330\302-\276\376m\231=\000D\234\274FB\022=k\322\271\275\3223\223\274\014\345\253=Xt\315\272\273\205\r\275/F7<\242\350[=\027T\272=\215N)>?\017g=\262\205\251\275\255\304\026\275\222\346\370\275I\251\320=\'\317\001\276|1\035\276j\220\'>\025\021\'>p/\266\275\003\314\325=\206]R\275\324y\036>\317\226)\276W\016\317\2751\3135=lZ\307\275X\327\t\276\324of\275~\300-\276\355\231\032\276z\353\225\275\227+5\276{\014->\324T\237\275b\315\361\275\026\230\315\274\345U\240=.M`<`\314\205\275\221\304\241=\331T\330\275\322\206\205\275\330\365\007=\002w\230\273\2217\336\275\265\234\233=L\335\215\275\351~\220\275^\212x<\\1\007\276\0346\200=\373\330 \276\260n\007=\003@\227\275\344\203v\275\357\004\356\274\272\242T=\005\276\360\275\334R\346=ru\000\276\332\177-\2762Q\351\275CH\335\274L*\235\274\320\326\321=\352\000\000>\n\0061=\023\324$>c\005#\276\215q\205<X\227&=\264#\r=\233~\r<\325\364\206\2758*\356=\2079.>CT\243=\"\204\247\275\304\021\334=^\212\371\275{\276\262\275\372\355\356\275\250j\247\275\215\373\213<\377z\345\275L\257\264:\300\226\026\275V%7>&\342.\276\2248\026=\371\tQ=c\002\007>\353;\357=\343\303\005\276\r\010&\276Q\315\216\275\177\033\215\274\310\307\t\276\354\316\r>\364\272\240=\221\021\t\276x-\315=\tQ\301<_\032\022=\373\216\213=Q\"\201\275\001\242b=\027\3310>k\022\267\275\240\"\005\274s\253\326=\337\2218\276\025\001\274\275\245\371\362=/\357\016<\373\344\373;\037\202\312=\252\254\277\275\341\035\034\276\321,5>_\277\007>4S\300\275\3378\031\275\036\371\001\276\325\362\007>\2414&>q1\304\275\244\177\354\275\353\314\247\275\014\207\n\276#\343\020>=s\021>\251%\262\275\360:#\2765\325\035>`\320,\276\253\035\330<\305H\343=_\036\027=c\261\325\273\320\337\274;\216\302?=\016L\240\274\233\000\006>p~F=\322\304}=q+I\275\200\262\031\276\032H\252\275v\223\001\275o%6\276HR\357\275!)\220=\256\"\365\275R-\001>\344\"\243<c\373%>\253\242\333<\202-\321\275Z\016\035\276\275\211\003\276\331\0015>\201\244c=6>\307=\003*\261=\003\342s\275\326\"\260\275\270\214\350\275\311\274\266=\'\n\026\276\234\003\305<\327\207\r=Ds\223\275\353\360\243\274b\363\017<\352\023\334=\273k[\275\005\324E\275p+m;9\345\013\275\001R\311\275\327\335\314\275/\t\314\274\201\276\316\275\216\022\004\276\373X \275KO\032\275d\361L\275B\257\005\2766\262\002>\020H\335\270\370\200-\276\337\016\304=*n2>30\215=M\035\347\275l\204\360\275~r\343=d\022\322<\262~\017\276\324/u=\221M\327=\235\355H\275l\274\310=\034\3761\275&&\237=k\272\215\275\230\354\252\2752\313\021\276\034#-\276R\351\332=]\254\237=4\222c\274\224\207\305=\222 \022>\264\320K=\270\367\345<\251[\010\276o-\355\275\341\321\033\276\275\252,\276Y\2204>\210\212\006>\261\024\312\274\214t\342\275\344\324\r>\355\206\003\276w\005\024\276,\304k\275\204}`\275\000\333\211=S\017\350<\0329\363<\235\032\300=\021KT\275\370\034\032\276w%\276\274\213s\026\2768\352\215<hg\022= \363\240=\256\277\006>j\371\026>\217*m=\300\027\310<\370\036\255\275#\313+>\tA\242\275\322\322\314\275\303\363\221\275Iz\210=h\212\032>2?\204\275\347\345\224=q\376S=]\253\022\27674\231\275\332\3276>\223\r6=\345P_=\3607\020>q_\332\275CB\200<\235=\345=\013\002\033>\322\200\266=H\2646\275KN\002\275\2437\322=\335\322\225=\360\355\017>\2712\004\275yv\323\275r\361\022\276\243\252\021\275\020r\213=o\010\354\275p\300\341\275o\370\303<\217x\002=\001\031\347<V\261\020\275\r(\035\276\240\275\322=\t/\313=\352\252\252\275]z\013>\321\000+\276z\006\034>p*\023\274J\227\004\276\242\301\277=\317o\016>\310\345\016\275\366[C<\2532\231=\233\267\376=]\345\017\276Q\204*>\267\222\353<)@\215=\r\363\306\275\237\251\245<\276\230\014=\2163`=K\371\023>[\315\335\275\023QA\275\037\035-\276g\212\003\2762G\277;L=\036\276K  >\020\003\r\276L\271\237\275\235\3568=]:\251;\340\242T\275\356\027\300\275\010\364\272=\004\363\"\2766\221P\274\207\021*\276tK\036\276D[\274<\372\006\254\2753\360\006\276\030\201\335=\'\2349>\023\331\007\276\225\335\266=-]\313\275\3558\017>\214\304\200\275,C\204\274+4\367\275\374\326\336\275\276\214\345<M\034I=\'\'(\275?\262(>%\374\344=p\337\001\275j\2542\276\272e\342\274\350\2756\275\240\250~\275\030\024\330\274\327\2114>~_4=4E\255<\304(T\275\001\210R=\'#7>\272\021\253=\372;%>\243_\\\275\314\3117\276\026;3=\311\375\275\274\206g\r>RZ\010\276\302M\261\274K\361u;\316K=\274f\014\325=+K\367=NoA=T\241\223;\271\005\005>\327\326\222\274[&\322=d>\230=\271\311\260=)\317\357=\3151\253\275D\214|=\204\005\371=\262\2502>9K\371=\214i\003<L\246\016<\210^\030>r=#\276\022\330\273\275\"\020\032=\306\016\034>~\315\030=\323\314\217\275W\374\233<\233|\307\275\342\206\001\275\246T\017\276\322\252\207=n{\222<V\0149\276\351W\002=\202\312\024<\216-\237\275\320\365!\276\007\2130>Y\227\257\275\243`s=[(\265=\177\363/\276\371\026\277=X\257\n=N\004\311<\310\\\346=\322,\034\276:{\200<\262I\222\275\024\204\326\275J\324G<\027\305\262<^28>\232\276\200\275\347\344\270\275\265n\026>\351\360\331=\233o\257\275\255\004\336\275\212\233\343\275G\300\213=\003\3438=\356\252\027\275\325\235R\275Hu`\2751#\361\275\346\330\221\275R\300/>\225\335#>5Z\215\273\024I\'>\257|\022>k\031\355=j\251\233\275\337\365\217\275q\354\024=\271\254\261=\317\232\271=\321\3303=\0279\370\275&\265i<\027;\325\275R!\222=\367K#=\035\354\301\275\255\210\023>\007C\021\276\244\342!\276\351\3274>\235\177\020\276\306\210\332\275\253\2376\276\031m\277\275N1\242;{4\031\276Y\243\231\275\357\344\265\275\261!1=\\M!=\370\270\213=\362C\342;{\345\324\274\247\177\373\274\004\007\250=\266\017_\275\035(6>\201}\030>|\355%\275PX\222\275\370w\035\275\003H\030>e\331\303\275\027Q\010\276\026\376\224=\306\005\272<#2&\2765\272f=\333]6>>\020\311=\274\345\341\275|\376\010>&L\311\275\217\334\243=\342`\276\274\300\352\006>\335\261\t>gyL=Co\257\275V\t\030\276\321\300\230=kY\355\275\334P\364\274l\362\260<\025x\356<\271\344:<u\356\237\275\316\211\004>y\307\025\276[\tT<\304:\330\275\370c\001\276aL\324\274\215f\033>\375c\265=x\330\021>8\212\251\275\344 \007>s\330\037\276\240\262\037\274\267\320\364\275\376\354\214\275\n{\363<\275c\034\276\252{\004<\r\034\261\275\314\224\213=\014\243)>t\372<=I\264\335\275O\335\336\275s\360(\275eq(>g\203\013\276?w#>Q\337\251\274\220\321y\274Xo\\=\0252\r>;n\360=\216<\221=\362\326\304\274\263\002\363=\210M\252\275yV1>\251\273\246\275:\377\240;\314\322\201\275\265\342.\276\304r!\276\r0\217=\310^\013\276i\234\323\275\333t\314=\n\326\350\275\227\210/=4r\010\276\273N\247\275\300\316\302\275?\240\202\274{\336\020>w\247 =1=\030=`\255\326=\320\3647\2761\204\017\275\327\232Y\275z\267\001\276\223M\217\275\027)!\276\237\014)>\332!\311\275\244\016t\275\325\274\360\275\014z/\276\034\230\304\275\t\374\347=3\020\027>\252<\007>\351\361\270=\213\2328\275L\340\236=xz\'\276o`\245\275\230#\274=\205\364\241\275\252\025,=\332\253\221\274E\354\256\275&\356\">\322\233\013>\232\206\345=\201!y\275\377\367\266=V\275\036>j\226\233\275F\237\r\274i\001^=\256\256\034>{?\013\276\231\225\362\275r\332\035=t\347\231\275\233\261\021\276\255\356\r\275\007\037\245=-\277*\275\027F3\274\226J >A\252\014\276\244xm\275<\254\221\273\377\037{<\277\3235\276R\301\311<Mw\360=\262\201\025=\363?F=\204\365\360=\247U.\276%\201\024\276W\372\362\274\235S\324\275g\004\n>\342S\336=%\nB=\360]\374=\273>\t>\277\352\021\276b\372\372\275\367\305\333\275\3418\033\276aR\215\275\"\343\347\275\307\3121\274{\024\216=\247\226y=\013\272 >9\0077\275H\312\221\274\013\222\335=\035E\304=\215\222[\275Yk\302=LP\215=\376Q^<\306c\214\275\361Wh\275;\037S\274\240b\032\276|\201\030=\357\207\320\275C@2\275\317\216\r>=6\367==?\002\276\205\030\005>\231\342\t>\233\224\025=\221k\216<K\245\335=\235\250(>\333\330\370=Bi\035\276\267\203$\275\n\"\262\275\030\233\022\276\251\215g=\244\020$>\227l\275=\345\337\007>\365{N\275\302j\036>\2368\350\275e\344\237\274\2412#\276\222\377\035>\252}\214<?\023f\274\230M\">\347\256\360=\353\214\252\275\226\021\n\276>q\361=\t\177\252=\335\376\313=2\207\276=#\330\314\275\366\343\326\275!\r\301\275\222\357\000\276\356\231\272\275m\220\025\276\022 \025>\266\352\216\274\330\031c\275]\365\253=|\274\242=\264\330\355=\343\241/\276\370\365\366;\344\216\375\275\034#\005>9\275\346=\356\325\344=0\036\001\275\356\375\320\274\371\2700\276.\362z=\277\0371=z3`;\033\177*\276\373\251\356=\253\313\220\275\325\234\026\276jqJ\275\2623\035\275j\343\240=3;\266\275\332\2049>L\351\n>\312\225\356\275`\212d\274\333\364\247\275\341\316\315\275!\322\344=\214\224\007>\220\022\036>,\0179>\025i\010>\031\305\033>\025\353\215=\021\352K\275I\024\272=(4\003>F\363.\275\204(\037\276\220I\022\2768%\202=\037\304\002>\357\216\351\275\310\177\177=\027\336\020>Ra\236\275\232\014%>@i\241\270<#\031\274\220U\367\275\026\037\005\275\262B\004\276\252g\001>+\360\n=W\031\016>\347l\207\275h\267\032>A\227\324<\320\275\376=\224\343\346\275\267P\374=\216\024\t=\312\322\023\275\237\254\342=\204\0024\275Ad1\2761\363!>\200\235A\275\014\034\241\275\\\303.\276)\310k=\354\n\241=\002z\t\276\336\013*\276\314\002\267=\271\350\005\276~H\275=\237y\353=\337\301\036\275\014\207\023\276U\272\246< \235\210=\306\376B<\021l$\275\270:\'=>\026\361\2753\331\301\275\333\260.\276\245X\013\2760S-<2\263\017\276\320\0138>V\341a\275PK\327\275\300G\035\2754 \'\276\256\365.\276\233P\315=y{.>\036\300\333=Qd/=\371\001\013>\212Z\313\274\244nf=\343Y\006>V\314\'\276\267!\n>M\312\347\275\227\215\303=\364H\036\276\374\375\033>Q\r\033>\257M\004\276&a\211=-\233\263<\027\213H=\355\215r=\372\353\373\274-\300#=N\264*=I\277\032\274\037n\003>\200\202\017\276tf\210=\307\343\034>\322\005\322\275\270`\010=\214\313\350\275\334\2520\276b\332\000\275\010\334\370=\344\"\322=\356\244\374=S\t\021>\263\010\372\2743\346\201=\nb\020>\214\356\316<\364\304\340\275\324\217\343\275{^^=~\335\370\273M\212\010>m\013\235=\200h\010\276\240\301$\276\035\351\223\274Qt/>\214\0063\275K\372i=\305\201)>\335\025\006>\024\262\356\275F\302\253\275\246U\001>\344\221\023>\027\305\245=Vz\254\275\240R\257\275\211n\356\275dY\237=\3345\272\275i\266\'>\315\260d\275\353\177/>\366\265\311=\007D\207=\n\221)\276\t\010\035\276X\034\272=\301\333\025>\310\260\r>Mp-\276\226\253o<\201\207\266\275R\303\016\276\004\000M=\352\333\026\275MN\021\276\272\232\020\276\r\305\006=\032\313\300<\257\305\373\275\364\275\014>?_\017=.$\014\275Q\362-\276\004\021\377\275C2Q\274\230\306\351=\206\366\333=p^+>\322S\033\276aT_\275\200\0246\276#j\276\275q\314\274\273\000c\253=\250.\'\275\265\350\330<\231\260\344:\236\007\206=\251\241\377\273<\007\031\276\231-\272=\347U*=\363\r\016>\003\246x\274H|\2319\336\342\251\273<p\"\276M\370\327;C\2621\275\234\223\216<F]Z=&\362\311<\337+/\2767{\342\275\226\022\350\275\201G\035=KG\016\276 \325E\274Op\272=\330\036\034>\223Y\033\274\250\213%\276\366\230;=\232\360\237\275\364\326\000\276P/n=\023|\344=\353q\232\275\032\312\222\275\235\251@=^b\277;\232H\337=\346c!\276\203\006\001>\324V/=\004\272\010>\242\2044<Z\201\036\276\016\'\304=Z\301&\276\273\363\252<pM\335=\016x\346\274\201\266\"\276d\357\020\275\024\024\333<\236\325/\275\0231z=E\212\025=\373K\325\273\376\276\002\274\222\241\261\274 \213@\273\213\024.>\200Q\021>ya\304\275\263F\235=\262u+>\305\335\020>\203\274\227=\263W\335\275B2\r\275\300\025\213=e\341\300\275\376\032\270\275rK+\276\376\030)>\314\243)>\"X\351=\277\n\010>\255\316%\276\270\223\025>#\220\024\276\301&\310=\254\201\027>m:\374\275\205\333\246\2740\2743\2761T\234=\261\310f=j]z\2745{\204\275\353&_=*~\003\276f\n\016\276S\3161>{\256\035>C\031@<\224\201~=X\0003>\220z\262\275\376\362T=\233\022\031\276\366\346#\275qg\034\276\007G\226\274\246z\330\275 \242\310=\007\377\317\275\207r\352\275\243\001&\276\304\355/=W\262\221<(@\225=G(3\276R\353\342\275\320A\302\275\250IM=\247\323f=\340\223\343\275\226\352\"\276,\274\327\275P)\220\275%\302\352\275\366\230\013>\\\350\304\275\220\367/>\243\236\005\275\210\257\'>\344.P\275\262\277\035\275\230\362\211<\304X\377\273\353US\275\310\010\227\275\342\202\333<\274\302\357\274\326\036J\275\325R\311\275\026\264\234\275\344\251\235<\005<\276\274\200\365\341\273+\007h\275]\265\333=.!\333=\235\343I=\217\235\025>8/\024\276P\360\016\276\353L[\275U\037\244=\026\272\237=\373\251\245=\355MI\275\220\301v\275\364\'/\276\210\254o\275u\316\'\275A\274\030>\373s\'>\274\014\267\275\213A\342<\203\263(>\324\345h=-$\014>\304\277d\275}\305\305\275\364; <n\3054=\273\244\263\273\356\212\370<\t\307\212=\264\307&\275\372\341\031\276\221\246\013\273\310\2259\276\340u\357\275r5\237\275\036\335\031\276`S}=\002}\027\276\001qk\2753\013\372=I\225\333\275\020*\035;\001\350\n\276\335\362\024>Y\342\214<\216\177\201=\354\022\274\275r\201\252=\022g\243\275[\232\017\276\"\276\030\276\007\\\013>2\277\223\275\325\327\237\275K\006\001\276e\3229\276\307\251\351=\002;\227<]JK\275\271\315*>\217\000\327\274\006\2127>\235P\211\275\261\rk\275\266\t\302=93\355\275f\306\031\276\022\217\024\276\264\313|\275Q\234#>\226F\303=\362S\263=>\276\225=\306\274\317=\314\237\266\274\2719\211\275\216k7>D}\240\275*r\013=\377f\006=^\215\212=o\026\330=\261\377:<.\227\230\275\2170\177;\267\300\220<\255T\252\275t\234\263=\274N\265\275\005\251\261=\330\031\022\276\020\264d\275\026:\230<+`\032>W\255\372\275\256n\331=\371p\243=\206%\306<\223\256\323\275\277R2\275&?\014><u(\276\261\200\353\275f\0179<\366u\360\275\316u\252\273\025\340\374=e\214\327=\246\235\200=\001\322q;\000\340/=\010\216\037>|p\204<\363\253\277=0t\030>\257e/=a\202)>S\356\361\274\'\350\021>G\301\361<u>4\275\230M&>t\375t=\214\024\245=\234/0\276\273\n\222<\223<\215=\325i\036\276\323\340 >\004\014\202\2756o\375=\256<4<#\032\240=\327P\304\275\240\302\351=\270_\037>\354\000\265\274\371\334$>\r\230\303\275\213S\224=\3339]<\270\212\'\276\250I]\274U\177\021\275\221=\257\275[\320\022>\373\177\211=\260\345\023<\301J\255=&\'\340=R\367+>\251,\371\275g;V=\033\343\375\275\363\030\314\275\265\022\017\276\315\243\032\276K\272\002\276\364y,>3\021c<j\002 >\365\222\006\275\206\211\265\274\254\360s\275\227jy\275\001\r\221<\211\224V=\016\357\031>3l\252\275\\\013\220=\341\354\314<oR\274\275.e\006\275S|\037\275\002w\000\274\361>\230\275\323\301\021\275@@7>9\302\362<\324\320\302<\354/T\274A\307\006\276\\\021\264\272\031\t\372\275\224\027\230\275\257\016\334\275\343\313\006\276d\3648\274Pz =\311\217\310\274Q\235\307=\325\366\005\275v\217\304\274\035r\254\275\005/\001>\216l\216=\214tj\275\251t\014=\266\270\335=\024\031\035\276S\277\025>2 \257\275$\337\310\275\372\341$\276\272@J=\315\347\220\275\033\303\260\275D\024\220=&\203\022\275\026\320\000\276\325\255\211\275!\346\277=r\002\235<\030\203\331\275*\035.\274\223\325\256<\370*W=\221\376r\275\205F\274\275\222\214\367\275\000=\263\270\0372\030>|9+<\202\336%\276f\177\'\276y\320h=g\247\205=\300\333\016\275\363\017\r\276\306\212\t>0\033\257\274O_\333=\326\236\013>\031\217.>x\247\241\274\361\243\034>\205\334\005\276\317\034\030\276\240\2015\2756\023\212\2748\310H=r\207\010>O\343\326=\202K\032\276\277\366\360=\336(\342\275b\337\255\275\3466z=\222d\247\275L\204&\276S}\022\275\3512\202\275@\266j=\320\275\311\273\005@2\276\251\034\n\276\321\031%>8U\036\276>\374\277\275\367\366Z=\265\360\206=x^.>9\004\325=\004\323_<4-3=-\331\243\275\350\317\255\273\213<\340<t\347?\275\367\2138=\255\272\014\276\020\245*\276P\225\004\276\216\332\222=\3268\337=t\245\372\274s\n\370=\225\327\371=\0357\253\275(\361\217=D?\251\275\235\312\305\275yT\032\276i1y=O\236/<\370XE\275\255_\331<\177\373\326=\253\023\363\273\343\200\231=6\277\014\276\310y\014>LP;\274\376\353\035\276\354\325\002\2764x\357=\215o\355\275\035,6\274\242$\t\276\0206\023>\371\273e\275\003\327\004>\311\304\025\275\356]#\276\2133\225\2757\266{=]]\260=us\017>\240\236\303=%k\032\276\273\201\020>\\\311\231\274t\233\035>A\317\006\276\t_\024\276\237\327->\0176\366\275\200\312\004\276\374\320,\276^10\275\214m\373\275\335\2137>\005\256\320=4J\372\275\332\217\324<\200\216\t>\216\260\366=\261E\275\275\245H\304\275\310\214\221\275a\373\025\276\223\000\376\275\313\220\204=\006\274\'>/z\001>ee!>\251\215\010=d\353\367=f\336F\274+pW=K\211{\274\234T\035=t\262\000>\033\367?\275V\334\361\274\214\217\303=F\301\204=\342v\316\275,\241\236=W\310\r=FW\315\275\237\355b\275\206\212\363\275\252\245\022\276\200\301\034>\304\342\343\275r\212\371\275\021\344*\276%\201o\275\272l\031\2763\2356>Bn)\276\0326\036\276\347\245\326=\314\252\t\275\035\035\254\274@\023 =q\271\001>u\347f\275\010\350\372\275\365\361+=\306\217X\274)\227\250<\226\'1\276\255c4>\032Q\261\275\215\353\037\276\007\t\031\276\004\356^<\231\"2=*z\353=\327\206\213=\031\225\t>\262_\207<\210\225\254\275\222\237\362\275z\033$\276nSW=\227d\343\2742\341\253\275B\311J\275H\245\213\275Su\213\275V\221\225\275\372\243\030\276\341R\371\275l\024I=\014J\277\275\260o\325=\310\211W=\rU\272=8`\346=b\242\214\275^\026\251=\231\211\224\275\224\200\003>\305\3664>y+a=\r\3057=\315\364)>\3556*>,U\201=\351\2225\276\345T\'\276\306\262\366\275~\204\261\275\366\r\316=0\033\017>4\251\341\274\000\240(=\224\005\335=P\366\325\275\222\377\\<E~\342\274\204\331\301\275\003J\236=\363\234\r\276\225\236\300=L\272\350<\270e\020>*\276\265\274\035kU\275%\356#\276s\274\333<C\272(>\346h \276\033\233\366=+\275\000\276\317\320O\275J\244\222=\n\371\013<;\n\242=<\302f<\232\342\002\276\237da\275\252r\336<\211\355\244<\363\355\272\275)\227\"<p\270\257\275\231l\316\275b\271&\276\333\200v=\355\243(\275\212?\032\273\250\272\005>\211\275\344\274\031\317\017>&\266\212\274\271\355\007\276a\361/\276GK#>\273\342\017\276)\003l\275\2224\323\275\351]\305\275\022M\002\275\335s)\273h\330\275=/>\t\276\3723$=\335\215\305\275\036\243\017>\204\322\'>\246\005\007\276[+l=\343\320\334\274\326\377p<\231Iw=\212j\301\275\316hl\275t\362\224=f~\322\275\245W\272=\326\177\007\276WI\234\275\250\277\363=\320\220!\276\316f\n\276\3053\000\276\202\226\270=\322\3058\276q*\353\275\026R\377\275\354}->u\256w\275\376j~<\240\241#>\030\367\'\275s\2630\276O\2747\276\205\220\242\274\276\251a=\317\246\327<\211\273\236\274\003\320\352\275\302\032\026\276\016,\333\275U2\341\275p\322W=hV\327=\025\373\'\276\212\036\273=e\305\233\275\030\236\246=\213\234\002\276=\201\234<7\200\344\2750#\350=2x\211\273e\300Y\275%7\200=\305\311\021=\363k\034>\326UW=\r*J\275BZ\032\276\203\250\317<s\355\016\276U.\255\275I\211\241=\3372\313\275\367\230\260=iN5>\367\334\336=\376O:\275\024/\344\275otw=#\320\213<\017\032\014\276\"\314\026>R\262\361=-\377:\274=h\363\275\330\314\307\275`0\014>\367\230\217\275{\371-=\223\257\264=\016\345\213\275N_\232<E\310\004\276b\226\313=\"\261*\275\342\002\233\275\311\262\021>\211\323\271=\323\202\202<\221(\367\275\220N&\275\206\374\235<\341\321u\275\310\201\r\276w\326\017\276\322f+\276\227\262\233\275\014\r\n>\034\013\301=,\2702=\333L/\276x6\230<<\237P=\214\003\373\273\354\344\321<\037\354\340\275T\001|\275\376\335\217=\301%\030\275&\371\004\276\033*\275\275\270\342 >\233\313&\276D\311\326\275\36328\276\223\246\260\275\202\3336>v\210\265<\314\336>=\242\024\313\275\220[\217\274o2\003<K\246p=.\332@\275\317\264\231=\310\301\010>Bq\365=\340\2760> \222\353\275\000Z\235\275\\g\363\275^\304\205\275\345\203.>\031\032\005>\024Jg=\227q\037\276\235\263(\275\320\2515<1\232\002\276\217\247\231=\301\203\231\274%\034e\275\242\014!;_\307\345=[\223\252=*V!\276\207\213\333\274B\327==7\375\212\275\251&\254\275)F\216<\201\222\010>\337\245\322=\234\036.;\214\325\355\274\213\232\263=vT\024\276h^+\275\307\316\027>\313c\233\275\326za\275j$\265=kI\262\275fi\370\2756Ec\275\017\200\026>m!\266\275F\334\374:\376U\276\275\026\271\026>\355\362[\275E\311\r=g\340\027\276\270a\n=\350~\240\275\016\035\024\275\357\240\315\275\225\231)\276\3049\330=\326\016\033\275\320\371\273\274YD\'\276m\"\353\274i\256\000>\024e\000\276K\2664>=\001\335\275\327\233\003>\243\251/=\365`\243=\203T\227\275\267\212\036\2768w\033\276\030\026\213\273\347i\362\274\233hZ;ei\216\274\363\305\347=\353\356\024>\306u$>^J\252\275\315\275\252\275\026V\210<n\010\033>\020V*\276\244=~\275\037x\307=\362\216\344\275\357\357$\276*\2147\275\212r\340\275\332\216,>n/\373=2\360\344\275p\274\026>\022\212\277\275H\007\330<c\"(\276\212\025\321=C5\"=O\302\027>\335\3748>\030j\253\271\373\315\010\275e\352{:%\366\346\275\326\225\014>\001JA<\316\255\220<c\320\001\275\310\364\317\274\007\245\325=\356>6=5\237\200\275\311\233\235<Hc\215=u\016\207=\234\212|=$\023\363<N\343\374:\361\344v=\214\232\206\275\311\007w\275\334\354P=3\375b\275_\342\311<c\027@\275\001\340/\276\374\216\027\276\303\0073=ED\r\274?`&\276\005%)=I\247\003\276,\352r=\'\027\262=N,3\276\225\323\014\276\205\023\315\275\263M\001\276c\3153\276q]\n>\212\257\202\275\366Z\032=\r\364\363\275\322<\222\273\032)\371\275\003\335\252=\305\005P\275v\241\234\275m\263\334\275\221-^\275>\200\240\275\313\377\271\275\310n\232\275u\247\020\276P\317q=Y@\004>\344\031q<5\241\025\2769-\005>_-\213=\311\3309>\010\313&>\256\000/>\362\024\211=_8\206\275\217D\346=\036\n0=J\023\034=Qe`\275\004h\232\2750\375\274\275\257\230\310\274\236\354\316=\211S\022>\362\202\366<\330\033\245\275\235\235\214\275\007x)=\217\215\245=\253\030\236=\013\r2\276\325\355\333;\223\241g\275\210`\211=\271\277\331\275\352\375\022>\263\222(=f\305\246<\326)\267;\377\306\315\274P\024\000>\033|,=t~\036\276\242\203\006\2753\025\324=X\002\n>/\325\031\276\365\233-=6\332\277\275t\254\260=D\245\375\275\251M \275\230\374\223<\307\356\204=Ds\267=\"\177T\275\342\264\032\276\275\324E<\345V\370=\211J\037\276\\,\353\275U\317\340=\321\t\r\276\244&%=\202\226\024\276\331\370\006>1\3374>y\310\005=\320\332\356=\023\222\366\275v\027\022=\032Ed\275|\201\317=tg\'>\260\314\256\275\036\3217\276\305m0\276\2257;\275\003\344\017\275:\360\236=^/&\276\016\345\226=\324\000\254\275\t\341\013\275C\367L\275\352\'\325=\234\376%\275\256\324:\274\366\325\265=G*\004\276\n\006\002>\261/#\276\367\235\007>\235\234\n\276\315\020\301=,Sz\273OE\236\275\336\236\225;3\241\275\275\357\345\202\275{\266\270<\244\2340<\211\256\020>\\\374,\274\213Q\225=\336\240\363\275\314g6\276\234\357\006\276D\204\311\274\360\356\274=\3310\376\275\330\027u<\211\353\000>n\036\026\276\032\014\002>\366+\355=Vs\202\2749\\\215=\232\231\314=\242\363\307\274\315\227\177<T\323\236=fN)\276\016\311\035\276h\250\214=\243\322\321\275\377\300\275\275\246\310\010>\035\n\227=n\337\024=\262\362@=\364\237!\276\226\237\323\275\023$\t\276Q\025\230=}d\264=Z\035e\275\316\242*>\271t\021\276nz\330<\372\023\350=\031Un\273\355\320\021\2767\225\244<\216\014\":\310%o\275\220\030\267\275\243j\267=\322C\314<\272\272\353\274\344d\220=\243\341\017>\001.\001\276U\212\357=\213{F=:y\003\276q\330\001>\355%*>F(\026>\037\213@=\332{+\276\330\031W\275&\004\020\2764\367\001>\312\216\325\275x\253\241\274\351\\\320=K8\203=\245\302\027\276\367\253\316\275jr%>QG \275\020\030\r\275z\334\330\274\224]2\275.4&\274\362m.\276\rt\225\275\3055\261\275\201y&>\331C\243<y\233\321=\270\256q=\374\343\307=\217\352)\276\305\333\264=\312\372\210=\264\031\026<\266[e<\335=\210<~\260\002\276/c\325\275}\244\344\275m\204\030=\364\350\325\275w!\036>\202\030\346<pA\354\275P\333\026>+\306\212\275\254\370)>3\261\307=\373\276\317=\314\033o=a*\213\275Q\017\361=\304\250\203\275\224\267#\276/\324\226;\254\'\341=9Z#\276E,\r>\215\021W\275\032\274\352=\210\204\207=\200\216\352\275\307\362\344\275g\230c\275\224\232\243=\367\231\326=\365Y#\275\320A\001\276\362\003\032>!S\367<\350M\350\271\2211u\275\213\324\353\274>\245\211=;F3>&\237\272=\205\202,>:\361\027>\326\220-\275\245%\346\275=\026\r\276qY\330\275\265\340\030\276\250\236)\274l\004\341=\303\370\343\2734z\026>N\340^\275\321\013\371=\\\366(\276s\220\355\274/zb=\200g(>\221D\257\275L\326\307:\360\"-\276h\007,>L\3073>\360\r\014>\302\023\010>\274\226h\274.\324\252<\240\2761\276\323\230:<H$\030=\n\227\265\275\261\312\320=7\037\001>w\206\244\275\027\231G\275\027\216\221<N\272\267\274%\240\200=\334\006\331=\344\014\"\276\244\010t=\027i\224\275P\266&>\2369]\275\365\034\344=\225k\r>\250\363\365\274\225\236\256=d\2767<\300\205\030\274\020\255I=Z\250\035\276,\241\276\275\272\027\307\275\336\342}\274\207\371\375<\253\035\000>\201\346P;\252\300/>\201\016\205\275\357\336\300=\303\021\363\275\363/\265\2753\354y=d\340.=e\215\234=\006A\220=\342!i\274\210\016\004\276\273\314)\276\026J\021>\362Q\323\275\303]\330\275P\311\020\275\203\2653\275&\277\241;\363\272\304=y\'Y=\277\273y\275,9/\276\375\372(<\375\026\r>\267\333\262\275\271[\313\275\263\260\006=\276\234\350\275\006c\035\275\027\'\360=\274\217\266\275*\375\n\275\2732\206\275\260\225\025=\2262$\276W\352\014\276\355\344\364\275\r\277x=\n\031\273\275\221\262\263=\366 \245\275\270y\352=_k\">\n\277\000\276\306\207\001\276<\217\202\275\272q/>oP\025\276\262\252\027\2768\376\375\275\362\346\375;q\237(\276\263\373\031>\323.\247\275\303\241\021\275\243\261r\273A\022\250=\220\377+>\364\357\214\274G/4\276l\017\202<\243>\245\275\254\277\274\275\010E(=Z\210$>R\340\023\275@\031\313\274\222\244\243\274\246\334#=k\324\235\275\250\271C;\360\326\346\275\335y\225=\351\\v=\035<\371=Y[\002\276\"!\212=t\356\210\275gn\371=/\316\346\275sv\016\274\254\301\204;*$\036\276\212\254\034<\305\366\377<?g\236<](\032>\226\322\306=\020\330%\273B)\037>R\"\006\275\335h\362=\316:\004\276\372\326\331\275\001G\267<rt\210<!\370(\276\260dA=\240\177\274\275\031n\275\274*\302\035\275V\206u=\014\322\032>\263N\005=v\276\"\276\017\347\244\274\260\317\020\2761U/\276\214z(\276B\313\010\276\013\023\352=J#\030>\323h\324\275\351\223\310\274\311\264f\275Cs\362\275g\335\021>BE\234\275}GO\275nBM\275\343\267\375=\312\355\023\275\006h\031>5\333\243\274\313B\305<{\272\343<\313\206[\274\021\303N=\215B\217\275b\337\010\276\002,\322\274\335\211F\275\361\'\024>\022\021\347\273^l>=\352{\222<\317-\033\275\316-e\275\234\320#=\310\246\016>Me\304=f\020\372=\247\212i=2j\023\275\0365\253\275\367\370l<\241\224\033\2753\025\315<\002\265j=\270\236\352\274\370\301g;\0336.>2\212\316\275P\345\375\275K\342\347=\234\276\352\275\351Q\032>d-m=-l\375=\032=\274\275M\311\353;%\023\031>\\I/\276\\u\371=\3552\336\273\371\337-\276\326\242n=\367\222\302\274Z\230\034\276\335d\t=\005\025\"\276\262\256g=i\374\020\276\262\322\337\275\356\257\333=\002\222\210:\034\021)\274\036\331\255=O\212\033\276\006\t\364=\274\205{\275\277eT=J\001,>.B\306=]\177\214\275\273\255\021>\026\264\034=\205:\272\275\364\271<=$\262\311\275\306G\342<]\220\001\276\347/\001\276\255P\002\276\331`\335\274t\346\241=\375E\007>\037\013E=\275\345\344\275\207\'\037>\234E\207\275\320di\273\357p\025>\250\352#\276z\244\002=\210\3543>X\245\265\275\223\211\345=J\242\304\274\311\233\241\275\364\030\237\274\374`$\276\234=\272=\004\221\325<\355\237\026>\376\006+\276WU2\276\0063!\276\325\370\227\274\375b\261=]#1>|\313^=D\275a=\325\037\005>.\014\326<\270\271\t\275\362c\367={$\025>9\242\'>\035u\322=3\236M\273\022X\037\276\'\202g\275@\274\001\276\240\272!\276\365U+>\031\032\002\276\tw\275=g\215\'>}\001\r>\216}\312<0\222\247\274,:\335=\220dQ\275d{G=\374}\374\275\310\037\312\275\037\276\374\275\352Y\237=\347\224\301\275\263O\216\275:\013\032\276>\373\307=:=\210\274;N/=s\2003\276,\335\343\275\360\257\235\275\272\225*\276}=q=\264\340&\276~\221\343\275\375d\225\274*\231\"\276+\202\306\274\267\377\024=mm&>\317u\277\275\234B\267\275\351!\241=\266^*\276<\000\365\275F$\371\275\300\207\206\275I\037\375=_\263\220=\356;/>\002P\210=\337)*\276\na\004>\2633n\275\305*\004\275\323w\"\275\304\243\212=\252\257\220\275q\360\251\274\336\013Q=\347\n\274=\317 \274=\227\301\034>\300\274\006\275j9%=\334\256\241<\254\0226\272P\27219\232\374\226<\276e\024\276\276\n.\276aV\003\276<\364\302<\205\212\232\275s\273+=\372\372Y<\241\274\004\274\370L!>\n\346\314\274\340T\230<h\006\314=\234\321T\275\322G\343;\232\326\356=R\341\300\274\225\025\336\274\366\341\243<\247R\345\275\335\323$<\337-~=\337\341\027>\021\255#\275h\232c\275\356\3706\274\340\205\315=^\234&\276\240\3459=\272\261\225\275\275\346/\275C\017\007>\344X\201<\232\204\"\276;\372\027>\216\005\324\275\350Yj\275\034\006\373\275\366\356j=B\272%>\246V\346\275\250;\034\276\2367\315=o\236\242=\200E\025\275\000\376\204<\354f.>\323u%\276\237e>\275\363\202\267\275\027\340\017\276\376`\253\274\260\226\253=\212^!\276\253\036\022\275\252E\262=\"\331\343<\'*\030\276\006\243\227=/G\036>=\3066\274\001\216\377\274\035\3609=\343\353\257\275Ip\324=\321\022M\275\244\274\353;\206\306\002>\303>\021\276\334^\332\274\374 \323\274\027\231\314\275\373t\021>qS\013<DX\250=1\366\271<\231\312\327\275\221p\004>\025\2436\276\321\3358\276!Y\013\2763G\257\274V\367c=\347h\000\276((_\275\212\003\343<[x\243\275r\002/>\2118*<7\353\212<\0062\237\275\337\223\346=g\356\036>\003\240(>\244\\\007\276A\322U\275\371M\254=\233\ng=\237:\014>+6\304=2\275\336=\225\315\201=d|\006>\234\206$\276\310&\317\274\350\267\327=\005\316\254=[k >8X\016>\021\014\356\274T\303P\275v[\205\274z\241\n>/\307\211\275\365[0>\024\222\364\275J\024\347<\226\rC\274k35=h\036\275\275\326\263\027>\003mr\275\221gO=\333\r\321=\n_\333=\336o\254;\337\177\321\273k\031\273\275B\023\247\274\376\336\000>\222\245;=\314&\276\274\227\271\024\276b\315W=\353\332\221\275\213\373t\275\347\037\343=\375\"\277\274T\302,>\"t\214\275\334\275\037\275|\333\232\275rq_;cg,\275\254\335\340=\305\361\037\275\"8\307\275\022\022\367\275\333.\035> \323\037\276\223\310.=\256\010\217\274<p\245=l\373\037\276\262_%\276?5\000>\n<\202=CD\220\274\246\020\032\276\000^\">V\213L=\255\210\204=j\307v=\325\243\342\275\013\323\303\275|\023)\276\017X\325=\324\230.\276\rx#\276d\014.\276^\265\323=\3444*\276\002\360\n>Y\214\t<\226,\3719\274\315\353\275a\010\214=\014\225\317\275\274\257r<p9\372\2754\220\265\2744\230\310=.\237!>N\\S\275\265\220(>\024Y\245=\255\241\362=\177\327\316\275~\253\001\276\260w\205={\316\014\276X\036&\276U\211\312=\005\202\035=b\226\r=\332P\313=\210\270\337=\037\223\026\276\366\350\027\275k\341D\275\203\330(\276\370\003->\313Y&\276\267\326\030>?$)=i[\304\275%v\240\275\271\352\033\276\243\2044\276\300\2623\276m\352\321\275\341\237\213\275\256^\365=\263\227\222\275\242E\030=\377N\010=\264\372\"\275c\367\'>\223/\024\275\275\316\266\275{\033k=\314\332\243\275\"\201\010\274u\355\237\2747\002\213\275}\226\376\275\323E\257=\030a\300\275\234\017\203\275\322k\001>\237\216\006\276\237|\352=\221\247\317\274v\0148>w\233\201<y\365\370=\266,\001\276\251\376\002=;]\342\275\311I\r\276Yp\256\275\017\016\352=\033\213\375=kC\031=\350\033\035\272\007\241\200\274\317\242!>\023<\034=\277\320\'>AC`\275\212\336\006\276\337\230\317<@\256\320\275\365\355\305=a\255^=\026\356\213\274\235W0\275\317\322$\276\026\025\231\275\264\"\307\275\324\205#>VBN<\350\007\010\275Q\220\374\275\020}\221=\344\364\221\275U:\225=\016E\316\275_\206\204=\234\353\010>\241\315\030\276\346(\331\275(\204\244=4\202&\276\307t\221\275\354\222\223=\341\231\223\275:\020\241=Y\306\307==}\006\276\243\026/\276b/\201<S\300\327\274\201\340\321\275\300\003\214\275\204\367\035\276g\244,\276\356\002&\276\240a\313\275\013\'_\274\337\227\024\276\256d\344=\220J\002\276\317\022g=8\263\t>\302\307\274\2744}\356=\327\263\364\275\257\0105>x5\263\274\313K$\275\007C\301<\324}\371\275\225\335\261=\240\207\027\275\256\255\366;R\337\202\275L\005\354:\216\257\304\275\014\343\021\276)E\326=}\242)>\216v\207<\01672>\220s\024>\'\346\030>\240\235\374=\202\340\206\275\374\255\366=\313\255\005\275\303\004\027=+\2268\275\006\377!>\316%\240=C\303\266;\364\230Y\275&\213\314=\272f\025>R\002\014>\215\305A=\2330\276\275\240K\341=S\322\r>k<\010\276\036y\033>\025\010*\276d\333F<\360\366.>6\327\335<*\304e\275\214\271\377=\2305\360=\257\250\347=\226=\205\2748p\006>f\333\216\274\363\210\251\275\004\271\264\274\021s\026>\310sd\274\330\346\032=\303I\331=\344\275\001>\002\021\003\274A\343\261=8^\250<{\336\000>\322\242\274=\005\365\000\276\'\300 \276\034\354\263\274\'\335\177\275\332(\224\275\372\252\224<\0371%>\365\362)\276e\201\274=\025\231\276=zQ\">jE\262=\323\024\320=\220\277\032\276w\010\177\275\211\227\271=\006\030\033>.\030\377\275\020DX=-\017\t>\272\264\206\275\206.\031\275\344\371%>k{\266\275\311\000&>\270\305\350=!Z\010>\304\252\343\274Q\360\277=ST\022\275vV\267\275\214\201w<|h\363\275\nk\002\274\021\301\034\276\360$<\275\272\255\034\276Y\252\215\275\351\337&>\3029\312\275\013\247&\276U2\021=7\323,\276:\321\036=\005\\\020>\313\023\\\275\213\235\234\273x\223\006\276\\\214\026>\236A\230\275,_\247;01\300==\026\030>k\332\327\275\215t\246;\006\374\217\273D\332->\371\276%>\230;\331\275\324\366x;<F\265=\264\250x\274^\354\203\275\344\370\351\275\224\366\277\2759\035\242<\262\253\n\2768\344\352\273\355\025\t\275\256+\002=\244\256\331=\230\241\355=\300\312\236\274\372?\226\275\310\022\020\274Jc\022\276\006v\363=\262\356\010>\204\204\">\3129\033\275\311\013\021\276L\350\240\275\306u\025=\226\232\311<\206!\350<I\215\304=5\335\240\275\014h>=p0\353\274\217?X\275\242\216\320=\004W\033\276u\226(\276Jp><\223\035)>\370\220\335\275\017\323\004>\330\262\217\273i\177\">\347\002\362\275)\250=\275\016\204\350=\346\016*\276\243\202\026\275\333<o=?:\004\276\244\211\367=m\3367>\265\020\014\274b\022\211\272\247\014\252=K\025\200\275\370\272\355\275\007\363\230\275\2163\030\276k\244\003>1\243->Q\001\340=\257_\003\276\246\303\026\275F0\373\275c\td=/\021\010>\303\226\024\276\212+\"\276,A\013\276\025\345\226=\314\324\356<\036\263\017>\254\262\321=k\370\023>c\314\020\275\366\371\n=\010x!>\313\030]\2759\260[\275\362&\255\275\252P\215\275\205F-\276\263\273&\276x\222\366\275Z\031\210\275\307\242\372\275Rd\262<\322N&>J1\024>\254\200\031> \366\017\276\201\305\213\275\267\304\235=\330\333\311\275\003\264\321\275\\\013\247\274\267\301\266=W\271\360=\017}\200=\305\252\020>8\316\017\276\376N\376\274K\224\250=\331\241,\276_\325\225\275U\032\t>n\000\t>\321\375\316\275\257e\360\275\354u\236=;B\262\275\353\256\343;\340\213\304\273\266q\277=8\3241\276\003\277\007\276\352j\027\276\246Q\305=\003\"\013>9\247\265\274O\241\346\274\354\264)\275\346\302\203\274D1\n>\224kx\275\260\366\212=|\"\303;\256\317\220\275\016~\000\276\272\214&>\307\221X\274IQx\275\264\321\220\274\310\200\337=\242\220u<d\326\204\274\301\265\211\275\204W\315\275\320M\333\274\037hy=\205\340r\275u\006\235\274\232\024\240=?$\214=\257|\007>\363\007\014\274\256_\001>p]\017=V\303\002>G\326\007<\034b\307\274\322s\010\274\023\207\205\275\024\310\026>~Wi\275d=R=\234\322\310=(?g<~\217 \276\267\234\344<\010\305u=$:\005\276\026o\235\274\264\177\215=\004Q\373=#\"9\276\363\214Y<\336l\253=\233\246\032<\200\334\320=,\276\264=\364]\216<\213\201\007\275\261Ju;mW\005>z|7<\313]\363=\304\363\356=\370\250\021>P\010\234\275\334\030\270\274_\362`=V\333\240\275\221\300$=\020\257<\273\221jz=\344T+\276\037w\205=\225_\362\273x\323T=>\2501>\200\016\000\2759\026\227\275\026\317\372<\206\272\344<\002\235\n>\356\365\035\276\265\346/\276<\224,\276\317\2114=S\363#\276[|,>\264\261+\276\363w\203=D\022\002;\261\243\273=\211\332\352\275+\203\014>\301\247\254\275\177\370\022>;\n\025;\242x\020\276\234\030.\276da\354\275\r\346\341\272\031\216\336=am\322\275\324\235\345=\200\271-\276\340q\363<\234o?=?\315\366=\244S*>N\362\365\275\227U\324\275\026Ql\275\337\243\335\275\020\347\322=s!\254<\330\267\314\275\204\352\227\275\237Z\265\275)0\007>\370\356\204\275\020\352\246=:w\006=\262\353&>\372\2439=\206\347\345=^\235\177\275V\325\025>\317\371\016>:x!>\345\024X\275\225\226\034>\022(4;\276i\007\275#\3128\276E\315\036>\215\362\272;\340\250\000\276^\327\'>\244\224\030>\251A\324\275X\030/>*I1>\014W\n\275\211\230\227=\217,0\276`Q\r\276/\365\325\275N\312`\275\273c\334=\377\353\353<-\207f\274\214{!\2735\001\246=\200\035\374\274S~i=\237q\000>Q\315\362=\350\220\n=\341\223\354=\2509\253\275D\003\336=\247j[\275\213p\005<DA\013\276\207\243\017\275\220\324\034\276~\031\374\275:\305*>\270\221\271\275^\373\232\274\264\252\224=\277\013/>\265\252\t=O\323\267\275\016d\236\274\375e\200\275\255u\032\276\300(%\276XPB=\025a\006\274\260\3026>a\206\241<\204\335\002>\327\205\213\273\243\202\266=\n:O\275\244\003\017\2762\267\322=y)+\276\307\350\023\274\000\226\334<\364\220\271\274$d\205\275\234p\020\276\352\315\327=\202i\331=\333\235O=\222\035i=S#\r>\222\246\024>\340(\253:\007\364\031\273\240\221T=\356\241.>\274\260|\274\320\207\300=\252\224\345\275\023#\360=Pj\376\275\307\360\330=\203a,=\000\222.\275\213\257U=\340\347\001=\251\207\226=\037\215\312\275Hy#>\227d\365\275\255\303\304\275%9\004>\312(\020=G\265\"\276\355\316\222\275\314\247\320\274\210h\367\275/z\233=i\212\310\273X\216\036>_\370\037\275\303I6\276c\200+>\322\312\242\2734\264g=V\256\277\275\356\272\317\273\221\253#>\270\226\243\274\203\355\237<\221B#\276\024\3638\276\"\203\276\274T!!>\366z.\276\230\022\330=7\367\204=\3758\257=\031D\276=$J\027>\223\325|\275UP\031\276x\321\330=\014\234h\275R\3667>Q{\372\275\277\3138\276&\221\260\275#\020\224=\323E\r;\253\213\272<5\035h\273\334m\373\2749w\322=\024G\256=\277\335\235\275\340{V=<\363\244\275\3074\025\275Z\277:=\350\306L\274\247\243\345\275\244U\262=\030B\030>\363\002\016\276\232+\315\273\214($\276\357m\221=gr->,\341\266=\027=\014>\r\214\007\276\"\320\225=\n~v\275\027[\211;p\351,\276\316\357\022\276\320\323\034=\017\363\021>\374\250\257\275.@\234=\243E\326\275\343\326&>\312\245\306\275wj\244=\275\250U=6\225\273\275=e\004>\333\237\034=\317\025\010\276\353=\230\275Q\304r=:M\234\275\220%\311=d\177\n>v(\252<\301\223\274=\035>\377\275j\370\360=\273\217\017\276\225\314\304\275\316\356\016\276Q\035\031\276o\261d<\235GD=^\234`=\017\206\216=\007\365Y\275Z\313\320\275\263D7\276y\355\273\275s\320\023>\353\273j=\336Gp<\340(\361\274\364\237&\276\370R\030>\251\302\r>\335+\377;e\245\345\274M<\251\275\276yM=e\013\005\276\35523>\335\327\307=\031D\220\275w\226\201=\n\213\231=\2535\n<\275\246\364\275c\251$>\341\004/=,\201*=\003\266w<\312\036\037=\224\216\247\275\265M\026\276a#\005\2760;\016\276d\214\275\275w\367\016\2763\204H\275\242\365\t\276.D:=\360\252\327\275M0`\275\256\230\302\275\344S\013\274\215\220Z=\244o\022<\013\345\251\275\334\016\371=x\337\363\275\336\035\033\276\201\205\326=\250\351\017\276fc&\276\204q\005\276o\312N<\257\357\033\276\240\017\341\275nL\010>\005\313*>\020j%\276=\276==\247\322\244\275\001\230\005\276\307\372\000>\024\364\200=\360\235\004>\335\334\267=\321s\250<\'\220\n\276\032_\026\273\221}\253\274\'0=<H+!>\343a5\276W\345\263\275 \377C\274\317\277~=\316\356&>\265m\224\275\314\331\036>\202S\354\275\227\r5\276\362\267\320<\223\340\007>\225\216\037>e\227\357\274X\245!\276\370Q\204\275<;\002\276W\271\375<\312\300\025\276\314\336\320= Ev\275;\2146>vO\226=f\032\331\275\020\215+\276\351D\207\272\216|\225<\030}\001>x\"\014=\240\331\363\275\256\2522\276\361*\343\275\330\243(>ol\t>\016\235 >\032z\026\276^V\005>J^\324=\376\325\026\275\250\212\267<\211\322\262\273\261\'\005>\344!\004>\034H{\274\007\370\345\275\370S\020>\224\177\211=\036\234\257\274\261\245o=\377\371\222=TU&\276F\317#>cX\372=\210h\364\275\323\234\275=>-\210=J#\023=\365\205\232=\214y\034\275\006\370\010\275\306k\'>.\337\315\274\272s\330=\2223\'>5\n\000>\022\235\253\275\277\352\222=\010o\017>\010\265G<\021\274.>\252}\004\276\361,\264<\036SH\274n\206\346\274~lS=jF\031\276\377{$>uj\027>\035\344\362=\\\204\233\275s\366!>\323\004f\274\271h\253\274\367.\377=xel\275m\213$>\271\1776>\217L\375=\267S\342=F\3134\276mr\036\2768\326\224\274{\021\023>%\361\346=9\271\001>T\363\024>\260\230&\2767[*>\322\224\360=\177&==\2411\323=)\013\264\275\275\341\303\274\310;@=K\260->Z\323\016>\003\t\335\275\232Bb\274\001\217\313<\332,\032>\352@\343=\027\3012>\372\002Z\273\211\313\304\273^\3716\276\304\332\223\275\326\302\016>\364\223\023>o\030\357\275\007o\342=\343\224\373=\322\220,>\354\336\177<\320\354\017\270\332[\345=?\327\004>F\010\340\275\263}\244\2758\346\331<-\037\245=S\342c=\354Z\342=\334\256\023>g>@<\202)&>+\'\302;D\337\307\273j\357\246<\'V\231=\341M\033>dN\244\275\370T*>\306\020\271\275\203\013\032>\213r5\275\002\003\033\275\026\256l\275\352\310\262=V?\221=\367G@\275\204(\003\276\014\2243>\362s\250=X#\362\273\374Sd=\225\032\362=#b\000>bB7>\344\375\307=\350\275\t\275\320\311\014\276\304h\231=\310\273\014\276U\220\202<0\335*<\327\317\237\275\032\374\n\276E\220\335=\375\th=q\340$=\310\332\270=\360\\\377=\354c\341\273;\312\353\2754\204/<\315x\236\275\376\302\202\275\277\n\205=\370l\346<\004\231\352=\325\203G;\021\250\201=cZP\275\025a\004\276+v\020\276\0008\217=\247\364\270\275\366S\316\275n\023\021>\0160\313\275\356\377\025>;\363\000>\032\376/\276\337>\304\274sg\367\275\261\361\374=\255\366\036\276`\021\016\276I\006\020>\025\320\234=_\203\342<\246\203\r>\324\003I=\222\037\211=.\t\336<\357>&\276r\000\257\275\257\243\216<\"N\022\276\347\365\036\2730\356\n\275\213d\010\275\363\332\206\275\314\205\023\276\266f\220:0l\034\276\257F\t>\211l\025>\270\374\3109Cu\324=^\006\350\275\000\377&\276V\363%=U]\021\275\304\210\330\273\200\305n\274o\245_=B\236?<\232\303*\276Nm!>t#=\275\365\321\031>\366w\000\273\0104!\276\307d/>d\315\037>At\212=\327\036?\273ba.\276Z\200\034\276c\311\206=\3629(\276\001\375\367=\327\355\337\275\031\303\033>\342\357J<\331\025\275=j\340/>Y\200\005>k[\357<\372zJ\274;;\374\275=\254\241\275?r\274\275\3637\306\275U\006\025>\021E3=\216\020\010\276\216\366\274\272\312\360\303=\336\324\t>\265\313*\276\353#\321\274~\020\302;\007\225!>\311f\237=&\305\260\275\356\024\013>\r\317\037=\\\227\363\274\313%*>x\034\t>\"\313a=\300A\237\275\035\204\220\274\242b\010=\\\220\336=\247\300\230\275^B7\276T\257e=\nG\236<\024\246\322=\376\242p\274ig\312<\373\360\022<Ig%\276\351H\341=\004\'\302\275(la\273P\261/\276\355\216\006\276\312OJ\275hh\023\276\304A\017\276\341\202\034\276_\365\014\276\330M\342\273\216<1>\376\221\n>\350\276\374=\236\232\037\274\n\r\010=D\234\017\2754\315H\275C\205M\274\345z\"\276B\360\026\275\251\377\r\275\002{\026\276\313\250\021\276\275\361\022\276\221Z\254\274vs\r\276\325e\261=\371\023\204\275Rz\255\275\2578\010>\236\332\014\275K\025\006>p\357v\275\307\030n\274\313\3473>7\231\026\2761\2630\274\355\307\372=\027r\\=\030\207\337<M<y\275\243\250\371\275\332W\035>|\316A<f\353\245\275>aZ\275\002\316\223=_\366)\276I\030\036> 0\237\275`\322\305<\260\221%\2762\372\272==\010\311\275.U\313=\371t \276 \322,>A!\247<e\364\036=E\240\366<\215\211\022>o\272\335;\\9*>V\2700;e\371\371\275Y\343(\276mz?\275\265\027\010\276j\315\264\275\236S\254;\240X\311<\2137\373= \212\315\275\311\311\214=\356~\013>>\000\001\276\216,\240=\030\023\224\275r\323k=\032.3\276.y\357=g\021\260=\202\253\314\275\257q\225\275\353\370-=\241\371\351=\027\240\n\276\225\2533<>_\253\275\016d\300\275p\237\r\276\270\004.\272\305J\314=\342\204\r>i)\321=`%\332=\013z\r>\022,\344\273f\002\307\275u\365\372\275\'\013\026\276\034\225\013\276\347]K\275\234\032e\275\337d#\276^\367\027>b\233\366=/\246\026\2757\240\207=U8\017>2\205\204=;(0\276\371\033#\276bR\013\276I\3038=\334<\303=<\013\226\275\245\347\\\275\352Y\266\275p0\266<$iP=\337_\'>\034\212w;\242\3072=4\305\025\276\030\261\345\275\231M\243\274\300\335\031\276\242\266\241=\332\320y=RE\236\274z\037\235\273\004\312\344\274\227\025\263\275n\030\345<\321V+\276+\202\312\275\273\266\245\275\226\177\357\274O\217+>y\024\014\276a\371\276\275\025\277\010\276\370\374\247=9\232j\275V\260\327<ze\244\275\324\314)\276=\246\003>?e\352\275\025-\023\276`\237\255=D\272\272\274\"\2144\276\343\276\361\275s\000\340=\014j\t>9\335B\275\3675+>E\371k\275H\372\212\275\2219\242\275\332H\317=0|\032>\300/\220=\216\251\274\274\177y\000\276@\034\347;?\310\005\276\177)\t<@\361f<9I\037\275$F\013>C\232\376<IR\246<L\224\351=?)%>\021\013\255\275\2642\021>\300\213Z=\226\200\203<z\032\270=i,\027\276W\2239>\321\332\272\275\243\'z\275\262\343\244\274pl =_j\004>\260.+\275\353p3\275\311\2003>\320m\021>.\003!\2755\004\222=\235\233\253=*\000`\2754\306]\274\310\024\374\274\004\205\034\276\177\220\216\274M\2012\275\357\251\031\275\256\372\306\273\227j\224=\034P\265;\330\330\035\274\037B\231\275\370\237#\276\0102\001\275\3538\337=\030\263)>|B\266=\212\376\">\265\333\213=xB\223=>\370\017\275>I*\276T]\206=\237\221\334=3\003W;\033( =\347\356\004\275\324\311|=\237\242\310\275pV8\275\331-\351=!2\220\274([\267\275\375\'1\276$x\266\275\320Y#>\025o$\275c\212\003\276\345\230\253=\364\327\366=\034A\032\274\006\310\016>\223)\316=4\370\211=\025\247\312=\360\242\006>\340\241\315\275\352Ll\275\320\243 >5\252\021<T$\307\273\252`U\274\0232m=\3645%\276[\311\313=\2677\000>K\350\300=P\270D\275*\247I\274\311\374\305\274\357N\000>|]*>>\334O=\007+\203\275X\213\350=[J\t\276\211]\004\276\005\016\017>\205\347\261=\014\356\217\275\212\320\034>\310,\301=\351\367v\275\000\222\035>\263\036\000\276\256\003\324<l\327A<\213\261\230=\377\037\343<\333\033\320=\351^\200=:$\333\274\277\013\303\275_|\262\275E\237&\275\263\232z= \033\326\275\021\314\235\275\324\232\223\275\204z\307=\313n\021\276d\326\363;\264\366\016=\222\217u<\356\337\337=\353I\037>\016\030$=\332\201<=\006\322\332<NW\"\276\247F\013>\254\265\230\275|\222== m\231=,v\002>\210e0\276\320\332Z\275\036i\273\275\225\270\177\2754<9\276\252\313;<\3652\025>hh\254;e\207/>\210\334.\276\241f\373\275\031\215\t>\036\232\304=\320f\352=\246Q\r\275vq\'>\305\323\317<\243s\207=#ji={\261\352\275;I\271<\030\365\363;\371\360\240=\371H\">[\316Q\275\241f\217\275s\024E=4\361\005\276\230\246\021\276K6\215=A\177\023=6\371\355=\263\371\307=a\240\234\2753z>=\023\234\324=\271\3559=\256\311\346\274\311\335\032>\231\254\017\275\250\236\035>\231\325\022\273\243\356\004>\265\002\204=j\367\215=\375+\305=\200i\023\276\263\316\025\275\250\345\"\275\367\\\270=\221+\311\275R\276(\275\201\"\362\274\010\375\217=w\375\327\272\252\345$\276\306\214\224\275\212\326r;\272\372\371;\200\31748\266\2021\274D\307\010\276\245\275-\276B\272\326\274\371\270\347=#\225\262\275n\206\353\275\216\2103>\"j\304=\255f\201\275\242K\302=\202\256i=n\021/\2749\257/\276\237\370\364=\273\201|\274\021\374Y<\352*\234\275\177E\014>\252j\236=\361%\325<\260\362\212=O\207\007>\247S\223=Y&\304=\032-\211\275\263G\005\276\026g\362\274\243\334\263=\3026\017>HB\364\275\240\254V=\311\300\251<P\260\371=\307\035\021>\377s\023\275\274\030\203\275`\307\307=\030C\300=\252\344\201=]\322\335=\277T(\275\\rT<\331\201F\275\237\"\205=L\320g\275\220\241\026\276\256\344\311\274\tX >\221\317\375\274\256\250\370<\267-\035>k|\020>\032Q\345=JJ\200\275H0p\275X\024b=\234f1>\244\252\210\275\372\222\230=g\307\013\276\020\272\354\275\3659\214\274\336\t\260=\354\320E\275\262\232\210\275\265^w\275v<\214\274 \'\341\274\237\215\004>\274\365\322\275\274*->\352\332\006>\267H\221=\265%\351\274\250\270\360=\365c\'\276d\302.\276\000Y\200\275!q\257=\212s\001\276\020$\275=\034\336\305\275\010R\247\275\277\375\262=\227\241\010\275\272\217\005=\336\223\213\275>\316\242\275R\010\225\275\3671\260=\321%B=\003\323\000>\272x\032>\261\374#>\332\247\267=d}\372\274\373\n\205=\312\376\363=\3223y\275\374\347\363\275j\006L\275n\246&>\217\033)\276\016\375?\274\274\233(\275h\033\270\275\013\370\036>\237\370\326\275\232W\010\274F)\233\275\340\355\203=At3\276\213\261\034>d\310\201=\362\364(=\032\372\224\275\253\005\230\275\242h\224\275\000\322\375=\033\204t\275\241\2418=\033\027\026\276vU\201=\266t\362<\376\037(\276e\337T\275h\271\246\274\245\253\365\275p\004\035>\344 \315=n\237(<\234\"\275=;\231\262;b\327\264\275\241\027\003>R\275\356=\260\031w\275\021\344\301=T\221\257=\027\304\254=\263$O<\202\325\254\274\356\241\331<\275\025\251=G\242\024\275&\306\022<\025J\276=\336\352+>\365\017\373\275\343=\033=\226\240B\275+\272\334\275\021\3350\276E74\276\3241\352\275\367^\364=\322\240x\275\\dW=\330\014\312=\270\315\261\275\370K\346=`u\023>\233\207\270=i\0232\276G>\276=\301\234H\275\275\225,\276\010;\255=dQ\300<\324\274\313\275\237`\027>\341\371\n\2760\334\203\274@\331\223\275\254]\333=B8\364=\344CN\274\302\355&\275x\204]=\243\270g=\262\266\361=\333=\350<\006\276}=\235\270\245=\241\242\007\2769\324\310\275\021\223,>\254I\026>4\361\300=\322\005!\276\351\223\022=9\245\371=\032(\320=Q\233\224\273\336\272E\275\210\374\377=_\367*>\035V>\275\333$\312=\227\031\312\275\256\272\r\274QJ\255\275\312/\252=\354\310\223=\016\'\302<I\202\360\275\255\257\033>F\025\342=B\335->\353\213K=\343{\323=*{\032>\267\277\347=R>\002\276\231\000\372<\004\261\'>_z\263<\212\353*>\333\301\201<\205T\034\276\002\337$=\246\214\270=5\036\317;\362\246(>\253\016#>\224\261y;c\336a=\224\235\277=\305\016[\275\275L\\=\363\210\360\275\336\240%>\220Q[\275\306,\254=2\313\001\276\375?q\275\336\315\023\276\265\337\242\275ls\337\275\242\2147\275\022\343\344=\222\201]=\300eq<y\330\273=W\020\364={\235\360\275\356h+<\252\264,>K\371!\276\027\2135>O\273\017\276\017m\270\274\373\213\266=\212\t\263=b\302L=\226\035L=]@\301=\225\037\325=\030\021\034\276D\234(\273_\331\212=\336d\\\273\367W\201=6\305F=\036W\221<\n\312\213\275\303\244\257\275eT\345=\300\241\310\275\314J\362=\235\027\314=d\310\351=.O\331\275\274\"\220=\236\003i\274iZ\030\276\361\325\211\275\302\304\362=\372!\375=\365\037\263\274;\016\246=\304l\240<\001\177\203\275\240V(\276\236\246\017>Y\326\010=\236\017\020>\245V\232=`kx\274\370\026,>\0362\336=O\373\003\276b\252\305\275\361\276$=\377}\334\274\240g\364\274\203B\025\276$Q{\275\364\226)\276\340y\3238S\251\274\273\035\316\000>F5\034\274\342`L\275\230?\346\274\226g+>\364)w:\031%\275<\345\223\253\275&\003\031\276\333\224\357\275\343L\256\275\272\244\240\275\360)\333\275\033\244\003>\020\016\356=b\262\031\276\357\363\236=:\206\t>\3308\224\275\330\033\2509\373-\010=\242\344\267=Gm\316=,\275\212\275\010y\007=Y\024y\275\002\254\320=r\206\211\273\224r\243<\201\010j\275\037\221k=D\236\347=\034\275\207=\206\326\313=\364\206\003>\225S\004<\325\274g;\362\030u\275+\027s\275$$\030>\311\315\271=U\355\014>\213x\210\275\220r\255\275\366\"\031>]\374\261\275\005\353\201=7\226\r\276\346\323\212:R$\367\275:k\322\275\343\020\222=\016\346\246\275\230\361F\274\254M:=\r\206\001=\216y\207<\223\250\022>\216%\311\274`\253\252\273\003\371 \2767g3\276\r\201\221\273\344y&\276\365\217\224=^(\275\275\013[\265=k\367\217<^\351 \275\2020\004\275\363]\003\276\372\352\315<IE\255=@\006+=Kf\n\275\260\233d\275\237\005\243<\361\230\005\276\362C\031=\354&[<\370\027}=\205\036\323\275=G\251;%D\227\275\016W\244=\250\361\025\276\260\357\366\275\276\342&>7+\337\275 \360\355=\256&\024\276\220\177\033>P*\232\275XK\230=B\374\020\276Y\252Y<Z\002\272=q\252\200\275\370\247\241=ux\016>kZ/>>\036\021\276\222#\255=\010\365\324\275\307\251\221=e\363\252\275\324\264\217=t\003h:\200\013\0009n\356Y\275Y\323\345\272B*\223\275*8\324;N\330\030>@\243\2579\213\340\371=Y\354\323\275\263\213\346=\241\032,\276\352\355\022\274\013j\363=\016\326\017>\016\246\250=\000o\202\275N\260X=\237\003\357\275I8\320\275\216\342\301=\376\001\374=k\210\213\274\230\253\002\276%\213|<U\346\005\276b\3560>\020\366\034>\266\255\203\275Og.\276mm\375=\342\372\220\275{\303\325\274!y\035=%\010\316\275\007\034\000\276W\375\343=f\031\271:\203O\022=\210\010\221\274\365\0224=\246\267\323<\314\3402>\226\233U\275n\275\356\275\240\362\354=\342\360\223\275\322\243\034\275L \236=\324\022\207\275\331``\274\237\333\002\27698\021\276\325\344\272=\337\363\376\2753Z\007\276\303j\266\275\222\327\025\276\273z\275\275%R\'>)\342\276\275\301(\026=R\016\210<\0236\237<D\"3>\332j\017\276\240m\343=\244\\\301\275\357\361\222<\002\027\026>\260O\001\276\232`,>\274\030\234;\332wM=\036\024\007=\2065G\275\323{$\276\271\330\323\275\317g\201\275\206\241)>N\236\270<\342\333\376=\357jT\273~w\016\276\305\0301\276\334\375\203\275\225\346\377=\327\235\037>z\362_<SbC=\014\030\313=\264\261k\274\264\013\037\276\254\331\325=A\335\362\275\237EK=D\241\251=\240\234\214=C[\003>\364\337\214=\\[\377=Su\016=?P\'>\016\223\032>\266q\274=\300\020\r>\362\226\037=\316\347\257=\327R\334<\302}~\275\177\246W\275!b\270\275T\312\222=\250\3504=U\360\251<Q\234|<\014=$\275\3468\234\275o\312\033\276\232\307~=D\205\000>\001\007/\276\334\314\025>8\246\3119\332\207\327=\226s\030>\035\251_;\272\001!>\335\350+\276K\236\361\275\333\351\235=\231\t >\017\004\226\275\244\323\014=\307\212\213\275[\344+\276\335\260\302\275\250\264\244\275w#\236\2759{c\275\203\313\267=\357\255\">F\361\206=\2407\345\275\367\262E\275\226\372\327\274\307;\030=\255\355\033\276\254\336A=\000\226\331\275\032\330\024\275\241\251A=\236\377\032\276\005\202a=%j\372\275\360\003\353\274,\226W=\210\274\017\276\304\333\316\275\227\324\204\274\363\370\032\276\340\213\271\274nF\221=\214a\201<}V\332\275xe\377\275n\256\203\274\232P!>\351\306\202\275x\216\020\275d\267\026>\3027\366\272-,B=\247\251\316=3\023\321\275\212\022\235=^@\314;\321\253~=\260T\022=&\366\326=&\251V<\341|%\276\331\374s\275\231_,>\031\250\231=\344\202\317\275\376w\314=\024\230\003=\322N\320\275J\326\321=\257\330\260=E\361\304<(\233\033=`\323\333=t\001j\275\314\212\221=\305i\024\276?=\317\2744\r\037>\375\216\005>\270\214\372\275\357\363\034\274[4\336\275\t\373\261\275\200\206l=\206\336\271\275.R\242=G\317\037\275;B\351\275\340\376$>\261\213\006\276\207\376\336\275f\256\216\275\003}\310\275\034*\016>\210G\005\276Vj\372=\204\374\252=,\375\222=@g\312\274\035\317+\274a\3250=9\245\t>E\253\324=]Z\336=2\323\237=U\205\221=\035)\246\275\350\264\'>\206\030@=I\323\210=\20744=\347\t\244\274RhM\275b\030s=\022\240\035\276\000~u\274G6\007\276\376\0029\276\370\327\262=\242n\246\275b\0004\275Z\323\260\275\204\212\302\273\020R+>\277\344+\275*\007\034;<N\251\275\2317\377\275\266&*\2766Z\004>\276X\227\275u\337\037>/\212\327=\361<\250=7=\016>\242\237)>\370\214~\273vJ\331=+\026\366<\223H\234=*\236\334=\366\342\325\274Q0\367\275\370\273\252<\305-m\274,%Q\275o\274\033>\320v\352=;\214\375\275F\r\013\276\261\024\226=\252\324.\276\004\370#\276\014\253\275\274nm\310<t(\242\275\217{\027\276\204|\233\274\313\026\263;\026\353\241\275\253\035\266=5\353\022\276H\021\267\271E\372\216<\035_\037\275\242l\362=\330\225\005>\264%D=\022\224&>\273&\037>8\027\235\274\224\215p=:\210x=b\362\226\274\260\324%\275K\247\213\275W`\022=\207,R=\nV\n\276*0q<\376\240\305\275\257~\211\275\014\264\371\275\245\371\021>c\035\021>\247\004\360\275\353\226\227\274\331\267\025\276|Bt\275\366\027#\276\202\227\277<x\033G\274\000\314\266\275\025\253\272\275.4(\276\227\253\355=\313\035\222=\257\326\024>\262\001\247=\3571@\273\264\023\331=p0X=\367k\037\276\363\317\210;W\261X\275\237\275\203=iS\336\275*P\020>\273b\001\276\027F\n>\221\217&>N\211&\276\264Z\021\276!\241\000\275FK\352=\326\346\206\273\312\024&=\304\360)\276\255q >\301\264\310\2755nQ\273V\211\005\276!m\242=*\344\220=\363\256p=\232\251\020\276\022VV\275~\211\221=\220\342\224\275\260\032\021\275\035ma=\202\311\024>\010Q\303=\376<\206\275:\211\305=\206L8\275\320\360\020:\003y\270\275\3176\'\276\343HV\275\033\335U\274mT\346<-\000\312=\256\241\200<np\010=\262xL=\236!\302=r\003\223\273\202\247\313<\006\225D\275pt3=f\347\205\275\216\024\360\275C1\335=v(\275<\004\304$\276O\247S\275\316\342\375=\177\223\222<K\322\016>\343\370\263\275\220\177\004\276\233Q\001\276\322\234U=p\344p\275r\035\024\276\365\303=\275\363\020\230\275r\020\020=\203\262\224\275\244\332\253=tR%>B8\223<\023\037->\000\224I9\237\271\036>\266\021o\275\272\276\'>\0142\226<c\214 \276\210e\024>\366\003)\276\260x\351\275\377\332\013=<u$>\337\272\263=\356\375\337\275\214P\222\275m\377\220=9\340%>\034<\375\2757\306\014>f\232\214\275\035\000Z=\256\017\347=u?&\276\337\250\007\276\303P\360\2759Q\037>\014.\323;\232\274\026=\331H\221\274yj\244\275H3\214=*\014\304\273]\313\336\275\002*\270<;\210\332<\036\362\213<\377*/\2738\027\216\275\'oG=\322\343\377\274\341\t\005>\357\345\267=\226\370\025=\023\264;\275\016w\\\275\n\235\n\275b\032!\275*y.\276\'i.\276\374\0331>\267!\255=\352N\'>T\234\235<\212\022\346;HT\036\276L\257\243=4\r&>[?\337\275\325\371M=/\017\032\275\362\374 \276\352`\376\274\357\324&\276*\314\n\276\0243\234\275\372\305M=\000rk=w \310=\307Z =\353\256\341=x\205\235\273\221\\\033>H(\324\275\267\363\026>\023?\016>d:\006=\265\n\247\274\003/\210=9\177\206=\340\013\213=q\247\324<8\034K=\364\252\006>\345\344\213\275\0170\347=\203\337\357=j\205\020>\370\301\003\275D\233\250==\246\240\275\013Zx=\000\267z=\230&\240=23\260=r\037\336\275\340\340\353\270\250i\205\275\250[v\275\006\375%\276\362\207\200\275\235u\014=\356\351.\276c\332\207\274\314\270\252\275\027\337\365<p\344\357=\255\365\222=\240\3272\276\254\240\025\276\277\n\371\275\272\003\006>\311\302\301=\224H\205\275!\230\355\275\341\213\320<\377*-\273\265\244\333=U\201\030\275\026\016\036>v\274`\274\246\007\246\274k\257\r>z=r=\337\022\002>\221\001\025\276\241(\341\275\324\224\232\275\344\205\345=\2052g=BJ\376\275\213`X=_\310\035\276\260\207\333\273\220\304\013\276si\377=\272\230\240\2759o\211=6\352/\276\352\304I\275\033n\234=w\314\034\275\025!\357\274Tj,\276Pl\233=M\216\271\275\321\002\t\276\360\017$>21\224=\326\3030>\357\236\035>(@\344=\363\310\273=\235\304\335\275^\317\371=\r\0024>\256\344\t\275\017\016\010>\0236\">\272\214\013>\005\325\357\275\000}\256=C\324\'\276\211\324\305\275;R\377<\252q\342\275\351\033\024=TS\326=\000|\346<5\026_=\037\211\022\275\006\277\224\275\250\230\334=\007\024c\275\226\032;<\354\372\020=\033^v=\035m\364\274\366\306\326\275\267\013&>\210\221o<4\206*>Z\016\247\274\362R\333=\261:\004>\025\251\236\275\354\210\317=s\222\375=1\363\244=U\3035=e\2463>\346\037\021\276\031&C=\370\3113=\275\371\230=\255\206\242=\017\303\255=\236^v=\213t\024\275\251\247\001\276< 3>\230\313\350=\005\230\r\276\234\301\255\275\252\026\243\275\031\272u\275\034\375m<0\312\254<\343\311Q<2 \301=\325\270\031>\357|\330\274\2440\251=\033\354\324=l*\200=\221L#<\373No\275\003\3577\274n7/\27671.>\266\215)\276\243\241\021\276V\232\210;\217i\261\275\303\"\234\275@\264\216=\027>\031\276\270\204\206\275\210=\t\276I\226\374\275\263\305\323\275\231L6\275\315\026\002\275xM\221\273\2723\243\275\031\322\205\275\035\032\350<\311\214\225=\004V\337=\357\362\027>\t@\271\274\202|\033\275}\251P=\227X\t>\325\333l\275\315\242Y=>\335\004\276\212\253\035>1\275\267\275\217\225\216\275\371\002\307=\335\016\315=\3103k\275\326\304\020\275\211\017\344\275!\357\266\275M\340\005>3\321\314\275\304\271\t>\037\362@\275\031\207\324=Q\354\337\275\374\360K\275[\270\022\276\337\016(\276\263\263\335\275\320\213\201\274?\373\212\273r\366\036>\025\335\336=\311,\021>\356K\273\275?\202\000\2761\336P\275y\267\006\276\3760D\275~\301\005>\241\332\270=\017q\026\275T\207\031\276\220\362\017> \001P=?\257\332\2755\310\373=\016\304$\276\330?\364\274\263x\305=\327\265\013\276s\n\000\273\266\323#\276I\237i;\370\315\006\273#\326,\276f\337\276=\204\315\352=\036\235\323=9\220,\275\177 %\2769\3662\2766\025#>Vk\376\275O\332\362=\004\244\272\275\2312n<\274&\201\273hL\334=\316\027\325=\337\212[=\n\247\256\275w\014\346=\304\221\347=\212\306\233=^\236\241\275F\220\216=\t\245\304<-\234a=]X4=\312\220\002>$\312;\275\362\321\327\275\014\025\'=v\254\371\275\371\006\223\275\r\244\223\273u\266\365\274\265e\367\275\341\007\263<\322\224\204\275\361\254w<\277\201w\275\356\313\350\275fs\033>\276a&\276\307/(\276&\227\322\275\326\260\013\276\325W1\276b\221N=\322]$=H@&\2765\226\304=IN\273\275p\262\372\273\232\017%>\365\3058>\210\245J=\233~)\276\233\207->\216\002\347\274\233\365\361\275\375\352\303<\256y_\275\347l\315\275\007\022\261\274{9\036>E=I\274\177\022\235=*\245:\273\021\226\037=M\037\256\274\242\023\375\275D\370\235\275\325\274g\275\251\366\212<\334\372$>Tk\275\272`!\214\274\231\036\337\275\004\014\375\274\276&\032>\004\345\371=\312\000\333\273y\006\271\275P`\204\273nW\260\275\305v\006\276\332D\300=\344\204\016\276\326\343\223\275\225\353\322\275\36045\276\001\341\331=M\324\301\275\2750\300\275\210\030B<s\242\'\276\345\344\r>\035\363%\274\246\006\024\276\202\314~=\020Z2\271\360\277\267=\322\326\236\274O\326\302\275\030\033\004>I\227\371\274p\322\354={|\025\276;\345\306\275\212\036\007=\033[\034\276t\337\321=~\345\n>\305)\025>\357\205\321\275\002\"\324=\311\204\034\2760\321\311\275?\264\356\2753\225!\276R`\007\275\211\362\254\273-\326\327\275i,\352\275\222\260!\274][b=\336\017N=Sg:=\251\214\007\276\217\213\230\274J;\211\2742\271\316=>,\313\274\337\020b=\3170\021\275.\325\362=\322[\342\273KZ\021>\371\235u=\261\346\375\275\321p\033\276\013\337\317=\342?\201;C\2037\275\257\310\311=;S\216\275\024\202\371\275\000\362\214\275V\226\030=\242\307y\274\337X\253;K\350\263\274\376y\261;\203\210\030>\226\373T\273\00456=>y\341\275\241\226\355\275\233o\377=%\220\274\275\377\260\017\276,\266p\275\355\340-\275<\377\330<a0\001>PY\221<k\212\224=\304\341\353=]\230-\276\245\322\237\275\224d\030\276\233o\025\276\006\334,=\240`0=\370\376\014\274\004\235\234<\376\217\367\275\224q!\276\344\3506\275W\271\201\275Q\031\353\275\202\371D\2740\343+<\272\333\t>\374@\327=\222\3150\276\317:\027>\325\t\226=\3500\221\275\017y\307\275\222]\263\272v\206\005>\216\037\007\276\242\005\026<\300Ia=`S\340\274\202k\010\276A?\030\276\350\017\"\276\361\214\304=\226i`\2759\244\311=\334\372\333;\307\343\264=\211\\\346=J\217\320=$#*\276\335\320\026\276\\\360\215=\354\216#=\307T\034>\200z5\276\252t\037>\334\'\\=\241\205\034\276\275\272\355=\022\352\276\274\234\331\246=/\360\303\275\314\034\331\275\216\347\211=\326\026\232=Du\031\275\366\2566\276\264\013p=\242\364\000\276L,_\275\315\331\367=\255\024\206\274L\222\314\275`\255\214\274\212\263\212=\204\300\002\276\306\357\254=2\027\320=\217\251\024>\310\256\005\276,\203\034=l\247\240=\311N$>\271Sj\273\353\212\360=\336\373\026\276r\\\'\276\200\204\221=M\022\204\275\372\026\301\275\266\215[\275\323\224\216\275\241\346\215\275s\237\247\275\217\331\253=x\360\025\276\023\026*\276\256\373L\2756\000\344\2759\367\246=\324\032\214<]\277z=\026p\245;e_P=\224\364\271=\022\250\n\276\261\214\017>\300\004\314;E\301\245\275P\r\355\273\271\250\t>\014z\234=\265\350\233\274\tu\201=\024TF=3\032\024\276\226\004\223\275s\016\212\2746Ou<\037\342\002\276\352\237\327\275-\200\370\2756\245\'>E\274\362=\210E\005<\357s\216=\244\260\020=\013\272Q=\366\242\'\275\252|(\276\334B\017\272\225k\216=(\255\302\275\376\306\035\276\370\261\331\275:\342\347=\2423\220=\271?\004\276p\007+>\256F>=:+\275\275%\016\036>\022\207\275\275Au%\275\362\2040>QH\035>\305\027\220=\317\241\317=\377z3>\\e,>\177\213l\275g\346i\275j_-\273\2045\037>~/u=\323\230\027\274*@*\275B\033\333=\034\265\035\276\341^\020>\305\245\333=h\207\017>c\367\315\275\327\304\254\275<\342!=\177H\334=\3154L=\353\251->\256\3623\276\337\273\315=3Q\203\274@\200\"\275\311\013\350\275\266F\322\275\226\246\317\275\326-d\275\010\335\360\275Z\324/\276\370\2014\276u D<\016]\016>\266\300\247=\262\222\n\276\337 \323=\231\354\317\275|\354\035\276\315\235\224=,\225\">\255\212\226\2754\330\215\275\364\262R=\261\220\003=$\266\250\275\223-\267=\206\350\333=^:\244=\205\375\034>1\320\222=\204\013\301\275^\014\036>p\016\033\276\203\030\020>C\226\206<|A\243\2740\326i\271\2757\207\275\347\272\335\275\312\212\034>\333}\373=\215\304\346=\004\370\005=f\300\324=\322\254\001>>\350X\275=y\024\276\213\030#>~\236\367\275\240\217y=$Y\215=\2276O\275\024.\304=\350\267\0369\037o\035\276\213;A=\203\326\021>Kc\340\275\242\334\177\274\312\357\334\274Rq\021\276\030.\233=\351\336o\274\026\t\025\275\026T\333<\2425\201=_\307\366\275\211\211\037>~\363\210=Z\035\241=T\334\030=R\205\206\275\333\017V\275\243M\211=f.\203\274\002\033\031>\202>\346=\\\226\313\274C\"\032>\246\340w=\277\343\320<(\243\321=\356\331\000=}\016\235\275\025a\362=Ll\213\275\210\004)>\3019,\276;\350\021>\345\203\242\275:}\022>\231\363\013\276`\321\363\275[,\264\275\376\254\302\274\362\006\031>\220\n\023=\276%\333=7\357\273=\323M\032>\363+,\276o\265,>\226\027\242<\t\223:\275^\341\253=\355\302\205=\331\220\023\276\022+\317\275\254L\203=\362f\000\273\022\302\335<\n\007h\275\310\034F=\003\334\207\275\243e4>\204\016\330\2758h\"\275\317\364>\275\025\275/<\nU\205\274(F\374<\3211 >xv\226\275w25\276\306\003\267=\340\201*>A\007\341=\235\010\034\276\250 U=9a\375=\345.+\276\014\3060>\021\321\002>A/\242\275\351;*<\274[\221\275Q\'\372<\357)\016\276\375\031\333=n\333\264\273\224\023\036\276cl,>\376J\007>\306\362\203\275\362\313X=\"%\265\274d\3625\275M\201U\272Vya\275\325\375\002>\342K\270=\276j\263<O>m\275\n/\024\276A\026\005<v\363\225=-\267\325\274\322\0343>\202%\320=\200\025\371=uzI=vX\000\274\361\342\306=\243\342\205=^\225\352\275\354\rA\275\2707+\276\261\354\233\275b\256\241=\257<\010>d\360`=\231[\264=q\356\006>\230H\330;\255\033\220=t\313_\275\226j\037>V\377\263\274\263@m=\2250\365=\357\007\202\275\323\024\323\275\335\3448=\214\232\354\273\317\312{\275^\340\202\274T\030\253\273P+\030\276o\250\215=\334\314\201\275!?)\276\324`\354\275\005\315\261=\032r\232\275\014\037\252\275\225\006C=\217P.\276\374\273\036>\363`\301\275\361\323\311\275\2520\274\273\210\n\367=\206\227\324=\303\326\331=\356\266\013=\030o\326=1\314\377=\020\336\224\275=\357\001>\306D\276=\014\254\343\275\356J\351<\260\264\017\276\207A?\274V\214\020\275\322\231\025>,\314}\275s\210\362=[\213\241\274p`\320\275\212v\313\274B\265\273<\027~\205=|D\242=mL\354\2751\304I=\252\367\206\275 <\037>\236\177`\275\342\362)\276\374t\t\276\326R\032>q\256+>\355\244\302\274\241C7>\272\302\376=N)7>\273\316\351=<\333\033>\rv1=/\343\306=\301\"\255=\250@\223\271\355\374\232\274V \266\275\310*\003<H\034 \276\361\362$>\215\252\260=SA>=1\021\236=\244\3620=\207\312^\275\000\007\006\276M\350\347\275\367\024y=\033R\227=\226]\016>\222\212\313\273}|.>\321l\356\275l\276\366\274\017\252\337\275\222\003\020<Y\213\342\275\210\177\r\272\206\226\336\275\240\270\333\275\224\273\033>\356m-\274`U\035>\025\t\005<K\024\201=\312\036\245\274J\336\243=\271L\264\273L%a\275J\251\006\276OQ\265<z\262\201<\232\236\243\275%<\316=\211\222\032>\302\345\256\273\313\025\326=\232\327\327==\223\203=\215w\251=\334u\341\275Ha\030\276\301\000\001\276]\317i\273\263\277\310\275\305\333\370<)\023\276;]\314\207=\255\020\265\275yy\177=\373\367\026>~d\227\275\030\246\227=\336\207\010>\333\001\267\275\253=\370\275NN\365=\337\266\300=v\303\021\276\252\2564\276\207\031\314;\273iL\275\242\030\r\276\020F\247<P\306\017=r?(>\265A\222\275!v;\275T\370\324\275_\305\263\275\347\355\262\275#!\371=0\267\004>P\314\035>\035G\030>r\371\242=\232\274\365=/\341/\276AS\345\274\205F*\275\346\303\253\275\035\210l=K16>n\377\010\276\221\363\325\275{\201\300=\234\311%>\274\204,\276\030O\006\275\314HM\274l@2\276$vM\275\021l\230=\23325>3\331w\274S\203\r=\260\321\252\275\025 \252={\247\345=\r\222\304;Os(\276\216\366P\275t\363\177=\322\225(>]\323->\001VZ=\2575\234\275\224B\325=\223\0272>\317_\r\276|m\025=\240q.>A\333/\275\030A\376=\343;/\276\211\241\357=\231(\377=\273\023\364\275X\333\276\275\344\373\266=\365\324.>\267\363X\275\331\224(\276\344\0021\276m\"\000=\261n3\276\205\375\252=\017\004\230<jC\376=\2548\244=\205B\243=c\276\024>\337\350\230=\237\022\217=\316\205\031>C\317\250=\271\377\226\275\362\231$\276\365?\265\275\267\376&=\360\n5\276\302+\034\276\334c\377\275V\252\305=\337a\361\274\204\263^\2758\324\362=\370]\n>@f\004\276\222\305\212=\222\017\330=\"\"4>\023\230\244\275{P\275\275\246\324\376\275\237\"\334\275D\037\214\275r\315\341=8n\333;p|\003>\207+\244<T\310\360=#p\026;\243\201\377=\223\312\220=\245.!=\022\214y=\256\353\003\275C\177\303=\201\360\333=\367z\356\275:\021t=<\374o;k\250\016>\212q\023=\334\246\222=RB\374=\0301\211\274\372\303\333\275\021\3519>\350\002Z<np\006\276\263\020\032>\030\302\177\274\",\346\274G\251\346=\237j\322\275\235\223\350\274\226\372\035>Iu\026=\353\271\010\276A\247\361\275\020{\245\273\004\322\r\276o\315\201=\"\313(\276\304\271\037\275\300\251w\274\r\355\306\275B\207\t\276\341\035\310=\231\315\030>\037\371\300\275Z\262\250\275\364\201\002>\375\366\323\275aa\264\274\225\n\325\275A\363\322=a]\032>F1\034\276\373\237\251\273\201\003A=\344\311\013\276>\003t\275&\305\370=\036N\024\276\211^\262\274z\233\351=^\256\016>l+\343\274\252d!\2765\204U=6E\325\275g\352\r>\306\273\307=\002?\314=\240\215\034\275jy`\275\331\214\220\275o\214&\276\017\373\234=\310M\242\275\356\350->\304TM\275s\034o=rF\226<\377\037E=\357\212\257\275A\377/>\263\221\231=>\241\317<\r\217 >n\336\346\275.|\366=G\217{={c\261=c\325,\276\322\010.>\320\222\014\276O%&=\374\346\221\275\0341\246=\021\326\034\276O\004\220\275O\035\322\275H\347#>]~/>\230\230\037\274\312./\2754\311\232\275\200\240\350\274\027\275(>\251C\313\275\273\341\327<\322\t!\275&\r\365=\346\331\001>\236|\033\276\017\274b\275B=\t\276\374\211\256<\252\r\242\273\240\025c=\335\251\240=\250\356\004=\304\353]\275\007w\004>m\202\023>Q\316\315\2759\026\212\275\231\346\005\276\t\031@=)8\315\275\031\251\213\2759\253\266\275\231\374O<\363 \373\275\n\300\032\276\340I\035\276\304\006\302\275\253T\246\2756F!>!b\320\275\214\t\021\276&\002\211=\331R$\276\2500\214\275\004-$>\254s\013>\254\031\235={B\034>\377,\032>~\250\362<\2355\346\275gh\021\276U\246[\275\236\2114=r}\250\273\\\205d<\310>r<6{\252\274\332m\206\275g\036\036\276\025\003\224\275Q\036p\275U\337}\275\234hj\275\264\321\033\276\267o/\276$\025|\275a\233\t\276\205W\305=0\224\373=-\237\t>[~D\275 \235\"\276\0050\027\276!\304\035>\276\031\030\276n\240\276\275\331\227\236=\010\311\376\275\325\321R=\337\026$\275sC\026=f&(>\222\002\312<{x\006\276\226\247_;\334\317\001\276o\200\303\275\251\333 \276\367\373\261=\205\327\311=\251\303\336<\255\035\035\2747G\033>x%P=dw\243;\246\347\036\275+=\003\276\251\227\016\276\2740\260<F\201\323=\247\010\326;9\356P\2754\004\342\275\351\237\353\275\230\002Y\274\277\324\324<\311\343\333\274\206\013Q\275v\211]\274\350\265\036\276\006\243\375\272$uQ<\227\305\376=\310m\244<3\325\314\274\360\267\007>\370\034\225=\"\324\004=\241%\017\276\337\251\036>KU:\275>\336\221=\271o\321\275\316\225L\274\224\027\306<\377\247\226=\342\375\'>\262\002\334;=z\">7\021\307\275\001\254\213=k\016\215\274z\352\345\274I;\014\274O\360B\275\r.\307\275A(0\276\337m\304=\305\375\311=\036\205\010>\027b.=\311\216\213<j\215\n\276\367\177\235\274Hl\354=\210\223\016>D6\036<\332\225\277=\004\374_<Q\001\224<T\372.\276*\030\301: \206\320=TG\344\275@n\210<R0\014\274d\204{=\274gX\274\025\270\240\275(b\267\275\243\204]=\336\210\366;d\r\223:\224\032\366\274\014\025\020\276vB\003\275\343\211d\274\364\007\241\274\025u\211=CNJ=ss)=4\354\240=\215&\265=]m\265=~:\231\275\336J\355=\013\0344\276L\233\030\276\354H\025>lK\365=\304w\002\276\330\365\203\274Fp\254=\016\312\024\276`\264\032>\310\214\245:\263^+==\275==\245\214\005\275\267\242\353\275{\253\017\275I\361z\274\212\242\357\275Y\262\006>j\n\014>\032\274\352=d\372\n\274\256TU=\'\346\362<\211p\206;w\033\312=\0330\265\274a\376*>f\014S<p@\024\275!}\022\276\200\233\311=\207z\315;\347\014\000> ].>\002@\214\275v4\007\275i\213 >|\235\022>#j&>\206*\300;.\003.>$\267\213\274h\337\321\275\207\2016\274\327\314\314\275<\302\036=\2200\337\275\354\332\032\276\202I\311\274\277\375\032=\254\032\212=5_\r\276\317\365\032\275\250\217\034>8\\d=\352X%>D\332,\276@\241W;\0167B=\313\304\336=D|\022>\371\002\304=\023\347\256=4>\013\276N\225\344\2753\\\243\274\006^\"\276Z,W=)5\034\276(\256\252\274\246\333\262=W\2628=\2023\026<G\232\246\275y\263\036\276Hi\376\2722\300\255\275D1\243\275\030F\315<\"<\361=itr\275\204\345\r>Th\203<\203\220\237\2741_\316\275\217\255y\275\237\216\353=\260\007\310\275\316\202$\276\361\027\023>\361\335\304\275\275@4>wp->\222\207\250=\"\332\367\273\037\013\026>)\247\245\275\324\265\2559\365\031\326\274\213\001\005>\206\023\306=\r\207!>\356\370\272=\234\330\313=\022R\017\2763\000 \276rb,\274\326q7>17\264\275\324\010\007>E\224*\276+\027\016\276X\001\236\275v\310\232<\024y0>m\003Z\273\355s\024=;\270\000\275N\025\"=\n\332\031>\233\022&>\201\"\214\275\331\266#>\346@\260<h\027\367\275\024*8>\201\036\204\275*\317\355\275\3419\377\275\010D\307\274\217\030\220\275\251\207\326<d\365+\276\364W\346\275zp\000\276\234}\310<@/\266=\221\264/>\246]\030\276P\204\256=\013\021\222<|@\211=\320\005\327=\312\303\t\276h\337\002>\344\327\377=\372l\031\276gR7\276\235t\265\275\263\315\350=[z\326\273\206\016\276\274\0331\034>\254\274\311=\253B\030>(\362q<\014R5>\020\215\224\275x\330\021\276e\016\032=\233Y1>h\201\265\275r]\305\275\262=P\275\302\\Y\274\036m\247=\225H\016=\225[1\276*\225\357=;\225\257\275V \316<\022Vr\2759\362\356=\267\251\235=\316\004\371\2742<\034\275:\305\252="
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "TX\241\273&\177\243;b\267\243\273\036Q\243\273G3\010;\367h\234\273N\275\232;\317Y\212\273\220\377\241;\202k\225\272US\242;t\004\243;\206?\235;T\244\242; \206\234\273\030\032\231\273\252\211m\273B+0\273\275\205\230;\234T\243\273\036\233M;\270\277\226;\007\362\243;I\251\206;$y\236\273\037\332\215\273\243b\243\273m\331\216;:\360\201\273\254\013\225;p\025\242\273sY=;\241\361\243\273B\270\243;\024\226\243;\3157\242;\360N|;6N@;\236,\242;n?\226\273\332\334\236\273\373\214\223;\264\3708:u\030\243\273b#\243;jP\240;\334\010\233\2732\363\214\273p\337>:\227\002\234;\242i\226\273d\031\226;\032dU\273f\374\236\273\277\303\243\273D\306i\273\312\t\236\273\\ \215\2734\3666;Z\326\222;\013\227\207;*\366\240\273\244\352\242;\354\353\237\273\036#\241\273L\241\243;\222\341\243\273\332,\243\273 \306\007;\2449\234\273\230n\234;\\\037\211\273\234\212\242;\340\001k\272x\031\242;vn\242;\270P\233;\361T\242;\300V\234\273u\237\225\273?\037i\273\337X)\273B\336\227;\354\027\243\273p\312M;\312\036\234;\245\346\243;\222\320\217;`*\236\273\201\031\215\273\202B\243\273Z\035/\2724\275\206\273$\016\224;\010\311\241\273\215\200\021;v\344\240\2739W\243;V\357\243\273\005P\243\273c|\305:\026\377\237\273\315\032\234;k\222\210\273f\t\242;\377\026\202\272\220\305\241;\356\343\240;*\366\215;u[\243;34\233\273\370\026\211\273\310#s\273Q[9\273\036\214\226;q\251\243\273y\221T;.\221\232;\322D\242;;k\207;R\301\235\273\232\206\215\273)\273\241\273J\007@\272\300\270\177\273\022\'\224;\"/\242\273\306l\337:"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "2\204\377>\3610H\277\255\267#=\212,\213?\252\225\257\275\'\256\312\276\030\321?\277\362\235\000?O\225R\276V.\257=\252\356T?\315\314\362\277P\223/>\215\220\n\277\366/^?\305\036\321\277[b\313?=\242\212?6\243\223?Q\345\231\277\034\347\372\276\361]\340\276\255[\033\276\246{\350\276\253E\217\277zF\t\275\317\321\026\300\014\353\222\276\024\314m\277\365/\014>\235\204\026\277\326\301\243\276t/\276\277;.\030\277H\347}\277\215\246R\277\010\203\213?\270\263\003\276X\241\000=\330\337O\277\216\253t\277CR\217?\005\250\025>\033\363\263\276o\r\350?\252\200\037?^\244t>\033? =\355i\237=\324\211|\276\002G\341?\232\353\313>\016\272X\277\342d\027\277\246\211\272\277\325\264\301\275\347\014%?\241\300\260\277O\263\312>\264C\020=\353\2632?\030Z\246\275uE\262>\314\334]?\262\305\\?K\242\310>\371p,\300\2012\204\276rl\235>\\P\316=\224+)?$q\236\277\247w\300>\302\334\341\277a\010\r\277\213\345E\276\304U\344?\017nI\277H\220\351=$\323s?\327B\310>\022Q\242\277\021\0358?\316\335\210\277&\022\013\277\020\035\030\300\225\230_\277$\034%=\370\360\022?\0255\324\277[^|\276\243\030B\275\344 \307?\355\333<?V\272\026?\010\355.?\221p\235>*M\361>\006\262\222\277\014\257c?~\370\272>\303\017*\276\313\361\221?\377Y\013\300\337\204\251\277M\370\316=\227\275]\2761\026\233?\270\t\310?\317-\264>\341\234\272?D\203\005=\375\370\333\277\2046\242\276\235\245\210\276\222@U\277\362\272{\276\222?\336\277\347\325\023\276\371hI@o]\326\276\337\216\335\277\222,\304?\2071\216\277,2\t<\307\374\217?\002\204\240\277\004\345V\277\273\022\223\276\333_\014?\372a\255?\352Vq\276\377\324\201\277\233\354\031\277v\212x>\255\026 ?\355\275\214?\3745\355\276\247\006\256\277\034B\263?\351\336\330?G\223\\?\342\253\330>a\177\031@\322d\036\277\205\031\310\277\271\302\003\277\216a\201?\312=F\277\357\273\264>\210\314u\276\371~\267\277]\r1?T\003\335\275:\3175=7\226\031\276\354{\266\276\220\'n\277\322\226\274\277(\241]\276\030\246\203\276\306E}>L\031\267\277\201\272\277?\215\310r>iv\261\277\233\324\231?\003\310\242?\013\212:\277\253\346\260?U\315\252\277\231\275\020\277\326\025\371>\317\250\267\277\272\362\242>\'\260c?\3744&?C\324\332?\027\341\366?\330\036\255\276\202\336\351\277\005~\200\277\362\272\332\277\234 3\277\220\340*?\\N\350=\003\246\203\276\030\360V\277X\341S\277\007\223\r\276\210L\212\277\334\314\376\276"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\325\203\232\277$\372\376\276b\000&@/\037\247?\376dk>\332\347%?"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
