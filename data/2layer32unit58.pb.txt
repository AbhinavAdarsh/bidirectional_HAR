node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\202\235\266>\225y*\277\211\032\035\277A\256\217\276\022\266\235>\022\251\034?\203\261\024>pC\005=\343\332\307\277\030>\301>\016\255*=\352\306\261?\307\345\247?[\320P?<\t\264\277\"\264x=\211d\207\276!\341\352>\234%\022?\260\310\004>\347\006-?\264\t\220\276\354A\324=\007\000/\277q\205\222?\227\322;\277\t{\030>N\355\313\275\215\205\215\276\255\310\307\276\263_M?\341\332\245\276\"K\"\276e\243:\275\366\351\226?\217\317\301\277PUs?x\303\374?c2o\276F\021\255\275\266~\027\277i\036\001@Q\337\234\2761\277\035\276\021\336\217<\231\237\036\275\210d\000\277K\322A>,x\202\277P_u?\251\013\303\277[\361u?\337\257 \277rx\307=`\036\230>\317\\d?]P\254?I.\356\276E0\255>u\275\004\277\226J\031?\033\330\215\274]v&\277BM\301\276\267\2233\277\212\033\220?k\212\256\273\320<\323>i^\017@}\307S\276N\201\300?\373\310\230\277\302w\314>\335\346\324>\034@S?6\217\001@\301\026x?\260\236\016\277\006\374\017\277\"Y\216>\276g\354\277tF\020?\202\r\310?\277S2?\341\022)\300 \013\240\277XlF\276\331\327\214\277\243g\311\276\021\354\271>\235\023\220\277\033\225D\276\326\352\004?\222\tD\276\260\301y\277\363\351\263>\333&\251\277d-\213\276\035X8\276\312\023\231\276\337\310\335\2778\213\261?\0134<\277w\225\352\277\000\316\024?\345\270y\277$%K=B\034\004?C\3252\277w\306:\2763;\006\277\240\001\263>\254\n\025?\006\337\020?\354\321\034>\326\247\312>\'\321\376\277\007$F\277\206\354\250\277\202\024U?\2329\266\276\361\014\035\277?\3646\276%\277\256\276\303x\306>\315\025\253>\200 \"\277\267xe\276K\'\216\276/\370\234\277P\005\352<\354u\356\277\251W1?\237F\n?\006;\210?\335\252\221\276C\236+@_k\260\277\204\\\255\276\210F\241?\001i\013@\246\370o?\367@,?-\261R>0B\372>\373p\007?o4$\277\035\214\263\277X\033\345\277\336\251\322\277L\337\007?g\022\370\275\345\331\357\277\2460\312\276Z\355p?\233\357\212?\031Z\315\276\221\247)\277:i\003@#\253\206?\245l\213\277V\366\r\277C\000\022\277\317\034&>8\237\036\277p\361+\277e\256\270=\245\311E\277z?\322\2742:\027?;\245\'?|\210/\277`8\361\276l\233\200>\253\274\347\277\353\010\226\275\267*\235?S\211\363\277\201\252T>\265\343\024\300\327C\232=\323\356\361=\014\235~?m\227\325=`:\226\276G.\304\277\225\272\250?\232\247g\277\234\360\033>\243+\223>\243\005\337\275\177Y\256<\354\331\032>%Q\207\276)?\376\277\272\255\246?\021\353\022@u\252G?\301\216\260?\r<\301\277 t\307=h\366z\276b,^\277\212Lr\277\tM\211\277\037\351\013?.\365\267\277\330\036\022\277\334|\247?\330\370\217? e\\\277\036\'O\276>\334\035\277)\376\203\277\204B\300>{U\337\277\202\330i\277n\320\206\277\214\260\311\275\370|\004\277\341\252\271\277\031y+>\260\371\214\276X\221%\277\373\361\321?\273\230.\277\024\374\311\277\340o\304>\245\\X>BO\266?\364\013\245>\0314\262>\027\312\227?\031\323\305>\037\275\254>\340\214k\277\264\350\212?v\202\322\276.0\307=\373\033\324\277\360!\220\277\262\235\202?\023\311J\277\235\322\236\277MHY?-\235\327\276\251\223w\277\237\014\377\277\321\363\232\276\235\372\355?\207ox\277\332a\350\276\346f\004\277)\364\322\277l\216\363>\\\275B?\365\220M\2775\324\017\300\332\215\301?\'Z\r\300\026\354!\277\341\212\263\277\247\305.?\245o\254?\026J\316>d\205\247?qI\337>$\200\375=\037we\277S}m=5\323\274>{\253\231\276r^\231?\217v\350=P\311\252\277P!\014?m\205\332=&\314{>\\\0337>_\213\256\277\262vU?\033 X\277y)\252\277K*i\277\246\203\372\277\255x\024?\316\005\260\277\030b\201\277"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "Z\355\310\276H\214\001?\004\307\366<\0077\220?K\227\310>8-\261?d\300\306=%\350\311\276\313\216\246>\367\217X\275\360T5?\252\301\014\275\221K\214?(@?>\341\326\030?\305]\207?\230R\365\276\342\251\315?lL\"@W\035\337?S\002\215>/(V?\336\247\017?:<\014@y\2011?N\003\003@<\361\315\275`\036\256> \205\005@d\263\016@0;\242?\213\303x?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "=\003\315=|p\250=\204\370\3209\332\253\'=X52>\277\223D\275\377\220\376\274\017\245\246=\226\222\004>-\004\343\275\2126\t>\210z>>{^\005\276)\033\257=e\376\344\274u\355\376\2750:\367=\323Fy\273\363\241\005>\324\220U\275(\352\317\273\200L\321=(\370t\275y\225\212=\030f%>\346\275\366=Eax\275v\260Y\274\273\332\034>F ,>\306\240\275\275\262/\322\275\220\330\327=\376/\033>&\301A\276\337g\236\275\035\035\007=m\346?\273\200|\245=\263(2>n\352H=^\027\023\274V\314O<VM$>|*u=*}\222\275\211\362\236=\025\274\310<\321\004\217<\006\304\201=\252(2>\366\017\247=&@\036>\214o(>\206\361\303;\300e9\275?\275\016>N\354\370<\314s\022\276\320=\201\275\2600\307=\374h\224=:\346B>\233b\266\275\363\252\307\275(\337\362=\037a\322\275\336\242\006\276(w\235\271H\237\311\275\334\207\360=3\"\022\275\250@F9\017\3505\276\361\264\341=/\035\373=>\270!\276\275\3120\276\211\210!\275{l\230\275\265b\222\275\010\023\003\276\217r{=\2649B\2765\2720\276S\022\261\275#d\261\274\035\340\257\275\362\244y\275\306=\013\276\300\240\352<\374z\035\27650$=X\276&>\177\3765\275lN\221\275\310\337V<\033G\242\275\256\327\020=0&\340=\005\314\236<\217\230\307\275\335\341\004<0,\374\275\314\261n<f\033\034\275\027\366/\276\325\'\360<\303\344\257=\320\320\016\275.\t\217\275\311\370\337\275\201&\273\274\267H/\275\257\342\261=\032\312\353=\326\225\320\275\277@\233\274\224\376\231=L\240\201\275\325y\336\275\027C\204=\351L\021\275.xp;\374\242\277\275\037\333\251=\354\376h=\247\277K\275`0\312:#\341\202=tu\360=P\325j\275\347P\033\274R\\\"\276\001n;\275>\035\035\276l\350\010>\376\315\305\273n\031\325<\2268P<\227Y\273\275O\272\314<\272\n\200<\246\243\375\275\354m\367\275p\006\2719\346\r\013>\205\255\324\275y}\227=9\024\373\274,%\027>\367h\260=<N+\276\237\315\032>\t\330\350\275\023i\003>\254\324\361=b\\<\275I\3135>d\265\013\276\247\367\036>\316B->\346\344\033\276\030\356\303\275?\221\020\276\362|\354=\274\341\365<\240t\025>\370h:>\003Y\031>t\035\023>\342\207\230=\261r!\276C\177\375\2754\032\010\275\033T\366<\203\270\034\276\t\227\257=}\244\304=NO\367\275\312\212\370<\2512\034>\313\355\n=J7\315=#q\262=}\017\330\275\217\252)=\345\260\253=\336\204>\276\034\321\305<\001m\370<G\354\007\276b6\t\275\243>.\276\000%\211\275\351\000\202\275rV\033\275\000B\314=j\360#\276\346\245\361\275\257\222\205\275Q\364\356=\0337\032>)\032\251\274.\r\364=\316\262G=?>\364=\307\206\276\275+\353\277=\244\363\302\275F\177\037>\264N(\274j\213\026>\363\277\254\275\375L+\2755\342\333<\202\217\233=\325\301&\276\327z\350=@\240c=\324\241\032>\262\211\010\276\227\207\266=\027\316\236=\331D\335=\307)\332\275\203d\010>\016\300 ><U\376;\221\3252\275\253m\t=_y\377=\322\020F\276}n\230\274:\303;\275\257\370\t\276\366k\360\275\216n\205<;A\360\275\276w%>?\343\206=\376\010\303=\226\033}\275\361P\260\275\230\205!>$V%\276C\315\033>\206\363\324=Q4\361\275\213/\363\275pNA\275Pi$>\240\223\003\274\376M|\275{\304\300=%\364\020\276u\202\326\275>\307\375\275_\277d\275\361\316\364\274m[\260\274\370\277\342=\346j\222\274Q\244\216=.f\314;\034\333\307=\222j\r;.\324(>\215\245\217<\342:\212\275\204(\376=B\311P=\345l\220=\2405\r\275\"\357\330\275\223\342\346\275\214t\034>e\\\236\275\255}\014\276\020\002B=\245\275+\276\204\322\002\276*i\034\276J\032\242<VJ\362=\204\320\025=(\246\376\275\2366\306\273\024\350\266=W\233\241=\2745\235<<\224\256<\341K.\276H%\307=\270 \037>\312e<>q\361\217=\033qk=F\335p=\2010(>\350\261N=\355Y\247\275N/\235=\236\014!\276O$\224=\320\243\340<\343\177\003>gL2=U\3762=)Y\005>I\005\355=\354\357\262=\3548G\275\365d4\276.\306%\2754n\340\275T\324\022\275i\304\'>\364\373\257\274\213\346\256<M\006\322=\002\356O=\236$\373\275\225\3439>\276\007\351\275\245\307\002>\365\265\271=\236H\210\274%\220\241\275\307\307\376\274\001C}=lu)=e\237\r>_\036c\274\377\372\001=;\375\227\2754\332#\273\227\346_\275<\321]<\360\232E\275\245\312\326\275\222u{=\035m\025<8\237\325\274\3739\247=\355\237<>\301\343,\275OZs=\217\256\334\272a\004\314\2756\373\340=\035\211\026>n\212\204\275\3115\302=&x\363=\303\177 >=\367I=N\314\322\273!J\312\274-\362\372=A6\005\276\211\007\336\275\364\371\317\275\313Ac\275\373\343^\275x\205\r>V\'\271=\024\343\372=\002?/>LM\027\275\347\262\020>\210\201\020\276\315\211\026\276\270\214%\275\324q\355\275\361\334\031>\2066\243\275\243$\247\275\365\205\r>ak\030\276\306\325\010>\355M\333=\331\327\035>W\274\203=7\303\315=\265\001\t>\024\3545\275-9\235<\234\022\030<\215\001\234\275\246\226\225\274\t\275\234=\222ZA\276\252\3020>\025\275\225=\364\027\325\275\242\244\325=\230\026\332=\031z\217<\337\210\222\275\003\337\006\276a*!\276\264N\r>\034\360\3159\341\356\201=\24589=\2119\001\276\341\317#\276\2341>=iu\016\276T\364\025\275\216J\000\276X\225\032>fxg\275\002\331\334=\206\250\256\274\266\233\007\276\304j\006\276c3\002>$\350\270=\362\221\037>\240~\225=fs\003>LkY\275\214\245\274\275\2303\254\275\310Qv=\023\371\002\276z\014\r\274W\001\022\274\"\350\274\275\201\230\227=ya:\276Qs,=F#\010>\177D\022\276\274\2556\276gVQ=\353+!=[\363#>\275,(>\000\267\036=\"\007\006\276\201\337\261=\n\225n=\266\252\013>\266\303\245\275\315\245\205\275\311>\206\274\024D1\276Z\'@\275+\263\200=\006\264\024>\021\2224\276jP\224=\340\346\344=\246$R=\315\030\331=\224\325\262=A\023B\275\023\331\333=\'H\037>!\242\026\276T\376-\272\367\230X<\363]\027>\016\262\215\275\254\033\300\275o\221\306\275\310\351\016=\3160W\275\025\322>>\036lL=@\206d=\372\3169\276x\311\324;\325\376\346\274[\303\311\275\222\321\317<\357\215\203=}S&>\302\035\322\275\220L\031\276\367\210\t\276\227O.>q$\020\276\372?\223=\221\034\007\276U\257\363=\276\245t\275\241s\214=\277\306\332\275\300.B\276\303ah\274\311K\350\275T|\017>U\245@>\374\256\340;\300e\254\275\032\250!>^\264\n\275\300\017 \276\003o\342\275\345\204\014\276\324\306\244\274M\376\231=\36260\272\227\376\235\275\242\353)\276\2507\277<\257\246\342\272\201\323\013=f\314\245\275,\310\025>Y\260\304\275b<\221<\221\377\002\276\311\377\367\275\340\256\t9?]\">Q\307>\276\364\022\r\276\'\"\250<h\025\023\276\346p\3579|\300\264;g\202\021>W\342\014\276\347q\346=\337i\324\275\033\306\270\275\247\360\255=\237\335u=hJ\025>\306J >|\224\345<\306_\014>\337\361#=k\305\240=\255\2305\276\035\201\002>\226\264T=s\005+>z@\013\276wH\035\276\220\016\221\274@zY\274\n\217\230\275;\346\023\276\325\354\031<Si\024=\235\274\354<\355\026\327<\364\371/>\320\305\341\275P\333\245\274\220y\t\276\006\253\255\274\257\317O=\204\\\311\275[\207\320=\031p\261\275t\323\337\274z;\021>\336\313\224\275/\371\354=\346y\\=\260\265\371\275\010\233\312\275DC\022>\345x\n>\007\032\246=\307\010\232<\004\007\215\2751l$\276\306\2711\275>0\326\275\241\337\021><\341\207\273\010\0345\276k*\t>C\366\220=4\357\321=\343\337M\275\036{|\274&L\"\276\317lM<Lu\002\275\336\307\"=c\312\277<\023\242%>\301\257\354=/\255\216=\323\207\365\275\302U\035\276\361\206/\276\037\003B>\266[\376\274\242\n\'\276\214\231\223\275\027\351\010\276%g\345=\365\026@\276A\020\213=2R\003>-\0109\275\262\010\342\275f\266Y\275\242\373\'>\267\274\325\275\233s\274=\"3\014=\256\267\355\275\271\302\214=\274\022\035<\224E\240=5\242\332=\373U\005>\372\036\004>5\246\037\276\305\306\025\274\227\245}\274\330\004\013\276\031\000\314\275\256a@\275\206\275\363=\252s\013>i\376\212;\032Y\025\276\232+\006>i\201.\276\033\025\036\276\320;\340\275\006\211\211=\212i\034>\330#\343\275\316@\367=\036\210\322\275\310\316\">\277\256\017\276\355m\341\274G\300\333\275H\004\016\275`D\207=-d#\276\221\201!>\265\316\366<h\366\021>\241s\331\275\237\215\004\276\265/\320\274h \314\275\266\021\243=\231\217\225\275s,\205\275\230h\215=\010h\240\275\3702J=K\2375> \003\263=\367O\033=n\266\244;~\\\\\275\021\207\300=:\003\311=\'\243\034>\016YI=\2063\245\274\336\2128\275u7K\275\252\232\251=eA8\276\033\267\023\276\332t\260<\331\314J\275\261\214\202=\270p\250=\\\230@\275\211\270\000\272\365*\242=4\264\211=\370\216\275\275\335P\010>\317\336\367\275\207\324\"\275\304\242\371=\363:)\275\322Y\210\274\234\262O\275|\242 =\302\006\231=\023\021+\276:3\005>\321B\026\276nu\347=\236\204?>\345U8\276\303\025\023\276)P|=o\227\344=\335\357\001\276\001(\250=\254&\273=\341by\272\253\354\010>\'9\263\274:\254\204=\347p\255=\311\243\336=f\246\354=\037\231\001\276.$\032> ;\243=\223\366\350=\210m6\276}\336N\275c\237\'\276\002D\017=\345\253%\276\026\347\300=\375k\254\275=\017\344<\365\270\200=\300a\273\275\341U/>\271Y\025\274mS\241\275\251\241S\275\304\021\020\276c;\005\275\3539(<=\245\005>\240\024\007\276ix\023>\271>\t\276\330~\342=Z\355\002>\233\241\224<\323{<=\224\025\271\275x\350\373=\361\314\360\275\273@\250\275\213\373\027>\022w\306\275\230m\354=\266H\314=f\274\207<\322\200\003>J\317;=\350d\006\276\007n\326\275\371\\\341\274\236\357\327\275\177.\214\275\312J\220=\342\267e=:\242\016>\325c\270\274\347Bg=k\276\352\275?\343\031\276\\\217\242=\253S\006\276,\002\200\275X\3537>\323\235\202<\031d6\276\264a\352\2755\315\210\275i\335=\275\030\331\037=\205\336\007\276\246n1=\032A\270\275\230\275 \276\020\221\020>gv\003>sX\350=7\376\000>\257\267\022>\n\327\361\275]T\\\2754U\213=|\037\027\275\306\020\031\276\246\001p\275\305Y\225\275\202!\t>I\257\004<#|\022\275S\021\025>\257\t\232<~\270`\275r\377\261=\220\013 \276\031\347#\276\270H\233=\306{\261<\334p\031\275\030\230\037>S\265\227=\362\342\267\275\232\217\256=\364\004\014><S\376\275\371\316\033\276\360\035.=\253\211\230\275\205\362\332=\013\000\301=\364\302\r>\255\373\334\275\220l\337<\307\354\327=\253\307\016\276\034\022\032=^\251\344\275[p\035\276\267a!\276\202\020\017\273<\237\023\276\367G\333==\371\220=H\331\376;\227U\014>+\005k=\340\334\231=\272\001\344\275\264\255\360=\204\325h\275\0167\223=\266\"\266\275F\027\273\275,\034\021>\317\326\251;V\333j\275\260\360\217\274\371\177\376\275\033\2564>Z\375\215\275/b\013\276\236\332\314\274\351}\271=\006\202\002\276\201\263\007>A\213\034\276\251~\376\275\026`\364;\341i\255=&\264)>\215l\216=J\336\373\274W\324\212\275]\361\031>\301\364\334=x\341#><\322\260\275\300\221\351\274\215\010\002\276+\326\204=\263W\031>c\375T<t\263\211\275t\307\216<\226\367\032>\367>\320<\333?\353\2740\241\010\276\244Y\005>\360~\031>\275\302\336<o\003\264\274\371\202\305\275\201\245\017\276\306@2=\324S\355\274\334H!=-^W=\376\223A=m\364\207\275\236\330->e\2008>mB\200=G9\302=\204\302\014\275\323~\031=\326\010G\275\360\357\271<_\277\255=\377V==\355\217\222\275\214\323\366\274\301H\010\2762\2108\275Oy\220\275\352\021\007>\362x\252\274HU\206\275\325L\273=\010N\232\275\260\340\343=\235JW=\035S\005=6D\263\274\036\026\200=\0054\314\274\340MP\275\352\2533\276T\220\315=0\021\035\272\260\016#>;\302\223\275\342\t\214\2753z\321\275\370\340\327<\303T\t\276I\r\034\276\367\373z<\211G\225\275\320 \210=FL\032\276f\n\301=\361\207#>\253\276G<\031O\211\275E\027z\274\300\037\004>#\225!=\300jC\276\365B\016>d\207\210=/\035\035;g,\375=\352\213\031>|\024\035\276\247\304\222=\355\327\374\275+\007-\275\252=\034>\022H\276\275\337\203\233\274\377\367\010\276n\244\362;\260D\303\274\\\354\033\276\241\343\036\276d\356\005>t\'\204\275\246\300M=\350\215\366=\374\345\355=\031\224 >\240p\245\274\300\367t\275W\226\251\274\002U\254\275.\342\006\276w\335%>\327\023\340=x\001\252=\271\350\207\275\347\003\214=K\241\n>\302\364\237=\207S\016>\270\007\240=\332\037\024\276\364H\205<\3503p\275Q\364\321\275\376\033_=\303\262\">\256\273\024\276>\223\246\275?\222\373;\303U\343\275\\#\022<\355\367\260\275[\026L\275F@\224=\364\003W=\270\341\345=\301\305s=%\367\037>\304)\024\275l\030\027=\262\250^\275\356\204\253=Dk\374\275\226\017\375<g\030=\275\363\214\362\275#v\204\274\337\330\230\275\237\213\302=\010\026\255<%\331\205\275\347\340\322<v`\362=\326\237a=\356q)=&=\251=l\263\016=c\334\332\275\032\213\350=\3548D=S@\245\275\256\210\006\276O\375\t=\177\017\326=\205\363\207<\371?s=q\262a\275\036\231\260=\374~\235\275\037\032B>\372Y0>\274!\360<-\316\324=\177\253\302\274\360Rp\2751\373\231\275\236)\033>\265\276\177\275\267\321\036\276\335\240,\275\261\273\253\275\230\256\312<\304\2318>\025\347\007\276S\3514>~\357e=#\207\023>\372\260=>\256\010\237\275L\266\031\276#\266E\276\210\365&\2746\214\3359<\3651>&G\010\274\007\250\010\276\t\226\246\274\033\326\031>\325\273\007\275J\033*\274\266\346\">LK\'>f\002/\275\353\333]\275\203X\223\275V\244\003\276v\377\325\2754}\304\275\025\276\037>\265\216$\276\370\200R\275\021Lu\274\2332/\275b\226R\275\3175^=\233\\e\275~\260\2159s\317\336\275R\367\372=\362Z\266\275\201 >>\204,\353=(\024\n\276)\373\244={\314\032\276\235v\254\275\177K \276N\370/\276\314\001*\276\364\275\237=\300\254\317\275c\267K<la8>=y\314=\332\031\202\275\330\200\327=\231\203\340\275\316\004\002>Y&\215=\206\242$\276\215\r\311\272B\373\343<\323\033\216=xR\216=\351\002E=s\016\374=\035\315\312\273\026D-\274\3659\026=8\014\267<\223k?=P1\343=\000\352\031\276\016\242:\276\3429\031\276\003\271\302\275\350\366\214\275\254\345%\276\376\n\027\274r\355\t\275\216\n\006\276`\202\031\2758\013b\275\306b6\276\273T:=\022<\361\2750\214+\276+M\251\275v`\264\275\250e@\276\000\0166\274\331\\~\275\303\224\354=P\344\304=H\360\335=W\340\325\274\220C.>\334N\200\274\265\200\375=n\240\024\276#\217\244=\212V#\275h\333\006>\3707\227\275(l\227\2755\274\356=?d\013>\273\330T\275\337H%=\263\311\033\276\325\'\226\273\374\237\021=\036\377\372;\345%\251\275\366\314\372=\005j\242<TX\226=\376\374\267\274\347\210\031\276\034\345\237\275\230\214\001>f\202\372=\205D\002>o\202\247=\231\300\272\275\277\211\304=|\035\007\276\203D\313\274\276\025\212\275\234\235\003\276\017\240\016=\320\265\252=\232r<\275J\000\374\275f\372\022>\337j\r\276M\317c\274(\257\267\275\202\026Z=\351c9\275\032\357T\274\304\215\002\276\204+&;\335\335\321\275d\261\225\274\366U\020\276\001$\257\275u~\025\2762\215\356\2759\301\352=\230 \337\271;\224,;Bl\206=n\262|=X\362\333\272\337\264\023\2767!\002>C\020O\274\323\232o=\323\310\013\276~\216\032\276\205}\014=\333|\202\274^/\202=\027g\004\276\311=\'=\214\013\000\276J\005\262<\355h\255\275\n\305q=\277[\262=\007\205B\2766S\003\275Kr\320;V,a\275\336$ \276)\254\234=\300C:>\245k\r>\315}\341=\201\030\031\276\235G\022>\234\\;\275\"L\266\274>\2052>\232\217\273\275\301\n$<W\261\316=\203P\005>\203\225\267\274\223\020\347<\330!\001>\233\3730>#\336\252\274\006\223\371<*t\231=\220\204\264\274\024\331\033=\272U\036\276\204\010\001<\310\221 =O\205\275\273\r.\004\276\224H\336=P\2075\273pA\334\275\301\007\036\275n\235:\276\247Y\313\2757!\030\273\332\316\301\275\362\025)>\232\n*=\034\254\026>\317\3040>\306=\370=\360\227\020>\222r\361\275\262\312\361=\2375~=\250\031\316\275\036L\372:\237X%\276\323\260\264\274\003\227W=\3219\225\275\036\371\254=\244ru=\313\331\223=`\213\014\275\366rL\275\254\350\257=\235\360!\275a\202\246=\003\022@\275e\316]\275L>w=c\003\027>YZ\245=6\225\023\274\002R\237\275\341\n\317\274\324w->\320\031\315=<\023\226=8\034\200\275p\276\356=0|\201\275H\363\307<r0>\276~D\000\276\201-\254<\233#\204\275\265\225\026\275\212;k\275\265\317\035\276\312k\264<\026(\320=A\364\002=\330[\305<9\007\340\275\367|l=\254\344\032<mv\240=\272\213\360;\244\177\027\274f\020V\275\260\206\036=\262\2544\275\3122\213=\026$(\276Lr@\276\030\027@\275M_\311\273V/\322=\231:\'\275\2642\362\274\320-\014\276\236\027\346=\272 \002\276:\310[=c\302\314<\311\367\034\276\255\217\211=y\020v\2758\376\300=}S\237<\253\225z\274\361\300;>D\230\t\275j\376\030\275\3545@\275\0044\232\275\021\023\235\275\217\203\233=\373\341G=\232[B>$\017q9\201\033I<\312F\n\276\356\372)\276\036\337(>\335V\'>\371\036\214\275\320\351\223\275,\202\227=\022\177O=\347/K;\242`\230\275\351\344C\276\276M>\276b\306\367\275\201\273\026\27503\302\275]\366&>O8\255\275\244\256\">\201\237\224<S2\007>=\310\274\275\265^\331<\233\317/\275\320\323\340\275\376u\276\275\034j0>\271&\023>\304\230?\275>@\225<\340o\257\275%\372\307=\207\220\343\273x\214G<\310\006\312=\365>y=\367\340\351=L\337#\276\240\014\t\275\256\210\346\275/\205(\276\022\3379\273\241d\246\275\253.\220=>\203\035\276\222\231\357\275\247\242&>w[\214\2750Q\016\276\344>\013>;\302*\275{c\002\275\334\206\320\275\300\2457\275{Z\010\276\014\366B\275h\324\271=\212\220\034\276\3444\256\274M\035,\276\031\207\031=e\344\377\275\240\016C>v5\013>\213\016\245\275\232\376$\276d]\257=\313\254\031\276\306\031\325=3H\020\275\344\347\275\275@\335\330=\346\021g=\246z\023>fx\315=\214\255\275=\316T\031\276`\367\251=\023\252+>A\224e=\242)\325\275.4\204=\230`\"\275F\352\351\275\302\r\362={\025\243\275\334\030 \2762k\210=\261\226\336=\307\336&\276\030\000\300=xV\014\276E\036\023>Rb\365\273\267\343\266=k\240\266<D\335\332=\346\206\373\273\253<\004=\nq@\276\345\270q\274\322\333\305\275G\347\340\275\037\r\217\275\202\217\266=?\010[=\231\273\306<+\037<\276\374\254\220\275\307\377\266=Y:}<\246\321\361:\356\244h\274m\030P=\232\214\335\2756\360+>\226\351\234=\242U\210\275Z\302\006=\231\331\n\275\373\2134=\265B\021>vr\017:\310\246\354=\254\204]=\362^!\276\371\230\005=\305\3619=x\272\177=$\"\310=.\237\246=D\250\372\274kY\262\275\250\024\371=\001\2537=\037\356b\274\033\021\352\275\213\034\000\276\362\332+\275\261\2451=\002\251~\275\305\260\242=\232y\303\274\256\302]=\004\236\036>\301\342\010\2768\373O\275\327\367\221=\374 \021>\264O\224\275\266\240\341<_W\035\276\336\315\013>\2660\021>DF\266=\036{\024\276_D\373\273/p\256=\213\014\\\275\2723\275=\342\263\031>\364\330\004>\031\317\007\276\226Z\240;\212(\013\276Vk/\275\252\005\324\274\252\206\370=\310g\r\276rQM\274\344\307\236\2751\'\367=c\364w\275\306\260\033\276\313j\266\275p\2113\276\217$\222<\327i\n>[\332.=\314G\267\275Z\305\031>\307B\346=G\247\274=]\225\026\275f\340\204=`[\004>=\231\n>\264\270\016\275b\350\352\275\205\222\206\275\2345\037>\322\312\370=\321\316x=W\021==\276P\241\273B\273\314\275Xu\250=\273\204\321\275\277\307\r\275y\352=\275\340\343}\275\366\204\303= i\347;\000)\233\275\250#\207=\270@,>\003\206\371\275\333\244K\275\256\275\276\275\310\235\036>L\030\266=\232\230B\276\276C\027>8 p\274\253z\273\275\005<\206\275\263\270->%\367\225=\201R\316=\036\251\205\275\304\302\313<\034\220\307=\312[\030<qU\201=\236y\002>\266I$>}\037q=\234\374\t>\255M\276=MJ5\276\\c\363;)W\'\276\257T*=!\316\002>\351\277\274\275\313Kg\275*\324\004\276\252\256\003>\316F\304\273:q\360\275\304o\302\274\004\336\320\275\000\337\327\2758\320\341\275:Z\204\274!z8<\354m,\276\317\271C\276]\257\242\275u\t\230<\347Q\240\274\243#\313=\341I\313\274\245C\233;e\226\'\275\002r\037=G\326\363=\032\232\221\275\2024\267=\340Y\301=2\223\034\276C\253\357\274\004\347\234:\035\220\016\276{W;>\321!,\276\236i\237<\263\312$=\233\013F<\024q\231=\303U\335<\320\310\t\275\276l:>4\000\270\275\2565Y\275\231\355\003\276\267\223\265\275\340\007\037\276\333F\230\275}\331\365\275E\301\357=\2351\362=\322S\332=\016\306/\2765\n\014>[\034\000\276\322\324\356\274\313s\276\275ac\t\276\024\314\320\275\366\244\223\275\316\026\000\275\361\024\330\275\251\216\023\276\231\013\376\2754T-\276\312\333\326<\004u\214\275\360\016\t>\r\366\236=\240\255\302\275\211\352)>m\204n=N\3224=\241<\341=ID\345\275\311X\367\275,T\303\275$@\002\276m\213\027>\257\237\257=\366@\035\275\204\314\247=\237\337\336=\214\344u\273\242n\261=\352A\005>X,%\274q%\010=mq\244\275\374\375h=\216k\217=pC:\275C\275\306\275\006y\207<0f\332\275o\3713\276\2332\325\275\260\324(>~\2712=\374@\006\274\2453\016\276\365\026\023\276h\214\313<\027\322\347=\3372\305=\203\004\007\276\221\267l<x5\032>\000\301\004>y\036?=/\305\236=n\372\206\2756\364\255;\315\272\300\273H\336\010>L\024n\275R\357\342=U\204\370=G\024y\274\320b\376\275\202\006 \275Q\366c=\212B\211=~4\370<\3205\237:\264V\330\275\327L\017\276P\\\204\274\224\000\033>\273\253\266\275\304k\314=\253\t\302=|M\211=\023ME=b\203\010\274i\236\255=\250\tJ\275N\321)\276a\344\243<zG\027\275\337\237\225=\375%#=\305\254\036>\236\321\013=~-\342=\344\261\033>J\013\010>\346\014\303=\256\005^<\000\357\300\274\036K&\276\266y\220=\204\251:>\336i+\275\000\272\313\275K\366\010>\260\303*\276\224u\027\276\311%\005>\217\364(>\260\201&\276_\357X\274\351\270\210=KP\236\275\214=s=_\255/\276pS\335=\302)\r\276\314\277\275\275\327Z\'\276\006\240%\276\230\302\351=\373/\247<\025\207\020\2768\2779>\241\205}=h\263*>\372\305\304<\212\350\307=\014\262(>>F\274\274\346f,>\305\327\217\275=\237\353=-m\203\275\004\271\320\275\3420\327=\216\367\000\2760R\225\275\374A(\276\\\216.\274mD\303<\017\'\034>i\243\000\276n_\353\274\024%\210=\363\016T\27443\024>\204\373\'\276\210\346p\275\303m\n>\323Y\212\274U\353\354=m`\333<\232\'1\276o\262\310=y\332\027>x>+>#\316\237=\366%\210=m,\240=)%a\275\334\244\220\274\3604\325=\234\244\005\276\333\211\336=\254\365C=C0\205=\3646\271\273\362v\006>VT^\275\313\322\251<L\247\003\276T\313\014\276F\370\016>r\242!\276`v\355\275\271fd={\362Y\275\177]\300=\304\025\352<\377\002F=\351\262\356:\0031\346=Z?\314\275\201\tg=\374\006\314\273\211<b:\"\307\372\275\301S\247\275\033\347v=~\233e\274G\330\026\276e8\346<\335w?=\224\336\246=\317\213\316=\000\344\317<\232c2\275\342\367\234=y\365C\276\310\260\345\275\324L\202\274Z\220?\274\264\305\275\2750\'\251<T\023\325=5R<\275uwT\275\200\025\372\275p?\002>\343\022\027\276\002\274\226<2\320\217=\361\255\351<\224Q\273\275\010\'7\276ew\205\274\036\250\r\276\003\277\'\276\233\315\022>\317q\270\275&\312\374\275\001\360\002>\334\303\016\276\273\362%\274\311Pd<\335Q\214=~=.>\276\314%\276\275\236P\274,\363\n\276\205d9\276\250\224\256\275#\347\t>\232Z\242=L\035->\376R\217\275?\272\026=\376\257 \275\213\342\347\274\016\364\'\275\033\277R=\364\233\306=/\225\212\275\241\233\214\275\204\213\351=\310\362\240\275\\\r\001>\244+\027\276\206O\033\276]\020C<\005\031\261\275\t\013\252\275\234\304>\274w\240\271=\356\r&\275&\206\023>L\r\221=s\362\232=\336\364\024>\262\271\232=\355\305\221=\351x\357\274p\321v=\211t\002\276\311I\353\275\350$\014\276\254\350v\275>\217\027>\353\251\023=\270}y\275\316i#\276\371\007\375\275\354,a:\005w\313=\242\300\374=\364_a\274(\373}\273\351\274\274\274?\201\364\273X\331\037<a5T=!\207\004>\255wa=(\222-=\203\234)=\275d\302<\331\316\301\274M\203\204\275-\222\010\2755I\226=|\305@\276\360\0048>\232\223,\276\0247\265\275O\370\327:\216\n\236\274\3200\r\276E\000\265=J\374\000\276\361I\t=\272Z(\275\364@\305\275)1\327=\003\200\037>\243=\331=\265\001)>\226f\316=L\002\256=h]\375=\326\265\201\275\372\307\375\275c\025\312=\223\211\037>Q!\033\276+\370(<\212P\376\274\245\363x=\275\260w=\243\215h=)\315\220\275\371\343\246\275\317*E=\252\014\200\275\323\312\202\275\254\025\034=\243\337\025\276\326\314\325\275>@\356\275\227\316?\275\346\235\032>S1\253=\370m\353=M\345\254=m\323\240=M\347\255=1\004\241\275\013\376\037=\n+\257=-\300\006>\244\023\323=0B\375;\254\364\000<\363\037\265\275Z\331\272=\020\247\006\276\214~\227=\272=*\276\223z\377=\255\307\026>\303\272\300\275\375\"h=\344\346\023>\213\367\351\275\237iB\275T\035\254=\355z_=\025Y\203\275\250\230\022\275\010@\317\275\267\217\034\274S\216\024\276\332\313\002\275\001\"\373=\371\371\303\2757\252]=\344T\237=m\337\310=k\345\333=4\022\255=\327E\326;F\037\203\275\300d\024>\034\232\270\275\374y\352=\n\306\321<\232\201i<\"y\323\275\313\257\036=\304\016\261=\330|\216=`\377E>\2665\373\275\"/\356\275\302y\365\275_\244#\276\226\347\206\275\212\347!>\025k\">\304\344\021>\342;*\275\270~\265=M*7>\375T\224=`\277\030\276[\324\256\275z\363\226\275\366\r\217\275\364`\371\275G\357Q\275\361v\252\275\265\356\005>A\302\031>w92\276\263=\337\274\273\203\004=\031\222b\275^\037\007\275\324P,\275\251\225\000\2767k\373\275q\241$\274\335\312$\2769\261\n>\177\227\240=`\004\363\274ZJ\341\275\177\0060\276\2249\347\274<\367@>\022\322\362=\355\034E<\034\330z=\334\371\n=\233\265[=8\037\326=n>\000\273-&\302=\342\2603\276\346%\031>3s\244=\212\266\342=\303g\202\275\362S*\276#o\301\275\375\253\363\275D\026\031\276\272\216\232\274\2365\022\276\303\267==*\231\217<\334\375\324=\367l\233=\332\221\036\274\311S\267=tLF=\345\337\035\275w25\276\355H\351=^C@\276S)\247=\342\3734=\262\237\264<\273\276\023\276<W\334=\263#\r\276\256\026\013>\242\262\005>\364\2562=\265uN\275\007\313\005\276\220\006)\276\344\020=\275\236!\007\276\303\271\033<\305X\023\2766\264\367<\2169\257=Gc<\276\030\233\321=l\333\362=t\366U<\276d2>\351\314\024>\236P\353\275\262\254\r\275p\203\221=\272 \311=\350r<=\244t\337=\014\033b\275\323M\031\276\r\334]=ft\200<\340\363\255\273]/\007\276\304\262\265\275&\226\254<{\214/<\320\333\023=\243\331\246\272\323\326\273=\267\331\017=^\257P\275\301\263\216\274\264\264)\276\001\352d=\340\022\024\275b\304_\275\030\251\347=\242\334\332\274\351^\261=K\335\n\276\341\260\321\275\372\035\231=\240\337\036=\251\322E\275\020\331|<[Y\213\275\244\007\303\275\207\002\215\275c}\247=\255*\r>\373>\372\275\231\r)>D\320\226<P\013z\275\234\223\357\275o\3177>\271*\"\2765\263\250=\302;\326\275\322\214/\276k\374s\275\353\314\351\275\030\336\240;\2337\211\275\3241@\276\217-B\274.)\203\275\036\310H\275*%\001>\226\0301\275/2\340\275\210\301\326=$\240\032\276\347\356m\274T3\337\275\024\233\216=\375\003\370\275`\022\302=l\275l=0\024\010\276\240\351\271\275*\217X=\376\363\030>?1\300=\331\234\"\276\203#\211\275x\207\030\276\250\212>>Y\264\306\274\362Z\016\276^)j\274\'DR=\367N~=\214I_=\177,\024>#\017\271\275\333<\026>\026P\016>5\235\225\275\331\235\331=\2611\006>\2234\016>3\202\031>\252\265\303==\251\257\275\2132\025\2761\353\367\275\245\360\345=\030\206\023\276\031\027\313<~C\335\275\2459\357=vV\372\275\362\337\005>\255\244\026\275j\252\206=\024^\t=\261\037C=\307R \276\273hp=\205\314\003=S\325\300=5\'\310\275\004\202\257<V;\201:\023\356#\276\371\244\266={\3470\276\300\342\225=7\375\377=Y\206b;\370\3638=\206&\373=\220\222I\275\216\343\035\276\024N/\276\001\352\267\274\355lm\273)<\345\274\360\377\177\274e\341\251=\270\317\004>\355|\013<\272-#>\206\220\352=\344\261\005=\350\354\223\275\322\316\021\276F\255v\275\177\276\342\275\004\276\303=Z?\035\276\010\323\035>\031a\345=\030\036\216<\245\343\364\275]\265\237\275\262\241\224=\210\2632\276>#\243\275{N\031=\342\3731\274\244\346;\276\322\006\322\275\3039\222=1\360M\274\314W\214=!\311\024\275\313\3740>@%\035\276\027\343\205=\231H\260=\337)\354\275\222a\367\275\304E\013>y\203\320\275\024\003\210=\311\245\035\276\265\'\033>T\217\001>\311q2\276aYi\275\227\000\206<!D\376=qz\325\274\322\247\337<\277\031\241=\\\312$>\3412\372\275\246\231(>\327p\005\276\315\021\335\275\243K\241=D\234\326=\363Q\031<\272(\035\276\034c)>\205\243\027>\232\237\244=U\210\313\275Nk\t>\331,\214\273uQ\016>o\244\330\275k\031\231=w\314\">o\010\242=8r\024>\307\275<\275l8;\275\357\025\266\275]\004\237=\340\215{\275Cj\266\274\200D\373\275q\007\365\275$\342\367<K\2033=w\350\027>:\244\017>B\210\376=\013g\305=\310\253Q\275nu\n\274)f\207=Oc\013\276)\231\257=\231_-\276\377!\235\275\350l\033\276K:;\276\377\036<\275\033:9>\350vf\271Uo\300\275){\311\274*\257\246\275w?\300=\352\020\'>\317\374c=G,\333;jA\351<\273\231\006\276\331\351\234\275\374\315f\2752M\242=\306\017\025\2764\374\333\275\262\272U\274Sv\341<N\376\327\274Pd\016>m\030\333=}H\023\276I\030\234<`\226\312=\310/\027>C\327\323<[\213\036\276\242k|\275\3421y;\277\370-\274\022\354\027\276\246\207\222=br\005>i\265\322=\006\330\334=,\037\321\275;\377\241\274&\334\363=\370*\307\274\256\346\245=\365\377p\275F\214\327\275\376\225\000>\254U,=\037,\352\275\353\376V=)\353%\276\367\275\'>\250\214\340=\271\340.\276\264:\255=\321r\210=F\241\001>\312\232n=\201\363\201\275\353\332/>\034\031\320\274\027gV\275h\332=\274h=\036>\033\366\026\276\354\227\227=I\312u\275\0353<=\216\321\363\274\212}\017=\234\255&=_\202h\275\032%\020\276x %<\231\2602>~\024+>\265\340\327\275\3550\371\275;\200O\275\276\347\030=\306\003\340=k\212\220\274\303f\235\275\326a\263=\"\231F\274\240U\222=\022\247B<K\210D=\207\341\236\275v@%\276\377\323\031\276\330V\271\275>\205\255=\220\335\222<\267\305\002\275#\364\n\275\275\013&\276\016\212\177\275\324P1\275\273\3556\2768\221\033=\006\270\237=H@_<\342X`\275\301\372\242=\005\265\222\275\304\017\366\274\263L\352\275\375y\373=\023\311B=\375\334m\275\251hL\274{W{\275\217\0052>\341m$\276\262Q\230\275\177m\007\276\232\335\270\274\322\307\215<\344\001\020\275\\\320\021>\364\0048\276$\314\224\274*\345\375\274(\032\035=\273ru\274\234$\033\276\026\214\030\276\262\222\211\275\300\311\215=Y$&>\034[\345=\221U\365\275\366.+>\325h\344=l\341\036\276\302UZ=+R\305<X\213G\274\274\342\005=SHp\275\356\326\020>\363\233\004>\227\227\263=g\026\022\275\3128\345\274\300\032#\276\250G\260\275\264\303r\273n7v=:\304\217<n]6>\326/\305\275T\204c\275i\230\204\275\370\021\003\276\006\326\310\275\027r\035=\343\033\240\274\005\026\244=\273-\341=\014\014\273\275\027\310,\276\361\236\010\276\336\0165\276\030n\021\274v/\221=\240\331\220=\362\235`=24\356=h\355\215\275\323=\016>\303a\002>\001\352\027>\027\312\324=\306\347P\274GI,>\320m\214=\344\204\362=0\223\360\275b\355g=\275\324?\276l\330)\2764\272R<Pl\324=\010d\247=3\353%>\274M\202=v\363\317;\017\2563\275\256\351#\276\224~\210=QP\022>\347\245\360=\220\014\t>\301\314\241\275nn\200\2752\357\r=Z\376\210<l\351\351=D\305\"\275\n\r3\275J\356\003>\335vA=\275KN\275\257\016\245=x&\215=\257d\257=\235\334\t\276\350\320\022\276gF[\275T\006\206\275\027\306\374\275\013\217l\274MC\334=a\340\375\274\303\312\022\276\355\261\255=\tr\241:\t\005\313\275\356\262\303\274`\252\003\276\001\266\333\275p\030Y=/\234\023>\305;\366=\366\275\222=\344]\211=\373\215\035>\0230#>YM\202\2757:\256=\"T\020\275DV\355\275\246\227Q\275\004\315\263=N@\247\274r\272\253\2757\365\022\276\345I\301\274\301?G\276\256\221E>\323@3\276\317\372%\276\320_M\275f\253X\275\231\251\276=p3%\276g\324\333=Z\034\036>7\251\270\275\002\024j=\366\364\034>\231d.\276\272\2510>\\\nD\275\212\263\235=\367\'\302=\347\260\013\276\245\353F=>\240`\275]\356\037>\3712d<\177@\036\276\200J\202<W9\302=\213\345\362;6\366\\=\330\316\240=\374\323\016\276\332B\024\273C\317H\276+\233\345=\320\256\233=\221\032\237\275\000\245R;\025\306\000\2761\252p\275\034/#\276\260\337/=\302\3559\275\224\346g=Fi\026>\201\305\316;\271\351\317\275L\020\372<v\241u=\033R\213\274\016\206\331\274t\010\030\274\364%\306=\002\324\370\275\210j?\276\314f\271=wo2=r\032\n\275c\372\037\276\276\331\221<\221I\323\275\013\300\256\2745d\210\275\340\332\266=k\324\252<\244sF\276-e\226\275l\364\367<_v\263<\350\263\302=\263\363A\276\344|\016\276_^\330=>\005*>\301\022\321\275\216L\353=+7\266<\277\200E=*b\233\275\330\303#\276\221Gb\274T\341\314\275\341\035\316=\002\236\364\275\260r\000\276\3133\323=\262%N\274\031\267\007>\020\003F\276\307$\265\275\260-r=\004\022\026>v\202\270\275G\004$\276\361\005\325\275@\375\247;:\207\235;`\305\316=\236\270:\275;\255\253\275\366\307\304<\317\\\224<\023\252\354<\376\314\355<\211/\311<\203\257\000\276q\203r=H\005:\276Sj\254\275\031A\305\275:\363\302\274\322^\007<\346\336\214<\374}\005>\337\372\343\275|0j\275K\003\355\274j\025\306<\357\355c=,-\354\275\332{\021>EC\301\274)KE\276Mup=*\366\265\275\276\303F>\315\315\352=\n~\376\275\352\364Q<\037\323\336\275\367\365>\276\306(\022\276\'\375\264=\201\002\243\274]1\036\276\352\377\256\275\2467\261\274P\030.\273B\223_\2741Y\'\274\017\377\223\275\256<\371=\240\022\217\274\026\257F=2\301\202;\371\317\210<*M\271=b{\r\2741\014\003>\374\221\306\275\226\235\025>G\213\201<7J\035\276\377\256\201=Fi\n\276\034\234\351\275\246\240\330\275\243b\230\275D)\323=5_\003>M\035\250\275+!\351<\205\225\372=\270\001\000\276_\305\355\275\311\010\211\275\377cp\274z\364\272<JB\353\275\003\302\362\27310\370\2751tN\275\252\223\331=,wM=\023\323\016>\024G\337;\336\343\255\275\262\257\035>\376\364\253<\265\357\010>\363\331\224\274\250\266\210\274:e\211\275\335\272\001\276\242`M\274\373\307\332;\325\265\201=Ss\314\275\315\343\\=sI3\276\313\260\237\275t\305\013>\032\265\204\275X~\260\274\225\347\007\276\312}\n>\321\247\030\276\rK\034\276C/\214\275{$#\276\'\315/>\256$;>y<\014\276\236&\n<\235.\313=#\316\017\276_X\200=B@\310\275\233B\270=\242\323]\275z\323\'\276\377q\317\275\250\r\236<\266\335\024>\346\317\252\275?X\362=hR\025>\3700\030\276\217\224\203\27588S=t\'\255=\\\026\223\275\375\235\006>A\267\237\274\227f\341<\320\237\336\275\025\024&\275\375\226\036<\360\213[\274\353Q\302\275\315l3\276\340\277\007\276\227\036\001=&=\333=i\346\327\275\016M\277\275\243\250\254\275o98>{\213e==\027E=\030\341\315\275B\236\016>\205\252J\275w\263\301\27410\360=}\360\255\275\356 i:\347}\370=}\022\211\275X\235\374\273\263j\202\275q\321B\275\304\237\304=\305\331*>$x\001\276\275\303\334=\022\t~\273X\310\"=\021\344\026\276\266-\213=A\271)\276\324\305\212=c\212\004\276sG\267\275\322\346:>\014\230\203\275e\307:\276\030m\010>\272\2411\276\313w\026>\033D\237\275L{\244<\3602\033\276F\216D=A\340h=\003e\032>\242\213\347=\225\207\035=\035\215===\252\021\276\202Ln;\326f\264\273L\030\247\274\305\351-=\245x3\276T\264\204\275FJ\006\272!p\267\275\310\2073<Ci\225<\257\352(\275\237*\274<\234\256\017>6v\264\275^\217\227=\"\354K\275\313\025\004>\210f5=\323%A\275]\361\310\274\377\245\305=\373\205\010>2\301\341\275\347\214\032>5\340\035\276F\314\313\275\3450\273\275\374\214f=\331\347;\276\007]<\275\327\372\n>(\027\257\274e%\260=C\204\'>@\223\262=\331_\016\276D\"\004=X\375\022\276\304\264\271\275.|\023>\203\367\335\275 (`\272\321>\361=U\213\032\276\357,>=\366\271>\276\313\364\214\275\t\256\243=YM\377<O_\356\275\366\363U=\226\t\030\276\243\200\303=\t$\212\275\210/\244=O\244\006\276\357\245\036>\021\250\315=D\345\272\275\370\343\032>\360\366e\275\377\204\326=>\202\n>D\221\207\274\004(\240=Y2p\275-O\213=F\370\301\274\306\224\306\275\331q\240=_c\341\2754h%>`\350\237=\'\2005>\362\265(>\263\002\361\275eI\r>:9\003>\370e\217<\217/\023<\346\021\034\276\014m\367\275\376\020\244\272\350\332\037\274\255\211\036>x\370\221\275\361\322\374\275\033{\245\275\203\025\352=\3700\"\276^\320\020>y\262@\276\256\351\013>\377\177-\276\321\370>=J\241\023\275^0\002\275\214\236\321\275K\377\332=|\3237\276\003\353\336\274\306\016\035>\371X-\275\252\214\325=\0275\025>\336\223\016\274\343\317\024>\242\326\034>\216^\355\275\362u)=\177\031\234\273\322\367\n\276\326\020\230\2742\321\372=\033\322\364=\032\233\331;D\357`\274 ?\351\274C \346\274\335\r\022>\340\2133>\346\332.=\340#n<~\265E<\2458\200:\002\2119\2760\367\030\276L\214#\276(\254\025>\025A\324=T\333>=\272\351/\276L\350\206;-\035\014>gZ8\274\376j\025\275E\347\205\275J\005k\274\2075\024\276\223 +>>\374\301\275U\177\365=\332\356\'\276\313\014\037>\202\266\001>\320Z\232=\010\337\032>\230S\315\275x\035?=\253y\234\275|\212>\276\266Cm:Q\017\310\275\244Ny\273>\017\024>\251]\022\275j\311\037>\316\003z\274\252\016\247<\316y\022>\212\032;>\312*\250\274>o5\276\240\270p\274x\216\241=\177\322\243=SV\227\274\363m\244=\342z:>~\270\007\275\270f,\276=|\276=\031\361I:\002W\002>\305\336\320\274$\001\373\275\341\264\001>\330e\355=\006\210\013>t*\">\347\371\226\274+\005j\275\336=[=-\251(\276\313\201\r\275\326\300\235\275\337\004\025>t{\037\276\223\245\003>?04\276D\\\003\276\277\2752=\333:^\275y\367(>\246\2254\273e\256\337<\252\031I>\374\3439\275+\357m=\320U\247\2748C\356\275F\272\036>\315\230\336=r3\311=\235W\217\275\271\3340>A\301\210<4]*\276\245v\030=\313$\353\2755\374\323\274\214\3721\273\244\222,\275\344\014\013\274\246\253\';\336d#\276\'\332\031\276j\024\021\275\245K\341=\352\254\255\275\360p\004\275\315\332\014<U\017\221=\025\212\320<\340:\026=\243w\226=\250\000\321\275~\332\326\275\214L>=\236\"\265=Zj\345=\205\034\014>\334\377{=K\364\256\2750\232\'\2758\"\230;\022\251\020=\215x\305=;\202\263\275@\367\013>\322\261\277\275\362x\334<\265\016\017\276\242\321\014\276\226\270D\275\274\033\324\274\003\363\202\275\310\242\253<\\\203\006<<\000\322=\342qM=\355\200\353=\006\241\311\275Q\231\271\275\315GI=\232R.>\024\364\247\275\006\367\013=Ea\242\275\327\230\024\276\275\024\274\275\316\026\357\275\021+2=\033g0>p\026\213=7\2627\276\2763\232\275\313\353P\275\347\036>\276\260\314\245=\3611\253\275\022\316g=\262\274\217=\023\275b\274\246\317\310\275\354\330\332\275\366tM=s\177,>\245S\213<\311\206\025\276\344\024\016\276D\302\246=\324\237\346=\010\026\004\276\245\'\263\275\256\330@\275\354\202\340\275W\233/\276\030\360\217\274\320ce\275d\202\037>\260\004\325<d\305A\276cY1>\267\0238\275\177\003\336\275\307Y\r=\306\224{\275_\261\224=j8\203\275Y\356*\275\222\r\023\276\223\271\306\275|\016\006\276\207\223\'\275[\024@=\340\256\305\274\274a\305\2752\223\226=2,;;9`\375\275\247i\007>6\275\306=\270\254p=\016(3<%h<>%Z\020\276\2508\021>7\276:=\262+\014\2760ef;\302\313~=~r\360=\321\305\204=\220As=!\202\007>\263ab=\327\357P\273\005\270\004\276\316\366\025>\030\0035=]\350\\=hX\203\274-9\272\274\255]\235\275s\223\016\276\220\366}\275\023\t\251=\252\246\314\2756\233\r=\224w\355\275\014\361\332=\023\302\315<e\004\013=\332+Z\275\020\300\213=\021\337\016\276PH\261\275^\3013\276\317\323.=Q\321\343\275Y6\222\274?\007z<\364\225\310\275h\243&\276\271/\">x\352/>\335\265\037\276:\207\205\275\253\364\005>\016E\347\275\336\357s\275\235C\304\275\304\254\271\275H\267\"\276\312}x\275\371$\256=\020j\312<5\004%=Z\025\370<\271E\037>\373\276\256=j\300\317\273\377\265,>\261\250\035=\220Q\002<X:\r>\214\267i\275\310{\362<\331)\260=U$\230\275\276\323\364\275\231~\365\275\254\260,<\313\010\216\275Kp\322\275\260\243\035\276_[\307\275\217P\337<;3\000\276\177\221\312\275WRN\275f\313\373\275\360u1\276A\361\310\275\364\213\262=\2033\362\275r\352Z\274\370\216t=-\346\251=fu\224=\037\026\022>\'_\301=\033x\343=\340\324q=\0163\263\274\377H\013\275\343\031\356\275\346\216\010>\311$\003\274\245\224\207=\372\234\023>\342\032\365=\330\241\'>\277l>\276u\356\002\276\337\004\225=\321\342)\276\277B\031\276b\205\343=@\001\177<\202\313\030\275\201S+\276\204\224\364=\363\276\334=%\364|\275\355\'\301=!\311\003>\207\375\352\273\240$A=s\217\006>\2121\377\275\344\311\352<\334\344\367\274\374\211>\276\253\'\313=XD\001\276\234 \310=k\000\026>\202\025G=\216H\247\275\352D\252\275\277r+\276:{\242=4\251\032\276\236?\017=\006\275\200<\250\271\302=\037\324\235\275[\"\357\275\272\300v<E\220>>\277\0170=\036\351\340;\'i\363\275YS\017>>\240;\275\274\257\247=Br\003>\306\035\352=f\372T=\377S\365=\362\230\235\275N_y=\377\"\014>\374\r>=\243\265\033\2763\341\020>\"\3679\275p\241\325<\325w#\276@\016\365\275\3017\320=\257\251\227<\261\351\033\275^\335\334\274\253\364\037>\274\351\216=\341]\223\2741\303\013<\026\310\350\274E\327\010>\345\266\317=\t\026>>5z&\276\200a\367:\350\231|\275_o.>\235\216\215\275L\0142\2769l\211\274\363\325\030\275I\243\017>1\234\211<\342\250\225\275\215\200\"\276\254\205\352=C\350f\275\354\351\233\275\325\006\327\275\341\023\237\275\356\355\345=\341\372-\276>\355\235\274\245V$\276\262\365&=4\370\336<\272\267\023\275M\320\377<\373\205\r\2760\231\016\276\200P\236\274\016\216\036\276\245\005\353\274\237=\245\275S\316\372=\246\370\\\275\3236\264=r\267\003=f\216\334\274Av\232\274\255H*\276\020\371\211\275\273\344\237\274\312\316\341=\004\3064>\244~:\276+\347\230=\335C\343=\356\005\010\276\236\212Q=\334\031Z\275\361s\315=\027\n\216\2756G\320<\217\324\016\276\343:\364\274f\0000\276\276\323\242=g\324\000>\322=;\275\243\366\377<\003c\305\275\272(\272=z\253m\275\335\225\033=>)\342\275\017\230\006\275\363Y\336\275x&\206\2716\032/\276T\205\210\273l\323\315\275KY\305=@\205\323\273[A(\276\310u\027>\'N\021\276\345\271\010\275\0360\374\274\324:\200\274}\337\322=\320dc=\357}\271<C\272\026\276HV\017\276\272\200\363=\223\276\354\275\250\245\270\274x\255\325<\327\t1>\036\326\202=\222{\346<\270\005 \276QK!>Y\n\301\273\001\206\271\273\376\271\026>\316\341\030<`(\304\275\376\235\000\276\235G\317=Zr\236<\304,\353=i\002\266\275\226)\000\275\214\304\360\275\320\235C\276]\241!\276\022\357\037>\314y\256=\251xm\274\366\210_\275G\026\311\274\372{\030\276\251\266/\275\365K\007>\212\352;>\035\217\351\274\310\304\354=\207\330\367\275\016J2=\233Z\331=\264\265\313<\014|\000\276\177(7>\376\031\363\275\336\352\352=\213|\026<\313J\335\274\r8\235\275hy >\367\356 >\"\205\273=\367\253\026\2766\323\007>V\277+=\367\321\004\276\241\2755\275Z\316q\275@\2253\276B\267\344\274HE\014\276\275\030Q\275Q \345\274v;\325=)\204\037>\021;\350\275\363\305\361=\333~\367=\330#\031\276\206\253\305=\316J.\276\344-w=\354\237\005>Y\325\341\275\377-\243\275\262\220\305\274\346M\023>*\177\022\276\306\200\352=\236\362\377\275Ms=\276\301\341L<\336U\003>_\262\365=V\226\260=<J\366=}\0068\276F0\346=\277o\014>x\335\027>8\025\251\275\302\364\014>\222\003(\276\"\3203\27692w\275\027dF=.\017\215=`\331\267\274U_\361\275\013\226\201\272\007\262\371\275\025\251\373=\tV\036=\225\017\020\276\355L\347=j\261\202=\016Y \274\325\212\206=\312\375\322<Fy+>\322\331\010>b\271\254\275\030\355\025\276X\274\311=\271a\016\275bo\030>Av\361;\000~\275=^\317\226\275\016\215\331\275`g\371<\351H\276=\360t\002=\376A\352=;$\002\275su\331\275\216W\222= \224\t>\017\256\016>S\022\362\275\214D\034\275\2379d\275\006\251\336=\340\264\364\275v\207u\274+\214\r\276\217\0234>U$\223=22\365\275m7\030>\221\321\036>\016\355\210\275\314K \276\001J\276\275pg\311\273e\002\236<\310\025\201<E\007\370:\034\346\341\275\260d\t\276\271\267\014=f\303\236\273\"\022\207\275?}\031>W\344\227;K`\033<8S\252=U\341\300=\013V)>\td\332\275\033\262\247\275\274\304P=BR\251=\223;T=\004\312\270=\345i\311\275dG\200<\003\"\265<\013\204\363\275\022>d\274\3046\343;|\026\\=\035\300]<\3020A\274\204\"=\275U\357\247\274\223\255\022>\243W-\274\031\233\003>IE\010>\317{\274<\231\t7\275\034%\024>\234L3\275\362\272\324=\003\321\030>\371\335\365\275\205.8\273?u\377<\270\377\034=0\344\370<Z\217\n>(\301\332=\320;\017\276\210?\001>W`=\275\274\252\024\276\213O;\275\216\340\221\275\3439r=\243@\251\275\350#\025\276\327\360\024\276\240u7\274\243T\307\275\222I\274\275\346d\017\275\3537\315\274C\205\353=\216\311\023\275R\321\t=s\035\002>\265a\'=I\242\207<\304:,\276\216a\276=m\242\t\274\277\266\025>\204\223\016>n\232>\276d\2047\276\260W\241\275\rds=\271\2474>\307\352$>\2507\315\274\001\367\377=n\342\240\275\275\213<\276\226\223\014\275\222Qu\275t\000\266=\270\317\304<\225G\327=XB-\276,#\000>\007[\013\276\213rk\275\207\004\013\276\211\333%\276*Y\357<\313\377\036\276\020\251\205=\235R\347=f\265B\275R\301\274\275\030\022\352\274\037\2306=5\3630\275\266\3514<\035\277\302\275\275\344G=i*\203<\032\242\036\276\204u\276\274,{\300=$\242,>X\224?\275\205\010\004=\265\241\013\276\370A\021\276\347\331+>\364\267)\275\005\316\033>\373\312\007\276}\264\000\276\363\216\003>\353\333\217\275\314kn\275\360\020.=\210\300\351=\264\2619\275\331\331\317=\330\247\367\275\215\211+>\345\374\013>\360\277\210\275\027k\023\276\004\005f\275T\215 =\260v\006\276U\372r\275d\\\224\275\244\324\203=\305\232\220\273\370\005\263=\313I(>\021a\007\276\263\205\031>cU\006\276\036\270\301\274RC\345\274j\355\036=u\317\t\276\212\266\262\275_\325\327\275\365\374]\274\020\373d\271\216}8\276\323/\274<q\2447>\260\336X\273\252\033&>\201L\023> A\241\275\363\214==\316\336\214\275\305\212*\274\271m\222=\201k\253<g\2038\275\'\350\214\275\213.(>\036\231\311= ,\264=o3*>\373\270\340=D\224\016\276\001Z\035>\340\023\312\274\237\244\274\274]\253\326=\236\251\214=\266\253\207\275{e\026;\204\'\013>=\365\274=[\002\343=b&\321=\0163\334=\320\240\277\275!w\305\275\316\354\316=\276{\023>KS\236<\025?\001\275Kxu\275\236=\210=\236\210\364<\211\362\213=\265\353\242=\274\266\211;\201\307\270=\275X\233=S\021\020\276\242\352#==\275J\275\344\016!>\032\314m\275\356\322\325\275\373\211\335=Z\351\311;\371~\335=\037\261\255\274\312\300\347\275\243h\022\275\227\346\335=\002\0102=\265`\246\274e\340\020>V\346\260\275\252\233\310=e\347q\275\014\245i<\037\324\016\275\247\233\027>\377\344\006>\nsj<\3079\302=\214\346\350\274Y\364\022\275\246\324\233\275a!K\275\360\224&>\330V\236\275\2017\021>\353I\303\275\244\241\374<\326\337\312=\204\356D\273*\210\233=\333\010\035>\360\334\270<\2452\333\274\200\0306\276 \250\357\275\274\322\220\274?\250\037> \032\275\273\352L\271=\006\322\230=\001\204\016\275r\010\024\276\253\023&\276\251\326\035\275\001\367\035\276\202\031\030\276^\202\276=6\312\227\272-\0269\276R\337q\274=\211.\276\2344\276=<p\334=<+\341\275\225\"\274=}s\352<\236\320)\276\201\360M\275\242\210\353=T\367\211\273\246\274\205<?J\234=\273\245\007>\225\210H=u\346\020\276\244\247\323=\277b*\275\021d7=`\272\007\276\303\235\000>\255\200\006=\320\340f=\275`\036\276\322=\200<0\244\343<X\250\'=\261\337\320=\022#\324\275\266\"\314=\237H\r\276\226\212\032\276\312\247\371<\n\371\001\276)y\026>9UY=65\213\275t\005\002\2766\211\316=L\001H\275.\030\223\275\022b\365=\263\215\023=\332u\212=\344\352\271\275\262\2700>\263{\314<\250\335\243=\217\304\030\275+\006 \275\264\227\223=n\274\024\276\360\245\266=\\\276$\276\013r\032>\'\221\300\275\250=\223=+\213\035<\'b\272=\343n\r>\227\305\027\276{\344\262\274\214k\251\275fs?<zE\252=\n1\211=\270\256\261<\230\016\032\274\250C8=\374\362\215=E\264<\276\303\013\346\275\326\226\016\276\014\252\016>P\007\260\275P\205\205\275\243\317\021\276\326\\\326=\r\202\335\275PU\242\275\265i\024>\222\023P\274\264\356\241\273\037\340\355\275\370\346\246\275\247\307S\275`p\002>o\353\300\275Q\334\035=\372Vt\275\306\t\305=8+\345=\231\252\332\274N\212.>^X\247=\370\226\345\274\354\303*>\356\242\033\275\207\230/\275\010\034\031\276Y\213`=\312\347C=\310\212;=OA\010>\304}\221\274\254L\216\2750\345\252\274\305>\n\276{\253[\275\223\203U<\303\256^\2759\025\r>7CN=\316y\004\276\001\244\020=\212\'\r=\2530\245\275q;&>\305\236\026\276\n\304>=,\3121>\022J\272\274\302\323\031>\216,6=\002\001\374<\026\023\t>\326\354\366\274t\261\000\276\314g\375\275\305\335o<\206W\244<\250D$>\225\001$\276\345\353\327=\243\262\300\275\265l\334\275\331\205\365\275\246\033&=\3763+\276\206\217\364\275)\230!\276J\336)>\363\261P\275v\354$>\201z?>\270\267\335\274@\004\270;\031\367\373=\334\260\026>\025\262\332=\350\222t\2757\263j=+\274\204=$SL\2749\006:\276\230\2347=+\352!=l\033\272\275\316\315\250\275!\031\036\276\230\253<>\212\230Q=\024T8=\374\276\334\2741\001\023>\n\217\344=\301\014r\275\006\225\307=AP\031>%p\032\276rr\320<\265\360(>\010j\022=\362\3503=\203\303\n\2756\346q\275\350kD=\214S\004>v\001\"=a\035#\276 T\027<\234\330\271=\216D\364\274\232$\025>\302\300\211=A\014\333\275\267\274\246\274 \361\034=\027\3718\275\315\377\227\275\267\223\324=n\332a<O|\023>\322\212\314=\365\013\031>\3669\326\274\350\364\r\276*k\004>B\0165\276O}\"\276( \372=\341<\017\276O@\006>\212t.\276F\332\260\275\224\326\373\275\305\3467>\036\340\333\275\034\004\021\276\3723\027=\210\327\027=\350I\303< \354\341=\352\3651<\346{g;y\353\002>\363f$>\006\020?\276G\t3\276\001*\037\275/]\023\275^\013\346\275\004\223\037\276^\244\366=\304T\210\275t\265w\275gQ\370<,v\213\275\"\021\017>\035]\373\275\272[\264=\371#\203:oZ\004\276\262R.>\377\231%\276Nd|\274\\\366=<\223\371\t>\240\244!=!z\016=\331\267\376<\007\341\236=\345\326C=\355|\257=\330:D\275\301\334}\274m\376\217<\254t$>K3\237\275P\256\030>\215\000\337=\343|\326=\250\355V=\242A,>\244\'\035=\242;\005>\354\367C=\222\024\324=\236\303H\275\313\252N\275\341L\260=\245\206!>J|;\274\355\362]\275\370\314\003>\277j*\275\357-\217\275\373\253\013\275.\2762=\245\346o\274}E\246=\026\306\346\275\265\342\245=\305\344\021=KA\265;\354\277\304=\030e2\2761\"\374\274\362m)\276\t\232\242=0\344x\275\335\304u\275Q\225\367\273\tS.>_\206\206\273\036\006\211\275q\373#>\3015\316\2755\204\'>\371\023\016>\375X\206\275g\324\027\274\335T\t\275(WB\275\227\375\364\275\017+=<\033\035\367\274\226\307\343\275\007\206\312=o\345!=r\035O\275x\240m=\343\365\032>\204i6\276\366\231\271\2743/c<\206\314\213=\264\024\305=f<\300\275\336\205\327=\366z\304=\021\271I\273\354\270\271<w-\275\275\266>O=D\214\024>\312c\366\2758\323(\276\245\027\303\275\346P\013\276\311\232\235\275<v\325\275\315\267\350=N8\021>\271\014\333<\342\037\036>\014D\256\275\002\321`<\232\376\243=\246\242\255\274py\267=\010#\325\275\212\233\033\276\342$_\275_t\226\275^\343H=\3354\225\275\270$\231\275\032R&\276,/7>\t\277\302=v\200\271\275\313\330)\276s:N;\000=~\275\205\331\231<\224\3402\275EHt\275\356\027\n\276@i\303\275\351\277p\274.\337\037<8\000/>\270\212\023>%n\332\274\362B?\276\364ew=\221\3131\276B\003\021\276(b\030=\215.I\274\001;3>\332\222\026<.\244\026\276O\255<\275\342_\337=E\017\'\276\356t\036=J\324;\275\212A\307=v\030\010=\372\345\377=6a\n\276\271\240\032>\017\033\223\274\216-&>\207\335\262=\310\3779>\373[\r<\035,\010>\353D\204=^7$>\213\206\000=S\220\275=\302\352\035\275\373\330\241\274\361\'\020\276\271\366\213\272>\267W<jr\007\276v\356\357\274j\r\345<\252\373\020>\263\255\353\274\"\220\252=3\005\325=p\274\264=\250P\025\276\356\365\377\275\376\261\014\276u\203\337\275C@\313\275\024\214\247=\035:\277=_7`\275%\350\024\275\025\360\202\275\217\204W<\0270\352=.\373\234\274\tn\033>\274u\266=\364#\273=\235k2\275#\365\013>\211\341!>zT\217\275\230U\030>\001V\305\275f\372\036>\014k\372\274\210\010\210\275Hs\230\275\377\r\351=,\206\220<-\344t=@0\033\274\203\355g=\275\3640\276cC\271<v\010)\276\262$1>!N)>\325:\013>\331l\330\275\257\322\002>d\n\312<\006\351I;\356\031q=@\005*>{\367\'>\247\027\333=lsy\275\350\206e=r>\316\275\256\0172\275\260\250\263\271<\030~=\373\037\006\276\227\r\311\275\211\210T<\253\322\335=\221\364\357\275\220:\006\276\350\374\">]+\360=\001DB>\322C\245=\376\253\323\275\250B\377=\216\224\023\276Zw\023\276\353f\t>\212&t\2751\273\331<\333\207y\275G\304\263\275\002\271\375\275\376\212\216\275\242*\220=\2370>=\346\372(=\367+\322<\331\376\016=Z\343\336=\344\2031\276\347\305\262\274RHF\274\342.\360=\266R\217=O\357\010\276\245\354\323\275(\020\004>\313\331\330= \254\233\275pE\252\275\300\n.>\301\225\217=\324U\005\275\031\003\345=ni\216\275O\275\034\276l\202\372<\234Q\014\276\377\r\202\275\261\324\212=b\247\242\275@\013\312\275\256@\237\274\351I\217\274[*\344=\321\020\303\275*\220\027>U\366\351\275\277\2759<\227\021,\276V\2065\276W\221\213\274I\016\231\275\272CF\272;\363\305=\273\002\353\2756\r\001\275W[\277\275Jk\362\275\360\030\034>\325<\265\274F\"\235=\006\232\264=\263N\316\275jE\312=\232E\033\276x\250\376\275E\335\n\276\277d\216<\216)\260\275\330\376k\274\215\314\t>M*\002>\334\304\252\275\314q.>h\247\n\275\262\314\336\275FW<>\260\344\362=\335\277B<\253\221\343=\341\345\222\275\345XD>\207Ku\275\226\314\347\275\203\311\020>9\034\007>\022\032\000\276\224R\026=\331\355\276<\270\207\254\275\337}\t=Fh\376\275N\302\330=\261\342k\275Y\217X=\1778j<\347`9\275\364\2341=\np\336<m\313\270=\371\215\202=F0\216\274\'j\235\272\342\036\301\275\2211\200=\013\257,<@\330\326\275\rF\342=Ozs\275\333[\024\273\357n\017\276\201\325\000>\227\261\n\276\260\034\030\275\366\222T=\337\217\374=\027\305\017>\271~\016>M\374\n>\357\2736=\340\265(\275\222\032\310=\204\260\026>J\021\264;\361\311\014\276\010\022=\276\255\364Y=Dh\030\276~\340\227\275B\274\360=\"M\272=\"T\023>\341|\321=\306T6=\220\246\253=\321\355@\275\220s\262=\025]\262\275g\332Z=\243\2715=Ez\347=\022\\T=\262\213\017\276\272\033\263=d\370$\276\362^\316<\221\260\025>\265\021\r>fJ\213<\327\201\003=\226\265`=\026u\265\275\200`]\275\201\013\017>\230\226n=\305C\027\276P\r\003=\221\346\233=\006\256{=\242\355e:\035\005\016\276\301\313\216=\330:\035\276\3442\'\275\300\364\255\275@\342\027>\257\201\364<%g\035>E\220{=\221=\242\275\340C\246=\036\026\207\275\313\014\220\275\275I\216\275\360\201\264<\352\177\376=\0164\306\274xC\030=y\345\035>\227\210]\275\221w\247\275\006\253\034>\271\020\017>\247\244\204\274\372\2161=Ep\341;\227\007\221<\0341,>\203e\330:017\276A\014i<.\306\345\274\312\247\020\276 b\010\276\341\361\227\275-\"->m\037\354\275\241\271$>\211#0>]\340:\275\303-^<\026\344\316=/\351}=\337\246\375=8V\016\276\227\242\022\275+\016==\n\025\214\274\367A\366\275\200\020+>M\324\326\275\020\341\277\274\370k\272=9\000\005=@\241B\276V\251\334\275\305E\031=+\351\310=\200D\306<\376\341\202\2743\356=>\024}g=\224\351\3769\264\177\334=\031}*=6\026P=\001y\037\276\257\232\010>\257Z+>\305Rl\275\314\025\257=p4\007\276*D|\275\372\326\310\275sC\t\276\235S\271\275\311\010X\275\337\212\030\276\246\235\316\274\016i\031\275\315\254\217\275\232\303\022\275P%\033\276\274\301\356\274\350\323\342=\246\313\273<\366\312\r\275\226\217\035\276\223\252g\275\257z\037\276\241\310\224=\234b!\276\212r\341\275\037\244\025<b\200\031>\261\327\245=e#\364\275\244\255\016\275\226\276k<?\236\374\275q\220\336\275\200[\023>\266h\\\275)\361\303=*\301\006=p@\014>\233\3758\276\264\344%>)\242\335\275\335{\r\274\370\020p=\347R\014>\323\'\253=\024\030\035=F\346(;\021h\007>i\316\000>\354\200,=LF\005\276du\337\274\312\230\341=\266{\001>%\231\365=)\314\">\217\0369>\373\'\264<:\324^\272`\014\247\274L\323m=\007e\205\274\330\335>=\335\2730\275\255\246\003>$\352\266\275\307\000\331\275:\224\017\276\356\321\330\275\010\362T=\370&K\274?\270\034\2769\037\032>`a\004>6\327\002\273H\260\037>\260;\001\276\\\313\340=\201\007\274=`v\244<?j\005\276\274\321\220=\204\270\300<d\277\275=W\235t\275\332\342t\275\212\252\207=\013q\244< w\374=W-\016\276\222\331\034\273\350\350\026\276U\3015=\004\305\014>\362\206\257\275}\344\354\273H,\203;\254\313\322\271\257\255\235=R\251w=\354\033\361=\215\r\007>\266\r\330=\t\205\377<\004\270\027\276m\252V\274\230|\350=o\343\270;!\023\311=\225\366\017>\'\370\216=\214\274\020>\370\313\350=\234\300\363=\224\'#=\200b\220\275\033LV\275\314\335\254=\271\256\027>\344\002\205\275\237j3>R<\344\274+\221~\275\372\016\024\276\230\023\033>}8\365<%\002\026\276O\355\244\275Y\216\200\275\223\214\035=\032\312\277=\274\022\373=F\246\305<+d\242<\365P\351\272\343\323\006\276\376\374-\276K\234\'>q8\364=T\301\356=\354eS\275\252\273:\2764\0173>)]!\275\377\342\037\276\223+9\276\240\313@=V\243\t>\333\346e=\013\214\240\275\222\302\251\273+^\340:\221\274\035>\037\262\017\276\276#\027\276\022Y\231\275nf\327\275\244\017{\275\'\262\253\274\307:#\276\022\3046\275\313\224\255=\310(\026\275\307\317\256\274\032T1=\365\030\t>\361#%\276\300V==\261\365!=l\033\202\274]\360\363<\010Q\003\276u_;\276\204\220\">\246z\256\275+@\267\275_\346\261=Q\220X\275\222\003\254=\317\025\370\275\371\241\255<r\376/>\014\017u=\340\334A=\367I\331=6p\266=\241u\231<cN\024>\247\307I\274\020\316\026\276lBZ=\206\326\205\274\013\306\202=\253\3733\276T\204\277\275\315\250\335=\257\232\271=\374z,\276\262\314(>f<\231\275\234V\002>QG\226\275J\361A\275\266\365\004\276\325\033\262=C;\240=\031?W\275\264\215\370<i\301\370\275\226\251p\275\260\356\006>T\205a\275\"h\270\275\177\016\270={\016w<,b\326=\340\375\216\275\361\3576=\307\233\034\276\366\343\363=\036/1\276\001\256\252=\3118\036>\254*\347=k\256N\275\226\346\267\275\010{\020\276\252\037\365=\212\265\325\274)Q\314\274zE\346=\346\257\023\276\324\331%>\274\313\302\275\2141\200<\244\3709=\020\346\335\275\253\260\235\275\224\313\004>*%\t=\244\312\361=\361\243\013>r\240\213\274T\027}\273+\223\003\275\327\2301\276\304\277\246=\326?\004>\241\353 =,\307Z=:j\005\276R\030\271=\005U\010\276\326\346#>;\037\223\275\353\332\000>\257\215,<|\0071\275\342\255\004>\237\004$>\265P)\276W\255\262\274\007\207\030=\216]\030\276R\363 =bi\010<5+\232\275vgR\275\t\306\001\276\276B\024\276Z?\314\274\210\325\256=U\356\005>I\222\225;=\261\240\274\003\205\325\275\201q\206\274\320\255\315=\027]\226=\203\227\310=\033\357\r>hb\221=+\215\t\276\250\024?\276\244\361\000<C\361\034\276\320-9\270$C\256\275\235\224\030\276\266\237O\275\364L\337=\341\242\233=\273\016w=s\231\210=\313\221\023>\331*,\276\242[\010>\325y\362\275\210q\322=\207\241\206\275J\315\207=pc >\242DQ=\3342\033>\321\t\375\275\217\342W=J\005\212=L\367\220=\223o\227<\005\361\202=e\\\235=\321\203\227<\352\020\256=\264\241\344\275 -\244=\010\236\004>\335\353\375\275\320\361\271=\224\222\353\275ZQ\257<\216\331\005\276c6o<\317~\027\274\377d\016>8\311\266\275\205z\037\274\332k\242\2750#\364<\021\252\025\275\265\304\004\276\312C\354\275\346\267\016\275I\032j=U*$\276[3\376\275U\361%>%\271\313\274\250\336\264=u\231\n\276\321\310\036>\347\305\276\275S\372\271\273\0214v\275\024/\276\275\027\323I\275\2546z\275@\220\215=\207r\242\275\350d\244<+S\340\275\000\223\354\275\343\000[<\254\2318>X`\236\275L\371M\275Gm\020\276O\'\345=s+e=\353\212\006=\344\013\007\275\243+\t>\306\223\021\276\236$\374=f\014\370\275@\020\245\275\'aU=5\213\"\275/\326\022>\014\226\227=\236\377\032>v\340-=X,\376\274\336\\\335;\003h\375=*\222&\2763\261\215\275\"3\213=\304\341\354=\226\237G\275\275\355\001\276\266\271\000<j\303\375=\243(u=\303\375\265=vty\272\310\0206>\372&\364<\365\303\'>5\256\307<K\356?=\016/@\274Fk\223=7\336\332\275@v\374<\360DF\276E\313\034\276\256:\236\275L~\005\276\247\375=<\246LP\274\276\256\322=\235\330\277\275\213\236\220<\256\227?>#\207\001>2?\364<b\232\221=\n\243\022\276\352\272x=\345\277\234\275\266)\230\274Dj{\275(\301\224\275\215;\374=\034\374\001\276\213\374\">M\255\217=t&D\275c\204\017<TP\227<\230\304\022>\300\002\r>\2052\025\276+\250\306=K\275M=P\366Q=\360\266\024\276\214\277\362\275\316\237\326\275ar =(+\302<2\253\205\274\253\014\353=z\227/\276\3549\007\276\3062\037=_\007u\275B\227\237\275\365bc=~\031\371=\254b\340=j\213&>\333\035\036>\303\226\256=d\020D\276)\355\244=\3452:\276\350\225\'\276\370\036\215\275:\024\325<\346\n\352<q\317\027=\252\202\213=8;\017\276\270\003\007>p\265\221\275.\030\211=wo\235<\010\365!\275n\020.>+\201\025=\306\371\371=\277h\000\276\320\274R\274\327q\264\274\217k\302\274ES\021>\303\205\003>j~\r>u\332\352\275\324\206j\275xt\221=D\024e;\263\016\003>\255\355\227\275\212\032\306=Vw4>\222\321\370<A,\257\275\006\251\004\276\267\247p\275\321\303\222;\322\242\"\275\335\272\325\275\032\2555\276C1\254=\216\226/<\333*M=~\033>\274\305\217I\275QwE\275\277\202\374=\203\214\003>\273\r\027>l`<\276@\244\364<2$\336<E\375(\276@\305\222\275\217F\006\274\213t\325=\3564\025=\331\232\262\273M\260\024\276U`\244\275D\275C=\370\262\006>\357*\236=\221\216D\275$[\242=\311\321\357=\362\212\253<\227\2513\275\234\353\t\276(\220\351=\004\337\267=\317 \355\275j\276\327\275i\304A<\367\360\030\276\355\007\300=\246E)>\206^<\275\365\016\240=\365\333z=\373\205&>\016\032\\\275\274\000\262<wlF=\252I,>(|\321\275\231\265\004\276\304\256\215=\306\240\326=p\366Y=4^\237=\t\375\357\275\n\305\"<\267\375\306=\201}\276\275\215$F>\223\t\232\275\372\027_\274\\=\035\275\242\323\330=\270\224\t>-\034)>nb\352\275k\014\360\274IE\032<\002s\004\275\325\202c<\323_\354<\350\375\274=%G\355\275\177\005\240=y\305\324\275\223\251F=\025X\274=\252\353\251;K\322$\276\245\t,\276\"/\001\276t\326\251\275\010\232\024=\243q0\276\364\0222\272Pl\263=,\254\'>*:\376\275l\266\000>\302\337\307=\024\347\336;O\0073\276DO\345;\237\215\021>yj\273\275\207l\006<\314\312\351\274L\326\256=\273\257w\275\030\373\365\275E\016\030>n\264#\276\244\375\300=-\303\037>\346r\010<\264\366\320\275\321?\345=\263^=\275\010,\251\274\251\344\304=\t\213\036=*\233\202\275\362\375\236=\275\273\256\2750\300\035>\026\024\271\275eT\010\276\325m\005\276(\376\227<\340+\351<\205\371\342\275\316H(<\314\210\320<\350Q\364\275>\325;=*\331\273\275\0014\366<\346f\005\273\346h\023=\204$\024\276\353|\347=\\\262\256=r\330\345=\334\204\310=c\361\357\275\313<\350\275\326AJ\274\254\201\000=\332\035\270\274-\346*\276J\270\221\274\371\241\363=\346\320\005>Cw\225<\354!\030:2:\300\275\227&\204\275\363\265*\276R\035\337<ey\036\276\362\240(>\3420X=\305.x\275\377\t7\276t\3341>\336m5\276H\274*\276\255\300\r=\275/6=\270Z\014=\004;\271\275\370\312\036>H;K\275\360+c\274\232\343\342\274\013\013\346\275\306\321\017>\\[\225\274\351)\240;\020Z\252\275\353\010\335=\235\326\237\275\341DN=\232\031\004>\260\246\207=\027\032a=\233\030\302=\r\2607\275\240*I<\220\2521\275\306R\334=\354\365\363=\265\247\003\276\025\250I\275d\210\020>\212M\356=b$\013=g \254=\3020\000>vs\245\275T\330\307=$\257;\274W\037\340=\347-_<\233Pt\275\2350\246=9\225\375\275v\001\030=\365\343m\275*\242<\276\177\335\206\275\"\346\216=\2035&=\227\036\201\275SI\214\275)H\024>\337\220W=7\233\017>\204\245\262:\266\376\314\275\210\340~\275\245p\362=}!\035=\333\021\241\274\375\272\275=\300?\322\275\372\322\311=W\314}=u;\321=\031[-\276\364\215\006\276[\300,\276V\341\250\272[O\022>\366%\235=\'\272\213\275\251\360\241\274<K0<Q\001\364<\002@\026>\2412,\276\265\305\005\276,y\255<\244\326\336\275&;:>\222\030\247=\324\224\210\274\030\337\376=T\264\207\274\353\217\264;b\341\007>\374Fu\275\2164\367\275\331\343\347=\345^\253\275\'\263\263=\332\257\364\273\342\353\361\275\305{\265=\337}\371;i\372\030>\022\317\221\275\005\262/\276}\355\231=M~\t\276?\236\345\274\355;\253\275\274\341v\275\037\375\370=\037\315\225=I\017\235\275\323\333@=s<\242\275\301\273\341=\223\007\227\274\007\212\206=Z\233\000\276x_\025>a\000\373\274+3\331==y\331=\363m\000\276\372\352\377\275\252\252\374\275|\225.=\271\037\301\275<\206\275<kB\376=\t\336\026>\264\010A>-\222\000\275\224\337}=\307\320\000>\n \225<*\302\201\274\025\316\301\275\243p2\276\216\225\210=1#\250\275@\005=\276\232\031H=\243a\331=\274\334\255\274@N\314\275\037\212Z\275\032\264\020>\346\344\205\275.\247\031>\023*!=\237l\020\276\353\020\354\274\223?\255\275\372\022\023>\335\3362=\372};\2755\\\253\275\354{\306\275\324x\242\275U/%>\370\200\016\276\353D\327\275d\301\004>\354\321\213<Jx\204=\3316\242=\346\204\271\274\314^\363=\201\332\321\274\371M\312\275\304\335\377\275i\005\310\275\345\004^<\017\373\345\275\030\\\207\274^\374\351\275E(\204\275\213\243\036;\2401\277\275\2558\345=\016\215)\276\013\246\232=,\247\033\274\230\325[<\254\036\354=X\3045\276}?(\275`:\271\275j\224\264<e\263\223=\310\214\022\276\225\2137>)+\211=\266\026\343=\255,\354:\224Nj=\351\002\266=\000\211\220=\215\nh=q\372\252<\002\013\177=\226<\370<,\250J=\301\335\361\274\204A\020\276\22341>\253l\246\275k\220\036>\036\372\301\275\033\254\024\276\305\272=\276\351\221\266\275\266M\275<U\254\357\275\274\260|=\032\340\345\2742\001\331\274)I\303\275\221\223\033=\371\355\202=\277\021\264\275\354\355\033\276\325a\321:=\352!\276\201\220*>)\013\344\275\247\224S=\301\261\304\275\352\370\255\2751\205\233\275ay\005\276@\313\200\275\034v \274\023\010\224\275k\223q=\005\227\237<\355\347\344=\005\266w=g\335\243=\0060:\275t\242L95\212\217\275g\243/>\262\345\001\276\0061\207=0\016%\276\357x\352=)$\342=w\217\205\275J\265~\275\355\376|\275}q#\276\213\303\032=\231\010\251=\031c9\275\035E\r\276Rm\223\275\032\364t\275c*\257=|\013\003>.\202\274\274D\'\217\2752\257\r>\303\324\030\275\355M\272\274\255<\030\275\3160\300=\362f\376<\346\375\237\275\3613\320=6%u=[\2223=\2309 =\002R\321\275\323\026\024>\304\000\353\275n3^=6y\347\273\334K\252\275\201\217\275=\343Q\366:m\307\261=\026\233\336\274\323\024:=V\n0\275\364\361\246;\221\251\266=\3470\313\273\034\257\336=\033Z\\\274\315\243\005\275\020j#>,\264\302=H[\005>\222S\027\275\020&\311<1\345\031>S\237\353\275D\007\230\275\304\320\234\274w5\374\273GP\362<\315z\332<\310\214\017>\237+ \274\227\034`=\355\327\350\275\376J\022\276!\250\364=MK\001>F\3448>C\"\004>$\347\252=\201\314\205=\276\013\022>\251\222\250\275\374\346\034\276\024\346!\275\252\364\006\276\r\234\005\276B\356\245=\251\375\222=\374\220\323=>:\244\273\373\231\200=\333\360\333\275\226\325)>}\311\354\274P2\032=^\013\350\275j\274`=a\204&\274\242\n\201=\366\025\276\275\002\304&\275\234\332\300\274!\027\364\275\022+\202\275u\232\310\275\265W\004>\324&O\275\257h\022>\300\312i\275(\315\'>\311.\370=\344L\026>\316\034\236=\324\326\020>\315Q%\275\035 \325\275u\316\353=B\226\277\275\325b\255=\3536N=\006>\252\274<S\000>\275$,\276\370.\311=\026\264\241\275\335\036S\275\261\331\311\275\304\221\013\276q\354\017\274\0034\333\275&\016\r\276\207\013\030\276\264\304\245=\353\227\023\276\221D\332<\255\261*\276\311\267\250<uXA\275\336\271D=\303\324\232\275\217\006\375=\211U7\275\213\254\270\275\026\307\r\276\024k$>\014\\#\274\347\335#=v\345\023>\3628\024>\r-*\276\317\214\346\275ocx\275%\311\222=\014<b;Y\177\035\276\"\2047\274y\313\234<\304\2667\276\234\374\324=Ol/<\313~\266\275\361\250\263\275{\306\347\274\017\230\'\276\306]\313=\332)\377\275\255\221\212\275\311\305&\2766\262\347\275\346\345\006>\'@\020>\221f\017>Mb2>/\231\271\274?\3505\276&\315\241=\315\'T\275\007\351\001\276\016\242\251\272\032\373\001\275\340\005\314\275\004\217n\275\204=1\276Ln\255\275=\360\007\276\375\254\017\276\317\350>=\332\202\203;\204\327\031<>.\341=\2678\347\275\357\336\022\276\003\3109>K\3754\275\231\211c\274>\357\327\274Uy\307=\372\325\006\276\016\243\021\275D \036\2768\244\004>\202\205\345=\312\016\322\275\217.\313=\330\363H::/5=\335\241\327=\260Po==\037\272\275\032Y\306\275>\311\002\276\213\343\027>}}1\276?\305<>#E\032>+\250\026>;\260#\276\201R\203\275u\225\n=\203\310G>c\244\273\275\232\002\264=\203\252\332\274t\215\001\275B@\377\275N\374\361=\243\252\003>E\207\016>\020\"\300;\256\224\262<\310\232\035>\250/\243\275\203\351\007>{\321\003>\240\273\031>h\241\r>\355M\000<\224t\254\275:\201\303\275J[\323\275$\275\301\275_\233\027>\265\251\033\275Y\271+=9\242\024>0ub\273\232\251<\276\356\000\206=tt\002\276\226\337\316\275\t\277\373<\265\021\000>\322\247\212\275O\201\311\275E\311\002>3zY=gc\034=c\344R\275\226\204 \276,i\333=\0053]\275R\rQ=/K*\275>\237\027\276\304X\005>^\272\032>:\260\027\276\333\307\037>n\007\033\276\3769\230\275B\013|=O\317\354\275\206\224\013\276\261\244V\274\330V\321=\301\364\260<M86\275\\p\305\275\313Kx<E\363\034>\223n\020\276\216\250\251=8\306\346\275\261\276M\275\352u\221\274\361N\373\275\374\245k<7{\227<\261M\t\276\003\222\204\275\342g\230=K\231t=\320\364\236\275@u\217=\033N\003\276\363h\t>Y\325\216=\026\026\027\275\332\324\377\275 \026\245=\345\370\255=\023\251$=\357-9\276\354\375\246<\235h\023>\245A\203\275\001\306\335\274\245(Y=\024\326\332\275o\021\367=\226M\036>\3402\020>\034g\321=H\212\017\276\rj\r\275x;\212\275\232\\\224=\357:\313\275\312\342\265=\355\004\373\275_\317\364;u\203\030>z\335\222<\037!\003\275\255\214\264<\312\273+<\336\304\330<\367\225`\275zz\'\276\007\035\221\275\315\266\371\275\250x\032\273\021{\333=\215\236\373=;\2542\276\205\036\013>n\013\257;\003\247h=M,\201\2755\210\036>\035V.\275.pA>\204cF=\n\3374>\370\276\026>\267\272\206\275\206D\007\276\340Pl\2743);\276]\006!\275\021k\034\276\266\377;>z\221\356<\255[\252=\361\217%>\000<\353\274\254\005\304\275\000\265\236=JF\r\27630\264\275\261\377\032<\003\tO<\325\031\013>\3031\020\276\355\301\311=\256\275(\275\242\2763>\256n\374=\266\017G\275Q#\246=\035\013\234\275\272=\202\275\243A\035\276\312\3077\275\346\3349<:\303\024\276\023\025\020\276u\\+\276\016\256\310\274\312\367\346\275\376\340\320\274r~\023>\237\324\241\2757\336\235=\244\r\032\276\255\207\032\275G\0377\276\205h\252\275\326\233\206=p\372\r\274\353\022\033=\224;6\276\031\302\250=G\320+>\364b\220=\245\030c=\250\272 \275\277\032\n>?h\361=\373\310\n>\2141\020\276\363\303\014\275\305\351*\276\020\250\320=ja\344;FU\024\276z#\003=x\362\215=Z+=\275\003O\004\276\251_\t>U\200\355<\317\373\214\275W\203\n=\350\205\312:1\211\001>R\007\007>\346~2=\363;\254=\223\340\371\275V\350\242=\030\260\021>\246\307\n\275\302\254\025=\332U\210=\270\374\335\275LJ\024<B>\002>\333\031&\275nI\035\276\322\377\036>\320T\255=\313Bp=\230\263\304\275\252T7\276\310\272\340=?<\236\275\306\016\235:\317 \371<<\360\361\275\300?\374\275\372:\013>\036\233;\275a\253\020>J},\275= (=\321\227\313\275\352S\307=\324\265\212\273\341\343\004\276?V\376\275%\337\006>\n\362\350\275\010\027\3648\222\264\315=J\245\r>\335q\211\275\255\364\225<n\365\313=\367&\231=~\340\030\275m\217|=\334\314\241=I&^=\301\303\000>\371\222\005\276\365D\223=y\275A>\270\254\342\274\217\322\335\274\307\3560\275\343\206\363=k\242\344=\212\232.>\032\361\262=/\010\r>\321\224[=^5\315=\301\335\021\276&\032\251=\264<\351\275$,\034\276\023\345\302=\272U*=\353\2669=\274\235)\276^\\\003=\352\3725\276\365\273\203<\262\345\344=\230\232\231<\243\302\356\275F7\003\276\321\316!>`\024\374\274\264%\343=\031\225A\275\230\320,\275\267~\021>\216\257\020>J\362\362=\303\215\024\276\221\225\016\276\016\357\204<<\022\333\275\236\035\001>\230\037\026\276^\327]\273\004t=>\240~$\275\257\034\363<0\267)\276\033\327\250=\354\007d\275\0259+=\235\010\324\275\035Mw<x\263B=\337\264\271=S\364v=p\\\317=Ok\230<\016\354\017\276\334\217\356=\227\353#=\303\340==\2654\022\275\224\200\352\275\205\362\\<\000>\214\275\321t\236=\313\212\252\274\356\020\325\273\221\336\207=)\270C\275\023\243\034>3D\034\276\305\013\034>\002u\234=\321\371\370=\345\024^=\007m]=\352\213\314\275\306\\3\276h\300\027\276\223\267\272\2733x\037\276\033\3040\273\342\220|<\n&\354\275\350\035$>@\017\024\276\005N\033=\214\022\016\276D\352\273<b_\033\276T\364\242\274f\t\037\276\230T\203\273\263y\024>\371\302,>\304Z\030\276\243E\243\273uS\315\275Q\211\006=`\222\023>\354\233\336=%\322\375\275C\3147\276\317#\022\276\326M\347\274\005\032\262\2759\372\224=M\303\226=Nk\027\276Di\026\2758\244\033>\222Z\006>S\200\331=\254\230\312\274>:\022\276\001\036\372=\307g\317=\004\235\355\274\007\010\013>\376L\221=\325\"\024\276\300\305\250= C\023\276\301F\307\275\315\340/\276\005\331\356\274\025\013\204=\3060\036>\351\3432>\241\004\273\275\302\337\021>\002\363\301=\340\377\n>74$\276o\337\334\275\224\244(\276\312\003\333=\315?\221=\252\317\234\275\027\253\027>G\204\026\276+\\\000\2767\346\370=\223+\227\275\262\021\200\275w_\000>\177\336A\274\373\205\373=\327\303M=\272(J=Y^4\276*\316)>[\340\331=\036\246\246\2758\227\364=\330z\322=.E\244=t\275&\276\t2\005>\260\337\020\276=i\010=\352\003\365=\253c\017\276\206\204\003\276k\314\236\274\032\337\207\275\250\241\000\276\027\016\351\275\226,\343\275\345&\205=~\rU\275\275\271\216\275a\023\261=^\277\247=\347\346\003\276:W\031\276\352z\236\275\366\007\252=\341\340\030>\233\233\035=|\007\022\276\273\303\240\274\017\272\377\275\240t?\274\314i\016>\214;\036>\242x\324\275\366\214<=@5o\275_x\314\275\030\200\034>\204\233\034>\205\002\374=]\3443>\026ZF\275\324$\310\275\232\"\355\274J\'\215\275H\022\277=\035\336#>w\322\234<\325\244\t>y\003\374=\223\322\366=!\200(>t\273\341<DHc\275\245\357t=\347\340\202\275\311v\021\276\231\252\026>\231\376\360\275\345\370(\276n;)\276\177\363\360\275\203\244\306=UI\032\275\323\332\177=\356>\200:r<=\275\254Z\340\274\333,\334\275_\267\353<\360P\357\274j@\004\276\255\344\t\276\177A\244\275\313\326\334=\216\014\002>\203|\375<\370\263\233\275\317l\013>\377\267\313=-\257\003\276\031\213\366\274\332\361\333=\261\254\031>\007n\021\276W&\017\276\034\204\234\275\351\3729=\276\275?\275\302\345\273=\030\353O\275Yv\024\276\314\006]\275\033\324\374<4\237O=\035\032*>\261\222\261<\275\021\240=\232P2\275_\362\034\276\376\327)\276\347\324\354<\263\313\227=\006t\005>\250\r\035>\234#^\275i$\n\276=x\027>#\2221\276\205&\240=!\276o\275$\336\034>k\333x=\307p)\275nbE\275\037R\217\274\321)!=b\255\027>\337\270<\275\315\253\244\275\343\215\330\275\232}\354=\263G\033>g\206v<z\335\377\275\215BC=\3229a\274\223\340\275=\371*\334=\270C0>\351\331\264\275t\014\\\275GK*>\036\206\224\275\232\201`\275\316\350\365=\314g \276ld\265=\351\367r=\332\233\030\276\033A\035\276(\t\214<\364\227$\275\020\177\310<\234\tA\276~\035\265\275?q\371=\354\031\312=\032\334\031=\007.\"\275\334\303\206<\323O\035>/\336\206\274\221\027\327=d\206\032\276\223\334\343=\347\274\024\276= \351<od0>\272k\021>\0379\004>\023\215\370\274\007\222G;\301;:\275\371\232\022\275\303q\345=D\351\373=\230l\013\275\245\016\004\276,\034\220:\036\177\204\275\005\371J\275\215\271\223\275\367Q2>V\370\373;a7\024>+\301\r=\272\201C>\324\304\023\276\300n\025>N\003\010\276\277\023\307=tL\336=\264\010\001\276\323\343\006=\214x$\276\213;\010>V\321 >l6\376<\245\027\220\275Y\261\t=\342s\241\275\330\277\377=\315f;\274)X\030>QN >\335\367 =\257+\327<\322m+>\316W\242\275\233TW=\377\316\370\275\021\301\356=v\362\203\275k\252\002>\320,5>\341+\354\275\000~\007\270\2506}=\023\010\250\275\222\264\354<\267\272\240\275\204\360\231=\326\246/=\370\346\223\275\021\026\201=\022H\313\275^\3623=\267\253\315\275C\360\233\274\347Lw=F\373\306\2755\274\222=x\220\003\275\222\243\003\276\302-\371\275K\177\'\275QF\007\276\246ld<\361<\r>\271K\274\275`\177\210\275%f\251;C\216\323\275\347\000k<\323\324\311\274?gK\275\013\367\r\276\241\367\t>\330\021\226\275\002\001\343\275\217\354U\275H\275\006\276\024\034\013=\371a\273=\206\022\177=\353]\000>\"*\333=\221\336\t=\213\362\000\276\216\244\033\273uC3>\001\307\026>\365\207+\276\353\247\003>e\374\220;|\343=>\030\376==\026\352\'=i\273R=\265\222\025>FJ\242\275}=\246=T\325\322\275\2465|=\026}\310=\270\n\317\275\251\r\337=\230\325\037=!a\370=\335c\354\275\302WS=\302\200\375=/J\356;\254\031\024\276\324\317\230\275\3621\354\275[\233\276=0\270\016>8p\002>&~==\"\r\013>\213l\353=@\354\217\2731\211 <\n\324%>\233_\225\272\305\"\276:\375\366\335\274\036\276\265=\235\363\232=1,\202<\242\353\272=\327\004\035\276ne\333\275T\331\211<q\363K=^\356\247<)\347\031\276Bw\311=\244\224?\275\007:\354\275\354X\324\274\033\245L\275\231\226\360\2751i(>\034\253\352=\350\347\372=V\326\324=\326\000\301=\377O\027\276h\007\303\274\334{w\274\"|!\276q|Y<Lt\330=/\2073\276]\205/\275\202\372\310<\246cf\274+_\342\275S%\336=\374\244\353\274\301)%\276\023\325\210\275\205\r\320\275r\223\335\2759\307\200\275R\366\034=T\375\010\276\335\231\352\275\377e\375=\"kg=\343A\005=\226y1\276\255\216\265=\313P\311=I\002\210<\010\206\211=\377\364\030>\206\2460\276\357\325 \275$L$\276\215\335\027>o08>\223N\313\275\302i\005>p\244\345\275\275\300/\276\017\273\020\276\371$\317;\334qr\275\224\003\316\275\355\241\273\275j\341\352=^\276\022\275\211\313\261\275\242\302\023>\360\236z\275\214\260\"\276=\244 >\027\\\016>|\014\004\2766\020\270\275\210\262\037=m\351\326\275\231\3004\275\252\273\243\275\006\005\377;xs(\276w>\205=~\311\264\274\310\017\034\275+\205\035=a\216\265\275]\205\014>\205U\032>\2503\037\274(\215\214\275pZ~\275\r\247\023>\307\013\246\275<6\255\275\225[\341<\225\t\267\274F\0362\275\024H\230\275\376\274(\275\321\222(>\337rw\275\204\260\001\275\262\270@\276sh\326\275\304*\222\275k\256\004>\353\004\013\276\305\225#\276w\343c\273\347\021~<\232\264\r\275\314\274:\276q\253\225<wI\277=\342\207\226=\"\365\032>\370V\344\275n\245\355=\216&>\276\'\217>\2738O\372\274\246\030\026=\364/#\273^\357\202=\266\254\266=\374z\017=\227\225\206\273\244\253}<\267\006\026>\005\002\t\276\351\276\262\274\241x\203\275\267~|\275N\243\257\275\251\337Y=9\205\363\275\211\275\t=\376\234\211=z/o=\225|\032\276\036\361 \276\327\357\000\276\300\026\370\271\365{\004\276\336\247\237=\3009\003=\222&\303<\032\010\000>*\231\013>\255P\215\275\224\020I\274d\371\006>\237\247\r=\\9\323\274{#\025=\301\370\022>\314\321\324\275\250jg=\"p\331\275\332-\">\271\251\r=\366\014\'=2\224\262=.\263\216\275*\257n\275\267\025\300\2755|\"\274\314d\316=w\212\361\275n\267\000>`\342\206=m@\266\273\344\3709<W\320H=\203\263\344\275~MV=\333a\352=\311\0133>\tz\t=\256b\017\274IO\332=\272\005\302\275\0373\227<\275\323\020>\332\000\003\276\273\2154=w3\236\275\207\320\317=\027\3633\276/\277\n>0\307\226\275HT\207<\3624-\276\350\313\261\275 \t\344\275\260\n\001>>\000\370=\017\260\272;6\3467\275\230\241\375;\303v/>\344?\002\2762\265\211\272\271\313+=\274:\033\2769\005\002\276zq\363=P\263T;\005x\022\276\200\344\022>\266s\031>D<\026\276\t\263\325\275{\210\236=]\346\221;\004xa\2756\010,>\266 \246<d\211)\276\"\020\305=\321$\363\275i\345\014\276\037U\263=^\213\252\275Pn\372=\340\202\327=\224\316\245\275\260\234Z9\027\353\035=\205\367a=`\311\216\274.E!\276\321\246\030\276Zx\236\275Yi\024\276\216\266\003\276`0\347=\264\317K=\036)\345\275\276\307\'\276\002Uc=\204Q\326\274\245f\n>\272F\'=\313\344\325\274\232\274\001\275j\252)>\210\252\226=9\023\253=\314rp\275\2028\243\275SQ\212=\310\020\207=t>\032>E\207\n>\227;\027=\350\311!\274\311\306\270\275\264_B<\362c\377<\023G#=\376\213\'>$\3459>\236\250\026\276\324s\246=1\241\354\275\023\276\001\276\327\006\341=\002\227/\276\274*.\274\3067\336\275o3\225\274\233\007\207\275\374O\037>;\022\371\275\303\374\347=\036\345\206=\316\247$>i\254c:\323l\030>\360\354\362=\272\354\010<\026n\210\275@y\244=|\332\"\276\022\346L;\006\335<\275\327\3140\276\311\322\251\274\027\030@\276\200\302\035\275\364\377\355=\025\277+=\035\007\034\276\216\361\257\275D\377\335=1\013\026>\312\340\221\275\223\037\251=\306\274\266=\2325\240=\206~\001=\243J(=>\363\353=\3443\010=(Z\020>\231^\">[\350;\276\254\013\235\274\215hE\275\222\246\273=vd*\276\360n\367\275\nN6>\242\206\376\275\207q\017\276 \233\366\275F2A>\\\216\032\276\263\211\005>\363|\034\276\220>\242=.;\215\275\350\035\251\275`P\273\275\266\r\320\275\210n\331\275@@\234\275\367&<>q\362\375\275\272\243\000>|~\305\275CJ}=\037\271$<\276\235\004\276h\004\020\276\306\231\203\275B*\212\273\006D\215\275\234Qn=\"\033\030>/I|=7\266\352=\371i(\275\200h\352=\36292<\277!\256\275\351\202>\273\034\331\376\275$9\021>\207s#>\316\302:<\262\215d\275\2744\266\273\'5v\275\222\266\316\275\306\020u\275N\n\235\275\337\230\023\276\347)1\276\347Q\300\274\220%/\276\203\nM= \324\361\275\271q\264=\201\221\020\276\356u\250\274*\261\023>|\374\242=\311k\000\276n\r\361\274\332\212W=&\335!<\342\334\271=x\255\372=\257\t\253\275C\255\217\275\017\036\027\276S{\343=\224\331g=\326\247\336=\331\243r<P\212*>C\304\024\276\242{\036>\343\362$>\2319\260\275\276\026\271\274\n\006_;K;,>5Y\335=\315\r3>#t0=\245U\246=\375\005\017=V\370\024\276\343_\020>.\246\353=&\316\t>\030SE;\3042\316<\217N\003\276\345\035\010\276\362&/\275C&\235\275}\336\027=\346\320\270=\251\204\324=\031\r\235\275\374j\356\274\026w\017\276\241\023\367\275x\313\310<m\003\037>@\307\343\275wY\332\275Q\r\236\275\324\004\267\274\302\257\323=\014\326\237\275\371\372*\276u\004\254\275\177\312\215=\347*\">\364\342W\274>\241\'\276p\226\353\273\215\367\315\275YW\261\275\374\014(>\260\376.\275\356\277\304\273\34700\275nL\022>\262\260+> \360$=/`P\272\027#\266=/9%=\255\377+\276\005Oy\274\276\302->\031\243\\=J\244=\275\223\301\363\275D\364\375<6\010\201\275~\2658>5\346}\274\324\261\004\276\233\261\320=1O\347=\202\250%\276eL\024\276\210\275-\276\240\276h\275\300\327\227\275{\351\266\274\020)\017>\343\255W\273\332(\334\275\000\2732>\242\263\335\2744\217/>O\360->jA\031>YZ#\276\021k\327=\264k~=^\241\320<\270\336\372\275\254U\362\2759\247\020=\330@\252=\037\0260>)\026\026=\\\007\332\275\013W\320\2750\314\017\276\376\355\207=\252\304\304=d\246\301<40\261\275\365\341.\276\242\227\007\276x](\276o\007\300=\242\323\'=U\332\312<\n\242t=!\001\364\275\227\240+\274\014)\333;\201\032\017>\205\360\210\275)K\305=\321f\332=w\207\311\275\016\331\001\273\3270\300=\\l\035>\341\321\t\276\006\353\341\275\305W\034=!\333\274=\264U\275\275\347\324\302\2751\217\036\272Gx\223=#O(>\353\\(\275\270\021n=\333\323)\275\253\200R=V\022\210\275&\3517\275\232\352\005=\370\323g\275u/#>}\220\024>\264y\017\275\211\320O=\177\331\256=\332\025\331\275d\362\345\275\323c9\276\337\"K=\332b\230=W+\021>\206\004\315\275\023\215\007>\257\210\224\275\253.\025\274c\342\262\275\355\221\203=\373A\310=\034?\350\274\343\245\251=A\322\035\276\322\366,\276\344\353\304<\231?;=CD\000>\252\315\"\276\302\237m=\331\312\342\275\335\257\255\275o\316\247=7\270,=\371\362\013\276\3411*>\204\324\301\275\324\031d=q\320\317<\235\244\317=\024\200\362\2759(\021\276\207U@\275\027\"\352=3\247D=4+\022=\322\300\276=c\"\000\276\310\n\261\2756\213\257=&\356\205\275\2721\202\274)y\003>\231\021\223<(\272I;\237U\016\276\274\312\214\275\022\372\314=\250\334\206<\304\357\363:%P\301\274\204\203\031\276E\240\037>*\253\026>\214\326]=}\343\210\274\304, >\r\0074>\356=\365=\266\311\270\274\225\300\375\2751\254\352\275\211\334\225\274uW1>\313 \242=\021\350\005\276\374\364\036>n\274\034\275\277\266\337=\320\376\373=\351\365\246\2755\311:>\n\017\014>\335a\216=\007H\370\274\210e\017\275g\267\037\276\021\364\354=\022?\376=Fx\370\275\370N\235=\377x\n\276\3578\305=\274\034\317=V\006\270\275`9\257=\005\t\000>\"\037\203=IY\033\276\366M\277\2752( >u\330\347\275\350\3265=o9\350<>\261\251\275m\022(\276\213\037@=p%\010\276\327\374L=b\212<=\024WN\275A\234\357=\203\306\'\276\036\321$=\020\254\337\275)\271\305\275\267\262\352=7\346\213\275\321\021\034\276\372\207\021\275\213\276\300={|A><\207\220=c\207\376=\342\245\354\274\027\340\020>\310D\001>\376\331?=Vu\324\275p\350\273=\200:#\276\000G\332\275\345\322;\274\000\255\240\275\213\215\350\274~\202$>\230\177\335\275\341\203\007\276\344\375\247=7\250\273\275\243r\267\275\326+\231<\0369L\275<a\230=e\226\013\276?\2352>*\201j=m\257e\275\302M\'\276\\v\203=w\244\217=\240\317 >\215\013\035>\350\213\253\274\234\3436\275\036\234\014>a\204\024\276\213p\002>hT!>\264\021\375<D\024\006=Y\021\347\275C\007\357\275\317\021!>\263\016\302=8j\026>\252iU\275\343$\037>\2640\255=\0104\276=~W\270\274\006\242f<y\2668>2\213\230\275Z\346\327=\3162\224\274\202&\034\276\371\222w=\223\276\251=\364wN<\277\307\256\275\320\2435>32{=DW\022>Rua=\r\216\351=l\024,\276\376\267\332<\246e\263=A#\022\276N\017\257=7[\210\275\255\253\022>\327\020%>\274%\321\275\336\217\035>yQ\\=\030,\252=\332T\006\276\242\t\235=\260\214\237\275q?\240\2753<Q=\000&\207\275\215]\037\273\203\302\264\275\3556\230=\212K\232=\2053\371\275\033i$>UH\026\276\222o\325\274-\033\025\276\220\370\305\275\271M@\276M(\211\275Zl\266\275\023@d\274\332\254\300=\313\344\211=nO/=`\360\324\275[\236\312\275l\025\337\275\246\316{=\365\342\272</\206\322\275\342\276\203<\n\270\303\275[\350\r>\2738\031>\215B\021\276]o+=I^\r\2765M\336=\201<\335\274\305\263\221=\313\240\021\276(\215(\276\216\347D\275Gfz\275\223\257\024\276\362iV<\311\251c\275l\337\036=\014\273\203\273g\3557\276\036\272A\276\261]\332=\225\360\350<\347\274\364<\316\314\"\275\331)H=R\3453\275\013J\213<B\032%\276\230\340\250<\222\317\343\275\213\203.\274\032\277\231\273\370!\201\273_\r\027=\232\022\245=R\257\201=\335\301\240\273\214\214\244=\237\002\320<\213\216M= \311\367\275f{?\276\214\324\000=\027\254\014\276#v\230\275\004\362X\275\266\225\375;\377\232\230\275\337\224V=B`K=\301\306\033><X\023>\362(\223\275)\372\237\275\336\313p\275y\236\213<\203\327#>6Y\014\276\213*\236\274l\266\020>\026B\026\276\325\344\327=\214UP=\245\0024\275\3071\341=\033\031\270\275\317\035\005>.\037\227=V@\027\275\337\254/\276\333tF\274E\366\347\275\034[\031=\274\215\311;\204y\320\275z\276\226=\215@\037=!C\r\276\306\301\343\274\367\ny\275\3014\337=mpz\275\375\243\351=\342a\270<\366\013\3049\324@a=\033\376\025\276\031>\'=\026Z\320\274\341!(\2766\351<=P\260\370\275\320\n\372\275\350\360p\275\321A\010>j\316+\276\023\263\315<\304T\342\275\314\036j=\227|\365\275*y\032\276\220\204\005\276\215\205\260=T\303\024<\313\227B\275\024\257\316<hi\022>\013\243\275=<\340\204\274\025$\354\275\211\005\t=I\221\267<\024Qa\275\310\273\302\275m\310\010>c~\357\275g\211\r>L\355\330\275!\334&>)\255\315\275z\263\237\274D\366!\276\254\264&\276\r\025/;\351w+>\320\036\033\276\277s\200\273\021\203\007>:\2541=\304\236\227=\231\"\274\275\340\004\010>\377\306\324\275,\342\023=e\017\275\2758J\032\274\356\331m=\t3)\276\032\207\034\276\237\301\255=\200\360\316=D\326\032>e\254\376<\031\005\303\275\340\243\261\275\202\245\210=kS\334<\262\272\352=\345\3101=\253\2058>;hS\2747|\002>\317f\305\275S$D\276cqs=\367\276\217=\351Z\214=\267\331\337\275\241I<=m\305z\275\365\325\"\275\020\225\023\276\3526i\275\260\221k=\327\255j\275\320\230\030\276\266G2\276\245$\025\275\331\177\025\276\256w\372\274Q\230\341=\207R\364\274\342\2419>\024L\\= a\312\274\366\267*\275x\207|=\272;\351\275<\035\032\276\364w\227\275\010oe\272\t*\273\275\'S\216\275\325\327\327\275r\320B\274\267\371\024\276\213\"\347=\245W\'>\253\215\024>\250\026-\276Z\t\033\275\332\355\364\275\273\252\014>\320\251<\275\260\242\234=\304a\t\276\333\365$\274\302}\217\275\304k%>\222s\000>\210\221&\276\023bM<!?\366=0\222\210\275Q\003;\276\037i\247=\262\013\367=\020Z\t>\237\351\250\275\255]\353<f\311\021\275!\n^=\275\335\376=\263\036\007>\004d\020>\205\027\364\275\362\037\226\274\213\221m\275\350\320\247\275z\377J=\240}\334=16\005\275H\270o<\2206&\275oU\020>\373\n\036\275\"\333$=<`\351;!Ma<\t\3125\276 \227\254=\030\t\267\275\346\032\022=^M\337\275\375\010\313=\2707\235\275H\377\n\276y\375%\275\312\250#\276\315M*=\252\265.>\377\366\020\276k\250\006\276\016q\342\275\001\260T\275h\230\'>\2669\010>\203\267 \273\021A\376\275\027\014@\276\326\314U<0|\250=5\304\351=\0300\022>\032\310\212\274\244\370\001>O{\364\275\322s\200\275\351?\010\275\215\005\232=\032\336K\275*\035\246\274\247\255\272=k?\266\275\263\026+\276\260\240\020\276\0375\200\272=\025\266\274\267\371\350\274\r\000\r=\243\316\322\274\235\025\207\275\227oE=\315\003]=\217\375\321=\362\353\357\275\023\210\341\275\347\224\036\275\3438N=\370\270\224=\366>\300\274mY+>\236l\'\276\022\256.>\270\030\003\276\322\177?=\204\231\370\275\276s\365=U8\006>\232~\237=\036?\">\255\371x\275\2114\266\275 zP=x\004\014\276\361\313\245=b2\022\275\2019\217\274#uR\274Ex\324\274\312m*\276\375\337d=\360\2337\276Ft+>\227\205m=\225\374b\274\311\242A>\354:\321<S\232\227<=\367\300\275D\275\014<\367\232\224\275%\363\017\275J4\025\276\274@\322\275\256\004\251\275\266\t\341\275b]`\275R\010\313\275\365\376d\275\367c0\276N-\315=`\253\373=\263\340\001=\373\013z\275\342\r)\276\257\341*\275\3157\265\275U\026\252\275\362\336\357\275\250\276><\340\211\'\276\223S\350\274\033\035\266\275\305\022\022\276,\331\234<\223\3736=\021k\314\275\316I$>d6\r=T1#>\226\347\016>\251\351-\276L\254\032\275\037a\021\276J\003\037\275db\277\275\310\023\201=\342\263\236=\000<\276=\020\034\226=f\312\016>\007L\"\276&s=>\305\024\355\275\266\212\320=N5\327\273R\316\031\275#D\326\275\351\204*\276\256\334\203\275\353\313\236=A\230\322\2759\'9>\340\315\306<W\300\204=z5\320=\263,Y=\227`\356=\037\315\004>1\312\031\276i\261\001\276\031\375\201=\242n=>\313\307\331=<&\264;\310\010\000\276\337T\260\275\362\263\231=\355\257\021\276\371\264\014>\230\242\'\276\200,\377\275\t\320\007\276\260\212\250=O)\263=\n]0\276\222\266\365\272?\217\306=\"\353?\276\363\233\033\275f\245\335\273|D\277\274\220\367\263\275UQ\333=F\304\220\275\"j\302=\331P\217<\246\032/>A\352\024>\232!m\274G\362\204\275\262(\204=S\337\353\274\3043\271\274\236\006u<5\014\t>\364w6\276\272\244\367=$\305\007>X\375\312\274\'\021\224=\2376\240<\222=#=\373b\037\276X\034\035\276m\205\302=\304\364\\=Fq\317\2743\317\204\275=\331\010>\374\243n=\030\276\261\275\020n\035\276--\304\275(a\200\275(\010<\275q~\240=\360\374\224\274\321\275q=7\014/\274\351-\307=y\324\346=\331\007(>\277\341\325\275\014\t\210\274\264\0259>\233N\030>\221\222\023\276\216\357\254<\364\356D\273\216\022\037\275\214!\006=\020\364\010>DH\'>\261\332\r\276\317M\347\275>\253\321;FY\354\275\025\337\036\276x\313\205=\t\305\014>zT&\276\244\273\322\275;,}=\365\347G>\336-\252\273\261\033\333\275\207\305\352=\034\246\340=\363n\033\276\027\013\307\2754q\310=Iz\342=F\370\001\2761\317\353=9\330&>\207\243\267=\004~\022\276\024\357\206=\230`\342=\016\327\247=\264\036\310=\270,\340\275n\255\010\275f\326\'>\326\366#=u\n=>\202\373\205\275S\206\022\276^/<\276\213\013b=[R\004\275\021\021\313=\"\352\010>z\213\350=\314\240n\275ZL\326=\360\344G\276FA5\273_G\334=\201\320\013>\021\304.>\204\027x=C\315\243=\332po=y\354\244\275\313\272\333\275\211^\263\275&m\237\275K\230\315=,\221D>L\242\200=fL\007>lI\216\275\032\006\372\275\027\021\301=s\337\325<\013n\231\275\343\"\007>{\375\016>\010<\2719\237\365\017\276|\361$=\367\212\340=/\304\250=\313\214\260\275\233\344\322\275\337D\376=\333C\314=b\313\356\275;\341Q\275\251\246\325<si\010\276h\354\337\275\203\204\r>\035,\001\275p\344\033\276\001D@\274\333N\232\2740\253\207\275Q\n\327\275\252\335\214=\204\344\230\275\3770]=\350^\313=\376\241\220<\375\245\311=?/\301\275NJ\235=\320\344\r\276\203\301\255=L2\271=\301\345\243\275\007\316\365\275\232k\267\274X\361\001>\365+\315=L<\251=\264\357\253=2\273\215\275/\361\216=q\303\010<\305\364\334=O\030\337\275t\356\244<\236M(=\026r\016\274?{(\276o\274B>&\244\014>\2452\341=\203\017\206\275\261C!>\t\250K>\216\261\213=\316\255\">\351\001\254\275s\214%\276\267a4>4P\027>\332R\202\275F\370P<N5\257\2756\373\337\2755`\007>\271R8\275:\252p\275-\225\303\275m\2555>I\r\017>\317\237\215\275\370!N=\243\251\364=\310\366<>*:-\276\303*\272=\345I\300=\030\300\274\273*L\374\275\2720\246\275\006\241\021>,\343(>%\241\017\276\035I\204\275\310\3172\276\313}y\275\032A\364=v\234\257\275\272\266\272\275\214n\010>\027M\365=\\\343k=p\324(<B\031\230\275\220Q%\276##\244<\376\332)>\252a\177=uU\356\274\362\200\021\274e\035.\276<}\004\276\353!\305\273\377\217{\275(L\314\275$\323\037>a\312\200\275\251s\321<0\3678=}\"-=)X\366<\017\314\377=\237<@\275|\333\001>b\264\274\274\233E\207\275\330\177\364\274L\217\203=O\254\217\275*\t\235=QY\014\276\314\243\235=\373\030\t>\342\027\226;`\343t\274\226 0=\022~\020\276\235\377\233=\0204\001\276\'J;\273t9\024=\236u\251\274\336A\267=\222\303\024>\274\017\326\275\334\361\226\274L\"\304=\250b\r\276,\2734\276\021\254\023>\326\267\000>f\321\362=ZK\024<\326\303\t<\3123Y\2752m\377<\330\245 \276.x\275;\017\007\317\275\363\336-\276\205j\303=^\302]\274\260\346\003>\2158\210=\'.\004>\371\254\'>\235u;\275\357\000\'>\270s\272=\315;\326=_4K=\202\273~=e\270\024\2766\332]\275\004\316q=@\026\006=\237\267\261\274\262\3119\275\356\367\225\274\355\"\023\276\205\350\034\276\226;2\276\343Q\006\276\265\223G\274\313\347\006\276\345\312\027>\217_\317=\362%I\275\242\211(\2751\300\306=\273\023\t\276?r1>\371<\252=#\267\257\275W\311\307=\322\035F<\300]Q;B\365\032>Y\337\005\276\001\'4\275\274\367\315<\032\210\025>\031\272\017\276~c\013<\332\326>\275\2218T=+S\036\275\231\034`\274\262iW:\254\3769\274\340\220\227\275t\300 >\377\222\206\274dA\025<x\371\266\274<\255b\275\217z\351\2750S+>W?\274\275\225\335\207=%\276B<\266N\340\275\314\010g\275\325R\025>]R\224\275U\377\203<\374\\\000>D\0049\273\300N\253;\340Xv;\210\253\240<\331\220\202\275\212[\263\274eZ\007>}\024\373=\243zP=w\036\017\276\257\2462=\364\nq\275]L\216\2755Y\016\276\025\2255<v\221\312\275/\227\237\275\035\033\027\276\327+M=\271\216\233\275\252+\032\276\001\301\214=2\232&\275\343\346a\275I\274L\275\300\002\352=\270\215\316=![\006\276s&\271< &\250\275\343\245\027\275\2158z=.\203\300\275\360\226\371=#\267\373\275^\\\307<\257kB\275-}4\274:\276\025\276\350\267?>L`\365\274\240\032\202=\2737\345\275\231\302\233\275\300\262\242=\370h\373=\262\335I=|\001\2159\216\374\024\276&\222\026\275)\330\256\274#l\311=$\222\277=Lh\373\274\177\360\325\275zo\334\275t\275\235\275\247^\360\275{\330\264=\337\330\r\276\265e\360=\177\227\270\274\365\340\207\275\234\222\276=\347\342\236\274YE7>\377\341\006\2763\355\374\274\2370\344\275\003\341\355<\317\032\234\274\021O5>Dz\t\276n\036\260=\261\\\n\275\025z\372=\354D\030>\003\315C\276(p\333\275\001\3124=\321\321\217=\0042G\272\270\007E=\212\325\311\274m\2321\276h\242j=\364X\216=\000i\230=H\211\224=\321\216\236=\342B\025<\022\034-\276,\020\003>O{\301\274~W\351=\221T\007\275e\201\n>or=>\251\255\003\2763\007\274=\345]\006\275N-\n\274\230;\355=\037E\271<\263RT=\321b\t\276\362\376\326\274\303\273\315\275r\371\346=\022\036\021\276#:\033>\036B\327\274\3345\335\274\243\021\356=\263\305\355=r\351;\275\036\335\030\276\316\215\035\276\375\211W=\343\022\300=\213\326\363=\370\004\326=\325`\r>P\035\362\275\210\017[\275\357\365o\275\326\277\230\275q\010\371\274\027\270[\275\220u5\275\237B\365<\321\030~<=\301\360\274\004\346)\2766\017\311\275\234}\020>\341\250\260\275K\370*\276\306\316\305\275\347\372u\275\\\221$\274\273\360,\276\003Km=\377l\345=\335B$>\337\352l\2721\246*>\0010)\276\201\353?>9\360\340\275\030r\203<{\2470>\242\007\036>\006\"\215\275y\3629\275\034\305\006\276\315:\270=~a\335=l\231\210\275\225\201\326\275\252d\021\276\365z+\276\260#E\275\nW\257=:\030\022>\254\230\230=\205\251\216\275\205s\033>sOV<(\352\030>uO\322=\035\350\366<\352\226\377\275\311\252\026=T\036\330\275\341\332\037\275k\322\331\275\t\331\250<\033\212\037\276F\366\356\273\245\216\037\276\345?\026\275\262\254\235\274>*\213\274\227\310\010\276\302\260\210=\207\244\340=\244C\036<.#e=\376>\223\2751+\333\274\351d\333\275}\337\'>\35458=z|\036\276O$\202\275\03472\275\261\267\306\275\037\026<\274<)\313=\226\240\301\275EC\027=\324\355\340=j\2504=7w\016\276\215\r,>\250\213\316\275m?\331\275a\206!>6\245-\272m\271\372=\223`#>\304\334\267<\351\323\372=\365|\002\275D\255\001<\326$#>\261]\365=7\300\025>\257\241B>W\214\315\275\231\236\023;\3708\014\276\323_\356=y\250\021>[\021:\276\363\027p=\241\027\020=\322\306.>:>\032>\177 1=\"\233\326=0Z\322\275\3339,>\004b\274\274\326\356\362\274I\000\201\275\306\350@=\035\225\326\275`\301o=\023\313\217\275U\r\270\273\245\237\'\276\310\302~=\303\247\005\276\227\345>\276\215\250\361\274h\366D=\022\274\272<\377\367\240\275\320\313\010<<\352\372\275\006=w\275\214\3328\276:\014a\275\251a\314=\016\202\224\275\222\244\213\275Qg\021=-\272%\276Y\301\252=d\363\346<v\352*\276G\322\247\274\300s\010\276\210\361\202\274\251\274\023=22R\275>$\244\271\270K\244=\207\372\020=\241\021\027=_\226X=D\241\212\275`\370\r>\241\307F\272\005U\244=\211\010\250=\177Q\033=j\204/>K\315\267\275mS\220<\270b\022>\312\273\315<\316\336\001\276\037\337\312\275\245\013\324=<\'\232=v\240\006\276\366d,\276\306\371\014\276vb\202<\312n\321<\2420\032>G\037\233\274\002\214\017\276A\367\033>J\034\231\274kI\321\275\034s7\276\002{\205\271u\373\025\276\334\017A\275 \233\217=\364g\327;\033u\005\276T\203\255=G\366H\275\250\r\n>\342`\254\275\306\270\300\275,\307\257\275e\002\032\276\204[\310=\204`\030\276\"-+=c>9\275\312\274c=\315\026+>\347p\034>\270\013\023>5\243&>\035\230\227\275\227\2545<y\351\363\274\\\r\n>Gz\212=\222;\345=&n\036=\325\306\'=\360H\014\276&\231\367=\377\313)=\245\033\020>\274;\010=A$6\275\313U(=@;\345<\327\315Q\275\023\266\037>\213TE=\261\364o\274u\3471\276\\\2233\276\376|\010\276\366\004\204=\337)\263\2755\017\244\275)\272 \276\337\375,>\215u\236=\360\035V==\272D\275\025\352\322=\363UE=\325<\302\274\260\212\371=\006\341\036=\024\353\005>\232\035F\276\20429:\327S\036\276\260e\245=\250\3778\276Mi\002>C\007_\275F\003\025\276\306\353V=\224\366\">\355\317K=\322X\031>\251\026\236\2752*\r=\327\035y\275\250\3717\274\210\200\241=Q\264\221<7|\021\276\026\325\033\276\003\001\351\275\rEk\275\217#|=\346\200C<;\202\215\275\320\3550>K\324\001\276\262a\365\275V\016\332=\367V\364<#\2121>\343\303\217\273\030\024:\276\256B\010\276\301\023\220\275{H,>\236\367R\275\231iK=\344}\025>D-\210=n\213\206<o\304\215={\303\246=L\274\234\275W\022;\274\t \010\2763\030\340=\016\227\342\275\377\017\234=\026\n#\276\2151\334\275\303\210\300\275\336\364\341:\001>\216\275yl\267\275\233\227\014\276\213\337\273\274\203\276!=\345\344\224=\303\300\004\276\206t\273:>\371\223\275!e$\275\204\244\022\276\256\002\335=\360m&>\013\310\010\276\272\241\026\275%!\205<\363+\366=\344g\374\275}\264\347\275\2214\005\276\277h\365=\232\265r=S*\366=N\002\036\276\370\252O<\350C\265\273\010\265\272=\210\270\274=\307s\307=f\241\203\275\215\005\223\275\330\342\342\275\353y\010>9\322\002>\243p\343\275\004\374$=\354\345\223=2\300\325\274G\226\002\276i(,\276)\361\007\276\321z\"=F\257?>l\2230\274\3067\352;\317\235\323<jP\024\274\373\360=\276\004\323\275\275L\331\351\275u\2220\276\221\264B\275/\323\362=w\314\235\275vR5\276\276\2600\274\213\014\273=\002(<\276?{\312<\201\276\020\276\022G\016\275\343X\263\273E\335\006>\207\026\267\274t\265\233=\2212\005>\330s\364=\206x\320==\275^\275\236\237\256\275\014\004\023>4\310\320\275K\014\023>"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "0\304@9=\340d;\2660n<CY\254;AD4<\027\303O<\014<\365;\345\250h<\036\006\212\274\310\331\246\273w1\206\274T<\260<y\255}\274\006F\230\274\013\257\310\273\270_4< \305`<\334\203\377:\310\010h<s\260\371\273\315\355\002<\247\2437\274F<M\274]e3:zge<o\322\213\274\365\246\235;\232^\206\274\336\343\210\274\303r\301\273\352A\t\274\340\335\242\273A\272\211;@*\022\273\363\312.;\237{\005\274\200\311x\274\254\025p;H\262B\274\2508p<\0215B<kE\266\274\313*\202<\244\340\206\274\302+-\274\230*9<L\355a\274\360GJ\274:\343T<\356\340O<\304q\247\273\0072\031\272o\034\277;\350}|\274\000\nI\274X8\036<P\212L\274K\307\327:!\\&9yO\222;D\251.; \225F<\302\230e< \311\250;\323[\000:g\022\026\273[\214x<\204\324\202;D\363\230<\362h\231;2\314\311;v7f<k\330\211\274\302}\323\273\004b\200\274\005*\270<\355\235\201\274\027\244\223\274\202\332\320\273-\3750<g\235U<R\n0;<\265\202<\377\331\376\2735\025\r<}\226U\274\222\211^\274I\232\010<\'\013N<\322)\235\274\263\234\207;t\336f\274.Au\274*\203\262\274\3406.9\367s\354\272\024;\374:N\336\224\273\322\034\210<\245\344\t;\n:6;0\031\262;\021Ri;\"V%<\031\352\205\274\274\347\027<O \210\274\255C\250<\014\333~\274$\264\005;\"[\035\273\360\024\'<\2100w<\234t\'\272$ ?\271\365W\245\273\202\373e<\n\352\013:\223Cc\274\364h\014::\225><A\371\231\274\261fx<2*P\274\201\232n\274\010NG<3\226\223<Mq\017\274"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\300\202\210\275/\231\030>T\311\n\276\345,\370=\272P\344=\335\206\354=\315*\272=\355\357\351\275\356(\237<\2357,>_2\214<\'\021\024>\212\"\223=\254w\005>\231\016\020=9\327\031= #\322\275\337\001r=\235\256`\275\354+\360;TI7\275\333\311\210:A\036\354\275\255\300\321\275\262; \276\212\311\355\273\354\355\032\276\273\334\270\274\241>\305\275\343\322\026>\n\330\310\275\373\377\213\275\356\210$>\226Gf\275#Y\014\276\177.j\275\301\233\260=\347\246\221<8\375\r>Xy\310\275\326\230\034\276\037\263_<\226\030\254\275U\3076\275u,j\275o\356\016\276J\250\005>3\357c\275\266\366W=\374%\204=\303R\364=w&\274=a\264)>!a^\275)\'\374=\376\354\352=\230\\\243<\257\215\262=?#\010\276\370\241\003\276\310\275\005\2765S6<,\212\034\276b\303\334\275\213\364\277<\345\271#\276\213\013\020>\252\273\360<o1\330=\277\023\004>\264\310\036=U+\000>\362#\035\276+-\347\272\213g\213\275 u\375\275\005j:\275\372\021\220=\360\262c\275z\330\013=z\003\261=\262\237\255\275\365\215\000>X\016\245=\327\322\211\273V\210\030\275\354M5>\334\331\213\275_\226\325=\255;q\274\201\3665\275\341\\\220\273X\0354\276\327\344]=\257\357\027=\000\302\302\275\277\210=<\000\223#=Zf\024\274[\351\001\275yc!\276\010\215P\272&pF\275\0046\321<\350\332d=\202\337-\275\226\336\001;\026\030\305<\304M->\243\261\016\275N\256)>\347\276c\275M\275\025\276Y\244\221=\211\252\033\2763\021\262\275\226\357\240\275Wd\346=h\247\275=\026he\275,\r\271<\214\352\325\275\275]*=\355\277\t<\025\262&>\321.|\275\003\323\'\276\3318\037\276\020t=\2744\333\265;\245\320\214\274\320Y\241\275\013\373\204\275\205]#\276\205\252\275=\034P\322=Y\211\332\275`\252j\275\241/\213=XO\235\275oD\267\273#\303\005>\203%\371=\251\357\270=\023~\340=*a\n\276\331\230\313=\\\361\023\276\001b\362\275B\354o\275\340v<>v\3241\276\305A\200<\340\210\031\276\350\321.\274\315\240<\276s}\007={\337\231\275\346![<\004\221\001>\027\340;=\357|\232=\204?\013>\373\221\336=I\357l\275\317\244\033>\344k9\276\237\200->f\347\240\275\302\267\r\276\304\330\250\274hYV=:\000\300=\'\214\237\275+\261\272\275\221=\320=\274R9\276\014\304\327=8\317\207=aE\270<\034\254\014\2724\333\272\275:p;\276\202\273\031\274.\231_=\244\013~=\207p\246<\262\245\206=\035\346\344=\302VB>s\303\024\2750\326\016>\220\253\360\275\242\335\t=j\240\242=\371m==\337\212\245=H\247F=\037\"S=p\024\236=\360$U\274\201\213\267=\337\306\220<\206\026J=\233\274\327={\353b\275\253W\'\275Ds/\274\017\3522>\366\252\035>\002\007\213\275S\035!<\374\367\354\275;Zt\275\240\237\025\276n\243\372<\036\347\027\276\276\277N\275\020/5\276\340\345\374\273 \345\260=\376\263\375\275(\242\344\275\257q\372\275\233V\021\276W\354U=\366\346>>u\322\224\275\255^\343=~\253y\274\016C\343\275h\375\337\275\212!\335=\007\300\r\276c\344\370=\274+\272<X\024\204\275\032\222\263;B\006\n\275;\262\216\275\010|\242=j\037\030\276\237mJ;\232\246\202;(v\222\274\305\031\262\275\034d\023\276^\311(\275MG\370\275x\252\373:+\317\360\275O\241\373=\005\374\014>\020\344X\271b\236K\275\373V\034\276\343\204\306\275v\354\022\276\226W\237\275\255\343r\275\371\252p\2751\346\331<\306{\001>\340\331\376\274\241B\003\274$\344\302=\024z\324\275\376\0232>\322\335\"\275\32682>>\277\030>\222\223\236:{l(=V\356|=Y\221\321<\214\251\302\274\300\021r9DW\216\273\213\340\030\276\261\204\301:\203o\004\276\023\322\343\275\333\327\251=\373\206,>q\234\036=\034=,<\365P\221\275\212\3430>\215\213\305=l\325/\276h{\260\274Z\234\371\275,:1>0\277\004\276d\320\017>\276\007\346=|\022\"=1\034\037>\312I\302\274|~\231\275P\223\301=\203Y\305=\216v\347\275*\322\005\276\020\3669>\356\373\276\275\315*\222\274\237\331\013;\022\322\353\275\271P->\315\347\010\275\330\2369=\273\344\223\275_\035\206<\341gt\275\360\235\030>,\013\371=\201?\211\275\243g\242\275\343\035)\275\372\234q=\336\025\001\276\230v\313\275Po\366\275\226\254\260=\337|\252=<\216y;\336\000\216\275x\321B\2767i\023\276\022\327\002>$\341\203=\257w\226\273\024S\347=\201j<\2763\222\250\275\000\202\207\275\275\246/\276\021\034\024\276\204\027\266=\326\314\022\276v@\r>v&!>\337\004\n\276\007\016)\276\272<\031>\315\271\327=3y\234=\212x\002\275:r`\275\224\260\036\276\206\372\337<g\242\302\275<\345\027>\266\244-\275\251L\014\274\006\016|=:\000\004<\256\341K<\356M\225=35\021>\373u\245\275\312\325\305=\315\244\363=\364f\225<\326\263\215=\204\022\020\2766c\007=\026\332\247\275m4\233=J\263\232=\021\032/=\274w\023\276\024\251K\274\301o\033>\321\215a\275\206\375\031<S\311\340=y\355`\274\321\363\224=]e@=Zd\357\275\017]\026:&\366+\275#\202Z\275;Z\333\275M4\032>NU&>\3612\025\2763\021\002>\277\354\353=>\005\224\272ki2\276\275~\021\276\313n\353=\334\347K\274\033Q\024<%/#\276E\336\324\275\314\200\032\276`\254;=k\002\365=>\271A>2U\360=a\270\'=\376\244\'>\342\341`\275j\327!>\367D\301=\375\224>=PV\320\275\360\303\361\273{3\"\276\351\352\253<\356\376\335\275\252\355\000\276P\033\t\276\225\376\351\275u|\254=S\377i=\201<\000\276\020\224 >\206\355\304=H\247\314=/\270!\275\330\2568\276Y\237\r=b|\245\275\237\301<\275S*\215=\000\356\311<t*\343=\242\217\023\276\030\270\\<\2129\201=\2208u9\013\306\323=\253\376\312=,\267\232\275[\217\352\275\224)\237\274~\n3=\354\305F=E\310\006>m\325\306=\202\250m\274\216\300\360=\252\'\010>\277tD=\252Jc\273\313d\243\272gr\016<\260\2200>\372#Q=\022l\001>I\311->*u\325=\300\363\272\2759\303 \275\235\275$>\351)h\272ft\350\274\224\020\356\275\037\326\247=\21566\274_\274\265=\010\271#>\267\036\266\275Z!8>\000\032\n>\263\002\323=\006\3106>\323\324\254=\357\333\332\275\200T{=bT\352=\202S6\276}e\035\276\277b\315<\364V\225\273\325\211\r\276\003|>=y7\231<\352/\031\276\214HT\274X\323\361\273~\202\003\275\217\000\r\276h\300\304:\220\240\230=9{\272\275\262\303\215<.\265\335=\302\234\224\275\357\\\277\275Bu\307\274\310N6\276\330\316\264=zu3<>E:\276\207\2306>e\"\246=\334\312\353\267\270\001\022>Z\254\374=\034\363\231=\321P\273\275,Z@=\363..\276\353\355*>H62>\310^\t\276\252\333\177=\364\'~\275C\362\251\275\002\214P\275J\221\332\275\261\"\300=\235\275.\272\355\261i=\324\244\301=\215|\363\274\203\207\320\274\200\215\245:\344B\234=\213\232\320\273\272:\222\274\353J\024\275$q\355=\230y\250\2753\3031> \330\021\276\354\325\007\276\030\312\321\275\213_.>z\255\r=\014V\356\275+(\307\275\022s\273=\321\244_\275\245\355!\275y?\364\275\232\267\031<\031\256^\274\324\346_=\304\307\253\275\365:\t>\244M\377=(M\257=s\341\332\275\201V\225\272R!(\275#\333%\274N\tP=\331L\004=>\226\333\275\250\223\010;\372\312\274=V\001\234=\212\361(\276\224C <\343\336\007\276s\353A>A\3329\275\177\006\327\274\324\005\260=\237\0061\275W&\221\275\247\333r<,\213\035\275D\377\224=N\020.\276\256,\256\275\030\225\273<w\377\360\275Z\006\000\276K\023\023\276\334\371\017>C\032\255=~\351j=\210)\205=x$\233\275\315\377\030>\370\301\331=\223\376\374\274\352\246\357\275\\\346\337=\246\362h=\332Z\246\275\"\311%>\n\330b=\376\310K\276\267\335\030>n\277*\2748\207\214\274(,\004>\001\025\004\2768\341\016\276Yj\017>\0352\020=\376m$\276\235\363\002\276\354\363\324\274\255\2403\276\364e\376\275\r-=\276x_\215\275\344\310\301<~4\331=\241\342\020\276\251\303 \276v\374Q<\361\331\200=LP\222\275C,\242\275UyC\2751W\242=\240\205\221\274\347\021\334=/KE\274d3\363\275\277\214\302;\220\322\311\275\022t6\276\242\033<\276\371\023\021\274\366\357\002\275\323JS\274X\371\233=)\214*\276bd\352=\335\232\323=\315\365\261=x\201\302=\261\273\276\275h\321:\276\024\247\375:\251u\'\275\004\n\033>\310\365\022>\261`\032=\2771\257\275e\255\037\276\311\247\254=R\"\204\275\374\301\036\2752v\304\275\337\023\352<\322E\263\2753\177\031>\006\275\376=t\2531>\341\256h<\374r\267=\351f\370\275\001\335\025>q7\214\275\317s\225<e\236\034\276\227\017\324\275; \334=_.\264\275\375\2007\276\r\272\335\274\305\226\004>\234_\236\275\260\354f=\0006\302\274\016\036\"\275l\261\253\275\273\t\327=\220\\\227\272\'\221\312=\243\336\243\275\2334\026=\312!\375=\236\370\314\275s\020\210=\231\325\360<*\377\263\275\302C\313=g{\264\275S8\306=\316LT=+\275 \275<\323l=X \246\275]od\274\336\350\224=sm2=\003\372\262=\013\274\024<\307RJ=\265\354\353\275\360\270\344<\363\275\237=\235\231E\275Myr=\013\254O\275\007\3728=}\242(\276\233\364\377\2753\256\325\275\3266\311:\332/\"=\367k\">z\321\004\276\034\336V\2744\226\026\276\025.\020\276\222\375\271=p\324\343<\022\210-\2727{\240\274\2534\350=\217q\022<0\010z=\232\030\200<\332\n\215=\256\323\362<\266\3614\276\220U+\275.\254\355=\332T\222\275\027\177\255=+=\t>\364\3457\274\002\260\267=\304\330\257\275\0252\234<\362p\242\275=h\277\273s\013\020\275\010)\267=X\261M\275\302\336p=\230<\214\275]\321\355\275}&\340\275T\311\t>:\340\031>p\"\233\275iF\327=\002\341\013>\037\031?\276\267+1>\357\372\033>=\022\031>\267\356\247\275\005\016$<5\016\333<?V\032>r\357\264=\225\251\324=\357\247\251=\310y\265\275\350G\237\271\207\364\001>\237\254>:\366\264T\275\211\326\333\275\252\326\240=9\330\225\273\200\251\306<K\3310\276\002\342\260\274\274|\t\276j\376\315\273\204\315\003>\214\315\261\274\342\351$>/\344E\275J\250\035>q\030K<&N\201\275\t\236\360\274t\342\321=\352@\245\275\0224\350=\266\004\245<kp\200==\304\004\276\362\231\030\276\311e\031\276\274R\014>o\021\332<\344\020i=4v:\275;\351\243=OD\277=\330\373\203=r\3373\276\000\270Y\272\'^\213=cG<\274\020\350\035\276\307\2551=l7\t>\273j!>\347oC=\027\230:>P\220v;D\242\224\274g\316\360=P\336><\373\036\004\274\26253=?\374\335\275\n\351\367\274\305\201u<\354D\227=;\302\300=\272\344\206=\321\314\274<8\010/\276j\317\352\275\206\005r\275\362\2171\276kl\350\275\251O@=\266\027\231=\272\350\362<M\201:\275)g\310\274\352\212\346\275*y[\275\002\312d=es\245\275~q\013>\372\375\260=\271\266)>x8\256=U\272\001\276\333-b=\033>!\276\016\3322=&\373\226\275+\355\003>\347\037#>\224\226\276\274 \230\260=D\213\314\275\353\237J<\324!\270\274!d\n=\227J\001\276\355|\003>\212\255\325\275\231I\373\275b\232/<@!\224=\025e\023\276\201\307\317\275p\025p\275(N\016>:\010q\275\274\020,\276#\366\005\276\324\260m=\240\217\377\275\240\203\260;\353=\332=e,\220=P.\367\273:\332\310\2758\312\215\275\244\324\264\275\300w\204<\327o\265\275\214\210)>\316y\t\276\240\224\371\275\377\317\324\274|\013H=\264I\211<x\361&\276\352\363[\275\264c6\276/\007,\276\265\305d\275\277\271\356=\355\306\021>{\265\010=%\326\031>\244\314\034\276\226U\203==\206\002\276\235\264\336=\203Z\234\275:\037\310=\203\005\031\276|\017\353:\230\333\354=\217\251-\276\306\372<\274Y]\334=\020\006\025=\273{*\276\311\316+>\322\250\302=T7\341\275\017W\013\276\n\3609=\301\027\244\275v0\302=\364\247e<\3415\345\274\341X\005\276\331\220\355\275\342\026\366\275\0176+\276\302\340\013\276\344\366\033>\205\204\311<\202\262\027\275\327\247\272\275\366\310\210=L\300\325\275\312\221f=z\027\006;\314T\332=!\275%>\003j\007>J\000\002>|\027\'\276\372\226\265=n\245\221\273\002\213\">\216Vs=\030e\243\275\034\322?\276\241\213\004\274\243\2519=^\373!>\030\240\354<\260z\306<?M{=\354C\364\275g\360p\275\261\217_\275\214\276\243\274\264\374\371=\263\317\006=\202?\201\275\252\351\377=\264<%\275\240A(\276\246<\302\274\246Zo=\366\336\330\275\334w\025\276Cu\n\276F\3052=Kep=\013\014\320=o\372\\=(\007(>\245\201\000\276k\016\321\275 \357\246=\372\270\353:q\243\240<~\254\233\275\354\230\206\275\251\302\010\275+\215\017\276*\315\275=\320p\305\275f\215\267\274R\006D=\212j\240\274\r\240\372=/0\034\276\024f\017\276i>\007>Z\357Z=\266\326\201=^\024\021\276\204\317\003\276w\000\033\275O\373\302=j\226C=Al\263\275J\322\214\275\031\374\002=\254\027\233\275V\344\322=_p2>\366\n\320;\204/F\275\254\360\314=[\245\214\275\364\363#>\2025\032>\222+\030>\352\321\027\276\200Cv=\255\317\263\274\214\233\014=\3076(\276\366\034O\275jf\364=\276\347?>\267\030\026<\263T\266\275\260/\371\275!\230\324\275&|\222=DA\007\276\254\307\272\275\357\352\361\275\274\231\002=\034!\006\276\3017\323\275\306g\017\276\251\250\237=\371\206\275\274\214\324\340:\20232>\003g\224=\367\027\363\275\216\241\035<{\347\n\276\264\304\363\274\240\027\205=\237\375\001\276E\311\360<K.\036=\236\033\\=\301\327\025>\340=6\274\'#\305\275\261X\030\276[\307\242\275n|!\2763\004\013\276\306\3675\275T\333\324=4^\036>\016\210\312\274Z\221\006\276\270\334T\272\261\312\376=\372#)=\254\246\305=\226@\216=\244x%>\250\350\213=\221h\231\274\321w\346\273\256\n\">\014\353\317\275\375X\027\276K\222S\275\361\235\346=\225\216/\276\374]\004>!\014\266\275X\234/\274IQ\302\275C\224\346=\250^i=\001\324|\275\005\031\323\274\265vU=|<J\275\321\225\307\275\277\347\034>\341\242\004\276[\023\030\276\223\245\223\275l\337m\275@No7F\026\203=\370\031\303\274\033K\311\275\274\305\003=>\210\323\275\317\023\312\275\372\030\226\274>\370\020>Z\227\303=\350\351\026\276sb\351=\217W\036>\307\332\327\275\026t\213\275\310p\r>\337m\343=\311\346{\275\003\241\210\275\211I}\275W\327\036>\253\263\004>\325\355\265\275\267\264*>3(\006\275\026,\030>G\333\377=j\354!>\213\332b\275c\224\266\275@;\215\275\254\"\002=\346!\314\274\221M\226<r\361/=\022\2421>\346\036\237=@OF<\347\005\206\275\"\274\217=\377\002\360<\3442\032<\364\3772\2766u\210\275\200\267\370:\260\344\016>y>\'\275\354\006=\275E\323 =\356\367\341\274\231i\233\275\203\272\276<\374\004\024>\373\345\344=\357\202\037=\361\377D=\240\024\023<|j\016>\022\314\260\275\374d\005\276.\356\224\275\'\277k\274lP\020\275q\037\226=\235\217\343={E\274=\255\315\300\275g\232\330\275u\270[=\004?\247=\307\0047\276\037S\303\275\347\223r=\024\212 >-\217\236=p<\024\275\026ha=Vp\307<\300\334K<\233\010\305\275\330\373\017\276P\255\347\275\246\322\336\275\241\327\256\274/\033\347=\217U\212\275\334\213#=\371\364\236\274\212H\026\276\342\'e\275\252\336\022\276\237\033\032=\332{\356<\'[\002\276\347\\\245=^\330\301<\324\031\034<\321\262\321\273\n\303\265=\234\345\'=\203\030\t\276m\227 >\373\256\266\274\031\0368>\256\245\325\275K\224\204=t\027p=\235\013\014>%W[<\201\321\n>F\353\000>y\326\315\275\227!x\2753\320\t>\276\235\030\276R)w\271\337\021%>\347\n\036>\376s\210=\271)Q\275O\257(\276\216\255\253\275N\361\027\276g\227)\274\325\2554>\023\216\034>\224\345\333\275\213\345\\\275N\306#\276;\2331<\320\271\244<\320n>\276>\"\"\276\220\273\306=\'!\210\275?Ep<dO\345\275\324\003\304\275\0058,<~h\277;\350\370\312<\221a\352\275\227\370`\275\346\345\236\275<0\005:\257\3130\276\325\206\215\275N\364\003>(]\347=\016\206\307\275\024\246\207=\213%\367\275:\3516\275[\250\002=re\035\276k\251\273\275\240\273\356=qP\204\274\002 h<\036\014\332<\352\314\257\2743)\340\27590\301=\361\373\256\274k![\275w\251\230\275C\330(=\006\020q=\274G#>\340f\262=\230\244\010\274W\231\232\275F@\273\275\265\317\230=1\333\216\274A\241\313\275\321\3040\276\355DX=h\375)>\331d7>\300\262\345=\264\3331=8\307\367=\2351\323\275\232\210\212\275\005\351\354\274\320\037\r\276FR\007>\334\024\032\276\323\021\215=\277;$\276\020\354\221=\021T\037>\3452\001>\004\3205\2746O\252\275H\344\365\2731/:=\355K\201\273k\203->\220\376\206\275\032\364\375\275\236\224\024\276\2028(\276\222L\361=\200D\033>{E\262\275\003\033%=\341\207\257=x\007\214=3\206\014\276\017]\212\275\370)\247=\247\177\345\275\221\241\007>M\373\031>\301s\265\2750\021\253\2756\313\233<\311\322\200\274\262]\245\275\247\220\203=\007/\307=Z\323_\275\363@\007\276\271\356\322=I\0311=\357\201\n\274\363\267\257\275\031K\363\273V\345\260=\033A\214=\237\316\316=z~\033\276\246\031 >>\226 \276.\376\331=\021/\352=\017ZI\275\373\356\214<<\362\034\276\272\204\302;\217l\002>\205\316\324\275\006\346\240=M\205\253=\261\374\363=@40<Q\316\002<\242\322B=~\241\'\276l\317\340=\341\003\007\275\351\256*>X<\304\275\r\276\225;\037C\006>(\311\307\275b\000\265\275\305\277%>\335.C=\t/\021>\302\301\021\276\365\254:\276\322\336\332=\342F\035>\314\032\030=\2608\334<F\031\260\274qU+<\375]\016>p\351\003=-\300\267\274\002\000\200=\334\002 \275J\267\006>\342\360\006\276\300\021\014\275\'B\201\275\320\240\"=/\267\363=\272p8\276\034gF=\'A\345=u\211\321\275\326\332i\275\371\267\271<Q\032\310=\356\342\342<0\3305>\372\036\205=\231\220\244=p\020!\275\\\275\277=z~\237=*T\003\276\02756=^\264y\275A\376\344\272+I\332\275\264\330)\274\333\220\325\275\346=\324=3Q\033\276\225B\231\275\006\274\n\276\273(\014\276\023V+\276\360\2709\276+\255\322\275\034\003\345=\360\376u=\274E\273=q\255.\276\201\016c\275\346a\347\274\272\335w\274r\220\252=\354\356/=8\332\306\275\377\257\215:\023\033\t\276\355\211`\274x\334\330=\026s\026>pG\200\275\033}\350=\323j5>\003z\211<%k\244\274\251p4\276Y\027A>F\3549>\032\377\004>\201\373\250= $\367\275z\233\327\275\372R\343=\215\234\020\276\357\242\006\275\032\260\231=\022\301%>\004\313%>z\253\026<\230L\247=Sw*>bAs=\273\367\344=\316\340p\275\250\353\006\276\225\'S\274\237\204\325\275\300\013\323\274\255\223\r>\354\333w:\322\242d\273B>\226=+\024\000\275\245\266\226=P\347\223\275U0\024\275\037\347!\275\322_\013>\232b\260<\253\210\030\276\333\313\215\275\345\002G=y\266\310=\n\276\002=\320#\236\275f\354\256\275\361Dj<\304w\210<\351\252\357\275G)\001\276\r\234<\275\226b\225<o\212\327\275\353|\264\274\205\001\210=\341\250\r\275\036\376\031\276LF\030\276\322D\211\275]\344o=&\256\216=\332\254\035\275\362)B>D\223\037=W9K\275>\234\t>2m\033>\372\2039\275\014\353\022\276\264=\004>\345\354\215=\351z\342\275\322\334\036\276\261\306+>\003\232\276\275#`!\276w>\232\275\036{&\275`\207\005>\rb\004\276\227\305\033\276\024\326\005>`\364R=>jc\275\274\006\031>\342i\007\273J%\353\275\223\367\304=i\377\003=\376\036\335=\223,C\275\206\310\036\276\303\206\363\275\367\367\335<\300(\264=\322\366\023\276/\233\236\275\211\013\314\275D\3161\275\224a\262=\276\326\240<\210\332\213:\026\2545>s\345\325=1\303B>\251G\037\276\251\003\353\275\343\371#;\270\247*>h\205$\276h\314\262=q\364\232=Z\021\320=\221\223\034\274hv\007\276G\363\304<Q:\240=\245o\344=0h\260\274\241\306-\276\362\237T=\240\340\250\273\207\250\252=\305\342?=x\244\231\275\326\016\037;\265.\036\275\204\2055\276\267<\313=\006v\033\276\t\240\347=\353w&\276\013\257\263<S\207\237=\027\244\266\275\226\027\311<\024?\n>\367\030\334=\345\031\265\275\332\273\001\275\037s\003\276\357\243!\274\366\024\022\276Do\013\276\323\021\256\274o\t8>\034\245\211=\250\337\246\275\241\377\035\276C=\340\2752\3140>\270\347\006=\027\364\263\273d\016a=x\274->\341\273\010\275h\301\255=\341\177\032\276!\271\262=G\006n<\t\202\005\276;\023\027\276\257\347\000\276\373\326\007=x`\266\275v\272\"\275\001&\262\275\312\366\354=@\256\022\276\273\367\013\2768\021D\273\210\322?\276{\226\274=7\333\371\275w\243:\276\256k\313=&\205\354\2757\223(>\353\300\310\275\261\006\177\274\344\252\366=\232\021\324\275\0071\037>T$\204\273\177]\301\275\213\322\355\2748\017/<a\221,\2755s\315=k\"\351=\361K\315\275u\325\265=\320pN=UL\310=\340w}84O\351=$\222\226=83\031>2\247\024\276=JG=t\276\242\275\223?\234\275\006\261\276\273\266A%=p\321\324=\301\224\007>\310\301\213=\267\030\263=\004T\247\275]\307;>\035\361\005=\216E\224=X\276\314=\3366\250=\264\275&=c\263\027>\303/\260\275\0178\372=\347\177\000\276\225\200)>\177\023\014\276N\332\n>\366\236>>5,\367\275P\303\216=\377Q\245\275h\315d<3B#>8/\350=\214\r\273;[=\'>|\365\037>\230\231\256\275\025\216\345=|%(>\257[\031\276\025\251\031>\345\252\315=0\2064\276\342%\212\275\337\261\341\274\354|\363=5W\014>D\002\222=V\257\370<\nf\222\274wC\244=L\255\006>\245\371\006\276<\344\034\274\373\370\323\275S\275\022>\211B\020\274\004\345\322\275\204\240/=d\371\023>\315j3>\266\205\000\276\003+\021\276\036E\r=\201W\257=\367M6\276\215\210\006\276\371\000\373\274+]q<\305\016\243=w\226\211;\305\263\276\275\371@\034>\334cK\275\264\335&>\312\365\221=\032\037e\275\337\200\021>\263\024\025>\252\223\200\274&\000#>>\t\311<\377\274\317=\302\'i=\031\037!\276h\224\355;\032\036\000>\017n\025\276\355p\204\275(\010\033\276?\267\r\276x#\354=\272q\356\275Q\320t<\200\251\266\275\343\022\233\275\366\013K=\206\234 >\035\3617=\n\024 >\tS2\275z\027\264=\223\330\000\276\307)*\276`\261\213\275\376\345\251=R\237\236=\212\211\"\276\025\322\245\275\211\346\027\276\343u\310\274\177\344(\276/b\213\271\211\270\002\276K)\374=\350\261\246\275\251\203\261=6\265\317=&\366\000\276\207\004#=\341`\375=\022\230\302;\370^\343=s\225\247=\2646E=\260\177\201\275L\361\223=Is\000\276|\222\360\275#\306\343=\020a\014>\032\036\242\275,;\'>8\301^<.\250\t\276*\276\346\275\363\307\343=\322\212\n>\235:\263\275\224\255\006>\260Eh<o\240E\274S\220\023\276\205\210\275=\320\303\002\276\323qq\274\'{\204=\261\334\'>\033H/>Q\'\307\275t\033\024\276\270\200(=\364\301\237\275Z\300/\274\243\230\300\275\377\315\356;\362\177\265=\233\242\331\275\271\261\027\276$\362\325\274\031\365k\274\377! \276\277\215\331\275_\305\003\275 \340\362=\344\006\274\275t\332e\275\263\t\226=\222\036\275\275\243\014\261\275\"j%\275\r\206\002\276\256\273\253\275x\355\276\273_\271\266\275\303T\301;\306\334x=c\035\t\276\204\034\201=\336\305\016\276\271D\312=\363\354\001>\216\355\000=\224\243\330\275\374a|\275\260.\264\2750O\253=>P\235<\232\326\034>3\001\n\276\037\326\005>?*\025\276\371X\224=\333*I\275Sw\033\276\0052\025\276\341\237\214\275M=\356;\2322)>\213\014\213<\203\304\202\275\241\232\325\275\027#$>\312f\305=\320#:\273\241\331\216=B\302\326\275\254i\314\275\034\217\362\275\207\216\322\2751\031*>\357\340\020\276\213\021\334:\350\033\000>\217\221I=\241\2114\276*\334\004>\2758\325=y7@\275\315\013<>\213\237L\274\216\243\n>\222\261\004> \037\320\275=[/=\262\266\000=\000\330\345\272\364\357\263=K\354\216;\246\274\270\275a)\267=Y\n\345\274\025\002\021>\0013~\275\247\2123\276t\255\276=B\377t=\356@\262=\017\217\217\275(\277\026\276\017t<;\'$\362\275\244\266\234\275{v\232\275~\314~\273i<\271;~>\327\275\267`\222\275\251\3310\276\033q[\275\243K\303<\3449\002\276-iB\275\247e\365=\336\263\345<[\004\023>\360\316\215\275\271\2349\274\343\270\324=)~\003>\235?\035>\031\254\367\275\212,\322=\236o\300\275L\307Z=G\243\036\276\\\"\331\274wcx\273^b\313=\\j\272\2742\263\337\273aV\002>\357\026a\275tg\261=\306\2106=\347\241\204=\264\251\363=>F\204=&\374\372\275#\376\320\275\023\027\207\274\363\212\210\275\257F\026>\014\2241\275\002\252\234=Z&\026\276\212M\274\275\020;\026\276\033J\224\275S\356\307=\333\233\332\275\016U*>\313\200\352=\252\203\305\275\221p\231\275\226\224\024>\310\365\314=LY\036\274\221\274\325\275\352\027\022\276TO\257;V\2350=yx\005>\362\350\347=\317\003;>\343\340\007\276\007K:>\311\336\357=\231\352\225\275\246\360\330=,\276\372=]l\306=\254\003\005\276\314\365\237\275\302\305\216\275\035\027\272\275\013^\'\275\347n\341=\026m(<\335\200\363<o\305-\276-\354P=\230f\343\275\022\340\377\274\364\274 \274\342\270\371=\344`\233\274(p(=\031\004\345<y\237m=8{0\276\261\330\240\275\204M\010\273\314[S=nb\014=\256\246W\275\252\014\333\275R\333\301\275\025\013\203\275b\261,\276c-2\274T\210\246=\231\017/>\336\344\010>\257\262\021\275\033\363\203\274\314\271;\275\345\013>\275h*\023\276\021\356\213=\313\277\263\274\323\337\313=\004\333\r>\025\256\307\275\020\315\255;\30424=\243\351V=\221\026*\276C\215\r\276\366\035\257=|j\007\276\223M\t\275\231\325\201\275\306\300\026\274E\200\005\276x\362\216\274\236\014\242\274\005D2\275\000\033\344\275\220\362\024>\336\030\353=\3407\352\275F\263\334\274\225.9>W\2071>\177.;\275\377I+\276\2417P=P_\021\275e\251\250<\3219\317=\311\020\203\275\256\217\205\275b\224\271\275=\233\276=\220\372;=h`#\276\204\256\271\274H\356\305=\366J%>\225\033\021\275\216\246\336=`S\204=[\0324\276g\301\245\274\350\275\272=\027\267\032\276\377P%\276\342\353\324\274\257\204\006\276\3622\201\275q\010\007\276\263\352-<\301\263\377=\n\021\213=h*\307<A\215\267=\315\242\267\275\207B\303=\263\372\007>8\363\370\274\205\245\n\276e\367\354\275HG\224=\274\033\332\275G\366\007>\177k\021>D/\313=\312l@:2\216\314=\245\013\026>\234yN\275\366\322\231\275\277\356\262=\234[>=\2737\264\274\016\031\325\275\204\020l;k\257\346<x\343<=\256\016\233<F\304&>\036\303o\275\210\321\257=u1\317=k\246!\276\364\270\016\275_\351\036>j\312\277=\363\374@>\023D\036>ao\005\276ri\316\275\204YA=\215.\211\275\307\377!>/h\351<\016_\302\273\327\326\373\274j!\002\276\224\371\330\275\357U\265=\215\017\326=\331\264\213\274\215v\'>\t\342P\275\335\227*>\247\232\237\275\341\331\242<]\202\313\273t-\235\274\236\256\316=\266\346!\276\325\230\325\274\222\305\311<\374\022\021>,\246\000>mB%>\210\025\352\275|V\352=\325\230\001>4\370\272=\300\'\302\275e\264\317\274PR\355\275:\352\031>\275^\036\276z5&\276\327\212\353=\207_8>\026\306\022=Y\304\335\275B\324\035\276\027 \022\275\tT\246=\365S\201=\223\016\375=\235\336 \276\256\265M=\347U?>\243\204\337\275\201v\261\275\300\237\222\2742\300\031>a\2221>g\241\001>?\241=\276\325=\217=\370\320\001>>\001\247\275\364\226\'\276x&\017\276L+\315<\203,\030\276\327\"\t\275\300xQ\275,\020\225\275?\226\033>ix\234\274\273\273+<\237\235\n\276\224G\366; 8\344=\263j\305<\004\374\260\274\225\351\303\275\314i\266;\237\337!>e\263\224\275D\354%\276\350\323\335\275\233\263\263\275\2507\017\276\010\031\205\275\330\210\345\275\271,\216<\356\036+\276\203\302\244=\201L\t\274L\343\336\275\244b\007>\302&W=\2342\034\276\r\217\032\275$\323\001\275\033\202\003>\2304(>|\245\321=DrT=4X\332\275M\373#\274diG=M\262\376<\216\222\203\273\306\004\311=8T\374<\013\312\237=9\340\031>U4\344=-!\033<\270\025\357=\030\030\206\275W\2302>V\277\324;|\026\346=\244\301\003\276\343\307\016>\207\332\357<\215\255\301\275N\243!>\214i\345\274\310 \204\274.\2502>\024\274\020\275\365$\241\273\302\r!<\272\n\"=\366d\224\273\365\310\316=\334\234\251=\000\351\027\276\366|\027>\260f\360;\277\343I\275\330T\242=.\346&\272L\222S=\260\177\273\275\201\346:=\241\251\315\275\36790>qY\222\275`a\001\276|\032\005>\3077\007>\343i\330\274\304|P<\n\216\235\275N\313\330<-\343k=\033\0354>d\330\347\2750\203#>#8\332=c\235o\275f\312\002>\376^\023>\021\274\024>\370\366\202\275[\347\274\275\214o\013\275\232$\251\275\220\350!>T\222\034=\024\222\262\275\216\261\265\275V\014\n>\262\277\211\275\271\003\013\275/;\001\274\230\0022\276!\337\253\275\235\305\200\275 ]\217\275\316H\237\275\345\315\314=\t\270\013\276F]\272=)\231\036\276\270\313\365\275\252vN=\221Y\266\275\236\324\230\275\022\262\345\274\345\3304>\250\231?>?\317\324=\0048\010>\226\310\035\276\373\225\242<\315\027\205<pw >\312\241\237=\r|\215=\213\254\024>\\\272j=\032\372\274\275y\240\001\276+\247\206=\250k3=\2339\264\275W\3119\275>[\016>\0071\033=\2671\304\275s\016\276\275\214\201\203\275\315\003\010\276p\260\001\276\326u\233:j\006\203=[\247\210\275!6$\276\3504\225\275\003`k<\263\006\002\274\362x\303=\352\355\307<MC\312\275.\t\330;\261\032\275=\374\032\307\274Od\370=\221~\371\275\\\263\340\275\320A\017\276;\346\363=\210\304\036=\246\376L<\337\363\003\275\0200\245;:\243$>\243n\257\273Y\305\030\276\254,\340\274\225f\242\275\200\013\265\275#\271\000>\341\202\326=\034\373\200<pr\271=\235\017\240\275#\035\353\274x\357\330=\211u\274=\377\220\033>|\223\305<\014\272\001<\312\313\271=\003d\033\273\'\257\221\274\341\371\000=5\323\225\275J\006a<\032\242 \276\331\020\227=\231H)\2763\021\024\275)\366\035>\323\350\014>\367\222\252\275\245\037\225\275o\316\210=DS`=\370\255%\276\222\032\036>\270\2361=\261\361\223=\027G\320=\323ow<YE\003>?\014(\275\357Z\370\275\261\346\333\275\200\205\345\275\3426\037\276C\300\n\276Z\031\317\2746h\n\276\305g\332=M\342\214\275\022\236\346=\242\021\255\275\006\347\256\275\031[9\276\241\230\364\274~\367\363;\353&4<\215\273:=0q\022>\363\370\037>\361\331\324= \"2\276[h|=\340u\026\276\266\340\251=\374\263\230=`\034\367<\2044\024\275\256\253\301\274\004;\361\273\216*q\275\251\257\376=\\K\'=\244=\204\275\377\220\"\276\320Q\343<{v(>\304?\260=o\352\202=d[\000>\200\217\223=,\362B>\025\370\177\275\213\232\351=#ye=\222\2656\276{t\">\206-\204\275\027\234\313=i\200\371=\211O\333<,\370\003>f\370\006>\261\232\254\275\003\\\017>\344\204\221\274\003*\010\276v\206;>\342\217\355\275K3;\275\02301\275\377\324\t>\376}$>u\231\273\275\356\301\234<\263w\246=N\352p\274\352\307\362\275-\374\002\276\306\2304>|C\310\275\270\205*=\251\250\323=\347\022\030\276\371\022\320\275\372\270\003=\262\000\013>d\225\001>\332v\233\275}\320\014>\206\222=\275\310\006><q\014\330=\020\025\003\276\326 \034\276^\257\335\275\022\305n\274\236\266\203=\350j6\275JS\210=\346\337\031=@\271\277\274A\211\344\274S\3039=\232K \276\314\322\030\276\341\003\202\275\2605\365=\331\0160>MK\"\276s\\;>m\0316\275\246\226\272\274[\023\304<u\327\251\274\013\201$>\017_\257\275\327\311\310\275\2550\231\275v\214`\275J`\316\275\302p\367=\233]\001\275\205fH\276\205v\247\275\222\302\005>,\006\333<E=\\;\366\330\330=\216\250l\275\312\344L<\225\214\274<g\242\221\275\271X\205\275\325\342\254\275w.\250<\362b&>\250\335%\276\360w\230\275J\303\353=D\373\200\275\206\3463\276\347;\261\274bE\006\2760`\357\275\022\360\006>2\266\005\276P\301\265=;YO\275\313\313`\275\02289=-_\251=\270\263\217<+F\327=\362\245\003>\3062\024\276\3732}\275$Z\357\275\212\000H\275\312\026\021\276Z#\331=\202\256\352=\314Q\301\275\301\3175> =\344=`\0061=\322\372\000>=\302\346\274c\304\346\273\260\252\226=\321C\000=\035\337\024>R\\\004\276\367/\306\275A{\306\275X\374T=\014\326\221\275\212l\342=\342T\017>\260\227&\275$J\350<\374\\v\275\020,\006=\312\0320\275\031K\210=\215\020\277<\r:\354=\301N\221\275\332\374\243;\373\260\017\276z\205\005\275\377/4\276Q$-\276n\234\227=\031f3\275NJ\244\275\330\351\303<>\022\026\276\2667\330<S+.>\261~\t>I\002\021\275\'\267&\276\252\354\371=\215ds\275^b\364\275\372z\031>\333l4>\271c\371=\205\372\225=\r\021\241=\001k\347\275\300\023\t\275\336C\007>\355\3730=\000\227\320\275\006d\350\275J\365i<\r\\\033>\320\371\367<W\315\260<>\177\267=\027\330\370=\260\245\023\276B\231\230\275H}\036>\273\275\343=\026_\260<\333H0\276\006\364e=2\3366\275\026\252\017>\335D\242=a\267\316=\31551=\242\346\014\276\027q\360\274\302\032<\276\241\023\037\276\270\216\017>\254\306\036>\241\253`\275\367\3128\275\370e%\2769\362\272\275\316\235\364\275\365\257\007\276I?\325=<w\211=\314|\021\275z\206\247=ji5=\307\272\'\276q*\"\275\202\375\210=\246z\031<b\002\340\275\311\0076\276Q\240\026>\276\325\014\276\365\021&\275\020\200T\275\3154\362=e\330)\276\355x\230\275R\005\260=\213:\272\275\350j\016\275\010}\304=*\213u\275X\360\005\2768\366K\275\034\326\016\272\323\274Z\275\366v\221\275Df|=\30078\276\224\257\343\275\367\351\227\275\366\241\t=\034?\000>n\345Y<\214\300\271=i\375\241\275\216\232\342\275\022\254\224=\027\245,\275\262\t\362\2739\2522>%u\003>}\"\315\275.\264\034\276\260a#\2762N >\337\271\325\275\213\212\264=2T\017>\270n;\276\265\3515\276\034V6>EI\021>U\206\356\275\336\023\207\275a\373\017>$,\002>\2639[=\035$\347\275l\361\267<[B\266=\202q\005>\026}\365=\235\363\241=\236\245\n>\264s1\274\362\231\375\275_A\224\275\010\000<\276\263y\361\275\022\305*>\014\357d\274\321\254\262=\016m\352\275\366c)\276\204\221\006\276\314\204\256\275\261\363\375\275\355\255\215=\366\327\"\2769\022\t>\325N\033\276\265J\035\275\352\306\025\276\232\353\244\274\265\350\325=\\\3521\276\262\313\213\274(\235->\025\372\373=J\210\033\276\212\204Y\275\357\001\027>\356*\004\276\347\356\t>U\021\223=i\2519>j\026\300<\242\235\340=\222!\352\275\200.\265=\325!\330\275\313\372\250=\352D\017>\262\313\235=\3503\034\276\226\353B\275n\202\'=\231\321\355\275\256\252(=Kd\017>GF\027>\325,\n>\221\241F\275X-\330\273\362X\233\275\263v\036\275\227\207\006\276\010\364\203=\347%#\276\374\356\032\274\307\306\031\276\204\021\226=\374\006\372\273\227I\031=D\333\347=\342\326\022\276\317 \007\276\265\321\373<\220C\203\275\253\312\000>\027\357p= \322\002>\364\266\270=\207#\343<#\347\264\275s\240\035>\025?\024\276\227,\003>b\314\022\276+\"\006\276\313?\005\275\260\247\332=\332\320\037\275 \307\345\275\337\026:\276G\020R\275\254S\213=\365\231\033\276\340t\"\276q1\010\276\001\320\330\275\357\363\320=\220\034\023=\'\250\035\276|5\010>4k\027>\250\004\341<\363\027\375<P\020\202<3\337\'\275\220\n5=\3021:\276\311\342R=\000\n!>dH\234\275mA\333=:\233\233=\266\317\234=~{\330=+\355\n>\263?\315<\206\3055>\346V\025=\022\375\245\275d\307x\274D2H=\002Y?>AC \276\177[\001\276\270\264\230\275s.\263\275\"\302\326<\021r?;\256(\261\275\247\264\030<\276\334\242=\313(\241=\250^\234\274~\235\371\275\237e\016>\215\323\245=\036\231\'>\037\300\334=\201\301\032\276\366\020\207;\320\020\331\275\377\201\000\276\377\315\243=\345]\020>\305\206\031>P=#>\241\341\377<<\366\254\275\206c\307=,\022:\275-\244\364=\325z\230=\215K\311;a\313\027\276d\271#>\025\307\260=\017\200\014=n\244\374=\254\266Z<\017~-<\334\240\360\275T\024\347\2751\302\033\275\2621\025>]\017\357=\227$\273\273D\367\212\275\345\211\t\276\t\257\032=\274\002\013\276\322\236\321\275\275\267\035\276\305\351\030\276Z\3168\275\365\250\">\324h\231=s\341\251;j\250\304:\326(\311\275\211\254#\276\342r=>\264\237\036>\322\367\023>\246{\256\275\345%/=\224\254#>\350=,>\217\211\035>\262\3560\276\t\330\313\274\373\254\026=0\001\356\275\225e*=\007\347\365=\001\357\233<\035@|=\263A\211\273oG\006\276z-\334=\333^\026\275X\367r\273\371\225\205\275\214\324\316=:\223i\273\235/\t\276-\361\005\276\023\367\325\274;8\226\274\371@\020\276\372\240\332=\353\223\362<7\244\244<\221D@>`\006\033\276\3458f\275\320n\207=\177\312\036=\020\375\r=\3028\354=k\356\024>\343\236\022=z\210\271\274\343\234\234=9\236\322\275Q]\236\275,XI\274X\030\034>\302+5=\331j\016\276\336H8>\241\311\346<\201\257\034>\275\373\013\276\025\022\277=\207\t\033>\314\007\265\275\323 \">F\362 \276\221\360,>\237\210(>A\273\004>P\275\230=\266S\213\274\342\314\222\275r~\016=\214\204<>\2235\033>\320\362\035\276II\205=\026>\204\275\231\375\200=)F\007\276\314\342\315=y\316\001\275z\177\t\276\013<\344\275\343\240\266=\374\007\231\275Jd\025\276g\303\313=C#\233\275\003\177U=<J\177\275\325?\352\274<~\231\275\001\311\372<\221\016\232<Qj\327\275\303e\273\275\023.\357=\273\303\263=\325\010\372\275\357~\027\276\000y\202\275\202\373\223=\r\204\342\275\177\373\341=\316\326\027\274\t\301\273\275\036>\000>\360\250!\276Id\323=0\262\213=\222\224\360=z9\204\275$\314\265=\300\271\221\275j:\023\276\363\221\030\276\313\230\307<\252_\306\275\364\006j=\251\335&\275)\373\342\275\0327\314<|\235:\276\253\332\364\275\025\224~\275\223\230\345=\345\347\351=\372$\240=[\t\010=\235\035i=[\337\302\275\275d\022\276e)\221\2752p\335=\216<\314=y\213\001\276j\225\220\275\030\002\351=\262\2106\275y\213)>A\243\340\275\346\036f<\246\212\016>\327~9>jj&\275\303\355\323=\202\025\021\276\221\355\231\2746M(>2\310\027;\037\304d=N\303\223\275\032\352\033>\0351\254=XE(\276\345[\276<\310X\177\275p\016k\2753{\206=\276\367\300<\254\247\256=\300\360\331\275\'R\010>\027\023\037>\303u\347\275\265\3442\276VK{=\001\252\031>\252\226\253=dh\034=6I\260\275:\211\216=\241\221p=\024E\314<\340\214\017\276\274H5:3\326/\275\253\300\007\276L\252\000>\"\004M=\324\260\377=\242 \010\276\356\300\032\274\201\'\357=\301\301\037=\024(\305\274\244c;\274\360\352\352=\3326\'=\3522n<4,0>IY\276<\311\014%\274]\206K\275L\016\027>6\037\230;A\027\355=\222\032\'\276\326j\006>\352A\006>~y\r>g\212\031\276co\200\275\277\376(\276\030\246\224;\254\3038>\031\350M\274\013\234\215\275\273\314\356=\356\241;\275\237\372`\274V\341r\275\357\357\214<\364G\024\276x\375->\272 \246=\304\\\366\275B\205\244=F\261\n>\274Y\r\276\302)\352\275\250\206\013>J\373\003<^%p\275\256\375*\275n\014\345\274\263\351\033\276\362\356\031\276\255\335\024\276)\247\010\276\241\305O<*x\323\275J\262\261\273Z.\371\274\205{0\274\247S\376\274\215a\201\275\223\255\310={A\016>\235\377\300=a\354M=\315\316\362=\203\355\233=3Q+\276\030\317\333<\013G\236\274\207~\312\275\336\361\000\276\256\026I<\341>\010>\014K\374\275a\310\247\275\200\346\003=\033R\373=3\026->\000\355)\275\234+\354;Bv\'\275\350\276\003>d\271P=\212A\351\275A\357\014\276\2409,\275<m\323\274\226_\006\276\226E\261=nH\270\275\356\254\325:\203\374\253\275dvs\275U/\033\2766\367\266\274\003\260_\275\213\000\r>\n\017\225=;C\232\275a\254\277\275\352\025\016\276\220\264\331=<\353\215\272\361\205\004\275\3048\365=z\275 >.\356\026\273\367\321\200=:\236\367=\366`\311\274\370v\t>*\323\223\274\006\205\235\275|G\211=\275pw=^\034\030\276\273\204^=e\337c=\005\361\267\275\240\213\032\276\301\033`\275&\244J<\234?\264=\234\353\236\275\232\004\341\275\"\273\316\275\364\r\022=xG\325=w\304\215\275w\'\301\274\231\365S\273k\365\023\276ZJ\272=f\031\017\276\024E\313=OO\t=t\036\303\275\'\234\347=S\260\017\275\250+0\275\200\262\253<\331\035\225\275\342pp=\264+\236\275\313\3703\276l\343<\276c\351\024\276\"\226{\275\255*\321\275\023\'\014\276\2577\r\276\"\305\357\275\231\026\004\275p\326\000\276\014TH=\265\351\276=\235\264\333=\002\3676=\312\313D>Fj\302=p-\337=WX(\276lr|\274\365\026\324\275\266\351\311< J\372=\316m>=\221\200\317=.\311\321\275\216{\222\275\253\335\234<\337m:>\253\215\002=v\251\316\275S\221\237\275\246#\355<\014\333W<5\236\002>\003\364\253=\037R?>\212\206F\275\327\320I\27547\346\275\375\220\177<%2\231=A\373\321\274\243=\027\276\0362v\275\233U\005\276m\323\274\275\037\276\364\275\302G\262<\321\034O\275\371M\231\275\357\347\343\275B;/\275\035L\026>\257E.\276\315\343\021\276\220z\022\276f\206\252<\3245)>\200\306\021\275\352\223\025>!\2007>b\014\242\275ke\335=\007I\227\275\237^1\276\3209\251\275e%U\275\316;\363=\324\373m\275^/\244\274\r\366:\276v\203\341\275\211\301$>%\321d\275\304\270\022\276)\031\036\276t\017\255\275\326\320\021\275\201\334\224=xg\335=o\3571>\252\035\350=\221\267\360=\312\006\312;\310\207+>\275Z+\276U\267\003>\376\212\211\275\321\327N=\260\241\357=\310\356$\275\022\027i\275\335\034\307=x\324\237\275TMy=\177\3119>\324\234\006>V*C=\255\245\021\276(\017\302\275\367\362\344\275C\300->\330r\252\275\223\013\024>\340\315\302=\336\n\320=>}\341\274\326\031\026=\240\347\002=\266X\n\274+4\275<\264\220\352=\253\376\253\275\377\233\007>\205.A\276\327\016\272=\300\247\211=Rt\301=\351\320\313\275\330b%=^\026\223=\243\252\"\276C\226\003>\005l\335=q\3606=\014\352\316\275\233\340\025>\024\021\343\275\274\316\310<l{n\275\277RI>\374x\020>R\266\023\276c\"\312=i\036\020>\032\320O=\21307>\237\242\007>\204\036\371<\017X\023\276\243\230\366\274\026\360\252\275\276\2132\276\3478\325\275Z\373\033=\272\202\023\276\2738\031>\242j\307\275[\347\205\275\300\302\240\275\235\334\323=?&y\275U\323\376=\365\367@\275\376j\307=U\254\">\333\303\000\275\036\240\304\275\215\332\330=\336Q\030\273o\355\004\276\201\312\340=U\371\324<@\205\305<X\244\"=\312\221s\275[ \312<\345k\010\276\024\342Q=\306\255\017\276Y\365^\274r^\033>R\235L=;\234\307=\274\260z\275-\014\035\276\014\023\331\272\002\316\246\275\377\0250\276\216U-\276\315YC\275\013\274\010\276^\024M=\223w\005\276O\0367=\303\177\237\274\027`\345=\270\350\005\276\227\r\t>\340\233\017\275X\010\335=\346\354\374=\352?\374=\256R\177=\317\327\002=B1\254\274\216(\005>\272\013*\276\2216%=\232\206\212=\340\026\206=A\363\257\2742\016\330<\367<*\276a\211\247=\303R\003>KK\252\275\327\027;<]\241\243=%\233\334=ot\004\275\025\350\017>\006\027\034;2\360l\274(\014\021<\035\316\313\2754~\031>\333\253\003\275x\247\210:\260\227:\276\233\374(>h\226\250\274y\000\247=N\344\037\276\260Q=\275\304\243:\2769\000v=\221\336w=\026\377\305={q\223\274\367\263\240\275-\026Y=\227B|<1S)\276}tC>a\371\347=\031g\002>\303\254\201=\002\0017\276#\246!>I_2\275\306(\031>h\376&\276\020\2235=\002\206H\275<\213\365\274\306:\354\275\001\332\000\276p\342\315=2`\214<\2126\267\275j\022\302=\353\366\262;\374I\356=\n\344\217\275+\353\023\276,\3021\274-x\247=\364\014A=\302\212\356\275\233\352\215=\366\236\343\275\344\274\237\275Z\377]<;\0256\276\247\027\265=\204=w=\331j\265=\250\352e=\263,\r>\222\356\303=\276{\262:\265`:=\345FU;\220c\033\275\365\335\027>\\\232r=\342\323\177\275K5\211\274@|\243=\0033\203\275\317\\\305=@@\\\275p&!>\211\300\272\273\330NB\275\027\034\031\275R\025\310;\323\321c\275<\372\004>\275\000\352<%\243\032=\236A8>\rW{\275=\366\356\275\206c\026>\366\2042>\320{\225=\036J\033\276\375\t0=\020(\370\275\205\305\017>sXY=\343\231)>\303\032\036>\353\032\322=\247\211\215=\303\211\357=\277\217\017\2769\235\364\274\306\'3\275nq\236\274\343\344\205=\250\3617\276/\220\233=\021\037\351\274\344\214J=B\350\021>\274l\006\276\356\235/>\tZ\033\275V\245;\276\311^\245\2747\206\253\275\332\376k\275\240\250\373\275\217\222P\275\274Ld\275\037\013p\275(\342M=\'\000\334\275\252\n\243=\020\202\317=\223m\225\274\364\236\360=\277\265\376<K%$>I\251\362\2748o\235=(\277\021\274jm@=5\216%>\264\323\223=\307\252\301\275\216\372\340<\313R\321=\264\333C>$\"\010\273\264\n\001\276\201\300S\275{\230\027\276\025\312o\274|\020\270\275x\250\337\275sz!\2754\217\373=\004\'\327=\233\223&=\206\353\254\274\217p\333\275\217\307\257\275=\317\030\276Y\355E\276*\300\007=\253A!\276\t\262\217\275\016\354\024>\271\256\n\276\311\313\340=\235\305\307=W\224\372\275\354\256/\275n\3170\276\274(l=\013E-=\327\312.\274\306\243\376=\370\273E\274jJ!>\"\251_<\351\206\000\276\361\364\r\276*\025Z\274y\371\023>(\032\350\275u-\243=\316\255\201\2754_+\274\266\270\224= d\376<Z\312=;g\376\320=\177\2443\276\225\007\231\275\250\003\024\275\351x\257=\030\205\236\275\315\356\323\275G\221\373=\324\304\343\275Nj\274\2742\203\323=\270\000\244\275-\336\321\275\304\265\010\276$\330-\276\331\021\211=\202\260\006=/\240\023=I\177\341=\331\\\246\274\241\014\227;+\311\213=\220\244\026>\316\351\225=\224\232\325\275\205P\254=\3642\001>\004@\025\276\351\357d\274I\302^\275I\373\276\275\n\263\005\276\321\324\034>C\321\312=\336b\317\275\203]\177\273\003B4>\2018\354:\004\267\000>\252p\020\276\016D\n>\225\256#\275\250\252\271\275\177\263\001>\t\356\021\276[\265-\276\357\211\240\275\302\r\346\275\301\263\002>\304\031\000>\2439:\276Z\233\036\276\300\211\037>\346\024\007>\234m\301\275\243O\310=\216g\023>\260\356\205\275>\007\275\275\236\273\226=J\251\345=\237\251\267\274\271\367\264=\326\032\025\275\tK\031\276\243\271\230=Gj\375;\035/:>g3\277\275&\245\310=\200\372t=\350\262\271=\355F\237={v\235\275R\377\005>\224\302\335\274dBl=\331\246\007\276^\236\272=\333\305\241<.\315\016=\016H\354\275\256.4;\341g0\276\002#\000>.\202\342<\004i#>\271\217\022>ag\307=n\375\274\273j\227I=\347E\004>\023\344\316\275$\3719\276P\373\216=\000\252\017>w\004\232\275u5\240=J\355H=\346\207\031\276\017\007\244=`o\316=\360\331\227;\276\030\002\276\371\214>\275\003\235\267=RP\234\275\316Bw=\231\033L=(`\013\274:\203\377;k\3763\276K\330\304=[\212\201=.))\276\304h\372\275\360A\253=\211\200\035>\361w\362=\267\364-\276\307L?\275\002\026\030>\276\252\r>\031\312.>\037}\351\274\000\226\016=\325E4\275)>\302\274\231\003\317=\302\242\023\274\263yF\276P\226\314\275\344\010\037\276,6\002\276\tF\245\275Wr)\274!\010.=\335\345n\275\203v\036>`E\362<~\337z=\333\317\215=\002\341\n=m\344#>\257\367\323\275\013Z\327\275\247\326\355\275\211`\213=\313I\322\275\332\346\263=\305\020\006\276\037\014\306=Wr\224=\256\237\255=\24012>\322\r\374\275\301!\335=Y\310\025\276]\273>\275\007\364)=\357\223\201=\026\033\277\274\326\005\017\276\315z>\276\304y\002\276\263H\317\275$.4\276\'\367E>\0008\360=\005&\r\276\206\241\351=\340}#\276\300\034{=\313\341\365\274\244\r\322\274\365ZA\276\273\016\037>\267\306\222\2754P%\276\253\227J=\363\370\334\275fM\033>?\034\224\275\004\302.>`\233q=\'\374\306\275\376\366\031\275\376g\311;\331\324\226\275o\222\r\276(\376\266\275\034\0061>|%\262\272\233\207\265=\351\375\256=:v\336={~\234=\020\305\307\275\267\360\357\275^+\337\275\001\3538\275y\356\203\274[\333\235\275\025r\025\275q\225\360=\267\232\342\275u\"l=\274\366\266\275w=\350\273\302\241\377=\347\023\023\276\357\213\016\276\271\331=\276\362\327\031>\351\262\035\276\234\307\026>LX.\276\226y\312\275\357k\367=,?\007>\216\212\361;\363_0>\026z\231\275\332\237\243\275\353\201\267<c\024\033\2758Z\364=\322\366\354\275\234\371\255\275\031\375\004<\365\340\375\275\225\365\000\276\023U\371\275\356\"`=\241=e=_%\020>?\252\324\275\344i\210=\343\314\t\276\030b\177\275w\006->r\302\021\275\021=\031\276\243i\331=&a\350\275\rD\013>\252\303\t>h\244\300\275P0\353\275\222\306\231\275\020\306\013\276\203\262\324\275\302\336\302\275-\242C\275\353]\017\276o\023\344=$;\244\275\210Pa\271VP\022>\3437\246\275g\013`=\313|2\2769$\371=\374n\013>\204\2416\276E\222\026\275E\340\245\275G\352\274=t\331w<(\212\343\275\276/\220\274\331H\376\275Cc\313<7Q\261=\006G\364\274\236>\022\276\336:\004\276_\"\007>>2\214=\322\307m\275\366b\263\275\214<\013\274s\001\007\275\223\357\343\275Q\253\031\276[q\246\275={,\276\035\336\027\275\227\212\220=I\236\344=\272\314l=|\010\031>:\200K=;\262\301\275S\255\n>\322\376\004\276\370\224\000=\030\307\005>b8\315\274OJ9>b\320\256\275\271\'\302\275\324\000R=s\"\330=iQ\210\273\247\032\010\276\241\321\376\275\213&\376\274j\rl=\3558\210=\257\273T\275\'\211\022>\016K\034\276\314<x\275\247(\364=\242\000H\276XIQ\272\3727\006\276\036\341\017:g7\021\276T\026\353=I\364\177\274\210@\316<\375\274\017=\273\026:=\002H\342\275?j\007>*{/\276\310Z\030>\234#\230\275R\321h=\352\274\t\2763\303\372\275\205\313\302=\2060\303\275x\222:\275\334\265?>{/\032\276\333\300o<_.f<w\201\361\274h\362#=\203\007\355\275\024NL=\255s\316=\264\305\274\275L.\004\276Fk\n\276\276\251>\275q\374t=\276iu=w\357r<\311\207|=\3250\003\276c\252\253=\254\203V\275\371\231\037\276K\247\025\276\202\"\007\276\235\277\261\274.\205\007\276.5\236\275\004\265\032>#\322<\275l\031\276=\263s\276\2743c\013\276\177\315\023>:u\024\276\333|\021>\251\243]=jG\017>\263\3162\275\364\312\322=Q\352\r>\204o_\275\366.\n>\177\017\255\275\026\327e=\037*%\276E\216\275<\351\244\331<\340\220!\276\324I\233=\n\037\021\275\020\257\320\275\233a%\276f-\024\276}\330\022\275\343\177\344\275\224\357\236=\200a7>\245<\036\275\273\274\260\275[sa\275\346\241\213\275\237\266\235={\301\014>\323\021)\276]\364\361\274\231\006\000\2753\231\300\275\364\204\247\27579\372<$\004\202\273\312\344\267\275\037H\376<\"\0248\2763\323m=\023\201\030\276\203\327/\276n\256\344=\323L.=\013\\\033\276\321\312\340=\350\266\210\275C\000~=\211\246\372\275r\273|<\370\310 >\000\320\241\275\314\210\034\276w}\236\275x3\013=\204a%\275\363\377\376=\303\374\254=\310rc=\374\361*\276\262u\255\275\313\315\377<\303\005\'>q)\351\275\330\232\022>k\355G=\321\001\005\276\362\341$>\016B\264=\221E\322=\352\276\262\274\005/\002\276\214_\365=\375\337\022>\366\005\016\276\200\270K=O\244\014\274?\352\237=^\202R\274&\010\032\275\257\323^\2757O\234\275\207\211\034\275$\032\014>D&\257=hQM=\201\'\273\275h\327\244\275]\325!\276B\234&\275/\224->\264\177\031\276\014\355b;\017\251\320=T4\254=\261\"\033>\364\332\273<\311c\370=\013[\226\275{e\374\275l\370\214\275\262\267\027>\247\212)\276\362\245\344=\213\356\325<v2\300\275O\026\210<\2422N=\277\351\201\275\200\314\363=Z\013\243\275\347\246\352<\276\321Y=<\253\025\276\243t\257\275\227\351\t\2762\241\260=\227{\004\276\037\2568\276\374z\273<\305|Q\275zg\273\272\236_#\276\200\344\017>E\264\332=\312\213\332\275\373C\260\274\210\302%>(6\273\275\275\364\275\275\014^\351=p\006\334<`\276t\275 \304D>T,7\275t\3156=r\332D\2762\256<\273qN\204\275\344\314F\275\354&\361\275\271=\016\276\265S\244\275\344\007\221<\301|\343<Co\355\274\007\037\037\276f\315\217\274\255\202\376\274w\001\001\275\301\212\212\275\346\023\307\275\000\215\363\275~\225\307:\364\222\n>\324\307\212;}X$>\351\000\324;d\250\327=\036\267\277\275\237f\037\2767[\322=\202\226\247=[V\333\275Ff\355<*\372\004\276\236~\r>\3261\276=\214\272D=\313\376\007\276\334\365\213=\314\370\221\275\014\372\312<\006^\334\275Z\323\003\275\375\356\341=X\222\037>_9\276=S\221\207\2755\340\017\276\022\354\305<Y\261\332=\354~\212=[\211\325=C\025\250=N\213\003\276\3567\261\275i\216\271;\361\024\233=\355\033\245\274q\307\236;\305x\034>\030\253\351=\222\002F\275\300n\004\276\253\377,>!#\257=\037+\241\275a0\'>\010A\030\273\016p\027\275\332z\034>G\370)=\227\203\030\276+^\306\275a\307\027\276\236\3542\275\314\367\207\273\t\367\037=:\334\231;\263\247\347=\303nJ\2758f(\275\337\221\223\275\346\352\322\275E_\251\275\264\367\354=\202Q,\276\"(\006\275\rs\255\2758\030}\275\342!\316=8^\">+\343\205\274_L =#\222\022\276:\310\245\275ti\036>\215k\311=4\032 >|\263\375\275\250\273\263\275\313\350D=\360-\025\276\304D\322<\032\013J\275\021\252\277=0T\017\276\331:\004\276\336;\373=\377\371\224=\303a\314\275n\311[=\243.\277=\032\263\373\275E\034 >\263\274\340=\202\"\230\274\265\n\017\276\302s\035>\202\373\330=\027r\327\275\305&\363=zvh=U\322\027\275\202\272\265\275p4\213\274@\\\224\275\313f\355\275U\"?=\240\010.\276\244c\271=/\271\">B\237\333\275\241\232$\276\232\302\302\274\360\264\215\275\304\210(\275|)\375<\317\301\226\275A\025\001=\210\376\372=\256\266\360<-\003\267\275\336\2330\274\t\252\235\273\206\354e;\366\306\371\272\3473\201<\211;\251<\353\320\201\274\304\353\303=\331\216\314\275\341\230d=\221\211\343;}{\255;\014.\031>\301-\240;4\306\373=;\273\272\275H\252\002>}e\335=t\361\317=\226R\331\2744i\027>}}\215=\326\377\311=\177\376G\273uH\222\275 \336\236<=\014C>\032\201%=\301P\007>nkI<\246\225\003\276{9\214\274\374\002\245\274M\251_=\237\221\355=\006\250\260\275\237\317\006\276<\237\311\2744\"/;_\n&\2769\261*\275\014*\303=P\244\005\275\t\003\003>\000\312\000\276p \357=1\305\202\274/B\357\274\222[<\276\371mq\275I\003\302;\252\206\367;\222\347\033>\t\n\241=\375\270\235<\320Ve\275\234z\313\274\234\234\275\275ds\244=el\265<y\205\t\276=\270\207\274z\227@\275\214Y\204\274]\203J=2\252\265=\t\233\272=t\362\254=\312\227\037=\\\030\211\275\245Y\212\274+zU\275\014\211:\276\223\307\273=\232/ \275\033\236\202\275\366L\342=\024\322\347\274\'d)\275\302\270\302=s\356\271\275<\365J\276\032\342\036>\n\355\266\274i\2561>%\030\376\275\367K\242=U8\020>Hm\242\275y%\322=\346\230,\275\373\262\020\275\361k\336=)!\254=\r\026\n\276R\274\366\275\211c\037\27688\365\274\310D\t\276\232\013\300=DB\251=\242\220\236=W,\260=\204\341K=<S;\272\232\234\026\275\341[x\275\034\303\375=\231\t\016>TM\236=\277\246\301\275\265Gn\275\354\376\252\273 ~\014>\210\313\227=\372\200\224\2753\204\001\276\267\204\207\275i%\010=\375\207\373<\204G\320=\331\333/\274K@\255=\t:\337\275${\347\275\217\274\252=-\325\035\2767F\016\276~\264\251<\243\025b=\260\302\034\276\266\263\336\275\324\3227\275R1E<\226\275\332\2755X\005\276<y \276\336\213\013>F\212\025\276\267\023\342=h\336V\274?g\253=&\235t\275\260i\200:kT\014\276\275j\017>\364C/\275\226\007\336\275\201\204\353=o\204\\\273\226\334\360;so\">gz\344\275\025\221p=\356o\t=1\233\010>k.%>\"E\332\2746\237\031\276\253\361\025>\037\376\347=\346I\351\274\257c\304<\0322\016>\250\005+=\350;\330<\374%\247\275\320\237+>\0208\025\276\362\302P\274\326+[\275\342\373\023>\357\025\212=]\305(\276\026\320A=\2205\027>\001K\004\2767=\351=\333I >\321f\257\275\026)2\275O\234\n=\222\231y\275\210\240\036\275\260\262\006=\315\027m=\316p\264=\001\316\025>\354\263\230=\232\032\360=\251gt<|t\372=\030\252+\275#\370\236<l\241j\274\";\347=2#\010>`3\031>\004\214\361\275\300V\026>\346\336\033=P\211\003>\t\270.>.\336:\275#\272K<\330\002\345=}\247\316=F\2330\273\276\326!>\2045\223=\364p\216<b\242\355=\n\014\351<}\256\210={\264\252\275ia\343\275\265/\354\275\214\014%\276C\340\002>\204\370\344=\300\247\265\275\311W\273=\230\261o\275FS\017>\357\337\320\275\325h/\276o\213\">\375\214\352\275\004O\340=\266\326\205\275C\375\023=\237\264$>\276J\033>\312j\007\276\203m\315=\207*\375<\231\304@=\227`\036\2763u\341=\nkm\274\003\317\310<\005v\241<?\304\361;\371\222\023\276\326\212\363\275}#\311=/\034\\=\275r\023\276);\310\275K\333\003>[0v=L\217\277\274l\331\345<\340\t\013\276\221_\"\276\236\242\000\2769G^=\255\342\225=}z<\276\214/\010=\222\311M=\265\035\036\276\224\0218\275\243\006\371=\241\331\t\276\327\022\262\275\265w6>\252#\034\276\272r\020>\024|\260=q-J\274G\252\325\275\313+\030>=\023\002\276\035\260\026\276\213n\022>]\231\r\275\375\r\274\275\207\2244>R!,>\2440\036>\256\"\341\274\'E\204=\377\310\364=\355\365\206<\232\346\347\2750\366\311=_\272\004\275*\324&>\271\322\247=\r;\'=\017\241\207\275+\004+\273\217\025<\276\344\027\220\275\316\004\"=7\323!>\224h\302<t\216 \275\230:\272=D\374\331=%\346\014\275\236\211\226\275}Pd\275\227\332\035\276\033\217\003\276\0253$\2751@u\275\306\244\327\275%\371\021>B\363\342:\022\226\350\274\\S\273\2759\267\">\'L\r>\221s\225;\252\202\024\276\017\255|\275\n|=;\355\202\327\275\237p\207=\027\365,=4\367\234\275\206ct\275\2213\336\275\211\363)=g\322\303\275\2307\314\275\035b1\275\024g\224\274N\3331>\0024C\2753\263\212\273~!V\275e\225\225\275\312\t6\275\324c0>\363$y\275\036lo\275\035b\276\275\232\273\352=/\307j\275\367\200\207=\002\034\037\276W\372\017>v\205\302\275;\332\031>b\206\332=\323h\'\275\006Y\247;R\255\t\276VC\177\275\205\245\273\275\271\274\215\275x \276\275\246x\005>\276\377\274=\233\353 >A\'\010\275\374\265\032\275\313\265\231\275b\256\231\275\007QQ\274\355\2272>\013\217\224\275|}\017\276\006\336\036=\231\205p\275uq\027\276v[\254\274\214v\247\275EBA\275W0Q=\'\366\244=\303\350;>p:#\276\n\322\006\276Ud\032>\222).\276?K\276<\332\246\327<R\216N=\n\354\364\275\341\303\177=\272\317\230=\255\2404<\360\t\t\275\271\277\032=s\354\357=R\232\336\274D+\316<&\310\347=\312\212?\275\033\234\020>\3078\013\276&\253E\273\330\365\326\274\376\\\373=Om\002\276\325\n\020>\341\211\357=\216\313.>\246l6>U*\037>\264\350\025>\'O\313=j?\351\274\323\271!=\364\312h\275>r,=\246\210\272=\217B\032>\364\204\256=\255\003(=R\343.>\261\037 =\304uH<\2017\225<>\215\312\275\004\017\306\274X\353\272=\026\314\264\273\360\301\032=\307\230@\275\233L\352\275\357\350\370\275CR\031>U\320\264\275\251\371.>\021\345\227\275\036\322N\273\261\206\302\275\227\365\350\275uQ\204\275m\305\350\275\316p\277\275\332\374\371=O\\\311=\230\336\231<q;\002\276\357\376\027\276\3223\351=\323\217\007>\327m\306=\356\275H=\251\277\226\275f6\205\272\275#\271\274\331\255\342\271\277\336\301\273\201\307#>\312^\342=,{\323<\003\2474=v\313.>7f\006\276<\302\235\275{0\'\276\034\342$\276\314\205\351=\033\332\001\276\276\344\217\274J\376 \275L\360\213;\336\253f<\264\345\250=t%\363=\242\215P=\257\367\001\275\2614==\323\212\235=\227\344\004>\3725$\276[\222\037=\261g\001>\340\014N=\200\311A>b!\025>\r:\224\275\\\010?\274T\366\313\275\344\251$\276\335b\030>\263\0303\276\230\245\002\275\355B\365=\261\210\273=\255\201q=\360\316~<\322\"\217\275c\317\232=\224\366\263\275\\g\371\274\'\005\267\275x\327\344\275\215\001\331\275\216\360\032\276\001Q\006\276\231DA\276\244q\345\275.N\333\273:\\\264\2754\250\330\275\302\014\221\275\345\237\237\275\371\264\005=\3647t=\244\271\220\274\222\031\316\275\353~\334\275\tn\366\273\344q\003=\246D\034\276\010\337\003\276Un\313=\223(\245\275\257\226\031\275\341\365#>\320\200k=\223:.\276\342E\"=\240;\016>\212\001\234\275xfT\275\273f\372<\253K\031>\034\376\377\275\003\016\025\276@\207W;,\341->\272\342x=r\206\255\275\031{\324\275\251\353\277\275p\267+>\277\336,>\005\037E=\3506\266\275d\357\340=\021i\200\2754fr\275\tR\013\275K\365\371\2755\211\032\276@\211\004>\314+\024\273\002\005\024>\353\345\366\275V\330\026>z\331<\274\207\324\026\276\262\023\306\275J\262{\275\321\323\203=\232\271\006>\022\014\241\275\036\225\017>Q,f\275:9~\275\366E\263=\327\036\356=Q\ta\274-\332\372\2758J\330=\313\234\'\273\257#9\276\202\033\317\275\216!\014\276\250\006\t>\216n\017\276\t\t\351<\2652\335=\335\221\002>\323e\315=\351\235a\275\220i\030>\016h\367=\346~\217\275\217|\303\2759\302\236<h\030\342\274\2362\244\274;\0374\275\357\357\313\275d\021\304=\321C\274=\204\003\007=\216.\266=\2169\377<a\007n\275u\227\235=\035\207X\275\261\230G\274\300\035\264\275\022\005\010=\251\024\257\275\262\021\177=\327\033;\276\256\206\215\275\336,\020\276\005t\371=\325\277 \276\254\213:=\317\377M\275\237\016~<c\003R=;\247\036\276\335\226\201=\222r!>\264\333\215\275\315\355\312\275\242C\000\276\004\363\376;\004\230&>D\200\024>\013z_\274\017\237\374\274\326\240&\276\211{\320=4\354\035\274\247\222\207\274g\016\004>\323\374\266\275%\255\030=\245\362\003>\312wp=@\035S=\\\237\252\275b\221\364\275n\344I=\266\t\025>\227\010\364=\274\233\367\275>\\\022>,o\215\274\263\247\257\275\222\370!\276\310t\247=D\350[=\241\267\365\275\261ZC=\206\351P=\264V\"\276\261\033\260\275\260\331\233<R&\231=\247\'!=J\203Q=i \234=\210c\361\274.6\264=\261^\273\274\274l\250=\275t<\276\025\307\020>3R\255=\365\371\034\276\227\037%<\300#\334\275\257\177\266=\3309\010>Wq\017\276\361\346\335=\232\234W\275\257\022\267=e\312\220=n\252\022=\355.\214;\r\246T\274B\312\363=\205_\001\276\"k\205=\335\000\267=\207\232u=#\314\252\275\372\234\n<\206K\274=<}\016\276\205J\311=Fm\"\276\277\261\023>1\310\231=\224\262\312\275\306\372\006\276z\364,=\357\216\006\276$\363\362=\275\177\235\275\205r\223\275\201!\030>\263\261\n>\022\256\177=\007\021#=\206\245\315\275\343EC=5\257\016\275t\366\024>\267\332\270=<\362\036\275\035\204\310<CT\320=>\374\265<ee\212\275\004\3715=\201\005\235\2755O\377\275\326H\000\276\222\314^;\360\013\373\275l\013\273=\274=\252\274\316\273\t\2769\344\303\275F\246u<\311\r\261=\353\203\273\275\257\303\312=\223\325\026\276\377\204 \276\021\203Y=\364\357\007\276\n\370g=\240\210\354<D\204\265=Q\270/>UV\324=Nw\354=\343,\007>\321\241\244<Y\332\300=\222\222\277=4x\274\275aR\004>\325m\367\273\330C\207\275\361\371\001<\241\207*>\035\006\006=\031\006\023\275\201\000\362=Q\235\016\276%W1\274G\021\t\276\377\333\360\275 \277,\276\211\035\316\275!`>\276\256xY\275\340 \026\2768\224\232=\n\253\314=\375\274\020> \261\000>\257\324\037\2763\245\033>\\j\340=r\364:>\253rF;\035\265 =\202,\224\275>\355\215\275\024f\016=\371\025|\275\274:/>T\264\020=\345.\201<5k!\276\267;\207=5\365\350\275\221\371}\275\265\321\027>x\345\222=\216\230\017\276\225&\263\275sB\253=H\362\316\275)\030\021\276\245[\036\275\231\234\300\274A\t\371\275\2334\304=\301\347&\276\332\326->\010\022\013>\205\217~\275e\347\321=\311\226\230=\271\365\263;\270\233\"\2764\021\343\275-\327)\276\"\247\237\275\035\277u=\362\301?\276B\274\010\276\247\276%\276S8.>\265P\237\275~T\260\274\225W#\276\014\311\357=\346\034\005\275\177\312\277\275\034o\036>\262\214\236=R\001g\275\365]\372=\302\252T=\364\276\366\275\251\255\'\276\374\356\255\272\211{\327\274kO\030\275\366O6>\276^\301\274\217\021\362<6\303\364=\034\373<>\205\256V=\325s\013\276\005\240\330\275Vj+\276\347\303\'>\\2$=N\316/=Z\221\324<\177\245\231\274K\226-\275\237~\355\273\252I\034=\350n-\276\\70>\350\214\004\275|\031\353\275^\2619\276\244\332t=wA.\276\334\222\032\276\n\234\r\276\"\316\316\275\243@\010>k\016\301=\016\035s\275N?\274=\354\231\036\276\217\033\340\275+t8\276\225Tp=z\033\316\275\362u@=\322\'\027;b\004g;\265\027\337\274\276\r\351=>\2563>\202\243\027\276.\222\377\275-~\177\274(\031\261=\270\244\320\275\225\262\252;R\324\236<-\230d= \271n\275\001d\344=\350\'_\272@-\035<L\221\377=\016x\032>\350\241\237<\331\034\377=\221\233\025>\306\357\035>\227+\371\275\352\311\241\2758\250b\275H{\306=\321\020N\275\277\030\253=A\022\320=\221u-\275\263\032\215=\362?\200\275\300s\211\274n\355\032\276e\267\252=\340Q\003\276\257\234>\276\330\211\206=h\303\033=\3077\247\274\204\332\247\274\n\025\226;\277|\223<\365\255\032=2\243?\275\n\377Z=\340pb\275b~,\275s;\336=\003EP=\3433\372=\202f\212=\207\312\033>R\216&\276\267\220b=\263\033\240\274\232\266\376=\216\267\370=\364\207\302\272\003\230\202\275}0\307\273\312\205\220<\204\242\033>\003n\273\275\345\317b\275W\321\225=.\377\327=\373\203\247\275\200\205f7\277\367\230\275w\3174\276\332\373%\276\336n\326=+\247\376=&T\024\276\314$b<\347\202\264=G\371?=xN\240\275\255\305\017>\t\"\007=i\204\301=\251\325\004=\214\3219=\271\037\310=\324\311\266<\031\251h=\346y\307=nb\371=\362\\\275\275W\222\r\276\365\307\007>b\0240\273\027\264\341\275qi\263<\020\264\362\275S!\023\276\2332\375<\314\001j\275\022\316\237=\017</\276w\362\016\276N\271}\2750\014]=dQ\225\275Z\366\272\274\241\'\226=?\030A=$5\235=[z\023\275W\323\372=rO(\276\326q\020>\323r\037>\355\271\006\276\252\375W=\025\317\322\275\025\277t\274\273\217(\276\354B\206\275=\026\315=\"\376\\\275\022\321\375=\243D&\276\t\353\210=\203\007\005=\210z\030=(J#>\244\"\277\274\247K\373\274\246dC>}\3239\275Q\224\372\275Y\342\010\276\3370\007>\217\204\247=\rp\000>\331\302\311=\357V\260\275\365\005=\276\373k\323\275\232%7\276,\352\253\273d\377\264\275\262\351\366<\234\366!\275\233\353\216\274\353\201\212\274\212\310;=8\254\370<\316w\353\274\313}\366\275C\322\374\275\306_\331=mF\201=\n\007!>r\363*=\272\247\346=\017\\\202=\356p\252\275Zg\301=~\240\010\2763\234\320\275bS\023\2759\020\014\276v\265\327=\017*\343=b \022=Q\327\231\275\\\251?\276\253\325==lqB=\2536\330=)\370\274=\216,\332\275\177a\037\276\375\225.>\032d\213\275\2019\214=?m\024>\337\377\022>mC\031>T\345\320\273HX\272\274E<\214\272/i{\275\300\t0>m\\\223=\361\020%\275\331\002\372=\374\031\363<YQ\342=\177h\020\276+$\362\275\000\373\027>7\035y\275\350,J=\367v\260=\271\211\313<u\347!>[\240<=C*\344\275V0F\274\341\352)\276\311\370\206\275)O!>\236*\217<\262\225\263<b\350\007>i_\223\275\2149\253=\261\2577=\027u\373\275\257\2269=\367\217\370\275\271\024\247=\204A\315=]\367\001\276\201\202\245\275\004q\371=>\361\203\274\357\254\341<18\022\276\271\254\010\276\022\034%=\232i\270\275z\032[\275I\236\233=\233\314\034\276\305\267\001\276^x\275\275\225:\243<\223\315\031>\234/\263=\320\314\300;*L\027\276\304\325o\275\307\341\325=I0\241<\347\302\010=\215\341L=\322\025\035=\345i\371\275\010\323\370\2735, \274\014\273\343=jS\020\276V.\335=\274\003\260\274\343*\231\274c\020\275=\253\001\010\276\t[T\275\327\356\022>\210\323,<1\337\375=\230\251\205=\240\353\364\275\335\213\340<\030\026\253=r\217\036\276x\364\244=\274\361\337\275\026\215\266=7\277*>H\266\273=\334\313\005>\000w\277=\363\036\352<\254\303\273\275\374\243\227=\340\376\003>\210E\254\275\270\023\226=\270\361\241\275!\374o<\246e\t>\350\177\302\275\337U\034>P\025\202\275>\370\205\275F\336\374\275\037\304\r\276\303Z\357=\235dG=.\331!<\304TH\276\350\252e\274\354\310\333=\350\034~\274A\374\024>B\217\017\275\304\306\322=\\\236\264\274\r\340\006\276\325#\374<>\300\327\275\205%\031\276\224\267U\275\201\003\255=@tA\276\300\366\024>\351\213\001\275R\275B=b\275\257\275\251c\n\276l\277\336<\331\361f<\363\274!\276\006\025\320\2748\350\036>\010\274\351\2735p\226\275\300sk\275\251\000\213=\360A\343= `\257< \246\311=\000\235\271=\245\016\365\275\240\212\007\276k\021\t=__J<\361!\335\275\304om=<\371\027\276\005\025\034\276*-I>R\010\200=\215hn=\021T\254=\265\021\271<\362V+>\276\rV=\354\372\363\275\257\241\243=\377\373\263=`h$\273\333\035\276=\254\272\027>\256\371\271\275\202\216\r>\to1>ck*\276\332,\234=\200\274H\275@\340\210\274Q\022\275\275\335(3>\220\016[=\033m\340\275\034+F\274\230\255\202=\272\274\227\2759 \205\275\326m;\274\235#\000>\260\333\r<\005\r\025\276\3015!>?IT=\266h\364=\2365\214=\347\220\243\275\274\356t=\244\373\220=\246\330\210=\013\027\002=<3\275\274+\316b\275\267\244\367=O<\354=\006\216\317\274\214\361\233<\225\227\033\276\312k\225\275F5 \276u\3635\276\273\307\265\275\315\026\353=eo\210\275Q\354\371=\204\230\033\275\370\0172\276\342t\352=u\233\307\2757\353)>\262\333\013\274\322\2368\276\362$\224=N<#\276\'\001\327\274\276[s<\271\372\004>\217\275\252=\335\232N\275\367{\335;\220\307\005\276\337\256\037\273\030\207\247\275/\000\033=z\363g=\354\277 >n\311\343\275\262j!>\220\311@\2757\177\010\276\344\346\355\275K\371\177\274\325\307\030\275F\373e=\021y\334=\321\337\337\275\335\325\252\275E&\033\276\266\245\300\275\3114\345=T\024u\274\034D\224\274n\372\"\276\216y\026\276\212\221\322=\376\324N:\354,\001\276,\213\213\275\342\022\020\276\344\241\331=7\333\021>\346\370@\276b\240\246=\315\t\343<\"\022\020\276\251\327*\275\303\240\336\275\006\233W=S\257\252=f\020\013<>=V\275\200\\\327\275\205\353\350\275$\320\346\275\266\347\016>Ov\033\276\252\243 \276\300L\302<P\365\006>\245\353\203<]\3350\273\221\0250\274X\335\n\276_\215\232=\345\271\030>B\325\365\275\375\312%\275ljt\275\230\322\036\276x\361\030>\252\241%>>\362\357\274>Zj<nsx\275 \\\034\276\271\013j=\236\330N<\317\364\326\275\366|\021\276\3134\356=\216\346\016\276o7\232=\257j\033>\204n\367\275\232\365\224<\2368t\274\312\245\300<\316/\014\273F\000\376=\306\261H=\257\262\201\274<\022\034>)w\010\276\253\2458\276;\341.\276\346\324\341=+\274\250=\304\311\362<\017\325\031\276\261\215\276\274\352\337-\275\323V\316=\274\317\270\274\236\006\240\275\227l/\274\300\240\340=1\326\027=\271\352(\275\346y\001=\246&\242==\361\017\275\224s\254=WE\240\275\001\266\023>\316\267N=\327\327v\275\232\246\004>\313\363\343\273t\244\254=\330\346\331=u\032\037\276\206\320)<\"\250\022>\310@\325\275!\261\374=\243\215\203\275Z\240h=L\036#=^r\240\275\263?&\276\233\377\312=\200\241E\276\327\013\274;\021\361\003>hE\004\276\005#S\275@\221\355\275\177y\250=nr\325\275A\246\277=\253N\215<9\217\357\275\314\013R=\340\364\316<?c+\276~\312I\274\014\363\206\275\3401\335<\344>\004\276\375\373\246=\35136\274Fax=B3)>a\264,\276nA\311<\2550=\275 \240\250=\260b\362=\333%\034\2763\020\242=1\305\t=\206\256\264=\000\341\373\275\311#\207\274bTT\275>[?>\216m\323\275\317}\035=\332B\330\275\023=\314\275\232\353\325=]\202\336\275\356U\306=oX\205\275\260\210\217:\313\310\010>~k\t=\273\216\354=\r\371\005\275\340X\257=q\033\250\275j\2020=\252\270\343=Y\007\001\275\036\177b=yO\270=.\271\325:\240\354L=\337\225\361\275\203\356\274=\211\360\014\276FG\213;*\300W\275\374f\207=RY\021>\326\211\274=B\036\237=\342\345\'>S\370\r\275\216&6\276\031l=\276\022F\025>\325\241\r\276\324\235\014>l\3711>T?&>O\225\022\276XM\326<>]\001\276\370.\371\2754)\271=\3357\023>&\266\233=\337!\315=\225\203\t=\376\357!=X$\224=\322O\002\275\312\357\r\276\001\212\n>\271\230\020\276z\267\223=O{\247=q\3140>\304\3561\276SQ\r\274\266\177\350=l\372 >X\313\356\275X\n\343=\\)\372<)g\366\274\326\204\202=b\0237\276\226\343A;\374\331\023>\277\314\036=?`\341\273\234H\'=\263U\233=\004Z\313=/\217\037\276q\362)>\264\230\236=\272\\\323\274\263\232\274\275\3706\033>\275%b=\355\246\003\276\202\020\211=\201b\250=\327o$>J\262,>\037\n\002>Rcf<\205\254\024>\243\237\376= /\003>\301V\323\2754\022\203=\332\254)>\374\235Y<O\3336=n\222\332=\026|\211=:R\024>\021{*\276\246\327=\276Q\220\031\274\264t\206=$}\245\271\027Xi\275Q3\322\275#6\017>\252\235\032=\371d\213=^\022\r\275\211>\271\275\365)\005\276\223\214\020>KY\001>\312l\202=\354\221+\276\202\177\016\274y+i\275i\236W<\235}\237<_5\252=)\363\314\275=\354]\274\262>v\275@\2251\274\023Ci\275\220\254\262\274\263\200_=\237V\221<\334h\013\276\017\232$=(\272\321=\t\031\216=\007\314\225=F`\206\275\352\214$<\330\244\004\275\233q\272\275\324\030\227=\277\332\315=f\222\304=\204M(\276\262\350\320=|\207%\276\253C\321\275o\367\010\276\240\367\004>\014xZ\274\215\254\277=\363\243\002>\360\343\227\275\2449\354\275A\301\r\276\023\211\246=\324N \275h/3<qG&\275(\303\342\2755\252\020\276\000\2750\276\003OP\275\374\366\366=\005*\205=\254\267\014=\330\256\244\274y\035\332\274\233\344\211\274\243\326\371=\037#\346=Dv\032\2764\022\314\2754t)\275`\204\271;3<\353=\361p\000=Q\3660>\267\325-\276\343u(\2755\313\025\276\362\241\264=\220\323\004\276\340\327\333\275\240b\017\275~2\001>\001wa<\307\364\002=2{\020\275\000^\237\275\357\371\360\275\3228\336=\023D\244<\216\267%\276\251\343k=\0320\374\275*?C\275\342\3372>k\252&\276c\247==\374-r=\323YN\275\325\275<=\371\260\354\274\033\270!>\211\001\002\276fW\233\275,[\215\274\263Q\027>\003\375\r\276\361t(=\244OW<\022\366\334\273\354\006_\2741U\347=\005G\243=\257\\\003>Q\236\210\275\274\177\252=&\240\002=Yc\375=g\244\000\276G\016\245\275=u\030\276\231\347\020\275\232\034\325\275F\342!\276\347F\337=\007\023k=J\253\265\275vD\367\274Jr\r>\0308\311\274lX\264\275\216n\300\274\260\230*=\342\256l\275\021TY\275qZ\332\275s\316!>\270PH\274\177\020\203\275\277,\207\275\234oo<\317\220\304\275v\346\022\276?\202\343\275\014\311\033>G\037\006\276o\365r\274\260r\305=r=\035\276\036\371\n<\014\316\253=\344>\356=\326wv=\005m\202=\274\242>=i\253\340=\267H\024>)\325\013>\202\260d=y\254\223\275\264C\014\275\024\366\306=\203D\374\275\020[\314<\345\311F\275\030T\t\276\365!\013>\237\303F=\347\270\025>\371\251F=\326\377M=\3406+\275\220t\356\275\303\334\374<)b\006>w4\362\275\200\255\304\274\352hG=\355\211\363=\265Y\305\274\210!4\276\330\032\004>6w\254=H\361\305=\2517\276<!0b=z%\001\276f\307\330<\334\214\251=\324\227\316=+\271\030\276\250y\325\274\261\246\272\275\2330\'\276\215w\326\275}[\002>\225\345\361=\315\247\373\275F/\243=S\005\270\274\256\307\314\275\357P\016\276\245\274\265\275J\267\362=S\016L=|\261\303=\010\346\316\275\2345,>\330\n\210\275e\036\246=<S\016\276#\216\'\276\370[\017>\375\327\005=\213\230*:\243\241:=\245J\"\276\201\\\214=\203\352F\275\215\034\t\275D*H\275Z}r=s\232\204\274\235\212#>\267@\007=e\270\323<n\234\'=CC\256=G6\370\275\032\026\356\275d\335\342=\246\320\376=\261\266A;\352p\350=\0269\203\275\303i:>\376\260\201\275&\324\371\275:\212*\276c\304\342=H\331\017\276\006c\235<\250_\327\275\224$\332\275\010|H>\327D\004=\224t\272=\363G\356;\201\356\312=\373x!\276}\020\007>`\305\272\273vl\363;}\001\346=W&t\274\246A\236=\000^\326\275\375\316#>\350)\350=<#c=9\250\317\272\367\213\332\275\rj#\276\301c9\275\336d7>\225\244=\276\316Q\013>\020;\007=\220u\341\2759#H=\300\177\003<\2673\024\275\3350\333\274\270O\302=\337h}\275*\310;>\344_\320;\202\235\327=?\236=\275\270\3259\276\007qc<[~\253;\032y\346=i\247u\275J<\247\275\031\307\231<\3670\333\275\035\263\363=Z\255\312\275\027\022\211=4\323\365=\263\235\313\275g\360\002>\310\005#\275i\352\037>{ \244<\332 \035>\020\000\006>gh\207\275 J\021\276\252\205-=\352\2312\276\005\227\036\276\217:\210\274\214\343\032\276\026G\r;GQ\254\275\265\023\320=\274*\345\274rq\377=\372\233[=p\262\304<\337G\324\275\331M\340\275\2172\242=I\266\267\275\277\372\317=\n\335\365\275\265\001.\276\371nC<\303N\263;\365\t\350=\212\305\"\276\356\367\373=o\366f\275\356#\272\275\007F\320=]v\007>\023\016\027>\016\230\024>m\272\315\275\nd\230=|\227\227\274\301\250\023<t\020\017>\315\257\317\274\327\321\032>Z\004\216=L\337\335=\205v%>Z\027\253\275\353\246\340\275L \017\276\366q\007\2760\245\017>X\310*\276\241\347\301=\276\027\306<\373\255\363=\023\206\277=\225\330\032\275\304\330\252\275\272N\014\276\313I(>q_B>m]\310\275\306Y\000>@\371\366=1\303\372\275\270%\242\275\250\250!>\301?\034>\022\307\346\274m$Y=\364\021)>m|9\276\321Xz\275*d\351\275\254\241\243<t\200\224<\345\014\210=\316\201\257<\306\261\203\275\255\222\025>\303p\017>\305\3039\276\341#<\275\321\241\207;1;\320\275\247\373\315=\234\365\276\275\3336\035\276\346cS\275(I\000=\034>;\275\340s;\276v\273\267=\316%p\2757\3629\275~\301\221=\023\250d\275&\264\364\273\032\320F=\225\267\213=\202\375\231=v:\004\276\2240\030>\257\0278\275\256\361\302\275\345\346i=\351^\372\274*\264\030\276\327lp\275\202NB\275ha\362;\007A\225\275\340&\345=/\377[\275\n~\225<=\t]=\300\n\034=%\177\245\275\364\323\313\275\326OD=\305\017\224\275\344\375\037\276\202\000\254\275\313\314\005\276\006p\033\276+\320\224\275\350?\320\275\331>\374=\020\023&\276\371\231a\275 \310\363\275S\330/>\006\305\264\275\215\275\366\275oD\356\275r^\241\275(\337\210\275|\344\364\275R\302\302<\373|\256=mq\317\273:\177\n>7\034\017>E\334\271;\333\220\344=\252D\030>\225\032\014=d*\247\275\363\326\350=o \330<\303\037\355=5\335t=~\034\374=O\251\335\275R\213~\274\317\r\266\274\222\261=>\244\361\240=\276p\272=\336\356\242<F\357l=\270\205\276=\014\361\034>o\310\001>\262\\\026=\023E$\274\267\350\314=\273\'\273\273\020\177]=\243\214\004\276\270\345\242=\347\031\326\275?\332\321=\334U\033\276-\031-\276\3028\300\275\206\340\\\275\004\366\352=\316\177\306\272\255M\323=\200\271\3276\362\233\006\276\312M\017>\351\035\360=\302d\262\274w\253\203=\230+\013>=\014\013>\r\257\022\275\334\\\022<\004\241\353=\tk\360<$\343\260\275c\367\t>\313|\026\275&\253\274=\370\262\327\275\263\331*=\331y\345<\231X\205\275[\276\315=\264\325\354\275W\300$>\243\330\003<\374@\214=;\277!\275V\303 <|\333\335=\024a\250=$\022\317=\"\377\305\275\355\274\004\276\211\300#\276%|1<p=X\275\367P\230\275\334*\025\276\221\010\342=\001\312\213=\326w.\276\032\223H\275\365[\255=\260\200W=\031`\016>\003+\022\275\305\241\306=\024O\344=\010~(<\306\255\035\276^\244\274\275\000p#\276\241\254\250<w-\010\276\271\223-\275H\224\332\275 \255\023\276\361\340\222\275pW,\276\356:\007\276^4\272=!E\027>]\351\227=hP\325\275\260\236\013>\017\237g\275\321y\266\2758\216t\275\254\231\n\275\251Q\233=R\222\332\275B\'\002>\202js\275\237\202\036\274O)\345\275\266\013\357\274\326j\007<\362\355 \276\352\302\345\275\266\316\313=6\t\037>*\217\236\274\005@\013\275\210\026\363\274I\347\004>z{\240=\215i\276\2755\267#\276kH\306\275\321\221A=\3563\'\2746h?>\272\367\343\275(\273\204\275\036\244\334\275\363Y\331\275a\262\216=(\352\024\276\307,q\275\271d\331=jZ\244=\246k+\276\000\223%\276\301\211J<\353\200\200\275\034\201\262\275\271+\315=\362xx<\177\334\251=\300y\031\276,3b=?\342\231<&\213\330\274\213\200\366\275\231\373\000\276\343\233\033\276~\"\242=\316\006\210=I\273\371\275\003\266\250:\262P\033\276\270\001\207;\321\327\231\275r7\366=\200\321_\274{\236\247;\37569\276\0226\225=\216\201\001>}g\002\276&\267\t\275$\376\335<\274\223\37789\242\020\275\016\321\303\274\241\224B\2759\267\005\275\277\327\241\274z\204\002>\223\307\266=\320\271\010=\356\221\346\274Ti\340=l\310\021\2767C\016>h\211\341=\345\242\013>:\031V\275?\240\260=\252Z`=\327+\221\274:\026\267<\350\311\205=\301{\245\275\251\026w\274\260\265C;`\005\306\275\265\256\002=wli\274\260\3022\275]Q\241\275MA\321=\276\243c\275@\377\357=Ai\020\276&\025%\276#b\253\274\237\254K=\246\2727=\234\031C\276\314\375X\275\323b\227=6\035>=\200\215\321\273rR\213=\355@\274=o\364\031\276GN\355=\266a/=\347)K\274\241f\333=p\365m=\230\331y\275\350>)<\363\n\016\276l\004\240=\345\005\262\274\200\225\206\275\312O\002\276j\302n=\037K\372\274(\'\313=\265\204\274\275\3019\361=\354_ \275\017\204\314=\250\330\002>\367\363\217=\207\362\352\275M\366\314=Ol\024\275\341\266\006>\217\252\034\276\355\376\213\274\256?\035=\335u\315\274\000\347\260\275\'\347\000\276\341\002\366<\224\227I\275\342\'\016>\016\241\364\274l\2108\274Z\0133>[\261I=ENW\275\314\375,=M\255\337\275\371\375\354=\370\307\303\275\2524\326\275\304I&>$\265\005\276\021\350%=%\003_<R,\277=2\024_;\372\237\207;\211\235\204\275EX>>}\371\001\276>\314\021>\356\243\351=\274\255\370\273\311\0377\2766\205\207=\346\3623>\362\3761>\344[\223=\254]\210\274^\243z\273\355K\226<\266\300\030\275\362\344\235=\003\031\017>C\177\213=\271\262\023>M9\313\275Tq\035\274$.)>\022\371L<\231@\214=\\pA>\325u\320=S\243\t\276\204\245\364:\273\277\365=\016\255\327\275\233[\201<=\322B\276F=\022\276X\224:=\273\230\307=\260\027\030\276N$\201\275\324\240i\275&\021\203=H;\264=\264\333\223<\036[\330<\316h\334=\235\305\373=R\032\341=\206\305\355\274L\320\364=\273d6>#w*=\r\021\207\275\037\n\302<\246Q\016>/iJ>!\221\237\275\237\217\021\276[\257y=\334\303<=[\257\256<\231\007\037\276-\037\307\274\277\276\207=\374#!\276j\331\016\275x\351\260=A\256\342=\202\265\237\275J\\c=\327\\\003\276;h\330=\266\345/<\220\210>\274\014\272&\275\230\267\226=\"\313\356\275\363Ar\275\232:l=\355\306\364\273\204\027\036\2766g\321=\304\266\271=>a\372=z\0108\276D\220\016\276V\200\326=\207[r\275z\270\350=<z\224\275\213m6>\334\177%\275\210=\370\275\361;C\275\237\250(\276\215\372\272=\027u8\274\260\215?\276g\0036\275d>\321=\232\001\201\275\034\335\013>{\216\013<\225f%>n\225j\275\370\361\3659\300\341\307=\370\2339<g~\324;)\372X\275\232\362\006>\214Q\364=\334\270\361<\235\305\204\275\020I\020=b\316\005\276\230\331\200\275\236\2017>\033\306\327\275Y\242&<\272\207\030\276N\311\224;\036\200==\231;\270=\217\226\351<\335\254o<x8\361\275H!\207=\240@\257\275\020\001\371=Zg\255\275\035\3553<\221\3513\276\036\266\253<\350\230\374=3\255\362=93\007\275^+\026\276\3200\314<\341|\242\275\200\237\372:\223\377z\274 u\276\274\023\270\n\276\202*\313\275\323\375\204\275\361\016\250=;,%\276\n\022\021\275\024\262\232\273\372Y\272=\326Q,\274`r\372<\215\254D=\231\265\256\275\344%&\274\0357\272=X\020\273\275\274\306\311=\214\356*\276\010\245\206<C\374\024>\236\277\t\276\213\375\337=\300\210\345;\005\261/>\272\221\232\275\210)\320<y\242\201=\0348\207<\302\354\244\275?\037\017<d\025o\275\201\307\241=\014\177\225=\017\352\352=\307b\010>\264\027\305<mi\023>G\225\211\275\353\223\020>#\211>=\037\364\001\276lxp\2750i\374\275C\240j\275}%c=\r\227-\275\240d\002>\257O\016=\366D\025\272\302Z\210\275\007\224\271\275\361\337;\276\3502\005\276\354\001\014\276\332<\324=X-Q\275\000\367K=F\331\312\275V\371\272\275\250Re<\225\334\204\274\312r\031\276N\014\250\275W*\201=\024\000V=D*\213;g\226(\276\035\354?\276\217\252\245\274\332 \"\273\311\347\212\274\314\226\016>\177\216\276=\222\364\351=\325\352\024=\020[\246\275\352H\254\275\370J#=n \017\275\t\205\010>\021\201\023\276w\311\032>yI\356=@\315\235=\310\320,>\332\237\020=\016\014m\275\3476\014>0\024\036\276w\204\325\274\037\356\377\274\210\314C>z\376\267=-K\035\276m\334C\276\002F\017\276\032\366\200\275Q\326\363\275\324\254]=gW\370\275_\217%>\276\3534\276\037\217\001>\036A\366\275EV\245\275t f=&\242!\276\241r\301\275\021~\034\275\215]\213\274;\3641\276sq\030>\344\221\320\275\224z\352\275\'z\313<\247l\023\274\010\320\326=:\001\217\275\353\013\002\2768\315\370<\3662\t\276P\037\375\274\234\004\026>d(c=c\334/>\223P\001=\002I4=\033\216\022\276,\367\205\272;\213\254\274h\237\231=b\020\234=8o\010\275\352\240\357\275\370\214\033>:\307\016\276?0\230<\2504 \276\020\265\246\2758\311)\276\0235\336=\307I\217=\275\0046>\035_\007>\025\327\254\275\340\270\022>S\200-\276\202q\347=\23650>\336%\305\274\251\022<>\303?/\275n\037\001\276\035\365\336\275b#\345\2751(7>\212\2726<\251\ty\275\360\257\256\2746xR\274\366%\311\275O|\013\276\360P\263\274\216c?\276\356\262\371=\301\243\335\275\r\000\025\276\2132\357=\3534\030\276\233:\345=\020=\316=|\333\360\275\344\242\373=\205_>\274\312\347\016=`\337\347\275\2730\335=0r*\275\375$\273\274\236\366\370<\221\227\247\274\035\031\337=\027>\273\275\320~{\275S\365\336=\255\236Z\275\317\226\013>,\257\205=\330-]\274V\252\007\276\337\326\324=[d\351\2750\031\216\2759O2>\020\314\276=\3639X=\211\271<=\372l\222=P(\036=X#\360:\023\326\t>\302\202\211=\326\005\021>\274{\242\275\3363\225=\213\374\261=\036\261\001>\356\335\004\276\357>^\274_j\361=YI\270=%\276\343\274\275~$=\246/\026\276#\306\345\275\001\356\244\274\317\031\022\273\212\241r\275@\037x\275o\226,\276\rP[\274\362\033\300=\344\243?\274\353\332\007>\3073\217;3\320\366\2742\223\251\274\036x\343\274\271\362\365=>\317\225\275\202\267\237\275\365\360\010\276D\345H\274Z\246\r>\333g\335=\260\326\361=\232\003\016\2761\335F=\302\032\302\275!\271\016>\255\222\204<q\r\007\276\035x\371=\2704,\275\202F\'\276\210\010\007\274\000\223\025>\310W\231\274v\262f\275,\277\000\276\017\376+\276\266^\326\274\212J\026\275\334\007\340\275%\306W\274\245\225\203=\346\2232>dP\031>\036\263\013\276\200R\262<\331\217i<\346\tl\274\250\327t\275D\220\254\275^D\257\274O\r\343=\353y\323\275\333}\331\274&\021~=\030\375\257=\001\342\224<N\223\270=\310\211\024\276\257\3137=9\301D=\237\237\264<{A:\275\315\026\017\276Oh\325=,\376\227=Y\036\027=I?{\273\035\034&\274\364(i\275\341\376\202\275E*\335\275xy)=@\276\010\276\374\336\275=\217\004@>\347?\036\276\\\211u=\026\300\242\275\032\335\177=\256D\215\275=t|\274\305\237?=B\3059>\312;K\273\216z\354=\312B~\275n\211#\275nHE< \320^\275na\005\276\035`\316\275\307\270D\275+r\310=\322\230\322\275qq\354\275\352NZ=\346w\311<\260\312\376\275\274\355\023\276\023:\177=\2440\300\275\363\010\266:-\305\230=\214\274\312\275P\2715>i!\345<\222\363\031\276\024\303\360\275\221v\177=\272\311\253\275\251N\354=\271Z\226\2751\312\341=k\346\270\274#j>\275:\332\341=fu\035\276\301V\347\275Dx\261=`-\371<\352M\321\275A\361\255\275\274\n:\276]\220\241=\210A\017>\205\242\235\275b\t\326\274\257^\016\275_\205|=\347i\037\276\226\315\037>\377\321\232\2756f\020\276F\210\267;\374\334/>9\266\024\276\270\220)=KR\037=!\230\247=4{\t=\032!E<w\377\357\2756\376\t\275\330\342B\276\222\230\346=\022\231\t\276\025mX\275\252@*>\336e\002>o\310$\276\266\347\377\275r\341\332\275\245\337\023\276\021\347\032\274\376Io\273,m\025\276\333\267o=q\321\332<\206\314\233=9\206C\276\351\343k=\373\313>=\215\331,\273\022\210\022\275\200!\024\276\210\347\245\275\372\302\221\274\001\245\203\275\320\014s=\357At\274\276%\270<\023J\252=\2539U=\241\005\337\274\3648\000\276W\325\t=\305&\324\273^\034\254=b\332\270<\354/<\275\361\207\307\274\320\226\376\275\253Z\014\276KJ$\276\034\243\336=\017\332\007>\006\317\241=\021\027,\275b\201\326=\212B(=\315\354\035=\223\207\220\274\344\241\342=\320<\216<\247<\232<)\346\013\275\031@\332\275\337\',>\246\021\031\276y\034/\276\276=\036\276\324\007p<N\240\322\274\262\0024\274\322\010.\276\260\007l\273\356\215#>\276\267\375=\272\233\215=3\354\n\275\024\275\216\275V\212 >\257\302\207=\271]\021\276;\341\312<\252-\005=5O#>\313\333#\275|\347\272=\346\322\032>\364\321\024>\242\r\037>\275\361\262=+\031\004=8\241\234;di\021\276\344\315?\275\227|0=\220\256\341=\251\261(>\300\t\335\274T\037\007>\024U\r\276\353S#>0a\272\275\227\303\026>W\357==*\302K\275u)\351<^eE\275\006\343\266=\351n\355\275\245\210\321\275\342\304\235\275/\354\204\274-\307\003>\354\375\006=d\314\371=\310\247\364\275\010\231->4.\364=)\253\031>&X\246\275\363t\265=\263]\243\275\226)\n>\022\216\033\276\226m\353=\217\350\337\275\026\0166\275\035 #\275\002\265.>\204(\275=\213\024u=\036Q\227\275\320R\350\275l8\333\275\250\311\326=!9\250\275E\337]=\363\017\256=\017\027\333\275p\375\225\275\\6\331\274XC\014\276\013\240\271\275\210\225&\276\233\026\362\275\024fs=\217\"\320\275X\200\004\276,o*=\350\200\205=Kz\275\274j\2435\275J\023]\275\005\227\006\276\364V/=+\210U\273]\204a\275\231\252\004\276N}\307\275\345\030L\275T\370\323<E\271\303\275k\347\034=\010s\026>\203\350\021\276\t\337\334=3M/\276\032\3362=\232\202]=9\316,>66`\275\343\252\024\276\360_\203=\024x\354\275P\363\226\275\232\214\017\276\277\222\301=\236\222`\273\367\373\206<(\312\276\274\032\217\315=\212\211\007\2767j\020\276\032\337\232=8x\202\274\271\022\232\275\336\257\271\2742\202\251=\205y\020>\025E\243\274BM\214=z\362\035>\005\030l=9\207\032>gD\270\275\204\030\004>\362\254&>Q \331\275M\"\316<b\022\275;H\035\022>\211\331$>\314\310\331\275\333\307\254\275B\327\030\276\016\213\021\275\337,\033>v\271\'>Qm\315=1\217\024\273-5\373\275\240\t\347\274\215\3741>\345?\"\2761\031\r\276\250\343\206\275\305\200&=\032j9>8D$>\324\244\241=\347\304\026\276t\272\r\275y-B=\037(\351<X\2404\276\256\337\220\275\376\365\266<\\?\376\275\372\227\035=#\001\277\2741\0348=x,\027\276\034\315\215\275#\362j=\253[a\274H\r\222\275.\226\247=\221\272\306\275yD\207\275!\2040>\337w\373\275G\336\206\275\232(.>?\316M\275\3050\021\276\260ai\274 \034;=\376M\313<\211\257\356\275\320\275\371=M\010$>\211\003\t>\354\213\016>\266b%\275\366!\277\275.\200%>)\242\210\274PK\035\274<Z6\276\3748\205\272\r\311\025>2\365\030\276\010\317\223\274\027\020\025>E\005\007\275\215\357\033>S{\314=\220\311\235\275\273\311\326;\265\253\251<\025mQ=f\300\376\275\302\260\202=h\324\360\275PAM=L\215\033=\'E\315=\361\215\032\275q\343\251<-\223\007>l6\260<\351w5>\016\025\332\275\032M\022>O\017\207\275\017&>\275\253\226\023\275\210\217\371\275\373\032f=\237\360\t\276\003\362\n\276\200\030\231\2752\337\253\275\276-\365\275\003n!\276\310\\\325\275i; =\302\254 >F0\313\275\t\332\315=x7\206;\227\375D=!\343W=\270_>\275rZ\007>\200\221\037\276\332\224\301=\337\345\237<\302*\366\275\336\223\273=}\247\031\276n\215<\276\316\250\025\275\177\302\234\275\020\317\025\276\364\220\356=\273\351\303\275\320M\364<\214&\203=5\272\315=6\336\032\276\203\351\034<\214\227o=\240\215\211\275\232\362\257=\005\3417\276\204\274\336\275\211\227\002\276s\235\323=\234\2652\275\t\311\n>\273t\234<N/b\274t\241\336=\372vu<\372F\270\275\3754\220=\235\200\034\274\330\263t\275\313\230\323=\366J\252\275\374\340\014>\333\014>\276\032\303\030>\317:\030>\366\013\300=&\312\024>\325\300\'\274\327\260\332;\363\003\345<\025\230\031>yhu\275\030Y\017>7W\204\275\325\036[=\314A\205=]\232\354=\241\232\023\276\365\035\231<\316\245\306\275eB\035\274L\342\013\276\020\007\2728\000\n\245\275\256\226\376<T\373\351=\014T\034>#\202\235\275\345\257-\276\354X\335\275\2723}=(+\t\276\007}a=B\362\230\275\362\217\203\275\377\366\220=\375\354\350=\200\217\327\275F\250\374=7\207\225<\235\220\r=Q<%\276P\203\226=9v>\276\266-\222\275=\347\242\2753\370~\274\343\270\341\274`\306\037>\321\363\351=\200\227D\275*\017\251\275\211\311\257=u\245\320\275\243\221\001\276t\354\214\2756z\225\275\332\356\354\275\031A\236=e\210k<!\230\031>\343T\212=\324\377\267=-\025\335<\271\262#\275\367X\n\275,</\276()\331\275V\312\210=\261\233\276\275\333\272J\275h\306,\276\363\201*\274\243\3371>\201\266\032>\317\305\006>\233\200\345=\023\341s=\027\267\271<\372W\232=W\243q<L\374\001\276\223\345\277=\013\205\360\274y\216\264\275!\227\263=^=\223=~\360\177\271\325p\006\276\314\000\032\276~2\013=I\224\336\275\260\242\010>\022ZA=).\020\276Z\262\262\275\267L\003>\004\223\020\2754\341r=\233\016\007\276\232\0347\276\367\304\312=\010\300(=\212\263\177\275\232\033\321\274y\341\275=\213Q=\276\313\367\255=\301J\311\274bh\304<!\220\361=c\026\222=\326z*>\233K)>\323\214\215\274\310\030\225=\033\272\304\275\033\035k=\243&\025\276\374\335\020>\352<\343=\252y\227=\220\376!\276\207n\370\275\006\362\032\276\256\325\334=\310\337\345\275\036a&\276X\365\314\275\346\rD\275G\260\320\275hI3\276\306\267\004>&%\030\275\304\352\213\275\326\337\235\2759T\241\275\226\307\275:l\220\237=\342\203O\274D\357{\274\006\366j\275\207\010\201\275\337\3178=\374\001\217\275j\220\014\275\360\350(\276p\230$\276\262\017c=\366\314->@AD<\031b\217=+\347\244=\003\214e\275\004p\r>\205\322\367=\352\301\036\276.{-\276\330\035\000>\352\302\264=\313\210\037>\301\261\203\275\221{\020\276\211\035\265;I\327\321\275\240\003\235;\023k\321=\3234\227\275\333\334\027>\244\335\030\275\371@\022\276\3418\222\274*\202\013>\263\370\331=\267\034\323\275\367\222\001\276\203f\334\2756\377\341=F\254\204=|\327p\275\017.\332\275\255\337\200\275n\205\016=\350\361&>f\345n\275Mi\334=\267\304\n\276\007\370a\275\256!!\275\216\224\014\275!I\334\275\\{\016>\344/\335=>\374\365\274:\300\354=\013R\363\274\265\230\325\275\034]#\276\\\323\201=(\036\016=\273:%\276\230\r\314<,\253,\276\243L\372=\215T;=\r\003\355\275\300\340\2708e\0235\276\345\340\317\275P\005\373=\307\376\030>\026X;\276]^\013>\271\202\226\275\365\005\352=\266\001V<\005\346\033\276\345\374\010\276\370k\360\275\251N\350\275|5]\275\371l\014>HF.>}#z=3d\025>\350\203.\275\010\342=\276\010z\243=e0d\275\310s)\276\302+\307=\321\340\013>\022\323\315\275\215\337\300\275=cv=NUI=\231\276\341\275u\262-\275\024\202\261=\245\241\035\276\365\347\014\276\371\224\317=K\260|\275\235\233S=\2606\274=\0273\305\274\351`n\275D\364\323;L\300\037\275uT\036\276\245\335h=\357\213q\275k\357\245=\232-\"\276\351\375M<\223\'\301\275\361\000\032\276n\353\364\275\212\036\264=Q]\326;s\"\245\275\310\364\006\275\215s\226\274\2304\357=<\374\215\272\032\226x\275^B\030>\240$\007<\320\270!\275\206!\034\275e\244.>\257\273\276\275\323U\317\274\020\020\315\275\251\027\006=\372\361\'>\300}\302=Y\272\t>R\000\226\275w\356%\276\237\323\025>F^\341\275\373\340\365=C\037c<\230E\036>\256\363/=\220\310\346\274\252\n\234<\002\315\211\275\232\330C\273\317\256\202=\020s)>\222\215d\275|\n\203=\010%\027\276\007@\243=U\200\037>\256\3507\275\031\314\335\275\316]\201\275\211\017\247\2752\224\236=\356\211\244\275\247\240\'\276\r\002*\274]/\230:s\000\354\275\261B4\276;\201\276\275\010\366\356\274V\321\231=8U\r\275B\342\270\274\214x\204\274\305\002\004>\351b\371=\226\235\255=>\245)\276\nwB=\021\215a=#\\\203\275\343\356\207=\203\201\344=\326B\033>OX\350\275\n\212\001>\205\327\377=AN\004\2741X\275=\242\241%>\324\023\307=\325O7\2755\206\t>\3448\233=\300\021\014>\207m\235\275\216\303J<\246\351\026\276\024\346\005\275\006\2434>\347~ >\237\0253\276\375\361h=\306\227\333<V\344\240=\241\027\311<-\272\340=\223\203\204\275`\346\217=3\\\340=\325\244\240=\237\344\364\274\r\310w\275\235\203\252\275\335\222t=\313\352\032\275|\365c<g\360e\275\032\253\030=\202m\013>XU;=\233\314\225;\014\213\234=\n -\276\214=\022\276o-+>;\224\004\276(\334c\274Z\231&\276\310\247@\275h\227\3169\373\023\323\275+\356\372\275\017\367\030>\302\360\347<\250}\377<\312\000\010>FH\317<\307\245\374=\363U,\276xi\t>Mb\000>\010i|=\241\250\013\274U\365\355\275\254\374\222\274AV\320\275U\312\246=\036\025\017\276.Q\025<\322\313.\275\247<\005>\326*\216\273\254>\317\275\240\275\017>.\325;=y\206\002\275-F\322=$\324\275<\266\"^\275\356\366\240\275\372\266\243\275\177[4=\r\340\021>c\304\307\275\207\372\204=\237\276&\276\010r!=\367(\206\273\341\212{=a<\340=d\2664\276\017a\354\275a\217\010\276g8\024\276\003n$\275\300\213\t>zP\260\275d\206\273\273I\343~<\263\210\223=\311\246\332=\233\270\007\276\233\232\337\2753\237\034>\301A\347\274\251\361\357\275\2259U\275\0006\'\275\273F\024\276|\005\031>\000\244\376\275Z\313\241\275)\265X\275\314yE\275\206w\006\276\233\317\023=:;\275\274\313J]=\270\r\251=2\235k\274\301\326P=1F\320<@~\020<\261yQ<@\272\332=j\025\034>`\257\010\276\332 \274\275f\221$>\225\334#>x\262\000\276\017@\216=fn\r\276\302})>ck\244\275\375\'\305\275\274\334\000>4\225\t>Hd\362\275O\223c\275\337\304\335\274\266\006\236\274\302\"\r>\364\367\036\274\034\003\304\275\230\333\001>\202\247\353\2751T\020\2758\220\363\2754\022\032\275|\216\266=\2505\336=m\274\022>\250\324\'>l\247\246=\035h\346=\020\345L\275\372\233\010>&\312\217=\370\314\346\275\265\274\231<\364\373\305=n^%\276j\307\217\275\200\'y=8\304\037>D\345\007>)w\211\275\322|\335:\320J\'\275q4\000=\342?\355=OX\201<\"\342\345=DO\216\275X\326f\275\341\265.\275\321\206H=\241l,>\177s\233\275}\220\n\275IU\317\275\241I\335=:\311\030\273&%\245=\243J^\274\330B\213\275\362\216\021=\306F\223\275|{b\275\262l\363\275f:\204\275\013\"\324<\262Z\331\275=\337\247;\217*\354\275\376\024\365<\"a\262=R\331\352=d\234\207\275\376\363~=\316}1\276\"{\035\276\373d\004\276\277\356\331=\276f\355\275\320J\007\276\224\205\020\2754\341\312=\310\036t=3\337\247\275&\364m\274H\224\000>\212U:\276\262\236\034>\"Py\2754W\004\276\336\206\">\317\257&=\216\3610\275\316E\336\275\004m\255\275\177{\030\274\300\020\024>L\352\360=\200[J=/\006\004>k \023=h\303\321\2751v\327\275\313\315\010\276\203\255\274\275\2706\341\275\333\312\021\276\032\204\321\274\3540\346=$\343\354\275\260\306b<`m\002>g-\321\275\212\t\352<\315S\037=\362\207\004\273?\264\316<\374\t\220=\273\006\024\2764\350\331\275\321O\300\275\2442>\275\000\330t=%\227\225\273\374\237\252<\357x\245\275\302\0328=\274~J\275\263V\230=p\351\307=\333\022\215=o\203\021=e\350\n>\022\221\265=\201a\000\275\253\362s<\354`\233=mm\210\275\237\035Y\275\'\2538\275\233\201\374\275fS\033>\230<\317\275,c3>\301\347\207\274\334p\303<\264\013\376\275\245\"\233\275\315\252\"=!P+\276\320@\307=\303\310\314=\343\331H=a\362\315=\371M\266\274\247\272!\275\3423\000\276\251\203\014\274\202P\212=\027J\213<\223\005\271\2742\200\243=\\*D\274\355\306\031\274\334/\244\275\260:\351\273/&\006>O\340\202=Z{\222\275\021`\315\274\205\375\000\276\372\212w=\310\373\t=_W\352\275>\310{\275\r^\010\276\r<\210\275R\244\337\275\t\3454>\210\311\245=\324\035)\275\310$]=P\216\376\275\223\227\361=a\372\255\275\033\220r=\177\3256>w)\003>\335{R==\320\224=\3232\213<^c\311\275!$\204<{~\030\276\316\277\360\275\222\342\242<\320\322{\275\221\222\307\2753xL=}\226G\275]\000\270=?\335S\275\2239}\275\357\304\371\274\344\032\022\275\237\245\354\275j\272\253<\034\357\003\276\273\020\017\276\313\215\245=|\307\030\276\336\237\341< C\006>m\332\025>\3062\213\275\277\251\300=\234\177\216=V\'\025\276\321>\226;\324<\325\275h\356\035\276\026\313\030>\204\302%>ny\002\276\3015\024>;t\225=\252\025\356\275\"<(>\221\341\304<^?\320=\014\211\267\272$\013\001==\352\271\274G\\\214\274\313\244j=\003F\032=\005\"\300\275-\241\234\275\0174\034\276\331\243r\274\253\233\026\276^#3\276E\020\363=\240\273\222\275)\033R\275\372\017\006\276\320\230]\273\020l%=\213\3013\276\232\340\032\276\346\263`\275@\335\024\276\3506\005>\277\\\">\367v\324<\213\342\t\276\203\327+=\240H\264\274\325\030\305\274H2\256\2755a\265\275\'%\254:\255\310\357\275Q\241;\276\253\315\027>\240\206\006>\033e\177\275\324\364\023\276\007E\205\275\303\374e\275\0000\270=\331\327\306=^2u=O\341\333\275y\026>\275\247^\232=\250\343\r=\t\3567\275r\027\313\274=\360\303=D\025]=~(\206\275;\002\343\275\000\336\274=\363:I=\256\316\256\275\336\352\342=\023uC=w\273\367\275\252\037\334=zq\033>\326\177O=`v\273\275m\\\222=\277:x\275\342N\006>\277\217\026\276r\226\'>]b\007\275\3644*\276\277#\302=&iT\275\313^B=\236\030\016>\347b >\205\204\002>\307hS\274\002\252\315\275Jz\262<7\245\373\275B\026\014\276\335\243\301<\031\225`\274-`\004\276\374\037\212\275#I\302=},\260\2759V\373=cb\220\275\236\0174\274\373O\014>H\333j;\242eO=\r\230\026>n\303\r\276VD\234=\304M\313<M%u\275m?\316=\240\013><\363\242#=hC^\275\3455\221\275w\332\326=\302\0259>\277\207\220\275+u\236<\023\322c<\364\252\335=\252\0102>\022\034S=\262\245\014\275$z\236\275\016\247\326<P\345\033>5?\363=}\263\376\275\013\356\342\275\262\240\317\275\002\231\327\275\036;i=\321c\016\276nZ\252\273z\361\303=\237\223\001\276\300E\021\276R,\222\275@\203\360\273\022/*\276\tV)\276_\2639\276\271l\256=\030\307\327\274x\031$\276\006/\345=\307\031\265=>\320\363=?;5=\354]\002=\177\032\034\276\345\0057\276\\\312\321\275F\223\014=\374\333.>l\273\353\275\366\010\353\275\006>\211=O\222\324==\373\357\275\376\210)\275\253\306m=y\363\366\275_k\256\274\305\303\035=\237\026\022>\361S\241=Gf%\276\0322\340=m\335\215\275Y\345\326\275Y\351&>\325\314\373=\230\217\370\275\322\370\343\275\255R\321\275P\257\003>\313\340\025\276\217\253,>pk\206=\007\024\n=bA\004>\245\366\014=0I\261<s\265D\275\nmo\275=\035#=4\221]=S\300\312\275\nP@=\310\035 >\367\322;\276,w\035=\320wz\274\276\270\224=\267\177^\2758\t\">\225\247\345=\205#\r\276VU\n>\342T\360\273I\'\343\275s\370(>2\375\361=A9\033>\226<I;\273\316z\275\301\361\230<\360\344\014\275\030\276\003\276\374\022\252\275\354\207\'\275/F\350\274}\331\207\274\261\317*>\317\304A\275\320\3246>\244\006.\276\353D\311=\366o\r>G\005\342=[\237\223<\342z\263\275\037\255\256\275\016\225\n>\263\364\275\275\362o\306=\241{\267\275\351+0\275\265W\361\2759\023\201\275\024\242<\276hk\014>e\376\326\274CK\376\275|0\336<\273\317\227=\032\t\215\275\371x\336;>\340\031>c\221p\275f\022\376\275\320&\215=\302\204\300<bOz=\200*\267\274oaO\274\376\271\263<\220\241#\275\321,\247\275\326\345\031>\235\033>\276\274\017?=!s,\276\366\177\375=\351\323)>\013\002\001=\305\252\331\275\002\221\014>\376}\211\275L\313I=\243\200\366=\335I\367<\220\342\006<\376c\201<\307b\016\276\342\000g<\203\035\021>\265f\231=\262c!\2764\330C<_V4\276\030?\n>\202\232!>\232\025\270\274f\331\377\275d\023\022\276C\262\235\275_\267\216=b\205\321=\310\252\177\275\317\215\255\274\232b\273<\227\'\323\275v\302\206=\302\\\022>m\035Z<Nu\207\274q\366\235\275\354\334\030\276y\243\034<\216#\022>\352\302\001>dD\243<s\203]\275=\272O=\025K\327\275\230\3713=\273\227$\2751{W;\215U\'\275LPT<-PF;\nk\307\274x\361:>\0024\260=\013\001\022\276\'T\022\275\023k\253\274\220\253(\276\022\3368\274a\313\026>\213\311%>\321\233\273=\276ue\275\241\'\005\2761!\017>\262\333\325<\024\271\232\275\337;\312;\225~a\275t\007\360\274\217\024\005\276\323=\316=\342*\315=\253\307!>A\325\374\275~\222\345\275\316\2728>JGe=\206\242\376=Dy\213=\362\243\262\275\341\022\313<\364\211j\275\313\030C\275\274\226#>\251>\r\276,p \276\207\203\207=\311\271\221=\001\263\n\276\020\370\005\274\267j\000>\305\371\241\275\0323\332<C\343S=\211\326\224=\010\007\362\275\365\206\237;:\306\036>\221\343\376=\322#\031\276\335C\034>\377?\267\275y,\021>\200B1>k\020\303\275&\221a\275x{\242=p\227\252=\027D\021\276\275\234\017>,1>>\314\241f="
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\367\t<\273f\241\335\272\373\275};\255\373\017<N8T<\010\030\3059\266\332\243\273\021\364?;\300\263\210\274@\216A<\242OG<\304\031k<K6\000\274D\326\336\273h=\206\274\036#9;\311\244\202\274\236$\006<\030\223\236<\221&\217\274\010\027\237<S\277\235<\364F\316\273\321j\002<\265\217c\274j\326d\274\002\1779<\"Y\226:\210\230\312\273\347\372 <r^:<@\023f<\340\3008<66\204\273\324\033i\274\352W%\274\257[\345\273\373n\200;\303\315\265;\014\001\r\274\256\375\254;F\375\236;\366\327\217\274\235n\200\274e\200\353;\221`\021\274\307\017}\2745\227\t\274\343\362Q<\2551\252\272\375\236k;\005\240\"\274\334.:\274Y\275\234\272~\362\350;\256\305\322;\361\354\261\273-}\013<\304\276\310;2\316/<R\313G;\315\247H\274*8\236;.\253\334;\231g\013\273\200\014(\271\3448\274;\302(\002<\332\003><,}P;\357\323\201\272^\037\373;!\241\211\274\245VH<<\275Q<\223+\212<_c\361\273v\266\352\273\"\214\207\274u\321\217;\036\303s\274u(\017<\227\335\235<\332\346\213\274ep\246<\203>\241<M!\310\273\324e\033<z\373U\274:\244e\274\376\0234<\'\215K:\356\004\237\273\3267\034<\342\2170<F\010[<6\0103\273v\214\t\273\036s\211;\271+(<\266R8<\340[\0169\304u(\273\251\334\216;\034\001\214\274*\300F<\327qR<y\212\022<\221Z\004\274+u\324\273\310\253\211\274p\311\361:\032\343\203\274\262b\335;4Q\230<\\\300\216\274\317\237\250<\220h\243<\225h\n\274\026\366\035<\203\034D\274\320mf\274\361\222}<\212KC:\264K\261\273_U(<j~2<\311\"P<"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "X9\275?\310m\340>*\\\340\276_vP?\353\037\345>\370\013\340\273|\007A\277Z\352\233\276\314\030\010\276\272y\215?q\371\313\277\004\275\276\276u`\022\277\354b\211?\352\204\001\274\376\003\t\2776<\210\277\257\r\200?\233\256\234<\367\352\336?\277\240/\2774fo>\3355\213\275\007\010<\277\341(\224=\244\337\364?\220\263\237\276\031\030\214\277f\327\340?\334Xk\277r~\002@\'\001\200\2767\377\253\275;b{\277L\272\266?.X]?\210|\276\276Uvt\277\372\022\211\277\362\323s\277\372\220s\277\246\375[\277`\373\313\276b\332a\277W9\002?\022\001!\277D\363\317>\2059\022?\321c\243>[1\216\277W\201\313\277`\341F>\310V\211\277\00399?Dn\306=\377\325\221?O7\271>\023i\265\277\274D\305?\335\341\034\277\232<\236?\251\277\223?\247\366Q?\275O\351\276\336h+?Y\2039\277Bh\324>l\303b?\3369^?\017g\316>\376\377\023?i\003\232\275\245CM<`\314z?\300\224\256\277\372\021?\276\273\000\304<@\344\327\276\034T\343>\222\373o\277\225\213\210>\345`\023?\230e\232\277\2140\276>\026\264\263?\246\034\013\300yH\005?N\004\272\277\324\352k\276\344~\226?7\260r>\322\257\024?\245r\355?\372\352{?c\324\220\274\305\271N\277\026\367!\277\253\364\306\276\273\017\272\2764>4?pH}?\201&??\324\201\026\300\2764\202?\033=\247\276\377Y.\277h\310\220>\373\001_\274]\\\342?C\376\224?}(/\277\315\355m>A\310\306\275\036\025-\277\t\363\200\277\202\313\324\276o\242\222\277h\267\347\2763TY\300eK\215>;\260\310\274C\007\273\276&\030\r?]\300\236\277\243\337\242\277\257\206\007\277\021a\246\277x\341\231\277\331i\261>\267\221\014?b\304\206>(a\252\277$7\007?\344\r\233?\373\316\032\276|\336\004?\252\031\207\277\222\307\313?NLu\277\315$\022@\276\377\002?\360\356\030\277\366\374\036?\221\3407\277\246\232*\300G\230\200\277\274F*>\217%\001\276\246\255\240\277()\r\300\342\222\224\277\320\313\203\277{\222\335=E4\246=\177\025\332?\243OC\277\242\225D\300\304\227\212\277U\357\363\276\251\260\241?\313\254\035>9\207\235\277HD\376\277\374\260\266\276h;;>\354V\336?\326\322|>_\345\217?x\243G>\005\307\266?\224\260B?\033\253\n@\264\3463?\010^\333>h\212+\276\250\033~\277\362\370\354\276u\n\327\277\3538\366>8\033\231\277\237h\350?u\252S\277s\357\256=\354&$\2772\t\223\277\311\336\207?\361/\244\277k\323\014\277\004\367Z\277]T\244?\037U\246\277r\016I>"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\r\016E?2\345\263\276cG\313?\025pQ\277%\327\320\277\200\037\315>"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
