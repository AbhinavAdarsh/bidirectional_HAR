node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "o\355$\277\r\350\376\263\010\230x\276\222\2774=\324%M\275\242\261#>\205;\000\275\302\030\030\276\221\177,\277N\306\022\277\272\366\210=\3549\244>n7\'>\3415\t\277\1773\205>\354\336\014\2777\250\224\276\206\007\016>\214\017\251>X:\'<\357\277\203\276\351\370\244>\002bH\276+\207\216\274i\225\020>\235\333\031\277\277\323\252\276\311\244\014>\236E\312>\3312\257\275\024\233\202\275\256\232e=aeT>k ]5^7\025\275\251\307\315<\377\225\'>\261d\347\275Lxy<\\X\324=d\220q>97\001>ip\204\275\311\r\323\275x\210h\276\261\255c>\250\376\221\276x\203\335<\361>\233>\213\n\351\275\303#\201\276:Q\305;c{\225>\216\031]=7\244\374=\371O_=\034+\340\275\304\216\021>\2654\234=T\r:\276\032X\255\276\302vR>\306\204\321\275;\335\220\276\3662\t><\253d\264M\211R\275B\270\227\274\007\236\372=n\007:\276\262\276\023>n\325\r=#\2013>{\016\006\276a\216e=\346\232\224\272\234\377\020\275<\250b>\263\034\021\276v\236\276\274c\334\372=Z\207\312\275D\2350\276\264\202\005=gY<=]Y\205=\350\347P>\350`\200;\336i\324\274Q\376\243=\340\202\300=\034\350\267\275\323\r\235\276\365\364L=\262\265\306\275\247\002=\276\211\014\217\276\305\343\206\265\276\014r\275\232]+?\354\024\030\276\000=\203>\304\332\031\276X#\254\2768\242\220\275\237\024\224>6U\262\276*(\361\2758\336\322=$\320\340\276$\260\264\276\212\301\217\2771\357\315\273\036\243\210=n+A\277\0001@>GV5?\"\r\342\275_\252\037=S\204\023\277\242Y\177>.\313L\277\320\014g=\343#J\273bt\225>EL+>~t\314>v\022\232=\317\365\316=Y\255\03466Tv\276Z\341\032>\235\371J\276z~\247\276\364\255\201<_\204\360=\336\270\006\277P\243\251\276\3479!\276\226\020\034\276I\322L?\247\255\021\277&\373\030>\240\366\246\276\023\235\032\276z\375\002\276\250P\216\276/&\010\276\010\353\2069\277J\002\277&\234\260\276\350\322\375\275$\215\005?u\014\177?\317\356\271>\224\244\243=\343C0?\3275\354=\376\0108\2768\010w>q\373\025\27589\2215Af\000\277\343\323\260\275\373\265\203>\\a\002\277\010\365K>DY\262:\201\357`>>r\314\276\033\"\305=\207\233\010>nO\351=\260A\032?\304\256N\275\316\226q>\024\252n\274E\205;>a\364(\276=\252\246>V\362\212\276O\0371?\177\344\226>\324\365R\276\254p\332<\334Th>\215e =\323#H\276I>m\276\257\343\261\276\362\"O\276)W\342;\256\277f\277\230OB\273\330\335 \277i\031\247?\311\212\277>\337:\321?x\366\226\275\367X9\277\267\227\234\277\322L8\277\361YX?Rq\024@np\275>m\220\326?#B=?\246[\374\276\316\306u?W\245\344?\026_\306>9@\257>\032\360\367>\361:A?4u\350>\001_\206\275\324\371\030>h\2068\277\356\251>\276\247\021\267=\274\206 ?9\'\322\276\214\337`\276\311e\365?\250\330~>\224t\207=\377\335L\277\366\357\027\276w\303\"?r\337\273?\240H\274>\236\316\325>\nQ\327>L#p>\236\202\227\276\323\336\232\276\332\353\264>\013l\036\277\221\245\\=\323\255^?%\311\007?\3358\r>\227\247p\276\307V\204\277\247x\030?\022\334\"?3\317\035\277z\267\n\273\226\362\035\276\rG\031\277\240N(\276\'\327\017?Qs\020=\251y+>\211\376\250\275\356\004\342\275\320\276\000\276\267;}<2\342r\275\t?\345\276M\231\221?{Bu\277\264\\\247>\213m\264>}\265\367=\220\236#\277F>z>\255\216l>\004\375#?0%)\2771\022\031>\336{\037=\026\020\225>\376D\247\276\271c\203\2772\374\206\275\364(\356\276\"X\353\275D\216\222?\374r\004\276\267\254p>\024\330\350\2752\224$>\277\350\261\274\341\032\306\276HM\212=\225\232\270=\361[\n\277"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: ";\342\007@>\233\206\275Q!\222?\305T\363?R\261\025?\243y\344\276\017(n?u\334\217?:\223\247?\205\201\250?\270\301>?a&\266?L\201\231>\227>\344\274\013\373\261?6\0370?\254\352\301\275\202\307$>\370\031\344>\337^\233?o\241(?\251\346\'\277\'7\316?D\034\250\270\n\360\006@rz,?!r*?\274(\266;\264$\037\277Y\224\354>\251\237^\275\250\310\021?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\341\323\010=\270\347\210\274H\202\366=Cj\252<\345\366\242=?\037\227>o\207\t=\336\314)<\372Ry\274 \272\262<E^Z=\244\016\235>1\231W\276Dg\020\2758\"\310<\200\371\201=\217\223\371\275\2458\327=\212~\027=\273S\036=\211\330u<V\006_=\277\250\020\275@zZ\275\013\267v<\271r\360=\331\200Z\275\035\255V<n\241_\275\347\032\276<e\315\342\273\032ZE<\200\352\227\275/H\006>\306\n(\276\226H\325\274\312\341\000\276Ku\030\276G\222\217\275k\227\322\274\\=\n<\335]M=\375\362\007\276\226\307l=\224\317\257\274%(q=\312\307,\275\237;$\275@\245\374=%\204\341\275g\244\005>\216U\235=\270\203\001>\333\340\237\275\366\246\314\275z\243%<Gw\331<\251\257\303=\243\3123=\024\014\354\274\343\343\273\275csX=?h\235=e\361\346<\023\'\005=\032\347\026\275\213\235\304=\272I\034=\0036#=\236\323\211=`\221\002=\207\357\265<\207\373\022\274\331\301\t=\253\335\332\273\230\200\203=\037T5\275V\177\253\274\256?\371<\257\203\326<\320\374\253;\014KL>\246Ys=\336X\234;\237\353\251;\002I1\275\332J\034\274M\003]\275.\233\376=*\260\367=\352\032\244<\301\272\300<\342\005\256=\234\330\013=\251\277\231\274M\352\337<\352\311\253=\366\273&\275\244\342\n>\204\275o=\332>\252<\253<\030>\261}\216<\336.:\275\247\301Y\274\235#\000\276\220\207\203=\035K\n=\0257\362\274\372\210\323\274\356\204\336<\274\265\340=/9\006<\265\232N>\3626\307=4\310i=\274r\214=\246\221\323=vb\033\273eP\206\275\004\257\370=^o\332=\362\262\036=X\035]\275\202D\'=V\325\263\272X\023+=\276\306\325;\303\033\2425\305\217\2064\344\nM4\354;\0134\307\305\0344:S\3360F\030\372\263\n\377\2154\222\010\0353\357\262\367\263\352\231\300\264r\030\3101<\364\2164e\254\2334L\354\3114\340\244P\265\315\374\274\265\330\3600\264\364\207H4\213\256\3275\2613\0246\322\001\3505\000e\3755\214\006h\264\006\271,2\337\267\3052o\346\213\263k\377\3764\324\347t1\363)\0055\353\033\2745\020\317\0275 I\306\266\002\317\2404.O\260\267\177\\\344\271\222\200\324\271\313\271\t6\224J\317\265*\235\227\266YP_5\340\242b\2660\2460:\202W\3179|\271\036\267\240kA5\205\331d\264\270\371\3774\013z\0105\366\034X3\311\264\375\271\235]\010=\206\246?6&\351<\270\242IC7?\001\0046\2519\351\273\222\341\213\272V)\0246\324\250\204\266S\255W\262:5\2246`\324:8]e>6\254\303\0266~N&4\304c\2735\007w\332\264W\013\2675\232T\2272\367\361\0164\246\323\2745HE\0053F\177+4\356\317\230\265\230\250B2\271S\3145\2606\2504\277\340\2035;.g\266Ft\277\265\251\361\004\263\340H\3104\212g\0056\202\223\\6\036,263\366_6\225\232]\264\355\345\337\264\361\271\2412b\340\024\264\365\035}5_\267\2343*\266\3125_\316k6\2070\3415\203\034\3726\266\215\323\265I\024\027\265 \222\0048\376g\3376:\240\3356J\016\0247Ez\0257\313 \2053T\023\0136\245\367:\264S\267U6C\205\0306\'\033\3354\376zW7K\310\273\266\213\256B\266\202>\3626\304\014\"7\200\345\3157\255\231\3036\251\364\3336\005\272\0366\024\375\335\264\312Ro\265Od46U\350-5uL\0027\000\033E6h\313[7X\377\0007A\250\2127\240\000\201;\034\221\301\274*\210n<z\374w<.\253s=\327\022\014:\242r\357<\330\332\225;\270\345&\274\337?\210<\005>\321<\n-\006>\236su\276\231\310\340\273j\374 ;\001\254\017=\177\261D>\332\265\216=\205a\276<\304\372\341<aB\220\273\002d\025=\343<x=\241\351&\275J4\270\274\370\034_=1=\314:\275\325\252;#\027\302\275\003\235\234<\201\357\276<Z\217\225;\216\305\213;\243q\020\274\305h\263\275~\364b\274\345\202\244\276n1\366=T\362a\275w\253\033\274\220\3643\273\\h\241<\240\337\365\275\370\362\346=?^\024>T\203h\274\246\017\271\274\220\332\253<+4\322\274v0\341<\301\r\362\275\356\232T>\331kK=\244\265j\276\343\327\034\276\261\202>;.\005U\275Z|\231\274\343\002>\275$\3721\274[\017\211=K\266\335<\257\206\006<tS;<\304\010\221<\275\340\216<\372\341\027=\336\321\317<r\330\247={\n?>\322\232\333<\225\221\'<\223\321\267\273\227K\321<\201`\261\274%Iy=,\370\336=\313J\337\2734\363\267<\005@{\275\217B\316<xd\005>\"\205\320=[\345\323\274O\304j\274}P_<\361\232a\273\373U4\275\272\266\271\275\264\337Z>h\020\367\274\'\226\004<1\332n\275m\370\341<|\367e=.|r<\326\371g;\276\262T<\201\3678=\030\032k\275\216=\316=\3560\363=Xh\004\275\303wF=\273c~\274IU\320\275i\324\252<\3139h=8\332\277<\343.Z\2732\273\r<\035@\376<Iv\232=\370X\345=\312\314 =\006\242\336\273\255\206\325\274h\333\265=C\"\031<.pW\275\376;\217\2733S\215=\266\263\\=++\307\274q\344q;\337\224u\2755\326z=\311\026\210\2738\177H\274\032T\260=\r\346\343\274\237\373\303<\201/\t>\212\004\230=\t\215,=c\010\300;\230\032;\275\354\244p<\347\334\010>\315\032?\276\337\014\365=\266\215\"=\233\266b\273\234\016B=\031M4>\216\333W=\021\373^\275\240\360\222<\032\220\201\275S{\320=\364\312\370\275q\313\250\275\255ih\2755\337\344\275)\354\036\275\243\231\303;\237\340\306\275\303\177\022=@\263\024>\006\277\250<\330\255!\276\'\233\207\275_}\336\275\363\373c\275\361t\265=>\035\264<\255\021\266\275\270\353W\275\223\364\274\274b\217\346<d\353\353;2m\023>\037\340\231\2759\344\246< Hy\275 \225S=\207\327\033>>%\235\273\"\007\304=K\000\'>\000\002%\276\216N\251<\004W?;U3w\275\373]~\275\326\305$\276\272v\361=_\216\t\275\"\336\362\275\377\302\211\274\\\236\030>v\3711=\270\345\\<\252\276D=\301\2321\276\223\207r=)\217)\275<\354]<MF(=\033E\026=\275\276\200\275&bk=\274\372`\275\213\017\206>L\360\255=\306\363\270\275\021+\307:H\305\002\276\341\207\005>\215k\201;\354j\000=\336\362\235\275\220|\300\275WK\364\275\226\333\377<S\\\244\275\330\3124\275\257 \023>\270\316\236=9\314\013=\321\306\240\274nbW=\230}\205\275\306\352 =.\345\262=\245\245\214;\333-\377=\013P\315<1\235\200<\\\276\030>\205\350i\274!O\225<7\275\217\275\203f\246<\026o\004>(;\254=\317\243\233=`mc\274me\273\275\321\273\301\274\234\376\202\275\246\255\262\275\2047\330=V\317\215\275\235a\037\274\273\230+\274%\273#<>\013\302\275\276\330\207=\363\000\016>\256\223\225=\223\237C>^\"\375==\377\211\274\2339\256=\347\200\031\276\227\034\255<d\311\341:\0319\233:d\330\177<\234\"\217=\313\245\200=F\305\331<\320\002(;VP\346\273\330cF<\304V\006=tX\205\275\373\tX\274\325\243\225\274\211Q\207;\233(\264\273\221\320\177\276f\350\017\275\215\211}\273J\tX=\261\014S<\210\006\010=%\035\374<\021VA\275\326o6=\256-\210=\213<\310=\021\0107;\342\022\210=\306\354S<.[\262\273\314\'+<\301\266\243\274`I\035>i\364\320\275\023\253\200<c\372\361=H\320\032\276\225\326s\275A\2153\274d\227\034<\0256C=3\206n\275\336\270\001\276\357\242\016<\\s\363=\236\271\332\274w]\206\275A\217\234\275sx!=\234~Q\275\232ZC\276\035\313K<#I#\275\230\370\270<\3432\244\273m=\265=r\262X>\252\236\221=\322\225d\274X\277\353\273\t\353]=\227\030\341\273\204G\300<\362\332\266<\222\240\224=\177\346\355\275\346\371\310<tFl=p;\000\276\333r\312<\267h\323;\311\004\327\273\216\367\236<n\305\214=\344{\300=\277\'\322\275\017\034.\274\r\372\306<z\001\272=\220\245\246=\366q\001\2753u\373=\265\201O=\204\376?=\202\345>\275Q\021\256<x\255@\275$\364\315=\033\346\016=K\030\213<$\027j<L\272m>{\312\243<\'\021\021=\356\213\255<\260\256{=\026\337\217=od\024;\254G\226=#v\357=$\354j=\262D\260\275S\222\020\276\305\231\013\274\n\032u\275\257\225\330<\326\031\025>\273\224\000\275@\014\222\273h|\037<\3149t\274\213\360\366=\265\257\341\275-\243c=\354\031\301=\020H\013=\355\000K;N\211\337<\240\374q\275\272\375f\272\334o\226=\252\277\303:`\320C=\237\230\216=5cN=\002\233\031\275+\250\006>\020\224\326\273\320;\350<\007\265\020\275\2263;<\177\323m=>\r(\276;\361\306<\2061\217;\224\221\340\273\032\277\275< :\223=@mg\276\275\200\250=k\006\253\274\366\003y;\223\215\304<C\034n<L\233\034\275\'\321\266\275^\005\014=\304\253Q\274\202\177\315<\214\331\262\274\311yj\275-\007\235=\254\267\377\275c\215&\276\246\331\343;\321\262H=\223\363\227<\360~,<@\275\203;\244\343\241\274OC\317=\037\220\246>\343\266\212\274A\026\001>N\271\356=\r\264_\275\350\362+\274Q!\023\273`\352\265<\236\344@\276\315\332\251=ys.\276\033E\375;\025\355\325\274\231\n\276\273@\t\225\275\313x}>\266n\000\275\333:_=\324>1=$\240\323;+\2745\275\213\r\225\273\010\317o>\020@2>\222\250%\276<Y\203\274\256\tj\276\210\026\323<\202T\257<?89<\263\327\240<u\262\002>z\350_\275\223\371\300<J\2502\274T\036\336\275\237\\\231<u\316=<E>\356\27399\007=\366#`=\tK\230>\rKJ>\223\242\223\274F\321\260<\365&\371\274\235\334\017>L\256I=\256}\007>:W\013<\217I\371\274c\002\245;\315\304\201\274\345\271z\275\272\303B<Hk\332\275@\';\276\001\306\225<\356S\343=-\205\316<\301\203\021\272\310\234\031<\255\242\3779\344\335\255\274{<\344\273\224\230\326\275\331\261:=K\236\230<;q\010\275B\265\027>\260\370Q\274\347-\271\275Q\343\363<\002i\037>\0346\333:\354\217\237\274lJ\202<\245\343\004>\230\004|\275\222{==dr\017=\371\250;=8\205\316<\371]8\274s\356\\<-\356\220\275e(\311<\261\336J=\247\033)\276\3632\305=\237\255E=y\2266\275\032A\211\275\353\210\274\275\220\307/<za\330\273kh\031=\353!\204<\346\253\203=t1\021>\272A\346<\345W\214;\370Y?\274q\277\203<\325\327\364;\275#\301\274\372g\365\275\272\225^\274\212\251\215<\257\376\222<O\271-\2760\367\244<\212\334\251<\267\326\254<44\205<E\246-=;\204W<\203\377I\275\035c\226=\332%\366=\211\t=\274\370\014\324;\327\266@=Kt\204<\204\241 =\267\223\006<\257g\316<\225?0>\016\352\017\276\034\0242\274\003z5={\265\034\274\210Tu\275\215\265T\274[\311\222;\276\263!=e\323\347\275\326\000\036\276Y\360E\275E\253m=\300\252\343\274\347\320\322=\361\350\333=\221V\265\275\265K\335;D-\344< \236\353=\325}\210;\002\212\032>\230\274%\272\236\205\360\275?1\251\275}\236R=p\241~\274\243\300\374\275\260\324:=\3215\336<\276d\237<X\375\201;\202\371\305=F\330\t\275\375\266\333<\305\362\245<\005$\337\275\340\235\320<>\\/<\356z\345\273r\021\313<Z\315A=\362\220P\275IV\224\275``7\274J\376\024=\374\301<=\372\275k=\0069[=\023F\243=\3163!<h\312\264<\243\243\206\2754\353:<\244vJ\275\370\235\006>b\303\037\2756\256|=\004Lj<\336\204\250=\004\003\300<\311\234F<\274\004\225<\276\326\020=\r\301\262\274\206h\364<\261\244X\275<\037\252=vc\303=\263\005\204\272*\030P\275\332;\346\273\037\032\020\275\022\231\370<y\264\361=\335\304\313=\2619\022\274\347#\366=F\227\341=\377\315]=?\317\035=g\221U=\0207\236=<\025\202=9\356\016=\257\266\201<O\365{\275@\005\200=\357\016\224=\254];=\016,M\275\277\376N=\020\311\355:v\261$\275\265\262\362=\"\212\026<6\205\007\275\246J\351<O\014{<\237\246R=o\371\245=\200d\226<\362\375\235;\n\263\217\273\244\003\023<`\307\277<.\247\207>Z6\267\275|\0173\273\202\206\030<\333WV=e2\302\275\347u)=/\3010=u\314\006=`\336o<\270d\327<\256V\036=\210k\365\274\205>\326<\321!O=V\316\030\275y\244\310;\210Q\261<]\037(<=\013e<\0058\361;r\177\221\274\325h[>\272\370\227\275\224_\'\275\272kT<\265<\004\276\363\000B\275\314\362]\274W\352X<\260I\205\273\366\364\313\275\240\234\311=rX\205=+\251\\=\206\372\304\274\346\322\345\275\002\235\214\275\370\340 \276\240\277\251<\034\225\307=j\t\203=mBK\274:I\316=\341\275\333;m\013o\275\323\222H>\250\263Q=\246\256X\274;w\217\275\332\307\207<\250\027\005=\017.\215<u\307\353;2\374\206\275a\340\264<\310!\273<\232\340\321=\211`\311=\037\027\230<Q\343\027<\r\224\216\273<~l<\034\261u=U\233A\275>\250\270=\352?K\273d\334\242<\005\344\302=^\305%=\tzg=<\033\"=\346\307N=Q5\237<\323EN\275\225d]<\262^\342\274\275\004\237=\006\013y=\237\247\250\272\243\337\"<@\032\315=\017\225\205<V\222\203<1\331}<B\353g=\030t\257\273\'1\376<\313\334\250\274iah=\3729\037=\313\010\260\274\223\007u<\221\307\236\273\201Y\006\275\273&\320<\276G\004\274;\326\225=\351Ob\273\025\215\371=\265\224N\274\242\350b=\030\350F=\267\377\320<\205\265\312=H\362\346<\013\240\336<T|z<4~\031\275\226\200I=\310$\204=\307\214\320<\264\014\244\274X\032\374<\330w\262<\004Rs<f\302p=\\\253H<R+@\275\245\246\017=\2335\301<\376\207U=\261;\030=]x\211<\207\200t<Bg\266\272\356\324\275:0P\227\274\336=\027>C\205\347\275\007\234\274:\334\213r<*\204\010=CJV\275-\321\261<\245\267\000>\377\005\220<\357r\250<\253\035\346<\344 \377<\256<i\274\305\002\017<\024\274\344=\342A\013\275eK\316;\306\\D\275\347D><\252\321\265\273\272&\321;\2540\246\274\277\033\022>\305n\'\276u_\332\274l\237\016\276\314\'\334\276\341\216%\275\001\243\247\274\251\261\217<I\215(\274\177c\340=Ua\331=\n_\352=\2412&=\351G\331\274S\207\200=\271\275\224\275t\006$\276q=\250\276\345Y(>\3215\224=_\324W\276\224~\366<\270_\345<\325\353\003\276\031\261\234>\'\274b\274\204!l\274aa\222\276\313\354\262<\000\264\021<\254\256[<\354\263\207<X\235y\275\215+\344<\210\266\371<\033\361\033=\327W/=\375\271\237<F\355\266<\232\330\247\272\303!C;\351)Q;;\247\000=\013\031\251=Q\365\027:s\211\316<r\205\351<\237`c\275\33670>\356\305\204=N\013\007<\002\200\337<\352\256\230\275g<:=\257\317(\274T\003\227=\266\035\275=bA.9\245\3006<\205\000\200<ib\222<\351\346\340\273\277gT<\2014g=\340\266n<\237\236\004=K\322\360=0\255J=\223\262\005=\372\315\034=\364,Q=L\265\236\272\271\336\251\275:\000d\274R\310\334<\312nk<0\006\2539.\321\272=T\215\344=\371\277\374<E\242\233= \351\306<\364\213Q=\332#E=o\305\230;\204{\371<\346\366\223\274to\231<\031\025`=_\006h\273\225\013]=\002?\343<)\352==H|\266\274Z$\261=ZFQ<[\212\021\275\362\347\354=\226b\246<\255#p=X\001\004>n\033\317<\023&%<<\014w\273[K\244<q\307\247<\206\014C\275T%s\276\205\356\000\274\227\036&<+z!=\311<\202=\376f]=\254\346D=5\r\r=\312\033\274:8~\004=)`\234;}z\025\275)\353\255<#R\034>\340\302\361\275\241V\031<3b\250\275hg\237<\300\002\222<\026%\235;\255g\242\275\000\313\r\276C\313->d\230\332\274Wyv\276\304\214\206;\222ua\275\242\244\207\274(\3132<\257u\361;\243\355\017\274\260;\206>\024O\n\276\373s4\275\351L\007\275\026\250A\276\327\342\201=\372\021=\275L\273*\276%\2648>\017#\375<\221\360?\276J;E=\315b\000<\337{y<H\213R>\214\375\031=\035\205\240\274\373\334\365\275TI\343<\337\350\360<\ndV<\211\241\317<\343S\267=\333\303\324=\220\253\377<\244t^<\316-0>\023W\273<E\353\223<_\315\222\273\024\030\336<t\026N=2[|=\033r!=\035\366\n\274|*\316<1\327\355\275\247\325\262\275\020v\243>\230\001\302=\036\275\341;W\203Q<\253=w\2757T\006;\223\212\027\275C-\352=\250\022\332=\276\221x\274|\251\203<\355\0009=\332\035\335<=S\006=\034\036]<.\306e=\234\337\300<\010\037|=\315\336\207=\301\242\201=\256\276\344=\301\226\236\274\341\211?=\301n,\274\307p\350\275\022c\246<m\322\222=?^T\273\230h\004\274KB->F\275\250=,\321\007\275\204\225\345=I\364\202=\316v%=*WB=\0258\263=\331\241\307<\377\026A\275ND\020=\033d\230=_!\\\274\022\271\001=\270\356\352<\342\272\226<\346\211}<\264f\207=\375\021\302\274\220\264\377<!\367?;\205\007Z<\326~\255=l+\320=\270\352\016=\274}\215;\177\367J\275Y\276\227<\365\362D\275\244\2625\275\301\301\260;\t3r;\'\250\017\273\276I\271<,f\344\274\273G:=\222\274\242<\263A\007=gI\225<\004\262\200=\260\310\373<H#\207\275`~\346<\320\023\240<\312X\007\275\022\255\217\270Q\253\n\275IU\311<\'\010\247\274\235\343\"<\315\265\347;i\325\324=x\357\331\275.?\326\274\301w$\276\327\245\200\273\343/\212\275\356\240\224\274 \027@\274\r\3641=\332\270\022\2761\0147\276\357)\270\275\257\"\214=\355\270\353\274\311\206\373=\207U\013\275\235\237\247=U\222\364\274\260\223&\276\177\262\324\2750\306\254=\031\375\035=\355\324@\274\004\313l=\323\321\\=\'\"\240\2756\237\221\274U]2>%\016\300<\367^\211=P\\\263<\020\251I=ee>;\0046\343\275\276v\001=>\216\275<w\267E\275+\365\374<\030\203?<\215\233\225\274bN\024=\261\201\244\275\224\374M;X,\364;z\345\264\274\370\303\21494\t\r\275v\216:>\260\005\251=p\3070>+\216$\275\312]\212\275\254\272Y\275\276\010\355<\236\206\214\275!\220\247\275\251\000\004\275Q\245\311\275\264\\\215<\2463-<\352%\n=y?\206\2758\275\266<\036\264><\246>!=E\342H<Q\246\351\275\225\202@=\003\254x=\311I\333;\216\017D=\027\3452\275\212\221P\275\364\370]=W\302\260=\364U\014=2o\r\275H\373\350\274)\026\264\275\245\215\245<\017\306\244<\313\315{;\336TH=\021}\335\275\237$\265\274\020%B\275P\222\243\275T\234c\275\0358\226=\322\014\026=\353y\005\276\033\2446=%\250\323\275\014\236\014>^\226\205\275\007A\204=\255\264\274=\326\341\251\275\322\374\273<\027\306\025>\317=\247\275\331\3154=\213K\272;\013\222\237\275\304\013\335<q\244\035<\010O\313\275\324\273\325\274\372\344\230\275\304[z\274\361\000F=\337cy\275\256\241H=\276\212\260<\032\270\341;/\272\374\274;\363\325=\010\315\343;L}\305\275\230\302\022>\207\026\333\275\322Aj=\337:\332=Z\021\005>1\374\025=\373^X=\344\250\212<!=W\275\271\002E=\222 \350=p\257\250\275\004\250\254=\252\2041>\336\355\274\275\005\335N\275\203\274a<\276\244\034=:\327\020>|\034h=\341\313\n>\204\221)=,\263v\2759\303\002>\3466\312\273\305\231\322\274\265\027U=W0\307\275\374\346\316=\225S\246\275\226y\376;E\242\022;\013=\037=\274\223\201\274(\"\201=\324\342H\275\t\2168>\000\211\300=&\356\327<3\035I=s\223}<\276\201\201\275\301l\006\276o\341}=\003*q\275x\351\300\275r\232.=M\232\017=Z\026o\275\307\004v=\027\316\256\275-\014y=\207p+<\027a\354;\244\215E=\265\203\274=2\236c>\335\336\005\276N\375\333=\216\212\205\2740\231\025=\305\240\230\273\260\001\334\275\024\232\273\275\253B\361<><\332=4k\320<\343\322#=?f\307\274R2X=/s\350\274\273A2=X@\312\271\177\201\007>\317\231E\275\230\274Y\275x\317\204<\032\'\273=\035\275\013\276\030[2\275\\\354\204\274F\251p<\347p\340=\247g\203=\230Z\354=\010X\032\275\372\2021\2765\316\244\275\344\314\312\274\265\253/=\223U\323=\252 \322<\332\331\325\275\2461\242:%\327\265:f\201\335\275\215\331\351=2^\025>\372M\375\274\333\205\227\275\371\t\007>\255&\226\275e\013\376\274\215\0260=?\022\322\270\033<\376;\276|\010\274GR\017<c\235\\= \222\377<\340\320\274<\370 \331:n\377\345\273r\263?<|DK=X\305\205=u\341\245=k\344\254\273\266\031\250<\216\236\t=B#\264\274\216\337\340<\377`\027\276\217r_=\002@\261;L\006\303<y-\252=v\021N\275w\203:=\331q\253\275\325@\304<\366\376\014;`\355\004=\177&,<\0261\337<D\016\316;\214\313\010\275\233s1>3\342\366=\030\2606\274%\t\021>\027\315;\274\361\322V\275\221\006\332\273\235\226\022:~\2514<\307\250\226=\nN\254\275OP\250\275\0173`\274dN\214\274/+i>\356\013-\276\025/\215\276\227\313\034>\027b\245=\222\375\211=\017\320\t>a\261\221\275G\272\020:Q\253\261\275\333|D=^\377\216;\253\3110\274\231\022\265=}^\332<\374\020\035\274\271\245z<\234J\263;\032\230\002=X0@\272fb\200<\316\302\364=FS\037\274\275X\254<I\006S;\341\231\321\273\014L\235<X\031@<N\214\355<:\273>\274\226\001\333\273\275R\225<S\333\256=\354\302;=R7\215\276\351Sh;9d*=Jy\227\273\276\341x\274}\026\346\274\342?J\275\312\351\327\275!\227\220\275&\301\210\275\263\331\005<\277b\211;,{\202<\371\227\273\273\365\205n<_it\274\220\275\273:Q3\256<\374*\033\274W\305\231=\213\362\033=Nh\211\2743\307\005\275\323c\006\274)U\237<\3269>=j\032\335\274\336.h\275\213\264\345\273\226\014\370<I\324\233=o\300\327=,\207\022\276:-\331<J\247>=\333\336\201;6\023\311\273\256;\203<)ow\275\204~z\272\"\025X=3\307\234\275*7{=\242\366\005=\237(\223\274A\214\360\274\266\236\226=\236I=\275\354\356\013=\301\375\002>(FM<X\346\207=:\t\305<f\225\t=c\226Z;!G\307\274\337\026\300<x<r=\377\316&\276 4\3628\3004\366\274K\347\016=!\314\343\273{\031\224\275!qe=\005\211V=\305\311\333\275\213\247\003<\246\314\226=FT\342\275\374F\215\2751\350\260=>\014\216=8g\004\275\225\024\323;k\305\202=\317\304\305<dQC\2743\017\314;^A\341\274\032Z\201\276\227G&\276d\022\316\274\346\002Z\276\245\264C\276\"r\201\275Rl\224\274JR\245\274\257r&=G\351l\275X \230\275\027|t>\206\360\024\276[\374\303\274\t\275\244=\340 \247\275\350\347\214=\263\371i\275\330\234\343;1%\203\275\216\270\375=1\363\324=\017?(\273>\222\213=p\006\310=\255\370\271\274\035\267X\274$\304\336\2740\246\014=\r\207e=PBh<\347\215\271\274g(\272\275\335\352\212={\303\002=\231\036\350\275\246\372\365\275\037-\350<\235\326.<\260\273\224\274\227\346\031=\314*\023<O\032\025>\351\002\034;\277\370\004\275\377\035,=\331\007\010\275\326_\354\274\236\262\313=\021\237\310=\001\365\027\276\303\243\273\274\342\215w<\250c\213\275\273\271\222\275\244.\214\275\001K\352<\221\340\020\276\372\024\202<\306\247\241\275\374\265\002=\240\212k=j\361\207<@\245\213=t\326,\275\333\327\304=}\360\232=/\035\030\274\3564?>\235\"K\275\225\303e=\026\273\036\274\341\210\345<\360\365O=\223\233\267=\010\2779>\n\031\351\274\252H\203=\347\351\235\275\350\261\005>23P=\367\2767=\210\343\271\275\213\3600\276b19>`BD<\215\020\253\275\311z\350=yE\203=\337\331\262\275X\273\202=\250\304d<\321\255\324\275\315\325\014\275\325\3527\275\360\353\365<L\n#=\225\263\010=K$\214<\311\033\331=r\257\324=\024\307\033=\232\3648<m\324D\274\244,\322<\203r\263=?\"\202<=+$=$\225R\275l!\007=\340\3759=\206\323M\275\000}\350<yH\210\275\006\002\333\274\267\007\342\2743\201\233=^\371\242\275\303\276\226\275\260\357\007>\332B\207<V\216>\276\345Y\212\273\213\002\305\272C\300\334<\314\030\232\270\262\302`<\365\210\216=m?\227\275\310\316&>x\210\025\275\222b\356=Y\202\373=\036\322\235\275\2355\345\274\3738\304\271\035\274N<\361Kx<\271\242M\276,\273\217\275\325_\212\274!\016+\275\037O/=UY\327\275]@A=\265\300\371=xC\302\275g|\243=\365\366\021\276\260\366\330=\320\313\226<\'\375\242<~\260\025>\347Q\370\2756\270\343\274B\260\254\275\217\235\005=\034|o\274Q\203\004=Z\250\200=\336\222\232<V\005\000<\004\256)= \3050=\353\3534<Q\033\021=\204\365\244<;X\320\274\275\273\'=\253\241\240=\017Q\014\275\036\215H=bw;\274I\307\222=\262=\317\274!\r8=\337\354O=\232\201\210<\315\346\250<7;\t\275\013\017H\275\255)3=,N\231\275\337~\302\275\003\243\256<\014_\211\274\020\222\325<o\276\310<\352\255\037=\t\213\205;W\252\377<\322h=\275?T\275=n\373\034<\244H\231=\356\216&>\027\345\022>\363\300\014\276<j\212\274\020Td\275$P\304;\336t[=\246\251\177;\367\352/=t\177o\275\245\344\242=E\313\n=r\323P=u\307\333=>ek=\227\202\235<\337\233\333\274`-\323:U4\234<\r\243\263\275\216\tL=\3243\345=\340\325T=\002\262I\275%\314@=\360\217\225\275A\003x=,\243\014=\3132\020<\334\010\006\275M\2234<\226\362g<\202\3126=\263\177x;*\312\240<l\275$<\224p~\273\220\244];\306\333\204;I\270\243>N\366\255\275\317\221W\273,\377\006<\355\367\237=\202\315m\275\302\207\211=\307\253)>~\301\216\274\034w[<\"\202\327<\247U\275<.\332\275\274\007\030N<W\341\241=Ee\265\275^@\253:\000\344\256\274\220\025\032<\351\323R;$\213\355;yf\034=\3456u=[\233\225<N\320\346\273\260R\344\271x\360\036\276\323\331<\275f\202\200\274\t\023\356;\'#\246:\017\340P\274c\374\n>\246\364\211\274\324\000Q=\330H\250\274w\266\023\2760La\276\327\355P=\030mW\276\367\200\376\275lE\251=\266\320\274\274!\032\020>\202\342\244<F\376\225\275BX\007?G\276 \275D\253\014\274\036x\216\276sId<\352\226\027<\263\272b<\311T\024<\001_)\276\312\253}<\352.\270<\240Z\276=\r\270\232;\203\235\247<\340\007w<\274\320\200\2737T\271;\225\234\033=\030D%\2769\201\246>wY\232\273\202J\222<K\021\014>O|\372=\207\360i>\tQ\030=\354\302C<l\336\217<[\273\225\275\274\203\325<\016\027\226\274\323O\022=d\276i\272\346\334\241\275K\007\255;TS\212=9co<\031I\030<\313\372M<\332BZ=\341|\342\274;7\251<T@\335\274\355\324\177=\260\364\025=\337\277\033<\234\217\035<\350vy\273\356\272\204\275\270\300\013<\257\213\215\275\267\313\016>\037\373\237\2733[;=\247\347u>\323>\317=\216\260G>\365h\271<>\n\027=\277\000\242<H\375\264\274m\213\310<\236\305\354\274\006\303\030=,\237\031=\233[\021\275\265k==\203N\203<\316\364\323;Z]\216\273\274`\360<\010&\327;\004u\211;\020\353\0259;u=<\267\347t=\233M\257<\357l\316<:\n\030:\242#\361\273\030\204~<\317sB=sZ\315\2759\357\226=\267Bm\274\217\355\262<\306\263\320;\030O\023\276\265\231\256\274)\247\023\275U\213\n<h\026\007<;g\n=h\366\276<\005tR\275\357\010\335<q\210\204=F.\365\274\016\274K;q\000\323=\313\034x<z\216\023\274#\010\253;\333J\026=\212\034\264<\362\365\314\275\\\264\226\274\210Q\254\274d\224\377\2758\322[\275\362\320\243\2730H1\270\210\336\260<\026\013\004\276\247J\232=\262\362\215\275\006\235]<\354H\232\274vp\243\275\261\333\201\274\3746\030> \001\023>\321\322==e8r=\\(\206\272k\362\360=\265\251\351\273\002\261\364<\374]D>\303\026\024\275\213p\022\274\270\007\245\274%Q{<\264\201\002<hVS<YX!<\336\243\364=\314O\316\275e9\235<\300u\'\273\201\r\032\276\017?\253<1Ql;\232[\315\273\344\316\302<\\9\000<\004\353H=\332\006\205\274\344\213@\274\362\255\320<\353\364t<\'\243D=\002\\H\275\216\254\004>\025F\365\274S\337\306\270\030\206\342\274\214\221;\275\005\251W\275\004\316\270=\003\261t=8\266\202=&Q$<\2526\017>6\034\253<\271\312\361;NOF<\312\221O\275\302\3557<c\3448\274\017\256\n\274I\323.=\346\213k=\255\377\225\274&\303\200\275\254\034\017\274\0239\035\275\353\260\250<&\262\334=\374_\262=\214G:\274\222SZ\275v\260\323=M\207\345=\250\330\010<\273\227\t<!5\020=\376]\206\275\363Zj:\333%\267\274\221\334\203\275\376\357\332<y\315E=$\037a\275\177\313+\272\024=+=\302&\252\274m\177\246<b\237\377<\250,:\275k\255V=\'&\276\274\341\001\\<bB\263=\305\372@=\272:\014=\005\274\224;\204a\000\275\221\351\273<\024\371X=\277z\037\276\253\"\220\274\377h\240\274\302\356\273\274\n\243\330<\364\351+=\200\304\227<\214\303\240<\377\000<=\030?L\275$\211\206=\026\303\245\275\016\370\215\275\231iU=\244\314\352\275\006\332\253\275U\213\313<\372\344\007>\251G\322<<\203\0239\205\201\005<\361{\243\274\020\317\320\275\023%N\275p\322\316\274qD#>\242\035\265<\035\223\212\275Y\002\251\274\006\315\217\274\325pH=n\205;\275O\302\032\276}4K\275:\271==y\036\366\274\336L)\276\311\3437<\376Y,>\035u$\276\214s\357\275@\351\217=i\335\031>\211\200\032\274(c><\362D\335=\005\010\200\275\377\377p=\010~\245\274zN\020\276\366$\005=\022\207\245\274\250Z\240<\274%N=mUI\275,>\033\276\035-\010=\345\027D\275\252\345\320=\331\342\360<\036yS<\316\300\020\274O\037\036=\265\255\216\275\306J\335=(;!\276\0015 \275P6\025=\327\302\027=PK\n>V~ \276]I\337<\001\365\337<{\326\276\275\000\253\220:\303\2055<\374\313\223\275\323\312\t\275\320\021\277<$\367\265\2743\202\251<YI[\274\267\302\r=\027\324\324\275[e\241<\216\371W=s\263\225<\r\024)\274A\3474\275I\365\203=\034\203\241=\230\225\027\276\206\303\301\275\270/H\275\"+E=\303U\206=\200\225?>\037\210\024>B \217\274\362\036\025\276]F\025>Dz!>\010\330\202\275\374\224\016>W\024\271\275\'M+\275\323\277|\272v\201l\275\244\311\253\275x\017\316=\273\260\242=Y\330\021\275\202G`<\nt\201=\364~-\276\233\337\035\274\265 \325\275\354&\340\274k\033\034<\237\204R<\375\024\357;\205\206P=\204@\255\275\254\300\362<\355no;\201\357\210\274\324\350\242<\255\224\241<\264#\277=\034\341Q<_i\252\274\007\334L;\261\265*=\264\243\267=/\357^=\226\327\321=Qz#\275\005\200\232\274o~A=\237\322\022\274\277Qd\275\335\342\357<\000W\017=#q\246\275\366i\247;\370\341\224\274\026\"\227<\257\354\270<\340\2142;@aQ;\323#\350\275\371\032\031>o\277+\274\350\334\215\275~\261g>\265\"_\275l\267\017\274 )\334\274^$\006=\252\313%\276G\003\366\275\034\340\376=\375\273\252\275?s\231\274K\177U\275mB1=\030\212m>\207\030\205\275\2232\340\274<t\010<\360\372r=uk\006>\317r\005;\357\325-<\000\021v\275\223!\371\275\216\216\t\274\025 ,\275\331\000\300<\351@\004=\304\360\342;\251i\251\274\3409\367\273\345\225\276<.\302\264<w\332p\274\236&R>\250\026\313<B.\031<_\003\t\274\311\334\000=\205a>=fe_>\270\305\214>\276\346\227\274\032\rU<p\255\032\275\025\003\360=\005\230C>\373\007\226=lTp\275\311\210\'\275\345\222\037=a:q\275\321(m\275\306\241\217<\331\200\273\274\344\010\032\276\300\232\r<Jf\206\275\367\031\304<\242\206\034=\030\305\025<\2246\365;\267-1\274~\333\340<\215\364\227\275\3347U=\321 \347=\265\377M\2742\007\331=\230-\323\274\253W&<H#\264<-\026\224:\341\3420>}Z_\274\275{\356<\262\255\310\274\236\273g<\276~\\>HI\361=_J\222\274W\2240\275\332\324\021>\322\265W\274q$\213\275\026\006\237=o\2159=e\220G\274Z\236\260\274w\371\364\273]\335\263\273\032G-\275\036\310\305\275\310YF<\010\326\377<\224\001\026\2755\016y<H\010\253=-x\016>v\276\020=~r\317;+\252\274\274B,\302<\245H\236\274?(\236\275\344}-\275B\016\010\273T0\t;\261\351j<\320\364%\274B\036\217=\235*\331\274\310\\\231\275\366\214\341;D\235\232=\265\030\210\274\240m\207\275\316tC\273\206\364\266=\004\257\234\275\330\374\213<G)\240\275\356g\336<\311/\031=h.\016<\231\351\222\275\227\361a\276k\234\264\275U\214\314\274I\2677=\257x\020=t\352\207\275\024@\247\274\032\324\313\273\362@\016=\007\362*>\210@L\275\263U\r>\247\344\234:\272\315\362\274T\341\210\275\202\260\037>\017t\347\275\226\005\214\275\217\254G=\035\273%\275Qa\036\276\232\300\013=\253\033\204\274{e\254<H\2363\274\356mZ\274\342\014\241\274[\036*>\222\347\273\274\t\307\220=%\201\240<\3719<=e$\t\272\005e\341<\330c\n=\001H\005\275\031N/\275\246&\000=\323\306X<Vu{\274\217\313\034=x\352[\275}\366\002=W\225\343\275\331q;\274\341\307&<W\333\237\275\374\316u=\354\267\330\275=\236\315=\021K\345\275b\355~\275\333\247]=\013\032\377\275J\007\216\275fe\243\275\004\325J=\321U\252\275\241\313\223<*m\223\275\265\222\026=\035%\276=\215\230\265<\311\256l=\225C\217=\270\214\000=1\371\347<\032G\007>3\2700>\324z\344\274\357;\270\2758\356d<m\266\032\276(\2759=h\311\300=v\036\177:\363\204\t\274\217\272h;\201\371+\276\363O\275=[:K=\026f\262=\335\033\217\275YV\216;\254<q=Hi\236\275\362w\245\275X\226\203\275\nZ\263=4\273\351;s\366`\275\310\371\022=\251\242\032\276f\211\322=<F\332<8\243\342\273\010\253\001<#\311\232<\001\314\214<\225\357\230=]\323@\274j7\345<+\267\316;rN\214\273p\256\247<g~\337=\376\212)\276J\326\271\273\027z\235\274\353\305\214;b3\004=\347[h=\373\0269<\234F\363\275\364\037e=C\217\023\274\255\2450=q\317`\273\'Sc\275\"=\010<\277\371\022=DY\316\275\n\3332<;7H\274\227\343\275<\"s&\272\325r\312;f\267)\274\030\311\215\275\216\221Z\27524\270\274\313\036\344\275id*\276\374\217r\275\264\352v\274\027\t#<<M)=\231L\325\275\"vB>\362\252\027\276\327[\334<\202\032\003\275p\327\001\276\346o\263=\266H\267=\306\212\214\275\202\003\016>C\325\243=\331\242\031\276\260\300\377\275\204\2019;\271x4=\246\255]9\370\321\306<C\353\260\274!\275+\276\0253\376<\306\263\037=\301\002\202<Ny\006=)=\376=\271c\035\273\251\362\355<V\000\310<(\247\213\275\313\007\303<|\317h<\341O\004\274\237\365\003=\315\262\013=\327p\260=\353\2028\275\2654\233\274O>\362<\034?\227\275\n\225\250=\376\236\306\275\361:\305=U\333\207\272\025\027b\274\006\245\244\273\264\372A=\'yn\275;\314\202=\264*\027>\336@\203\275\247\210\242<,u4=\016S\000=\302\203\373<r\354~<a\016\251<U\374\350:t\234\277<`E.=Ov\251=\013\313\035=\264o\231\275aG\256<\021\376p\274\036\355\006\275\211\325$=6\260\007>+4\'\275(\250\314\274\316\222\334=\236\017\024>Uj\331=_<1<$\376\324=S7\313=d^e\275\246\251\243\275f\311]<\351\023\214\275i\314N=\230\347\222=\343|\356\275\344\016\252=\377\227N=`}\n\274\037\366\177=\205\212\006\276\307\263\';\271\354\263<\033\253@\275\274#\213;\217\2322<4\211\202;\372C\363;\222\350l;\232\300\024\2724Mp;\377\264Y\272\030\013\010\276\005\026;>\202`\036\274\240&6:+\254\020\275\240\217\031\276\001\013\306\274\357\351\010=\362,\277;\277\316\002\274\302\375\221<\360\361,:\n:\236\274\013\212\200\274\344\321\031;\302\030\010\275\254\025\'\273Y\261\t=\304\rN:\351a:\272fhp:\221\260\252\272\251\027\027>\351K\215=\361\013U\273[\204T>,\234*=\260\261\002\275\273\200\203\273\214\020\305\274/8\374:G\0351>\256\310\207\275\021:\233>\267\230*<\\\n6\273\276\2745=\177\323\355\274G\264H=9\206\304\276!q9\275P\303j;\342\264\271=\375\275\211=\335\2701;*\027\241<\235\345\323>i)\332\274l\343\324:\006\270c\276\234J <\367\013!;b\267\003;D2\213;\t+\255:\240|\313\275\216\256\004<\344\245\200\275\337\316\235\276\020B;<\350\177\317;F\3401\272\010c\247;\232\330v\274\037\336\247\274e\017\002\276\246\211\037\2749=(;K\357\263<\002\335\273\273J\010-\275\0223\207=\2357\326\274\351\320K\274\236?\217\275\323\026*\274\022\372\245\273\230\177\314\274\'m\221\275&I\014\275\241\254}:\351\232\314<\261\236\321;\027\201\337\273gC\250:\037\253\205;P\231\261\274\362\'%\275LU\"\275Y\362\225\273I\231\343\273\317>\257\273\r\035\263\2740\n\004\272,\377\032\275\023\001\037\274R\356;\272\220\213\276;\225\321\025\2748\271t\2757\241\216<\034xE<\321\242C\274\245/\";\354Z\3179\351\210B\2746\013\030\275\022!\305\272\247\r\217\274]$\006\274\361\332:\274\003K\344\274\314\021U\275w\354\017\273\330R{\274\"d\257\274\'\037\320<q\216\355<|=\036=\215\347\216=;\356\266< \022\351=\221@\336=\263\305\037=%\237*<\247\025\n\275\272\323\276<\305l%=\224\264\262=\347_:=\345\233\200\273\267\353\221=\232\004?;\206A0\275\351\260\354<k\030X\275g\315\023\275\321f8=^Q\245=\3251\251\274\360\301\206\275l\210\205=\202\214\026>=>-=\254>\212\272+O9\275>\251\334<\230\016\016=\033f\210<\247_\263\274y\213\357=\005{\344\274H\321\315\274\245YT\276\232,\'\276\242d\241\275\210\325\354\2745\0040<sQ\307<\235\016\250=\000G\251\2754\335\323=/od\275\026\3648\275\370n\031>\217V\027>\0314`<\031\357\252\275\234D\266=\215\300\252= xz=\357S\373=\331\231\002<q\233\333=\367\\\007\276\360\000\025>\314\007\025\275D\255$>\316\337h\2751\241\341=\223C\024=\013\237e\274\351\305\307\274y\263\344\275\332?2=\367a\202\275\366\240)\275K\016\030=\257\251\236<\233R\223\274\020o\034=@5\260\273\244e\331\275\377\276F=\231\013N\275\255u\020\274\244\302\005<\337\\\250;\240+\356\275\020:%=\220AL\275R\336\351\273\033l\035\275\256\000\227=\204\235\211\275\222\214(>\177\335\365<\205q\266=\316z\315<\034\301\303;rM%=c%\206\275(\333\020=Re3\275\007\245\271=\3538\360;\331V\377\275ur\036>\376\246\355=\026]\374\275k\226\021\276\210\251&\275\022\225\334\275\366\203l=\255\216\203=\342hI\272}am;\213\374\243\272\206\346(\276\333\372\026=\375U\034\274\017jA=\276;\272=\323P\216\274\315\241\030>\204\270\223:\022\375\244\275\336\211\335=T=\001>X4\367=\326\364\035\276]\024D=\0045r=\247\361\250\275\312\n\371=|\345\323;\006\013,;\210\342\223\272\333t\232\273\356\031\343<ay\342\274_\340\312\273s\257\2729\031\232\242\2724\026^\272*\352*\274\253\220\231=\214\010m\275i\220\023\274\207\304\211\273\201\032g=\r\234\211=U\313c=\2005\254=\034\243\352\274\006>_;X.\003=\326F\375;\233\036\241;4\340D\273\267\026 =\026;\222\274\367\037\206;\243\3154\275\341q5\273\003F\226;0\034\370\272\302\231\211;{\203\030\276G7}\275zq0\2737\332\002\276/\004\177\274\031\003\006\274\256$Z\2732e\241;\005*J\271Ut\202:\307\256\033>\010\001\031;\315\316\021=\352\312\213;\035\202\205\275\034\371)=A\323\030>\223)c\276\\\267r=(=O<\310H\207\275\227\027\204=k\213`<R\025r=\257\301\227=\3737\007\271\350\310\313\273\242\030\217\275\373\032\312\273\032\213\304;t+\267\272\357\335\310;\022V1\275\374\t\251<\356\233\226\271\353r[=\023bX=\302W\202\273)\tY;\224\303\342\271b\027\033\2732\244\025\2753\225\326\275\266V\324=\220r\007\274\275\370t\273\217z~<\313D\341=\'!\341=w\315f=\037K8\275\310\251\277;\337\305&\275D\230W\274\234A\250;\370Q\032\275\335\304\235\274\357\254\214\274\337\200\235;axL\275\210\236\305\273\207?\365;\026\273\343\272\301\333\273<\350\242\217;0\362F<9\210\353<=\277\026=\034\035\017=\034kX;\311\305&\274fj\251\272F\366+\275\0356\304\274%3e\275)\241\247=\252\222\036\2741:\310<\300p\027=L\235\251=\2469\236=C\244\375<5iK\274\024\231\311;\276%\000=Rf\331\273\007W\273;]\311\341\274\314\270\224\273\351\013\177\274\030\227\336\274N\274\310\274g\237\225<\275\251\230<\373$\n=\312\365B\275\013\013:=L\220q\273\207\304\253<\216\'\361=F\237\213<\251e\"=\260\234\213<\016\361\206\275\235\354\235<\256\242\230\274ly\002\273\0229N\274\002\246\227\275\320@Y\273:^\177=\001\277\327\275\334\210\304=\nxC\276D\326\265=\016\201\222\274\023\007\257=\266A,\2744N\221\275\236k\226\274\207^:=+?.\276,0\035\2748V>\275JR\353<\257\265\177=Ma\240<\034\353\302\275\271\300H=>\225\335=\262\347>\275\037[\262=\231\023\334\274\005q\250\275\020A\037\275\311\340\242<\357\017K=\002\266\032>\034>g\274\211)\314\275\031\020\214\272\213\247H\275\332=\365=d\354\001\276\262\231\265\275\370\020\313=\347<\324\2758\030\325\274\310\346\033;\027\025F<\030c\027=\r((\276\270\311\203\275\311\277,<\300d1\275\324\227\273=\n\023\227=j\340L\274\'F\035=\r\030\204=^\016\030>\025\205F=d\230E= \273\311<\231,t\275\010@\035=\327\017\340<\257&G\274G\0375=\257S\256\275@\301\221=C\364\255=D\010\350\274\177G\232\274\327\023\322=1XF=\013\204\370\275\314\032V>\264\031\022=E&\214<\264\313\004=\235\215r<5{\221\275\344,\370\275\240k\245\275\0267j=^\'\016=\3120\025=J\333/=\302i\346\274\374\177\026=\356]\265=\325\017\353=A\276\270=`\264\335=\270\274\346==\252\006>\177\364\303\275\342\300\315\274?\032v\275\331s\324\275\017\303q=\236\267\014\275x\200\010\275\226\356\320;\2263\010\274\201\373\242\275\245\266\230\274\267\216\371<\000\206\023>k\306\337\2744\022V\275o\232C\274\363\030\311=\332\267\253\275\233d\277=A\023\014>;eO\275\376&\207\274o\216\301=\246\327 \276\214\312\007>`\303\365\275b,\300;\247\032\000\275\374\031Z=x\363\325;\346R\353<q\220\354=O,\275<:\006\314;\230\362\263\273\366\016\364\267,\377L=\031\257F>\315[7\276s`$\274@W\230;\332\270\260=[P\325\2748\200\032>[\340\237=2\355\330\274a\270\253;\351j\231<y\361K=\357\237\341\274\356\036D=\3169F\275v\254K\275\321l\236\273\365\313J\2752\273U<=\'9\273\030\344\007<-\366P<|\317\304\275\2458\354\275@\206\315\273\323\021\246\276\373\205`\2761\255D\275\350\316\332\273\006\2462\274\244\377\272;\241\336\204>M\357\272=%\342/>6\207\022=\236VK\274\232\222\300\2757\034\247\275bl\004\276\375j\253\276\2204k=a\341F\275K\242\004\275\031T\347<?\213\264<\275\020\252\276zi\200=\322T\315\274 \306\243;\217Y\201\274\347\223\312<\220\226\307\273\020\257\016<\020d\222;Y\313y\276b\010.>\035\223:<J\266\237=\nE\256>?\273\334<s\240\356;\242\361\326\273\242n\2118#D\034=\324>\224\275\242,S>D\263R\274\226p\013<\271-\277:<\\\267=\341\377\347<\231m\367;\330\r\205\274\267\3202;\224\235.\275\253\275.<\226\332\257\274z\213 \276h\001\373=\351!\246\274@JQ\274B\300\357\275\304\364\247<\351\213\313;\270\020p<\261\246>=\207\351+\275f\317W=\030/\307\274\036\345\n=\232\356\221=\233\255\363<\206f1=\225\307\243\273\253\355E\275\000\217y=\336\231\026\276\270`\022>h\3422\2748~\203\274\016\302M;d\025\352=\020\000\035>\333L\361<\"$\273<\336\322X:|\313\206=\362\345\310<\252\263\003\275F\"\302\274\273\364\207=]\2159\274dA\323\274\331\210\364\274\177h\336;\204n\211<Ws\313=\376\357Z8\033\220\211\274\221?\014=\310\210F<\343)S=\351\221\364=\361\343\310<\206P\021;#D\277\273\234\342s<\020\373\002=\326y*>N\207\034\276\263\3556\274\271E\007<m\021\024=\241\302\274\274\234|v=\356\356E\275=\274\205<\354\n\300:C.\024=G\233;=\177\026 \275D\016$\271\244\200\327<\"\261s\275y\003\203;\306\354\317\273\324\322y<Z\214\356<Q7\237;q\tg\274\210X\007\274\245\016\013\276\345\320=\274\311\341\356\275\352\352$\276\252\344T\275\2216\361\273\212\021\014;1\252]<\230\207^\274\373x\233\275\016yq\275\320\227\036=\261\357\226\274\"/Q\274\223-\026>H\310\243\275\034l\342=Jw,\275\370\364\352\274)H\201=\224\rK\275\254\275\360:p\314X\276h\313\363\275\276\251\031\275,\227\035\274\316\366\346=f4n<Z\257\007<\322\361;<\'\336\005<\352\201\215=\343\r\306=\322:\231<\302\2777=\255\244\001>\327d\267<\261\350\306;\"t\251\2735\221\262<p\372a=\212\2417\275{\215\233\274K?\370\273\372s4<\352}\013=\035\237_\274\224~\351\274\260B3<\364^N\274\267\223\024<\236^0\274X\354\275<`\213\"\275\032\232\235\274\034\201u=1\222(<\304n\334;\237\255\252\274\325\254\261<\3636\216\273\362\312Q<\016\346\370<\244\336\006\274\n\367K=\223&\344=\226\315\245=9\232\243=\276t\327\274\360\307\206<\316\304\367\273\367W\311\275\301\276\t=n\031\377\274\366\371\305\274?\232\r\274\271\331!\275g\'c=K\344S=3\310\365<\315\213\343<\362\347\223=\350\233<\272\356gW<IO\361<|\177J\275\264\332\221={\302l=\352\375\244\274\217\353\265=lJ\201<\251Mj\275\357\251g\274\0033\237=t\344\033<u\360\260:\004\r\233\274\034B%\273\"\326\241<\003\023\'\275\034\354\000\273\030\330-;\214<y\272\200\235m\270\013\304\215<\267\327P=\211\004\321<D)I;\306\271r\272\364\220\347<\316{\256\273\212\373C\274\033)\255\275(\267(<Or\014<\374\303\177;24\235<\017Q\247;\350[-\274\241#\376\27465\270\274\273*\001;<u0;\314\257{\272\202\247\252;HY\016\272\224x%\273\345\262\224>\212\020\014>\313\027D\273s#\374=\2230\243=\0358\310\273\267\307t\273\254\247\002<t\306g;\036\031\312\275\357<R<t\277\212\276\302\007Q<\270>49v\212\320\275`\250|\275\030m\215=\031A{\274\302\211\357;\340\032\334<\341\227\022\275\204\274Z<\0018+\274\363\256V\273YB\225>\301\003\352\273d\223O\273p\353\203\276\273\257\022;\026E\355;j<\005;\233`2<\237\363\345<\230)\325\274\226\215\252\272/\203/=W/\233\274T\000\303\270A\351_;XB_\272a\231w;\262\366\235<\322\271\220=s\2052=N\005+;4k\010;\376\035\003=\312z\354<\334\014|\271\001\315\2229\t\364n:S-\022<hf\233\274Rg\221<{\240\016<D\303\335\274v\333W\274\0347\315\274\302D\271:\003l\276<\376\331\3019\2040\014\273\215\225\2069\250\211X<r(\033=ho\'\274+\242&\275\214\222\355<\001\366i;\243\010\002\275)I1\274P\031k\272+\234\257;\231\2332<\253\307y=\374\250\265;\0372};\0071\335<\031\327\003=\325\236H<\0131\344\274%\373\032\274\324\360\301<5\207I<=b\272\274\225p\206<\222=\375;ZC4<,f\224\271\327\345\263\274\371\360\363<\234\315\263\273.;9\274d\341^\274\007\004(\275\353CF:\2456\035=\327\245\245\274\323\2342;\357J\241<\030i$\276\216/\001<\243~\263;\215{8\273gn\024:\215\300r=\211\256\370;A\224\\>\364\372r\274\203\200\363\272\004\025==\035D\023>\344 3=P;\320\275\332\241\227<\245U\217\274\013\356\205<\004g\020<})\203\274\345Lp<6\237\037\276\214q\205\275\265\307\2149\246ym\275\035&\026;\304\342\225\274\270\030\r;\026\016\2759z\317\271\276W\214]>\342\336\335\272\005\300:>\276\365\250>zs\t\275\366\"\314\273\016\002\362\274\354S\332;6\332o>L\333P\274\336\031\212\276\232A\002\275jTD9\'q/>\370\tD\276\262\375\177\276\017\367\356\276\017>|<\251\034R\275p\343\332\275\320w)\275:H\224<U\343\000\276%\323R>\027\023\204\275g\022\356\272\203I\275\276\274\311c<\244\354\231\274\360I\025;\232\\\002;\005\315\272<\257f\226<\026\2124<\032?/=\366\302\020>\263IZ<$\205\027<\235\020\263\272\014B\263:RsK\275\210\037\367=\034D==\215#V\274\026\347\2718\214\215v\274\001\rS=T1\"\276\237\340J=VA\312\274\364\r\001\275\351\346\231<\236N\010\275\372\270\214\272l\375!\276i\202v\275\212\016\207\275\314A\373\272\216\344Y\276},\024<\320\220\373\274!+\232;A\362\025\274\353{\234\2742Q\205\2746\020e\275\007/ =\0357#=ov\344\273d\2754=\375\254\320\272#\277\"\275.\204\364<\314\263\353<\2612#=\003\277\007\274;\336\217\275\244\306.=\003}\223<\355\364-\275\037\031[=\313v\231<\250k\341\274\227\341\277=\'+\251;\223\030A\274l\177\001\272wJ3<\3531\213\275;\272n=e\220{\2759\336 \275\002\363F\275\357\0266\275\230\366\021<\270\r\262\274\256\2746<\347\027c:\336,\350<\304q\035=#t\221;\224\332|;_\n\247\271\265\315\206:\\\322\n\273H\277\351=^\205\254\275\224\311\352:[1\235;\222de==\363\027=>\357\210<De9\275=\334\036=zL\007<Z/\314<\203\n\020=\334\316\214\2738\202\215;8k\254\275\213\333g<\200\211\266:\350\353Q\275\366\260m;D\366\210\271A\333_;C\212 \274\302\357f\275\324#!\275\321\0205\273\277\216\010\274eN\227\275\n6X\274u\242\366\273on\202<K\224n;\237&\254=\352\t\231>4Q\013<\"\256\262</)\020\274St\227\275\327\272\017\275\342V\244\274\337\202\243\275z\305\316=\027\034\222<\2403\337\275\321z\r\275S\1775<\037\230*\276\325\000\204\274\007\267\330<F\270\227\273NtM\275pf\315;\217\372\256;n`\302;\203A1<J\221]=$\251\317;t^\020<_\370C=\033\304\211\2747Q\307;/\017$<\033\351c\271\317\375\036;\233\006\027\274\332\232\021\272\363\036_\275=c\213:2\255\r<UJ\261<\240\356\336\274\325\212(=~\223\010=J:\247<\337\242\'<\003\326\255\274d\202\020=\317\001+\273\270M\216\274\366p\270<j{E<<\003\t;x\016n\275H\335\276;\303\222\n;8\216\273;\226\236?=\213_<=f26<\324H\366<|\000\"=\206\305_;\337U\025<\006\224\014<]\002\243\271\037@\210\274\3121?\274\340\314\276<\nr\215\275\255\335\346:\3421#=\310\246\227<\212\320\306;\331o\205;\261\374\t<\365cS=\322\235\212<\346FI=\033\312\306<F\352\235\273)&A\2740\210\211<\213g?<\225\030_;\371\305\326\273\177!\252<\361g\342;P\204#=\266\347#<2\327\251\273\342\222\024\274\027^%\273T\306\240<\304\022\272\274\266\025\206;\212\327\310\272\324\243\023:B\232\3549\270\347\264\273YKJ<\037R\207\275\020\260\336\271M\252\322\272\2636Q<\241\027V=$\362\205<\032\325t=\rJF=\312\207T\273\234\360\274;\313\221\030=\361i\216;!C\237\273\342i\r\274>G\010<2\355\371\271\261\332\221\275\267{\230:\370x4;\004\031!\272\246:\272\273\323}\342\275X\"u=\266\000\360:\247`\006\276.\2568>\023\200\002<\370un\273\264\022\326\270\336\257\224:D\375P=\377\\\247=\262\250!>\266\2021;\2469(;\273\035\355\275\301\340 =\234\324\322=\244.\307\275@H\337=\0064|\273\326\336H\275\250\205x\275\322F\206\2736\031\215\275\361\231\325\275\021\373\007<\325d\205:\010\352\004>\203;p;\362\006\006:F\017\222\272\277\325\216<\351\037\002=\344j\017\274\212\2141\273^\323<=K\335\313\273L\337\212\273\310\242\t;E\214+:\267\373#\273\205\234\032\274\374d\002\273%<\237\274\330\0065\272:PO\272Rm\207\275\013\017\223\274\223\rQ<\370\333\247=w\213\020=\030\034\375\272\3417\236\2747\247!=\177\333k;\"\250@\275\332V\374<\316a\035<\237\331\\\271\353T\252\274\017]\037\273\326\025\037<\277\025r\272\224~/=^\027X=\302)\2229\352\334$<.\225\010=(\264\002\272{\273\216<J\363\362;$\230\3378a#\345\274\330W\364\273T~G=\300\234V\275\270\222\255\271\336\317\253<\3555\021\275\374\202^9om\256\272\017\004\276<qD}=\251\014x\273\032s\031=*\002\353<\334!\303;\334\337(\275\033\035\320\273\312\373L<j\\P\274#\334S\274\273\2563<\251\277\301<\347\375\310<bu\201\275\001\024\206=\342\2607\275\341\305i<t^\326=w\212\322\275j?\030=\376\362\204<\347\277\300;\272\005\352<\n\314\236\273YPU=\343\330\325=CR\025\275},\257=\347\243j=G\334\036\274cdb=\3337\214\275!2y=@L(=\032Z\254=\272v\344=\304\003\242\275\006\217D=\356\231@\276\334D#\276\303\267t\2736\252\274\274E\034\356<\247@\205= \242,<\024\362D=.\220\372\275\033\304\364=`\026\017\275_\013\205=\332*\204=\035\316\227\275q\355\373\274\360\212\231\274_\316\216=`\021\346; \277.\276\022h\217\273\313S#\275\321R\027\275w|f\275{\235\013\275\223\351\337\275\347\337\224\275\232\331\313<\022x\n\276\260\252\216=\350\376*\276]\267\305\274\327\204\352=}\252\001\276#\236+<\357\242\332\274&l\214\274\303\205)=k5\337=pA\316<\315V\010\275\341\010\241=\237Qx=\253\374(=\302\260\\<\370\223W>\351\014\007=f\374\241<\332\272i\274\023\031@=\340\007\034=S\250\233\273\3055\355=\3167\017\2750\211\222\274k\243\322<\001\024\333=[\r\026\276\0250(>\237\334\036\274\003\363K\2753\243\274=\026\241\353\275\311r\246\275G\223\251\274\371\245x\275!yG=,H\344<\301\347\230=\257I%=b\003w<&v\317<0?\242\275\032\"\205=\231\315\230=\'\347\036=\000z\003>U\366\260=\020\007\232\275u\365\346\275\313y\303\275\005\002\277\275\264\241Y=B\275\030>5\375\255\275H\362r\275\307S}=\320A\261=\351\222\014>Z\330\227\275\242\262:>w\352\315</\313\244\275\023\203\313\272\371\"\302<\0243\277\275\3547\"=\032\225\331=\032B*\276\271A\300\274\311\261:=\225\255\021\276\000\314\240\275i\'\276\275\224\032o\273V\313\246;\225w\331\273\270\342\235\2743\311\200\275\322\255\224\275\265>\353\274\320G\246\273\325\240\367;\234\305\270\274\300\035V\275\262\310i\275r\377\351\274\347mY<UE&\274\245\305\317\274\021\032\241<\272\332\010\275\333\371\320;\036\001\177\274\323\2124\272\253\3144\275n\261\215<\177\322c=\271k9\2751\324\336\274C\340\261;\235^\253\273f\241\311\274\365f\252\274s@\263\274V\030\365\273\203\031\264<}J\337\275c\222b\275wf\226<\220h\334<\264\200\317\274\r3g=\177\362:<\333\351\237;5\276\314\274{\030\2419\210\330\324\275\264\353\227=\217$Q\275\035\251\311<x\235\205=\251\001\344<\210v\237\275\315\320Q=\035\320:=\205d\005\275!4g=A\215\332\274\243\000\372\272\241L\352=Eu\270\275p\316\210=c\244M<\216c\334;\203\237\256\274\372m\265\274\202\222\220\274a\360\200\273V5\036\274\033\020\274\274\307e\335\274Uzh\274Y7\000\276\\H\312\274C\374\025\274\302d\334;\213\343\364\274\030SS<\200\n\252\275\300\346\275=\334\311:<\210\377y\274\372\037\276<\222\243*\275\t\240k<\360\337W\275&\335\340\273\026%X;\216pR=\226j\276\274\314\346f=@\236\346<\300\200\323\275\340\206A=7\204<\274\375\266\314\274\242|\344\274W\247\342\274#\353~\27451\243\272\330I\317\274\332I\240\274a?X\275\2779X\275\301\252\224\275\314\304)=\002c=\275\233oM<\314\271\250<\366\252\331\274c\344\222\275\274K\230\275>\363M<H2\234<N\212>=\367\234\013\274\274\302\273\275p4R\275\200\254\202\275\204\317,\274F\363\230\274\267\201\237\274wa\213=\013\231q\275\016\\\177\275^\213\370\274b\202:<[\274\330\274\006\356k=\334\277\031\275\354\255M\274cs@\273\036\243\335\271\341\300)\274\030T\020\274\335\360\276\274\177\005:=\225\307\275\2742\000\301;\200\336\235;\030U^\274wC:\275\261\347\332=\313\300\313=l\377`<\251\300X\273\266\3464\275\225\267\260\275R\313\262\275@\2405=Bo\201\274\205K\200<\004\221B\273\225\267\253:\310\214\320<}\304\220\275])\251\274G\267>\275\236U\235\272\272\265\360<w\255q\274\313\226Y\273\230\314\305\272!K2=*m\263\275\270OV\274\310\275\312;\323\227)=+\266\273\275\203\2259=V\247\227\273\326\2522<\260\236R\274f\371\017\276t\255E\276iZ\222=\2250\237\2742\1774<\324\224\317\271Fm@\276H\377\0319\305\213\275=\2346\233\275d\226g\273\352+\010\273\275]\244=\201\2409\274Ot\246\274\322\001%>\317\323\321\275\362#\365:\205$\225=\353$\263\272\203<\222\273\336zO\271s[\313\273\277\201\035\276\330\\\013=\n\245`\274k\253\232=\n\263h\275[v\232\274\311)\354;&\244h;\0132\217\274\332qu\274\324j\205\275y\023\213\274\305XW<\253\314\004\274\263\272!\273\230\221\210\274\t\301\320\275\251[\267\275\220\250d<\007\037\310<\034\350e=\337\304\221<F\243\276<\316\332p\274_l\301\275\306\005\376\274\023\rF\273\324P\237=\334Z\225\274m\037\226<\000\233\023\273w+\335\274d\254\342<\2022>\273F\017n<&\033\006\275iZ3\275\372\264\215=\211\212\222=\367\244\344;\216]\231=\353\367>\275w6\266\275$5D=\225\272V<%9\362<\241\020\000\276\272\000\330\274l\022\317\275qe\215\275\220d\354\273bN\024=\313\032-\275\347\255\366\273\271%\345<\036\244k\275i\037\352\274yK\274\274\230\342\315\274\254\331G=\266E\237=\347i\016\274\022\276Z=\352\232\272\273\371\307\317<\027\215<\275\01353\273\200,@\274\177t\214\275Z\251*;\346\221s\273\346tq:aW\306;\020\377\301;\351\346\343\273\032\221\373=\364<-\274b\321\032:\354\222$<\352\014R=\355\000f<N\2470\276\242\324\344<\256O\212\273\364\253\3319L\251\036\275\231\204>\274\210\375X\274\037z\246<\321]\342<\271\037A\273\037\211\205<D\202\220\273S\316<< \206\330\271K \254<\236eG=|\232W=\310c\355;\201\323s=\340\312S>\237\312\363\274\002\177\245;~\304\036<\264-\\\272O\003\037\276\3243\001<\024\252\001\275+\346\004\272\031\203\206\271fC\007\276\214\267\r>\010\342S=H\331\000<\021\205\237\274\267\357\310\273HN\277<\371\346P=\273\371\n\275B\273]\2721.O\275\304\024\306<{2\304;.\003\026\276\035\310\354\273\367\222t<W.\217\273;\302\006\274\330\376\355=\021`?\275\013\202\236\273\342\366\232\274 ;\035\276\320hc<\r#\275\273\311\210\250:\341\035\352;@b\377\2741\241\354\270\264\005\211=!95\274\3135,:\037>\035\275m\223L<\200o\276\275-\314d\273\036\344\201<Q\205\022\274\303\330\030=k\210X\275\360:$\274C\235!\276r\335\213\275\332\352\220<f\226\371\273\211\014\025\274{\240\363\273\016c\010<\223)\004\273\025b\r\275%\373\031\274\227\373\356\274\263\2231\275J\374\220\274\263t\016\275N\334\211\274\345]\235\274\201\327\214:\304PV<\363\323.\274\376\020\214\273Zd\334<\252\372\030\274\303o\274\272\235h-<\273\223\201\275?\252Q\275\034(\236<6.\030\2722\341\"\274\254\300f9\375\374\037\275T\273H\274\200\271S\275\177\211T\275\350\346k<\210\374*\274\234\271K\274\214q]:\213\0072;\370:\215\275\210\0323\273##D<\024\013\225\274)\350\214\274\374\234k\275\2478_\275\272p\322\274\017\311\216\273\377\267\355;x.\255\274\371\374\026\275\216\232+\274\320]\006\275\206H\027<Sc\354\273\205\341\300\274q\007\016<\n6\367\274\344\345m<\020\216\277\274\362\201T;\340a&\275\246\352\000\272\265\267x=\022\207\330\274\2464\n\275\215\203\026=\377\002\232\273\204\207&\274\010\235\237\274\213\3119\274\034E\321\273S\016\236<7y\304=\315\236\242=\254\264\215<\n\252\271=F\032 >@LW=\321I$<Qlq;\246$\345\274!\313\361=\373o\327\275\343\240G<\342\345\034\2752b\265<6\223\022<\021\346\351\274\207\005[<t\013\\=[V\245=M^\314;\255\306\213\275\325\322\212\273KCC\272 \267\234\275U\201\275=\005\357 \275G$:<\301\212;\275\225\334\271\274\370\031\266\274j\313w\274\231\271\267\273\336@3\275o\350\213;l\332\313\274\002k\354\274\362\260G\275\377\356\263\274(\360\000\2742\341\316;\305\024\341\274\002\340\021\274R\367\314\273\355\353\211\274\372\352\026<^A\207\2740\030><\341\221\022\275\231g\234;\311\375\214\275\030z\001\273\013\211\231;\376x(=V\263\206;\237\222g=\3268K\274k\334\010\275\237\256\025=\216\365*\274\204ym:Cb\334\2743\006\312\273/4X\274\023}\345\274J\210\\<G\222\264\274]$\304\274\177\364\222\275q^\220\275<\261A=\276\34009<u\013<\314\201\211=Uh\331\274\213CH\275\t\322\222;\276\031\031<\377\246\201\272X%\311\273\244i\323\274\2427\270\274_\235\023\275\260\024\030\275$T \274be\204\275`Y/\274\2605\216=\347\256E\275\341\277w\2751\246\200<X\301\232<@,\254\274PLW\271\030\246/<\247\002\274<\333X\241\274\204\345\016=\202\362\342\273\342\364\271\273[\013\242\274\246`\031=\355aE<\017\240/\274X\035\025\273Hg_<*CI<\366\233\036\275|\211\226>I\334\366\273\261Q\275:\211\310x\275\007.\250\275\216\003\336\274\327Bs\276\"\024\244<U\351\006\274<\255\t\274l\3067\275N\377O\275\n\305\000\273r\025\014=\342\205N=\3327\37394\316\352=6\342\n\274\2561-<c\223\026\274\210\223\205<\340\r%=\233Gn\274\352\t\373;\340Te=mc\276=\002\205$\275\010G@<=\034\227<[\205\005;R;\000=\346\312g\276\375\216\r\275\310v3\2734\352\254:\317\207\022=:\2230<\350\376(\2759\352\005>\362\247\271\275l\n\344\271\375\\T>\300\303\330=\311+,\275EFd=\243\002\332\274\315\265D=j\366\256:N\272\010\276\230*\017\274\033\307p<Y\302N\274\211\252\332\274\021\255\274=\264\225\256\275{\356\006\274\252\230,\275\377\271\234\276\326\004\203<\360\202t\274\356M\035\273%\242R<\rBV\275\314\016S=w\372\246\275\322\353\006\274\206/f\272\017Y\010=_\335B\274.\354\203\276O\317\227\274\375\332\023<M\266\205\274{\004\021<\\\261\205\2754\030,\275\320;A\276\tW`\276N\324\236<\000y\234\271\340U\251=\037yT\2748l\014\274R\245\201\274Oby\275\332\340\261\274\312\240\001\275\331\324\217\275\324\320\024\275D!1\275\367\2477\275h\247\246\275\036\306\\\272x[\005\274\324\013+\274\217\031T=\331R\310:\233\'\277\273\'\321S\275\t\275<\274\033\330e\274\267}\036\276\026\372\\\275-\201\373\273\025\271\177\274\017\004\t\275jFZ\275`LV\275\004\3222\275\026\033G\275\010i\020<[\277\244\275\013\317\033=\333Z\242\274\014\310L\275C%\251\275\200\301\027\274\376\302\216<\020]\357\274\0009\246:\374\'H\274o\200i=\023\375\006=\202\306A\274\324\241\212\273D\323\222<[\310\002=M\366\361\275Z*\035\275\337 )\274\017A\t\272~\014Y=\211\3255=\026\276G=\332\323j\276\373\2061=\312\336{\274\205\261\335\274\261\007\327\274\302\006N\275l\314\026=\247\000`>\306\347%;\363R8\273j\023\210<\367\276};\005\356e<C\033*\272\000\001\251\274\336\322\356\275\274\273r=6\214x;y\003\215=\034\n\322=\374<r\275\032\337b<\212b\216<e\336_<\335U\023\276\212\273\227\276\231\316;<\021\366\303\274f\373E\273\0355P\276\324\255\325>\356\273\017>[\035O>\375\337\311\275\210\231\231\275\301\205I>\257x8=+\022g\275\250\246\204\276\207\244\031\275\"\271\342<zA\272;V\0019\276a]\371\272\216L\234<I\260\277\272\327\2037\274~\257\216= m\345\275y\306\251;\335\003\261\275\217\'Q\276$&\t=^Y\250\274\027\030\216\273\004\375\254<\350\351\334<Id\326=\3423:>\3335X\274\310\025\246\270\226\363\270\275\272F\235=\203\330B\275\227\3346\273\254\231\270\274E\032\252\274\360\255\212<\026\2368\275\246\267A\275\023g\206\276K\237==\237\356\356\272\310\315\376\273\177\032\236\275\211\004\014<\021\024J<\377\031/:7%-\275.qO\275\275\225-\275\014\034e\275\262\0179\275\322`(\275\220\321B\275\233\224j\275a\037T\273*\253%\275\2414\020=\230\2268\272\245F\224=\0108*\274\330\207\230\275\351\317\303\2758y^\275\005\215\r\273m\'#=5\2417\273\356\321\366\274\225\220\227=\337\360\024\275\246yX\275\034\031>\2752x\332;~\027\225\274\267@\242\275\010\206\243\274(=a\275^ d\274\217\276\216\275p-\354\271\310J\245<\262\224\020\274\274-\241\273i\313\353\274\260\227A\275\334\'8\273\322F\212\272\251\177\033;6w,\274@\354c\274g\013\203\275\210\0337=s\207\016;\300\271b\273\370%\213\274\342.\202\273\347>\201\274#\276\321\273\312\354\202\274\272?n9\353y\272\274\324\271H\273\225*\253<\363\254\221\274\207\340\242\274\030\335\261<\210:\255\272\343\256\230<2<\211\273\346\020\374\273+\211\202\272\277\273\260;\247\255\'\274\323\245\202\275\007<\353;$\346\304\274\276m4=\302\247\310<\257_y;F\022\356:Z\020H\2743\2544\274q|Z<$\214\210\275\351\234\262\273*\202\007<0\261_=\216\3126<\222\235\313<\247Xu=\001a\221\275\364\206\221\2739\203\252<\377\367\251\274\234 \202;\362\330,;}\312\344<\360\305\2619\212Om;\257\014\367\274n\302+\274\"\234S\274&\301\226\2739\217\231\272IJ\207<\253\222\324\273\032<3\274\377\304\247\274\002s\200\275\341zg\273\025&\352\272\323\316$;Z\303\202\274B\250\216\274|\375\260\275\255\354\205\274l\3419;\273\256\351\273\372+\013\272\355\016\222\274\347\313\332\274\367d\230\274\257?+;L\244\3308\232\021\004=4\210\344\272\274\200f<5\376\344\274\000\371N\275A\232p<\235l.\273f\376\326;N\373.\274\036b\034\274F\371Z\273},\366\272\261RH<\266u\023\274C\022_\273c}\362\274\326g\020\275\312\217\241<\003J\226;\332\374\020;\320;J<\347\036\215\274\312\221\255\274\030\212\327\273\262d\';\027\205y\274\247\225\014\273\027T\240\273\210\013\260\274\ti\324\273 \330\340\274F!\241\272\237\311\374\274N\017\232\273<\206\257<\274\311\255\274F\365!\275\034\\[<n\206\222\274\021\014\354\272\344\336\374;\016W\321\273\326\177G<\366\016,\273s\357Y<\006\245\371\273\016\243\202\274\345\210A\275\354\323\001;\006\346\245\274.6*\273\037f\216;\256=\236\274\335\005\266\274i[p<#\307j=5y\343;h\037\324\273\205\014\353\274\206\224}\274\223T\303\274\332,\212;n\352\275\274\304\214\333:\331y\r\275`3\357\273\332\2779=\247\227\323\274\276\313K\274\274\304d=^\3238\273\251\022\275<\247\\\203\274\006\001[\274\006\242~\273\350\265 ;\002\357\301=\317M\314=\252\237\206<a\211&=\355q\037\275\345q?=\222o\370;\317i\255;\251\315\327\2744\366\r\275N\230\335\273\"w\345<\306\201\'\274O\362\240<2\251\373=\005Y\300=*bb\275\310Z\313;\027{\252<q2\240\273\271J\213<\335\"O<\250L\247\273C\277\245=\370K\006\275\027\020x\274m\330\361;\362\257\002\275\203\265\274\274\324:\252\274{T)\274\203\034\224\273\013\375O<\271\304/\274\262A\300\274\207\331\303\274~j\211\275\222\374\217\274\320@\242\273\313\223\213;\033\264\326\274CbP\274\306\020\010\276w\366\315\275\330\003\376;^\022a\274\234\353\221\273[\307\365\274bu!\275\333\2763\275}\375\271;\243w9;\335\033\033=\206\335H9X\241#=\206.\277\272\216I]\275\350\027\024=\023\367\307\273\276\335\305<\215\362\312\274\207d_\274kl\016\274\370P\003\274\250M0<o\317\210\274\323\261\335<\301\224J\275\314-x\275&\231\353<A\201\232\274N\216\215;\305\313\006=\336?\262\274\250\340\251\274\366!\016\275\016+\345;n(\271\274\353\340|\275\031\214/\274\264\256#\275:\366\301\274k\n\024\275\027\000n;\362\3218\275\220\224!\274\347\035T=\347\322\345\274-Ce\275\342\263\365<\343]\320<\020B0\274\036\3241<\235\236\277\273\263\253\007=\343\257%\273\201\327A;\237cL\274#\2000:\221\014\247\273\317\206\203;\366\027\006\272\372\273\037:\350\'78h\246g9\357H\246:\273!>\272\010_\r\274\372\207\243:\205F\224\271#\262\'\274\275\244\020;\342\274\r\274\313LE\275(Q\230;\354\230\257\272\013&\005\274C\234\000:\356\030\212:\221WN;\370\266\361;wHG\274\340p\0175\t\022z;\036\362\0079\214A\024:\371\0365\270b\005\007:I\334\317<\256\377\205\273\217n\365\2706\336P<b\352\217\274\020X\t:\265{P:\334\356\307\273=\311\3119\306\254J\2741\233B<\242\004+\275M\000\031\274\373\201\031\272C\210\313\272\232l\342<\021M\210<\362\320\230\273\2123\\\274\232\373\345\273\325}\002<\264q\237\274v\311\005<2\3059\274\225@\007\275\265\3574\274\177\232\370\270V\325 <V\225\301\271\267\034q:\306H\317\271\311sh\273\352$\275\273j\276\214\274\305/\3349\266L\205\274\210\236 <j\307\2277\275\252\203\271y\003N9\007\215\3349\231\307\207;\023,\257;\035\223\212;\373\223\245:\020\313-\272\322[\2059B\277w;\017Q8\274\314&\363\274\231\203><\020D\254\272\001\273\023\272 ?\273:\214\331\2519\244V><_\315 <?PJ\274\022p\207\271\035\332\315<\321>\\\271\214\360\022:\227\031\277\271\345\365\240\273\\\370\2709\210\341?\274\337r\324\273Y\345\n\274{\341\313\272\345\000`\273m\357\003;\352\225\005\270\217\356\024<\315\345\337:\004\275(\273\226\267\217\273\261\276\251:\263@\033\274,x7\272\216<\306\272b\326\025\274\205\215t\274?\256\005<\266\017\302\272\345\271\243\272!\256f:\313\354\202\271\332(\260;\263;\251;;]\'\274a\205\002<\n??<\177\3524\274LY\3327\350\223\362\273\260\346Y\272\241|w\274\177\2210\273\022\317\364;\327\361\033=\316\266\t<F\322i<\366)n;\226\212T\273\340J/<d\233\016<\340\020\347\273^}6;\341\301\211\273\263\000;;\274=\n<\034\331\024\274\004\033\201<\374\030\2338\340\306\374;ZX\204\273\224%\267<\240$\034:\274\253\010\2751?s<\345\254\316;\336J\353\274\317\352\242:\014\320U\273\210\027\227;\356lg;\226\351\026;L\t\332\271\014a\265\274\344\217A=\213T\027\274\312\327C=\351\022h=\354\220&\275\310(\303\273\373\035\251\273\004\020\214<S\"\277\275z\313\256<\306\025t\274\317\243\354;R,\021\27438N=\032\250\224\2756\023\300<\260\322\341=?\253\300\274D\302\216;\\\227\034\273\003\361W=Pk\304:9t\207<\360B\207\275\014V\266\267\332\234S\273\262\304\375<\027}\233<\032v\001<\026\236\312;\311\237\247\271\004\321\177\273\306\r\276\274\210\003S<\313-{<\353)\330\273}\026s<\233[\251;0\215k\273\232gx<,\020\n\273!X;\273\231\303v\274q1\241\273S\327\307;u\336Z\274\370\274\030=\020\327F\274\021\'I=\320\361\227\274\277\200\233\273\02627\275\314\232\214\273\0202\320\274k\355\243\273QF\357<c?\233\274\024\315\030;f3\277\273\265mT<+\250P:\'\353\257;\206*\t\273\226N\205\274\356\214\001\270\265\025R<i\345\031=\013\n$=\347\223\235\27446\201\274\"\353F\273\322\236\013\275\240\320\016<p\013\263;\002\241\177<\323x\210\273\262\227o\273%\371\331<\306>\273< a%<\222D\232<j53<\334_\211\273\353\307\004=\263\372\004;\337\325\025\275\371\222t<\222\274\037=n\241\264\274\351K\362;\356&\226;z\361^\274U\301\370\273\207l\230\274m\240\367;[\320\210;\221\363\246\274\240\235\2247\344<\007\275 g\014\276\375=\347\274\360\222\031\274\366\314v;^5k\272\334q\317<\034\267\001>\210\3750=F\004\227;\360\302\224:\"\314\305\274\031i9\275BM\251<\232\206\320=W\331\222<\342\2547<\244\237\376\2729)\371<i\0148=\350y*=\370!\222\275\316(]=\214\234T\273\206\313V<}t\220;I\235\320;~\245\3139\255\354F\274\251\035\315;\030S\252=\303\264j\272\312_\007\276\216s\306<D\311]=\026\024\007<8B\274\274<\207\205\267\360\214\266\274%\243\316\275|\236L=I\315!<\244`#:\325Qt>\177\300\021\276\304 \034\276\330\200&\276\177\'\356\275\026\204\205\273-*\000\275$L\001\275gA\321<2\2460\274\310+\335\271<w&=\276\r\263;\237\350\032>\320\346o;\355D\2308\252\001Y\273\006\r,<\237z\216\2759\322\374<\000\313~\271\312\'\375<\214\221\251=R7\367\274E\036=\274\202_Z;%\371a:)\366\'=Z\rA>\377\3505\275s\330\217;\233>\273:\274\306_=\370\244\323\275\325/\364\273\340r\006\276_sj=\347V\210<\037\225\035=\307\306\027=\210\036\023=\354\321\030>\036TH\275\264\275R=\030\305\272\273\"\366\"\276\366z5<Oq\305<\317\323\221\272\032s\333<\3142\337\273\025\0034<\240Y\233\272N\350`\2740\234E\273Ga\352<z\345\013={\\c;\270\205i=]#7=v\330H=\341-\000\275\036\330\223;\347\231\326<\207]\302\274\t=\270\274^M\020<\201\026\216\275\'\261\211==\t\240<$%\333<\216r\024=q\304B=\n\204X=9\225\302<\363{\031=X\314\245;\n\177\246\273\204\030\001<M\324I=\313\361\207=7\346\263<X\010\270\273;\354\031<\350_\346\273\343\340\202\275\006\375\262\275\240E#\2754A\233:\201\302.<wZ\215\274\036c%:\234M>=BD\253\272\271\310c;f\021\0309\2702\344<G\225]\275\351X\216\274\025\214\202\274\233\0052<\225\022\251<6^U<\30238=\376\006\243=|r\010\275Uk\005\276X6\235\274S\2461\271\306L$\275[:\020\274Kp\225;\362=\014;\351\367\337\274\005\247\242\275\003M\221\275c\010@;\276V\301\274\333I\244\275\020\006}=\270\223\031\273\\\347\272\274a\322\240\274\370\016<>\257\014\317=\246\322\300=\n\0020:\257\312\214;E\034\026\276\306\213\034\275\016\362h\275\2125K\276$\021\247<~K^=\217ub\275Q[@\275\203\345;=\333\267\024\276\005 \226\2757\036=\275\354\267\251:\\\204\020\276.\311\341\273\341\262\345:\355\t\003;:^\001=\016!\000\276\001Y\006>\352\027\030\274\006c_<*\220v=\037\025\035\275\344x\236;vm3<\260\223\263\274\351\335!=!\035H>\252\372.\272\337:j;abg\272\220\231h>u\240\030\276\360\223\002\275\036\035\023\276\005\035I=\0347\300<x?\200=v\277\013=\315\246\224=\244$\364\274\245\317D\275-b\\8\373.\025\273\260i\231\275RD\205\274\254\027\343<p\242\204;\237\250\253=\016I\005<\350\"\257<\212Ot\275P\231\032\275\355\334\203\274\"\277\223=\035.\373=1O-<\334\303\031=7\\\321;\243]F=Wg\306\275\224\242P;\022\230\035=js\307=s\025\302\275\347d\273<\006i\"\275\353\260\252<\031\302`=I4\035=\031O\324<d\"\265={0\274\273\314\022\347\274\253,\355;\025\333\r\274\250\363\217\270;E\237<\321h\230=j\306\374=\332\037h;\'\276\352;4\002\177\275cs4\274t\261y\275\234\321 \275\352#\t\275&\226\370\273F\351g;\207\277\222\274\216\276\223\274)\205\r>\265l\026>\004j\365;\204\010\303\273\3469\3129\227\343k=\035\343\207<\2768\246\274\023-\021\275\343\275\256:\220\013\023\275b\t\226;\273\217\217=\312\333\322\274Z\231 \275\262|\031\274\2356\004\273\267c\205\274\217U\027\274\337\r\301\273\304\"\246\272\351\366\r\274ua\007\275\257=\026=x\366\343;\374KB\275\216S\247;\244\031\205=\001\360\202<z\203\001\275\262t\027\274\2537\206\275d\317,>\375\t\377=\3033\236\273\276\360\277<\323N\220\275E8\232=\304\021K<v\346\365\275w\226\314=\367\320\263<3+\373\274\243#\266\275\201\320\001=\265%*>3\214\022\276#\016p<`R\217;\036A>>\235\2036\274V\020q\274\245\352\210\2735\337\314;\255*\324\274\362\246\254\275\241\313\207\274\214\366\007\275\333\234f;\350\234\014\275\3674c\274\267!l;\213\231\220\274\t\177\243<\223h*\276\362\356\017>\336!\022<\005\355<\274\202\245\362\275\022\260\276\275\364\376\274=\237(\221\273\230\347\303\274p\312\213;Y\214\224=^\266;<h\275\207=\026\0307=\367\240\260\275\307\215$<[\032?\273\376\242\255<q\236z\274\n\350\254;Xq6\273W\376\257<\324\304\"<\234?\211\275%\022\220\273\036\335\366\274\3249\325\274\262\327\375<n;\364<%\002Y;\321E\220=lh\373\273\225\274\303\275P\331q<\364\320\350;\315y\302\274\327\020-\275.\224\216;\016\262\205=\017\350\200\274\013\2478\275\203\226\371:,r\324\274\347\240,\271\347\343\253=\306\037v\274+\245:\275\010Mf<\264\335\001=3I\227\274\016&z<\324\315\'=\030\307\271<\363\225\356:\264=\360\273\321\301\257:\023\205\3619\tI\r\274\371\204\227<m\343l\272\246\350n:\257=\371\270\226\003)\273\216\217\233\273T\216\252<\271b-<\212\340?;\202\330\231\272\3755\014<\366\343\305\274>\366\005\274)~\344<\250\206L\274\272\310\201:\013?.;I\003\016<\250:\214; A\302\273\267\204\245\274\267S\251\273\010\347\231:\013\301\245;\245\357\244\272D\010\242\273g\247=\272\304\037\364\272\377q\021=UY\211\274\027\230-\272\210Y\251=\204\264u\275L\2120<\317\376\020\2736\216\220;\376\313}\272\016TY:\326v\300\274\360~i<\226H\341\273p\023\227: \021\240\272\310e\313< \232L\274\350{\240\274\246\013s\274\372? \273\354D\025=f\341\250\274\321\200d;x%5<\331#\337<\237g\030\274\025\241\030\273\360\225\371<\315\201\n\272\353;S\273nWQ:mc*;DA\225\273y\005u;cx\021\273H9v\273\310+\355;\232\310@\273\236Z+;\244\230)\271\3051\230\273J\032\303\270\317b\244\273G*\227\274,\341D;\374\223\037\273\274,\277<<e\327\273\020\214\370;P\245\207\274\322\001\345:\326\003\003;1\345k<\346\370g<\344\376\016;\213\267\r<\312\026L\274\347^\231\273\010\371.;/\310\361<\326C\021\273\322\262\264\273\250(\373\271\264\001F<\024\2347<\202i^\273\270\364\245;\030\263\004\274\330\211\r\274k]\322;\321\307X<\242\356\330\270\230\220\300;!<a\273\317\363\r<\225\357\317\273\2235>;5\330b\273\363\305C;4\327\030<\327`\217\273t\245k\273\333\0270\274\252\271);\242(\202\274@m\005<\271\342G;\244\252\246:\032\t^\274\302[l\273\023\"a<b\2100;\352\243\257\272#\'\244\273b\205\032<\334 x\273V\307\272<E\302\272\274\3161n\274o\3136\275!\366\203\275\377\254\245\274\241\252\246\273I\243\241; fb\274\252\307o\274A\255D\273\261\276\004=8\361\251;\255F\317\2733c\314\274\367!\332;v\270\300\274t\017\271\274 \244W\274\341\031\010;t\r\010\275\323%B\274\274\303#=\025\3240\274\254,\014\275b\357\263<\233\022w\273\260\375\217\273{\177k\274\351\'&\274ID\247\273a\344\313<R\375c\274\014F\005=\177\002R<\033\220\273=\204\227\232= \256A=3\031\033<\242\356\334:\001\310\211\274\350\356\300\274WB\217\275\335@I=\377)\374\274T#\217<z\261\004>67\027=\364c\256\275\222\270\326\275\257\"\373\275\206X\303<\"\260\313=&.\347\274\036\213\226\273\366P\245=T\325\016\276O\357v\274Ga\026<\212\352\321\272&\372b\274\026\267\215\274\002mB\274\2620\270\273.\177U\274wJ\222;\365\305\256\274\261|\331\274\275\017\001\276\207/\222\274\231\252\n\274M.\211;O)\235\274\351\241\205\274\241za<\265\037r=\334g\257;9\244X\274\224K\004\271w\213\003\275\253\255:\275\362Z\200\275)a\004<j\254:;$I\000=\314\350\267\273]\210\026=\031\353\273\274\317~\245\275\311\200E<[\312\006\274\0317\345\273\322\214\255\274\263P\252\273\272m,\274=\331\237\274\241\n\037;\231\216\211\274\035\335R\275}\233T\275\305Kk\275\322\241I<\310\341\027\273\357\202\220;]d\244<\256\247}\274\350\021\304\274\324r\'\275H%\264;\200Z\224<\354\231X\274\377;\252\274\216v1\275(\305\033\275W\005\013\275nu\r\274\r\316\367\274Q\3378\274tSA=\024\372\323\274e\333G\275\231B2=\323\210\031\275\026\037s\274\262\216\260\273\352\325t\273\322CT=\222W+\274\234\277%\274\034V*=\246lb<B\261w=\353\304e=\361p\201<\224\3526;m\302\336\273\356\301\201<Ton<\227\354V=\266\274\217\275_\370\304\272\245m?;\007\244\245\274sq\263\274\311\367T\272O\004t=\244\037\226\273\321\t\301\273\371\236/=p}w\273E\036\203\275\363\327W=\261W5=\035TO\2748\320F;1\335==\315\372C<\331\304\202\272\272\357\202:\250\213\204<\360\217^=4F\020\276\276%\014\274\315\346\277<\240dC\275\255\225)\275\311\253q\27365\300;I]U<\017\000\341<\271|\026\275\377\321\321\2742!\304\272O\374;\274.\032\201>D\306D\275zK\246\274\210\000\204\274\351m\336\275\304\265\333\273\266\257\036\273\320\237B\274\030\351\312\272\372@\016\273\315\013R\275)\274\020\274\034\264\311\273P\010\255\275/\240\227<%2\327;RS\267;c\341Q\274\025L:<\222\202\323\274U\345\252<\227C\"=\021)\224=[\341><_b\\;\362\365\357\2738\336\240<\355\021\013\274\346\326`=\n\327u\275L\2652\273\361T\314;\216k \276\310\241\352<\255uA\275\372\"\207=\177a\021\275Oz\366\273\363\276\000\275(\353t\274\371\243b\275\341\030\333=\342\336\"=\366S\314\274k\306\021<\305\242X=4*\230<\205\035x\274\353\251d;\376r\303\274m=\316;\330o\306<\202\370\337;n.\207=\327\"\255=\247e?\275\332\301 \275\'\332\320\273\301\302\"\275&E!<=r\321;>o\r\274\325\000\277\272B\316\243\2741\036x\275\233\356\275=\225\362t\2750\343\354:J\276z\274\271\372K\2738\3453\271<\327\210\273\240$\222\275\304\026\177=\032\353Z=\010\302u\27406\306;\200h\271<\222\243\331\274\016\031}\275\3408\374\274\303D\025;(\\\322\274\3475\217=\372\365\377;e\373M=*w\335=y\005\020=\332@\010;\254\244\370\273\236\002\265<\027@\013<\310\213/\276|\340\032\276\001\177\226\274D\013\304;\214\001\320<\317\300\350\273L\325\374<\331J\213;\216\206H<\320\252<\274\2701\245<\375\365\325\274\254\200\221\275s\223\032=\256\264(=\010\007\375<G\0214\273\023\311\001\275\014\232h<\037v\270;\233\232\316;\354L\310\2740\014\375=\200\366\350\275\356\215\272\273\004\334\227\275\360\360\303<QFg\275\340\246\212\273W\225,;\214/\333<$\374\261=\3737\246<\021Y\222\275\001\264\202<3a~\274\315M\317\275\024\346\231=\024\317\t\276\353\312&\275\242\255(=\220S\272\274\255$*\275\273\345\t=8\002\"\275\003\2274\276\036\273\353=\214\354\375<\300h\037;K\271\314=\356\361\242<`\226\200<\361\263\032<4\'7;)\334\255<(T$=\364\366\007<\215&\026\275/\325\031=\257T\002=\332T\205\272\374\347\340\273)\023\314<F\255\233\274\3309\360=U\342\022\275\364\244\221\274\320e2<\266\214\020\275?\2256<\033\353\221\274\364\203\237=f\306\244\274\276R\203\274\200\323\025\274\306\222\341\274\376%\214\275\027wZ\275\315\320\334=\254\022K=M\304\313\273\204|\345;\271\322\235<\267\210\025\274GSE<\252\267\364\273\220\371>\275\225\377\007=m@I\275\010\r\344<G|S=Z}\270\274\223\265;\275\272w\376\273=\316\350\275\256\017\211<5\330\260<\036\3546\2754\326\226\274\250b<\275k\314\003\275\364\250`\273#)\"=\264\226\207=\267\260_\274Q\335\341\274\267:c=U\254\222\274Io\244\275!\323\320\273\350\254.=_t\347<,}w\275\216H\366\273i\236R\274$x\256\274E(\244:\246\227\333:\026ms<\273\256\256\274\206\271\004\274O?\340\274\313=\270=\255y\027<\221HU\273\371#\342\270\252t\277\273A\232O:\tc\356\275\376\033a>#\303\241\273\231J\020\274\272\221\022=}\246\016\275Z\366y<\\{[\276.D\223\274\265\324\034\274\010\207\206\274\335\\\277\273\252\275\030\274\342B\356\274a\363\377<\314\022\200\275\213\350\002;T\014\205;\243\030\017\274\242\337\013\274[\022\274\272U\335T\2744@@\275\344G\276=\367\315\006<\242\207\361=9\033\361=/Z\307\274N\003\365\273\\\342|\274V\206\313\273\203D\212\275\2307\220>\370\376j=#\265\255\272=\224:<\300q~\276\014?\221>/O\276>\301b4>\023\021J:\022\321\237<\277\322\006>UO\375;\366\367\235;\026.1>\351)\026=\270\363\245\274\312\001\025:Z\000/\276\211\271\022\274\272\273,\274\030\222\204\273:\240\030;\304M\000=C\273\331\275k\260 \274\215%\324\275@\336\031\276\323\001\343;\231\341\025<\3749\010:8\323\032\274T\276\016\275Q\350&\276\002\231x=<\214\221\2738\024P\274\233\200(\275\007,\256=[qK\275z0;>3;6\275L\342\231\274\205\377\002\275s\206\374\274Z^\344\273V\254\311\275\250\276Z\275\036[U\275R\003e;\253\261\014>\371K\206\274\217\257\312\274\375\322T\273\002S\341\271\0330\013\273\303\305\217\275?\200\034\273\264\247\220\274\241\030\241\274:\270\370\274\341\247*\275\267\03309;\025\313\274!\347\341\274;\233\220\274\'\351\205=\206Px\273\235\335\247\274\037\321\321=\034\346\2658S\200\204;\270\341\365=\354T\212\275\252\263\270\274V\304\203\274\204K\244\274\201\273\021\274!\350\367\274\321U{\2755\345e\275\311i\201<U w\274>\320%\275O\342\321\274\343\033\221\275\225o\030\274\312\033\022<D\246\016\274\347p\231\274\364\204\302\274\331\355\240=<\244\235\2749\273\333:\322\352\267\272\370>\375\274\362\2011\275\360%\376=S\2411=t\224\236\272}Ol\274._.\275PV\254=A\232\213\273\030\276\325=\016\252p\275\336\263\t\274\234\020\323\274\277`\200\275+\252U=\373E<\275\217q\035>\330\332)=F\335\036\273~\264o=\266o\273\274&\305\033\275\240\334\n9\300\337\025\275\301\214\026\275\n\367\262=\251\014\211<@&\013\275\243\225l\275\315\023-=\355\020\267;\204|\200<\243\013\277\274\365+r=\306~D\275\002\366\251=R\312\033=\0255\342<,\032\022>\337\225\363=2\344\276\275BZ\213=\275<\355\275(\232f\275\213\336\023>.\270M\275\367\"Z\274`\003\265=\265\211D\274\205\232\270<\264b\320;\252\246\275=&P\363\274\352\264D\275\265\250\371\272\311\262A\274oC\207>\365\220\237\275n\314\324\274\350L\340\273\366\253\360\274\377\332C\274\246\343\210\271\270\270\004:\270Q\035\275\030\021\246\275r\026\326\275rY\223\2767\002\263:\317G\312\274\221/\347\275$M\345<+\346\247\274(\344\002;i\270\217\275\352\374k\274{\316\303=[j3\275:;K=3`R\275Y\217\025>\021f@=\275\003\311\273u\017\202>:9\351\274F{\203\275]$,\272]E$\275\347Y\374;\254\255\242\274\t3=\275\331T7\2757U\210\275\254\2667\273m`\234\275\t\265%\273>_@<i\241T\275\020\205\360\274\253s9\275\252\234\215\2721]\337\274\301P\333\275\004\335*=\232*\353\274\252\356\220<\374Z\001\276\303\313\215\273\367\221`\275|hf\275\003xv=\020\321O\274\022\'\177\274\036\321C=\306\241\3059\352\212\231<as-\273~n\375\275rW\r\275\307\215\260<K\363\210\274\364\354\r\275\351\224\010;\3630\310\274D\310\225\275\033U\255\274\324O\304\272\211E};I\232\254\273\311\226\366;\240D*=\373\217\231\275{\225\362;\014\252\016;\034-T=n?.=\361p\210\274\250\223\352<\004\"\002=\224ON<\206\004.\274\3115\325<\213\223R=\n#\265\274C\217\357\275b\306\276<\217\354*;^\\l\275tu\204;\2063\373:m=\n;2Q\314\274&\340\010\276\352\202\311=\203\210\253\273\332\360\225:\375a\203\274\024\323N=$M\334:\224\236\000\274\004\263=\271\021\273\352=\273\267/>\226\321\026\276\210\263?\274\177\021\003\273\2239\344\275\207a\233<\262\t^\274g5A\275\356V\036\275\202x\325;\024\032\344\275.\023\346\275.<\016=\240\360\n\274\266\263\002\274\264\247\027=\230\016\233\273e\231\207\273\303\204\'<\203S\034;\327\365k;\243\236\331<m\271\336\274\305\005\355<\272u\222;\264!\272:\322\321\004>\321\005\321\274\356\245\351\272\216{\221;\247\262\226\273\302j\014=v\342\035=\231 \024\274<$\033<\305\264\220;\212\372\211=\357`\312\275\001\201m=M^8\275i\374o=\3763\220<\322\364\014=\250\0218=uW&=\322K\261=i\306\200=_\216\356<\336\226Y;\226Z\234\275!j\000<\331\327k<\253\272\213;\034c\234=\276\354%=\222\214\017\274|=\200<\244\234\263:\240!}\274\270\t\332<\372\007@=\013\367R;\"\215#=t\240h<\3341(=\'Yi\275\337\346\004<\265\235;=pc\027<\372\233\342\274\002\337\"\274\235\234\222<\276d\216=\213\013\253<\2263\023<\207\022\353<;\247^=`\364w;\377\240R\272\222\367\275<\373_Q=\262qu\274\352\004\023<m\276B=\230\363\352<\333\256\213:\252\212<\274\2163\226;B\200?\271x~o<\032EK=\320\305\2137$\272$;\332+\033\272R\265\001;\242\334\363\272e\344\034=\322`\263;\351\323\254:\261\300\363:l\341V<\246\026\304\274\272\243Y\273\322+\007=T\220\022\272\177N\242:Z\352h<\255\010\375;\016 \317\273\322\014\264\273\264WU\274\234\326\201\274$X\316:S\345\211\273\323\366\347:Q\2563;\t`\216:\260\250!\274\203G\224=\276\254\261\2744\003\230\273\255\3270=\017\352\363\275\376 \036\274%\034\276\273\032f\3367\007\206};cRC\275\363iN=\'\021{\275\233\333\245:\266Qn\273GIM\275R\033E\275\037RD:\237\331U<\224h\230\275e\327W\273p=\022\275R@}\273q\302\253;N\223G\275\313\005\332=\232hT\270\253e\200\273\324\225\025=wg\213;\376\330\274;Y\237\217;\307\224\375:\341\277[\274\036\002b:\3011g;\036\001\224<C\024\025=M\265\307:\217\227\235;\324\372\022\272itN;\365\222S\2733\r\347;#\363\006\274s\226\271:8\261n;\002\310\003<\213\365V<\307\246\323<\227\277H<Z\305\234\273\\\037\005;\n\330\244\274\354\240,<\036\300\217\273\300\032\036<RE\001\273t7Q\274Y\re;\355\200\272<\207{l; !\226;^\211I;\241>\374;[8\371;\0365\177;\244S\206;\362\260\215<\360\350W<W\210\352\272m7\241;\307\321\035\272\230\256\212\273\344f\317\273y\032\211<\344iE\271 \273\242:Yv\256;V\020\321:\0022\032<z\304\020<B\246\2679\023\225\007<B\004\216;o0H<\221\351\002<j\304\336\2736\240\032;\366\254\302;.\0018\274\373\022 <\370\005\017<@\000%9\237\335\361;i\036\340;o\247\206\274\236\333\217<j\270\244=[\276\362\273\036e\257<\304#\023>Nm\003=\246\330\013\274TSQ\273\261wB<zB&<\005\344\017\276\n\263_\275\320\024S\274\010\312\221\270\01447\275\"\366p=dT\201<<G\001\276HW\261\2732\262#\274`\330\233\274h\270\321\274w}-\275K\031\374<\232\341C>\257G\254<\257\204M\273\206\026\214=\025\017\r\274^\314\236\272\231\243\304\272\017\362\024<\342\036);\240\276\260<\224\266\021<\306\232\323\274\370\344\340\275O\257z\275;S\357;/\225\373;\033\315\021<\t\325(\275S\200\006\276\344N9>\220\362\016:\362eR\273-o\000>1\3475>\370\372\013\274\020\316\277=\331\233\014\274?\327A\274Pk\355<\0350\253=x\020\370\274\t\n3\276\277\374\240\275\366Z\016<G\323\331;\177o\353<\326\363o\274\270\335\235;\234\325E\271\314\231\267\274\330Q\302<s\340Z<\200\025$\274T\nc\275\367\246\241\275\340\307\t=\035\024Q\274\004\3265\273n\265G<a\261\361\274\216T\027\275*\346G\275\344\362`\274D\024\332\270\014\003]\274s\352\214=!\356\304\275\306\001\335<\317\260A\2753Q\217\274T\322\001\275K\215<\2750\006\"\275\205\202\000\276\307\037\242\274\016\036\214:\340-\335\273:\212W=\340\327\201\274\265\330P\274K8\275\272\007\353K\275\276\004\205\275\301\340\037=d\226\325<\332\202b\274w[\241<JD)\2756\371i\275K\343C\273G\rR\275\326\352=\272\3150\203\275\312\353\207<\037\333^\274\367\337+\275\206Q@\275 \rT<\'\230\316\274\231{\227\274\312j\367\274#\340\323\274\240\370\370\274\302]\021\275\033\304A\275L\302\336\274\021f\302<\362\0331\274&x$\275\362(&=:f\273\273\214{\203\275\213@q;l`\224;\264\222\263<w\264\265;\"\317&:\233q\255\274)`\247=\274\034\177\271\363\302.:\226\211\225\272\262v\360\273\244\247\230\273\014\300C\275B\305\020=\'\200\215;\267D\343\271>P\245<\334\333\247\275D=\231\273z\\\320=\025b)\275i\222\200;\352Q\257\272\270\215\376;\000U7<\014\225\004\275Q\373\236=29\313\274=\024\';\003\237-=\353\371\337\272\354\233\211\273P\242N\272&c+\274\306|\213\274:\237w\274\002\214\014\273\245\331\266=\010\367\222\275\233\275\251<\257(9\273F\332\245;5r_\273\203\273\270<\276\331\034\276\234\276\327=\2444\374\273\371M\235;fl\260\274\320!\025=\002\354\302=\251\342\327<Uu\327\274\221\373k\274\276\025\347\274\200Y\314\274\r\322\265;Z\033\243<Rf\315=\323\237\216\274\003_\266\273\220\322\024\274f\276\303\272*gp\273.\351\243:\340\023\251;\356]\206\275\204\362/\274\254\326\022\273\266\205\202\274k\227\267\274q\372\223\273\323\234V;  \251\272\274<\"\274\326\375\260\273,\241;\275\000\360\020=\220,\252;\311\037v\272\334*\223=~\265\221=\304.\237<\325\0007; \342\324\274\256%\215;\333]\034=\251K\354;7\321\341;\241\367%\275\016+\326\274\260$\243\274\270_\326;\305\365\306=\031\203h\273\033\257\002\274V\030\205\272l\275A<\310\005\325\272\260,k\274H-\212<L;\032\275\337!,\274\256\013G<Q\241\277<\346\351w\272\350\353\223;WF\215\272LI\2529E\220%={Q\203;\262s\245\274$\272\000=\204\367r=\237\232\274<h;\203;\010\301\'\275\320Q\354;mO\377\274\013\204w;n\230-<\343\246\014\274\307\010\227\274R[\211\274p \344\272\254\037\207<\007+\300\273\036\360N;\0168D<\251\325\351\2729\360/\273%)/=\245\304\215\271\342\370\345<\002\256\017=\357\371\352:\033\237\236\272a\024.\271=\204-\273N\247\212<\037\221\305<\037P\033\274\202\224\005\273@t\r;\260\230\265\273Q\024\010\275\302,\234;\260R\202\2743\365\343<}@\177;\201h-<\324\314\223\274\240\026\027\273\344\001\226<R\236\340\270}\210\253<l8\2039\301I\300\273\030/\357\270\353c\265<Aoe\271\361\231-9jD\031\274O\"H\275r\303\330\271\262\262\303\274j+\037\275\276@\201\273\320$C\271\201=D;F\235\036<<x\300\274\"\356i=\302\005\026=\345\244c<\307V8:\271{4=I\352\336\274\t\232`=\274\017\331<\002\301\331<\254\234I<\033\214?\275\036\346\235=\342+\r\275\246\027\362;\364>+<\325\273\351<\334\033F\272N^s\274A\273\201\267\331\211\335<\t\240):\221\321-\273D\372+=\343\2414=~\336\3108\246\2235=\032\021\305<\334\222\244;\241b(;\006\303\277\267\303\307\232;\3315\316<\373\203T\274\027\002\331\274\344\014\326\272\025\264\254;\231e8\274\357fU\274&S\n=\274\212\255\274!\2302<\214\255Y;\205\364Z\275~o\247\274\224\226r\271K\373\'=e\206\013<\273$\236<i\3317:\372\316\326\274\270\'Z9\t\272\010=\260\021H:\224\277R\274\240\262/\273\243A\016=\250\177~<\371\327\'=\233?\022=Lw\303\274\022h\333\274b\317~\271\251\2479<u\0342<P\007S<\261W=\273u;\t\273\264\324C=\006\243\\\273Q`\375\274\256p\276<Z\0167\2745\231\005=\212\361\277;\200\273\004=*\246>\274\270\270A\273\217\224\233;\351\223\021<\223\253\243<8\366\353\273\346\301u\273\375,\237<\200T\034= !\317\274\367X\324\273\363\215\037<\236hX<7\246\321;y\371\020=\203=\274=@)\310<~\327P:\013Z\376\273\273Zk<\223k\026=\322M~\275{2\004>\210\225P\274\\\037\007;*\303E\272\237Lr<*\352\201;\3539\315\275sX]<\304D\336\273\267p\037=\000\021\303\2736\221W\275\211\367\t;w\332*=F\013\310\274hY\034;\305\304\354<=c\224;\037\343j\274\t\272\236\271\244o\024\273\211j\r\276\301\035\307=]FS\273\264\244\347\273\332r\345<y\002E\275s=)9\335\205R\274b\000\202<\021\3717\276\267\342\375=\215\215\005\276\355}\373\274\006\242\317\273\t\375\177=\205\3660<a\0132> \223\211<\356\372*\276Lm\216=\3756\331=\300?\225\275\nW1\272\036m\026>\034\357\373=\333\037\010\275\227\220\304\273I_h=4O\313;\363,6\274\r\266\323:\365\276\t\274.-\373=\330\034\271\275\3068\013<\030\206\335\274\254\247\376\2745X\232<\200\237\340:\247e\267\273=;\217<\254bs\275\016m\367\273S+\200<\220|:\274\363\235\354;X\272\310\275Z\210\026=s\2369\275\267\365\361=\354\n\003\275\007i\020\274>#\325\274\372\231\r\275\205\212Q\275\226\016\324\274\234\330r\275\214_D\275z\364\037<\333\370\t>X\\\267;4\211\016\275\250+\276\271\201S\256\274 \003\242<\334\001\253\274gJ\207\274\224\326w=\n\277\215=8F\231\275\313d\352\275\216j\001\274.\217p\275T\\\237\274\202\233$=V\357\'=\307\2767\274\267\004\026=\215\230(=\003u(=\226\016f\275P\216\034=P\331\204\275J\n\326:q\354\343<\230\002\202\274j]s\275\224\210\205<v\333\227;k#p\275\271\256}\274\333\243\336<\330\'\220\274G\\\263\275\336_q\275\222\315`;1\001\363<A\344\034=9\2502<P\032\307<)\261g=-o\006=\2740\276<\365|\322\273Ai\010\274K\347N\275\372\253V>\200\276\3106\373\247\212\273\220#\216;\271\200\302<m\350x\275\351}\264\2740N\346=\227\266a\275\361\230r\273\314\225\211=\242\222\305< N\016\275Q\3449\275\001++\274h\002!\276i\230\243;3Xd\275\201\271-<\342BH\274\227\350B;\273\007\016<\355\232K>;\266\020\274*\367M\274|\221\356;k\231\007=\336\366q\275-\017\343\2746\323R;\324\\\203\273\022\200\006=\203\321\272<\232Q\317<C\271Y=.P\027\274\335\273\217\275\371\367%\276\275\305\215\2759\357\006\276\373\025 \275\003\260A=\305}\215\275\274\3144\275\023\216C<\317F$\274\331y\301\273\203-\356\275\206*1\274\000@\215\275\027#\244<\267\271\231\273\212\222\024<\013s\032;\274\214\232<\220_\242=I\251\201<\322Yc<\205J\373=)b\026=\323\227\026=\206\357\317\273\\\253H\274\304\327\257\275<D~<l\025\230=\334\271\334\272\r\252\370;\013\235\357=f\331\262=a\327\204=\315\221\004>\322O\212\275*<\222\273E|\212<e\355\323<\255\020\330\274\340{\201\275\230\267\221\275C>\372\275~\312M<\036\014G>\361_\207<N\177\022\275\337\235\273;\346\225\276\274&\033>\273,\344\371<\352\314\002=S%\022<\2017\207;\244@\300<\252e\261=\035\360\300\273V\034\231\275(;\005\275\306\216\234<\214i\370=m\363\215\273\002\355\245\274\277?\376=\221\251\205=\207H\245=\306>\022=\363\003t\2758\274\211<\303\365\307;\217\204\250<\221\215\033\275\304\346\177\273\357cS\274\362\353\251\275#\302\022\275\215\353&=\354M\237<\367\363\207\275\253 \361\274\027\357\002\272F\323\252\274\256\\\2359\272\021\253;f\213\224<\323N^=\177k\267;\300\213}:+T\036\273\211\201\322;;^\034<MiR=\326\204\323\274\240\212\010\272\240\030\336:YCd;p\317e;=o\241;*0\317<\304\262\006<\246\376\206\273=\005\231\273n\277\n;\343\302H\274\030z\330<\201\302z<1\034\262\274\252]\272:\365\302\010<*\233\273;k\266\360:\377k\227:\206\217\200\274.H\314=\346r\240\275J9\257\273z\211\275\275:\025\351\274\326\n\310\274\034\nH\273\2105M\273\221\221\340;!w\344\274<[\020>\300\257\251=\271B\240\273d\272\177\273\272\3671\273$\205\342=\265\206%\275T8\365=\227_\344\2740A\321;\200\215T\274[\032\350;\277\200\222;\331\306\363\274,\305\231=2!\261\273\017\221I\273\032F\225=fI\357;\257\365c;\205!\320;\2256\2658\307\276\010=H\343\312\274\354M\016<6\267T<wG\211:z<\250;\334Z\000;\022\267%\273\233\317\025<\234\257P<\001`\274\274\\\345\256\275<i\367\271\037e[;\372\213\r\275\302H\206<2$$:\364p\376<\032\332E\273u39\273e\211\362\274o_\221;\235\2723\274|\352Z=\rP\360<\373-Y\274\335\201=;\356\213\031=\216{\026<:\242L\271+\005\214;mT\3409\273\274\277\273~*\314\273:\227h\274\032Z\302<\335\335\253<\367\035Q\274[\216Q\274\024x\035\273E\013\223\274\310^^<\365\354\017:\205\254\266\273_d&\272\332IX<\0060\036\275\010Ti<\\\240\3229\nH\205;Y\271u<c\002\013\273\323g\026<O\264\272;EXe\274\353\213\364<:k\023=q\214\226\274Fe9;\306V\026<\233\025\205\274\233k/\274\311\246\202\274\257\035W\273\366|N<\266)q\274**\214\274T\230c\275W:\305\274\002-\311\274k\n~\273^\215\276;S\271\244\274\201\322\253\2744\277t\271=\037\261;\200n\020<{E\344\273\004\001\321\274b\314\347;;q\327\274\202\017\223<9\271\312\274\215\214Q;\312d\033\275\005E\345\273cy]=\352\265\335\274\252\2577\272\357\037 =(\226b\273\226\220C\272\312\332\231\274|\323?\274,3\271\273\001fS<d8\017>\214nK=\271/\210<+&\002=\326\034\255\275\202\025Q=\332\353\017<@\010!;\020\026\337\274>\010\334=\024j\355\275\317\210\023>\364\245\223<\310x\254<\t\037w\274Q\027\261\275-\222\260=\t\030\326\2750\317=\275\t\2631\275\277\375\311=\220^C\275\276\354\'\273d 9<\312:\330\274\235R\010;\274\341\025<\205\010\211=\002\323\272\274\360\014\246\274\313*\\\274\350\016\261\273\274\232\317\274\030\304 ;\364}\307\274\315\001\347\274\233\322\252\275\303$\257\274h\300\337\273\252k\252;\355\000\331\274\206\263\337:Sk|<%\232\035<b\332\022<B\332u\274g\033-;&\n\000\275\301\332m\273L\216n\275\343\007\367;l\236\200;\347\303\n=\367\226\232:)\036L=+;\336\273\013\312\266\275\003a\351<y\237\002\274j!\324\272\245\376\332\274\023T2\274\3113@\274\225r\r\274\022\302\222\271e\177\216\274z\344)\275\3562z\275\211\034\217\275U\233\266<\2262g=\r\035\316;\"wP=\205w\262\274\263\221z\275\177\263\001\275\327O\016<\2113\253<l\333\001\275.\302\030\275\215\252\'\275?\365.\275\344B\357\274-\276\237<\267\340l\275&\177\017\274IG~=2\241\371\274pi^\2751{1=\030\276\270<Z\342\203\274\317\361\203<5\363Y<\205\327\007\275=M\020\274\220\340r\275\3669\210\275X\244;\274O\262\016\274\216\223\n\276\240\211\367\273\345\323L<8\037\3728\224\231\201\272\006\317|\275\372\272\335=z\272\274\272\354$\246;}\227\243\273\264q\221\274\234\375\320=L\224A\275\233\025w=.0\003=<\217\352:7\263)\274]Y\213\275\205~E<\217\200=\274\030e\016\276Gd?=*\374\227\273,\006\243\274\002b\302\273\335W\"<R\276\365;\310w]\274Y\026\375=L\374\245=\221\035S<um\001\275\010\027\367=\244!\331<j\227B\273\327\006=<\255=\272\273\037T%\275aV\177=7\323\301:\262!.<Q:!<(\326X<\235\343\013=\037RZ=;/\255\275\237:\246<\374*R<z\254\017\276\235{\330\274\323X^\275!\034\177=R\340\244\273\214Bk=\337\'@<l\3572>\344\243,\274\321\246\275;\252\202 <\320O$\274\006w\007\275y\003\227\2750V\230\274\251\357\002=\364X\255\275>\306\200\273)W\033<\036J\230\272,\321\240\273\260\037\254\275\261\013\200\276\220ch\274\366H\316;\024D\035\274\251\325N\276\334\000\231\275\377z\336<4\236\256=\353\352}<\222\314G;6\241\360\273_\323\177\275Q\177\306;W?\340=\201}\000=Ek\177=6\213P\274\250\023L\272\024)\016\274\3353\240<uCd<\267!\374;\302\311\237\275\272-/\275U\256\020=&.A;\367\337:\275\360\303I=R\257\212\274.\315\2549\021\221\377\273I\251?\275\320\t\364\275JS\270<\225%\224;K\220+\274\010\010\353\275{k\000=B\200\230\274\255`h=\347\363\016<\2204\365\273\020\317\330<hX~\275\242\301Z<\212\031\204\275\220\377u\273T\320G=\357G\200\275t-\010\275q\017\336<\337_\026=}1~=\345\227\003:\356P\234\274$)\251;\255c\026;\370\376\345<\270\'`=b\227\241;G\235\025;\325\365\037\273\303,\315;\251\276\363;\200\3645=\213\336\002\275\234\243\374\2713\227+;\3351\223<F\263q\274\207\001\001<\030S\231<]\336\030<\373>z9\312h\304<I\371\237;\272\024\227\274X\036><$\236\240<\265\002\243\274\314\245\321:\276\004\216\274Uza;\341\221\216;\323\036\246:n\230\377\273\006\221\001=/c\037\275\236\002\260\273\351\225\304\274\214I\352\275#\t\366\274\337&\255\273\260\031\036:\267(\003<=\3573=\246x\226=\306\351\031=vL\343;j\247\333\273\036\267\013\275\0078\336\273\'\215\307<jtn\275Vk\226=$y\264;\314\337\245\274\020\211\204<\313{\366:{\010\256;\260\2650;\321\204\001\273\036 \201\273F\236,<^fJ<\342\322\004<_\303\247;\207i\251:\003\330P\274\211\226\016\274\315\232\376;\365a\233<\221\237\313<\354\204\365;\274\212g;\231z(\273\264\247\023<\237\335\351;\272\333i<<\360\327<\"\243z\272d3\262;.\346\304\273\234\272\302<\372\242\232<%\314\330<\257\002\267\273\223`\r:\273M%\275\251\362\252;\207\332@\274\036\244}<9\005\014=\312t\221\274\002{^;{\260u;\260\245\000<\335*\211;\262t|;\257\246\227:(G\221\273f<u;\321\212\362;\014\224\362<\330\276\316<\257\273t\2748\366\377\2734r\021\273F\203\236\274\354\020\035<\303\007\252<\376\351\211;b\375L\272\260\323\037<\341\350f\272:\330k<\254(K<B\215\036<\304\363\233<\'\024;;8\271\213<\270]\314;n\354\230\274\353LS<\3632\013=\007F}\274Mt\277;\361\343+;\264g\003\274\263\226\034\273l,\243\273\0061\243;\203\275\264\274nE\247;\222J\215<\305\264_=;D\206<3s\313<\270\371\275;\013\337\315\273\200\010\236<&\\\311<\367\325\355\274W\225\212\275\n\374\017\274\366J\013<=Y\346<\226`\342\271\336c\006=*\n`\273\026\230\260<D\313.\273\332T&=\022l4<\010\374m\275:=c<\342\255\241<#\265\371\274\035j\223;O\3361< \210\244<\353\230\"<\027\223\353;\235\035\005\275@\021\317<uP\017>\325l\217\274\377\227\023\275\350w\261\274 \217Q\275\004%.\274\215\360T\273^\013\315<\253\242\272\275\366\352\006=$D\314=\377\2478;\347\374\271\274Tj\004\275\036\201\r\272l\345\366=M\335\303=\333\024\365=\220F\"\275\372\302\260\275\004\251\033=\260G ;\026\263#\275Z\022H\275\'g,\275\231>9\274\247V*=n\270\244<}\353\236<DK\177<\324\302\273;l\341\207\274\006#\336\273A5\314<\007\306\352<\2021\337=r^\257<\317\216 <7\263\276\2739\313\321<\2518\005=2\274\351=\335\266e<\0136\022\274m\341\221<b\214\\<\257/<=\232\272\225;8\265\317=\027\032\345\273OQ\360\272L\224\372\274\201\205\216:\225\344]\275\325\3121<\255\307\217=\244]\016\274D>#<u*\223\273\356\363\343<!\2727<j\035p<x\226\007=\277\3119\274)\022\277<\202\350\201=IU\205=qw\235=\236\211\356\274\025\2557\275\237E\377\273\222\310\"\275!E\333<.\226\020=\255d(=\037\212\017\274\027\364d<\262\334\374\274\371\376\247<\260\3258=\375T\033=\034\305\014=+\335{\273\367I-=T<c<\326\232\212\275\370^)=r\027\201=\220\356@\275\332\330\326<X\312^<\260\270\315\274e\212\034\274\255\177\2529\356\357 ;\022\006\256\274\r\271\217<\355\270[<w\002?=U]\215=\235\265\234<\354\245\006;P\033\203\2738Nt<\230s\220<\204\236i=\032F\214\275\000\307{\273\216\363\303;\201\276\210<Kw\021\275\315n\202<\'(\302<y\265\244<\033l\310:U\311\004=+\356\301;{\004\033\275&\331\236<\207\254\327<\200\021|\274\263\0208;\375{F<(\350K<\232\200]<\002\216\214;\365\343$\274\234\367\006=CI^=\2501-\274\037\362\210=KR!\276\267\225>\275\327q\362\273\nb\035\273\nO~<U\247\360<\217i\303\275\302\025k=\246\303\313<W\246\214\274\030{\351;\341\3433\275\312\356\354;3\036\000\276\350!k\274\035bj;\025\033\304\275\316\324a<\361\3008;A^\231\275I\227b\274\251\2201=\344!\365\273% \220=\265&X<~d\242<\347\3367<}\330\221;\316{q;9\216C<T\241\241<f\211\024=bSj=Ce\213<\315\217\215;R\344~\273\355\304\251<y\362\302<\231\027\217=D\303\244\274\354\207\212\273\231\024N<K\232\024<\226P\215<H2\316<\240\232d=H\344\t<\270\032\342:\364|0\275\250\352l;\260\254\016\2759\323S=\241|7=\306P\347;1F\315;\213?\215<\'\010\233<Sn\237<G\233\035<\020p9<WT\264\273\r\266\212<M\216\305<=\2642=\330\307]=!c\270\274\027b.\275{\\\217\273\332\243Z\274\350\305\261<\366\n\326<\353\034Y<\270}\216\273/\014\250<\013\213\024=T\215\255<`w\017=\301\025Z<F\260#=\'4\235<\236\210s=\221vA<\367\2237\275/M\301</wq=>\374\220<\354\267\215<\230\237\222<\\\273Z\274w\352\002:Yg\334\274"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "y\200\320;.\314\214\272\311\235\360<\234*\202<k_\217=4\200\224=\335\353\372<\210\226\233;[\3758\274\224\311\253<\337#;=b\304\366:\247\016!\275=\020q\274\027\335><\340\313\351<6\031\003\275\307\217\022=!\340\226\274\226\240\240<4\316W:\\KT=\270y\302;9\263|\275\377\277\031=\304 \306<y\302M\275\265\235\365;\002\267\222<\005J\256<E\352\230<\032\"\357;\344\017\264\274f\030D\274\243\210\022;K\244\260\274\021\0245\275[\026K\2752,x\275\216\311O\274\250\213\332\272_\036\321<\037u\247\2740\371$8\227\306\253<S}T;m\037\354\274R\377J\275%\343f<\'\303\007<\325[\256\273\300\236l<\232f\205<?\212\354\274\321\330\223<\001\220P9\234@?\274&\302\340<\031\036\250\272\032/\207\274$\307\025<\356E\316<u\235\372<e{\223<\0344D<b\2155=>\342\333\273\324\035\353<\266a\003=\000\274^=\374\207\336<Z#?<\311i\010\274\266n\376<\263\250\216<\001\324\256=wVr<&;b\274AD\274<jy\265\273\207A#=\226\235\214<\314\326\262=-\312\367\273)\340\3369T\267\372\2748\316\021\274.\323~\275\021m\361<\376\037\205=\340/\211\274\377\222p<\265\362\017=\230\302\361<\010P0<\337\365\226<l\037\246;\200fj<\026\225\014=_\376~;.5\236=\014\272\304=\177\330\027\275\213\000\344\273\311 [\2745aU\275\307\372\017=y6\201=uX\316<\262fi\274Bf\255<\031\000\234<}^m=d\200g=<+w=\221C@=\317 \n\274\027\231\'=w\\R<\024%\230\275\027\347a=lM\224=t\250s\274b\333\214< Z\r=<\237\260\274\017\304\271;\224`j;"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\273\264;\273\270\031\315\274|F\214\273m\003\347;\247\203_\275I\234\214\274\3356\204\274\226\257\022\275\313\271\202\274A\243\"\275^A\022=\032\372D\275\276m\234\274lr\211\273M\000\017\274l\317\237\274\233\321\251\274\271\357\205<\341X\004\275\032\307Q<\315\267\013\275`\310\355\274\350\234\020\275\272k\215\274}\027\260\274)\005\032\275\025G\236;\370\272\374\273:\316C\275\302\303M\275\323\332\374\274\226c5\275\266TZ=w\363U<\020\367\202\275\256#\246\275\270,\225=YT\320\275,\367\247=\240\257P=\363\314\245=_\231\264\275\315^\300=\226T\226<\353$\027=\206\307\254=]\321\231=_\215\304=:\255\227=c\317\257\275\210\271\207\273\203\r$\275\275r\234\275\226\216\327\273;\n\224=\277q\006>\034\202\343=\210\262\253\274\026\202m\275\241\214n=\031\2213=\326\256\236\275k\033\241\274\332\017\323=&\340\374\274\322/\255\275\341q \275l<\002<\"a\361\275\3530o\275\001\216\226\275\312\005q\275\213\3416\275\260\221\261\274\302\202\235\275\241gk\275\247{\357\274\202\270v\275\261V\034\275?0\302\274\252\255w\275}\321\007\2750[\204\275\327n\243\273\215-\272\275\247\315\207\275\326\336t\275\030\222\365\274;\260H\273e(\246\275X\010\275\274v\031\007\275\203\315\210\275\260![\275;IK\275}B\330\275\362\202\003\275\177,\240\275)f\343\275\263\375>\275\347\234\025\276\025\233\255\275#h~\275\005\243\034\276|\311G\274\253]^\275\312\322\345\2759+\256\275\342d7\275LZ4\275\366,Q\275`FC\275\364G\374\275\177=\273\275\277\306\342\275\355\000\245;\034;\002\276\307\363\013\2760\035\257\275\017N\214\275Wa\215\275f<\332\275I\002$;pK\"\275\027%\357\275Z\324\321\275\241\361\242\275\340a\033\276{`j\274*\250\376\274\367\212\r\274\215\370\333<\371\332\202\275C\337J\274\037\257\316\274\033\323p\275\254E\247\273\332W\305\273\013\344\366\274w\267\033=\035m\201\274.X\316;ZL\211;(1h;\255\024\253\274\314-m<\004\366\316\274\214\255\001\274\037\010@\2755r\245\274\2071\177\2746t&<\244\2315\275\277\r#\274\023\320-\275\363\246\326;\230\023\207\273\301\217U\275J\263\'<c\335R;\203\246<>\037\363\322;v\316U;ik\026>*\254\314=\346\r\022>\362L\332\274\004_\025<\306\227\025\275\217\355\004\275f\314\253<~l[=\nY\345<?J>>\365\034e=\202S\211\275g\307\323=j\261\305\275\\!z>\360\234\031\276\303\266j;j\n%>m\300h>?\252\370=\001Sd=\nm\377<-\372!\275\225\233\272=-_\255=\207\263\360\275\025R;\275\237M\346=z2\016=\002\023\237\275\323c\245\2746F\207;vp\262;\261O5\275\332\326\213\275\221\232\347\275\024\346\215\274\234\252&\274\311)\325\2750\221\267\274\237\212\325\274[\337P\274\237\237]\273\353\030\241<\261\002 \275\245\217\035\273\025\341e\275Qa\371\274\3709\246\275\274cs\274\003d\272\274\340!\"\274s}\001\275\3414m\274\320V\310\275\223|l<X\2144\274\343\336\005\275\255.\220<\270.^\275V&k=z\355\024\275\026\235l\275\234[\350<.~4=\365U\017\275a\311\251\275t\2516\276\023\273\"=\241p=\275\214\253+\2766\365\242<\007&\031<\346\265\311\275\376\033\002\273**@=w\315y\275\324\205<\274\260!A\2751\257j\274\023\313\353\275\304\342\314:`e\315\275\036\222\260\274P\333\366\2754\242\205=\031\210\365\275\035\0344=\374+\021\275\311\225\312\274B;1\274UV\026\276\276\030\211\274l\246\333\273\3412\372;$\234\010\274o\370\345\273\016\352\n\273_\323Q<\"\301P<\354\177\275\273\226\301c:@\025$<Ca\313\274#\300\024\273fA\276\272S?\331:&\320\034\274\320\207^\274qc\013\275\017\021\201\273\315\343\\;\271\350\375<\264\033\366\274\n\010\335:T|\000\272\037\364\222;b\204!\274\263\234U\274\330\356%<}k:<\201\006\322<\257\035\001=\031\007A\275o\252\277\275\370\356\021=\374\344\013=0\\?=\354L\377<\020U\217=N\007\204<&D\027;\037f\023\276~\024\257=\377i\327\275\264q\231=D\371\206\274~\220\327\274\315\200\003<\224\025\251<2\202C<\020<s=w\320\260=o\204\204\275[\323\372\275+\371\241=3\271\334\275\270\310\312\274\027\214\036=~\204\001=\335\016<\274\234/\215=\337-\221<\304\270&\275\226\217\t;0\255\310=\247T\032\275\332z#\275\220\361#\274\323\026\017\274\037t\321\274\025\377\315;\376\013\005=f.F=\355K\014\271.s\335;\346\264l\274\220G\330\273\237i\020\274\027\231\323\274\271iE\274\320\322\261\274\313\315\271\274\177U\002\275R\244-\274\243X\251\272\305\337#=5\365+\275]\300\373;\206\200\233<_4\020\272\002\"l\274\336\017\241\274\371\036D<J\313\264<\010,\031=y\'\347<S\251\220\274\304\'d\275\272/N\275\034\315b\274\244\003X\274\315\254\354\274\2345$\275&\341\222\273\316T\362;\352\251\225;s\345P\274\205\224i\2744\364h\275\031\207\212\274L;\\\275x\374\376\274\354\213\350\274\006k\027\275\n\177Q\275\021\3107\275!\276\271\273\204\303\267\273\366\302\010\275R\347\031\274\315\254\346\274\026\356\237\274\265c)\275\313X\247\2740\341\"\274\336?\336\274\263\330-\274\307\240\004\274By2\2750\272\340\274\272B\247\274\376O\212:ge>\274\014\033-\275MZ9\274A\022\177\274\005Q\013\275\277\240,\274[\226\020\275\361\323\205<i\\\007\275u\2623\274\326\177L<\334\360\206\270\000G/\274\201k\277\274\\\256g<\257\206N\274\312\321\263<\332@\272\274y\275\277\274\272\355\034\275\036(\320\273W\326\315\2747\324%\275Xh<<\235+\363\273q\2143\275\350cN\275]\350\322\274@\304\035\275\370\373\005>\370{\210=\014\003N\275 W\206<3)\314=\202\331\272=6S\351\274\327X\005\2760\277\267\275\371\013\003>1\300P=\362\333\215\275Z\237\301\275\030\362\245\275\227\244|=\207J\303\275\365\027\215\274\344\017\362=\304\343@<\3451\336\274\005\203\314\275/\337>=\273Q\317<}2\245\275\0378\314=Ca\020=\357\350\274:\277[e=\356.\033=\372\304\236\275\322\221\253\275Lh7\276`\345*\275K\241\246\275\t\000\013\275\217o\246\274\213\025\250\275\367+T\275>\215\"\275C\205\242\275\362` \275\214;\036\275Rj\260\275\342\243\261\275\3732\004\275\353_@\275M#\334\274\177\265\002\275\256/*\275\353\253\035\274L\232\205\2759\306Q;4~\301\275T\177A\275QU\270\275\271\305a\274\000\226\310\274\373\233\211\275\027\347\316<\345\242\341\274\306Ep\275\354\327h\275\242\005&\275\365~\030\276\220\355\253\275\236\374r\275\300\303\337\275\241[\017\275\310\036Q\2760\031\221\275\366\005\245\275\016\366\373\275\227H`\274\220\323\236\275<.\242\275\311\240\300\275\274w\231\275Gz\270\275N\221\035\275\001\265\201\2750\336\270\275\272\323\201\275\314\305\262\275\021C4\272C<\337\2752\257\375\275\347\310\221\275\354~U\275\3631\216\275R\274\301\275\264\2011\274\t\373 \275\266\336\276\275\036~\253\275/\251\252\275\323i1\276N\026\010\275\247\366\013\275j7\247\275\277\317\226\274j*\242\275\314 \233\275y\363\262\273V\364\332\274?\214\235\272\206\362A<\2713c\275\213m\231\275\300~+\275\317 F\275\256\203w\274\216\214\364\274\274\272\240\274\335n\244\275\273j1\275m\035\"\275\273\301l\274\363\010\220\274\253\257\245\274U\"-\275\255\033\267\274RAd\273\375\231!\275\255b\363:\372L~<1w\217\274\014\003\302<\260)\260\275\271\025\264<\3248\000>Ez\214=\377p\261<\224\024\r>B\277j=\350[\274\275\320tw\275\r\376\321\275\000\013\342<!\360\316\273*=\315\273l]\274=\203g*\275\276^\225\275\013\307P<\316\365\010\275uc`\275\352\203\227\275\266[\364<\275G\031=\361\354\003>o\270\001\274?-\343\275\355\255\241=o(1\275\361\023\332\272p7F=\262\313\016=N\216\314\275\255\363\301\274\344\223\035>^\310q\275\265J\236\275\323h\302\275>L\373\273\034\322\001\276\271\303\\\275\205\r\001=\235\016\215<\251\216>=\366\334\034=\241o>\274?zc\275\210rQ\275\334\366\032\274\262\316\310\274\351,\036\275\306\0273\275[\226M\275\276\323\337\274X\207\016\275\032\350+\274\200\034\323\274\236\325\267<8\227r\274O[\025<_h\003\274\215\316Z\275;\016\374;6\2520=\211~%\274x\357<=\3755\000\276\016\264\177\275By\250\275\352b\240\275,\222\321\274Y\245\262\275>\374\274\275\222\207\236<Ws\243\274 \033\233<\251\341\232\272\304\361\317\274>\r\300\275\336\206\025\2750_E\275\275\253\032\2750\257\355\274\323\231h\275\316G\277\275\320\316F\275ITa\275\013)\007;V\235\240\274\215y\236;\303-\222\275\366!\305\274B\336g\275S\036o\275V\240\033\274LW\310\274\372\231\020<?\276\2419\346\200&\276\027\007\201\273\311\333$\273\0058\013\275\201\265\327\273ws7<lrX\274\277\355\303;c\325\340:)\374\315\274\3513\343\272\326\2331=\261\305e\275w\344;\275\334\230/\275\227rt\274\023\226_\273\340h\r\274\317\333>\275\252g\375\273\0243q\2742\264T<\027<\320\274D\347\'<\350\243\251\272\252\215\271\272f\006\323\274\370\255y\274\273lX\274n[\337\274[\266H<\327\\(\274\320\263\r\275\336v\360:4)\341=_\262O=T\312\022<\333\244J\276\255p6\275\325\312J\276\333\022\320\275\226\021\375\275\267G\365\275\205\017#\276\214x.>\006\004\342<\255\354q=\010V\003\275\3171\216\275\272\336D\274\030\\\202\275\301hV=<{!\275\365\330~;\005+@\274[u\247\276\215\202\017\275\234\236E\275L\350>\274B\261)\275`q\301=$\023$=il\272=\3669\210=Zx\'\276\303\230\261\274\014F\035\275iB[\275\271\346\203\274\n8\023\275W\027Z<\032\225\262<\276\347\267=\327\246S\273 \026\361\272\3446\265;.E!\275\211\203\213\275|\220L\275\266\351\371\274\320\336 \275\332\263&\274|\345o\275x\306\272\272f!\224\274\303\316\221<\337\216K\275e\213\000<2\360!=\356\344M\274\032\320B\275>\322\267\274g7\251\274Z\334M\275\265X=<DW\001\275m\234%\2756\013\213\273\363\355\233\275\2023\021;\325\324\210\274\370(\032\275F\0204\275IV\275;\027\205\221=\t7E\273#\\\256;\373\263\267<7\307\251\275S:\212\275\363zs\275\362\003-\275\330\271@\275g\177\312\2737\367\203\275\357\354\223\275\215m\227\274\305\001\025=E\231\247\2758\036\217<\2037\2359\252}\014=\217\365\342\275\253\210\004\273P\271D\275\003rN\275?d\007\275\256\375B\275_\311\033\275V\260\227\273\216\201\253\273\212\260\274<\374P2\273q0\316\273\252\020n\273\005s7\273N\345i\274O\240h:c\216\206\274\370\243\221;\016l\025\274\006\267\3729\271YE<c\267\247;I\320S;\234*\021:G\330I<\266Z\200;\031\242\325<\020N\224\273\344j@\273\245\000Q\274\340x\001<\274C\376\273\236L\277\274\317[5<./\2038\260\027\275\274\323\000=\274\321\262\035\274q\226p\2746I\007=A\030\005\271b\315^=\'f`\275\271V\335\275\177\\a\275\317\031\277;L\204\233\275\212F@<\376\262<\275Z[-<\276\247\322<\376\356\341;9(\233\274\313m\313;\024\327N=\343\3700\275\310\360+\273\356\315\372\274\246\034\035<&O\327\275\r\2005<B\350)=\266\222k;\366k\305=b\344F\275K\300\221=v\332#\274:\327\327;\330\362\300\275o\212\350<\203r\241\275\370\300G\274\237\246\027\275\031W\322<\271\300\002\274\013\272J\274\"]\235\274s\002\365\273\006\335\207\274\030\371r\273}\013R\274O.\216\274\262+\376\274Iz\275\273\300\0210;+\215\256\273\034\316\016\273\317\000\245\273g?\220<\337\326\312\273^\267\312<\3366E\274\020\201\005\274\t\215\307\274>\303\t<\207\030\200<\247\275\005\275\307:\331;X|&\273I~r\274\377S\033\274\001v\256\273\312H7\275\016!\226\274\023\352\005\274XD0\2740\323\223\274\2260;\275\3127\261\274n\305\326\274\215\212\230\274\000\033\007\273\341#\341\274\366\024`\274!\370/\275\3640\241\274\025P\232\274*%\215\273\374\247c\274\230-\252\274O\352}\274?\356b\274\350\310\251<\251\354!\275\354\202\324\274\035\335\302\274-\205\004;\242f*\274i\314\371\274\362\234\246;\254P%\274\265 \007\275\r5\332\274\350j\266\274\343\227?\275E.0\274\235:\267\274\226U\217<.\035\031\274s\345\342\274AU^\274\375\t\036\274Dd\316\274\300\003j\273\337\312\220\274ie\202;\006^\262\274\315F\007\274$!\364;\216r\220\272\361\032\245\273\201\217\036\274\002\245Q<\234a4\273\006r\303<\214M\205\274\340\222P\274X8\366\274\024\'\210\272\353\275\021\274\375\332\006\275\267\371\020<M\332M\273\206\261\303\274\'\352\364\274-=1\274-\220\241\274p2/=\244\235\311<\\\240[\274(\333\225<|+\264\275w\266\323\275\261\272\241=FZ\222\275\202]\224\275\242T\301\273\2227\370\275\340T\212\275k\240\230\274FG\301\275\254]#=\211i6=]\315\212=\3722\036\274\215q2>\346_\002<\013\200\000\276\007\305\010<#0\006=\306Z\357\274\337\362\323=K\246/\274K\202\213=o{\370;\305\311\315\274 S\236=\320Zo\273\310d\005\276\242\\\307\273\337\276\236\275bu\013;7,\252\274\334\222\226\275k\2059\275b\\\363\274V\'5\275\205\250\267\274!\212\351\274\234\023\221\275\237\021\224\275\316H\310\274\230\370\302\273O\010\301\274u\307\256\274\2160\332\274f\364\355:Fy\007\275nZN<\230\306\360\274\177%\326\274\333>K\275`\304\023\274\026\317\240:\216\033]\275\302\335\354\271\001\373Y\274\003\342\367\274<\033\017\275\366\271\213\274x\204\354\275l\371\221\275\300qL\275\221\"^\275\223\201\234\274\322\215\274\275\357\217e\275\270\354\205\275\022\261u\275\342<>\274\231\374O\275rgE\275-\201\256\275\250\253>\275\205=\035\275\323\t\354\274`\3248\275~\202n\275\301\330]\275\211\2537\275m\372\001<*\t\331\275\247\264\230\275\212\227X\275\310\254\302\274x>M\275\333\201\202\275\032\016w\274\321Z\326\274\003\245\222\275z\317\247\275\274\311j\275nq\327\275cj\276\272I@\300:\300\347\276\274\014\241V\273\356\376\340:!f\"\272\303\275\246\272\203&\220\274\317\203\266\272\275n \274\202z\221\272e\324\2356\326\303\2078\250\336:;c\036e;\210#C\272\353\243\023\274.\253L\273\326\242\321\273\207\306\211:\206OV\274\342?\257\270\016\227\342:\320Y>;\271\333%\275<>\3119)]\004\273\202\014\021\273\247\035\354\274\251\303\240\274\266\030(\274v\357\201:\031\003u<]\342\352\273\226\000f\274\014\014\276;\260\202\375\273\177\311\222;\255R\327:Bxb\272v\273[;\210\245\265\274\205}\375\274\367\356k<\275t);\027]o<\300[~;C\326\035;\204\034\342;Y\262\244\273m\243\245\274\330f\026<\310\021\006<\207\0166\273I\024\354\273\343_\014\274\177\'f\274\177s\367\272\2457#=e\340\001\271\336\266;<\000\024\r=\355\332\232;}\361\231=x\351\265\272\372\363\254\273\3366\242\274\223\333\245\273g\032%\271\316\"\327\273\021\261y\273P\311\201\274\324)8\273\364cQ\274\276\363:\273\211\030\220\273\356\246\244\271\302\301\255;\200%\023;<\231\010\273\221\233\013\274\032{\235\273Q\216\212\273,K\3359\352\345\210\274\271\371\332:uJH;\304\031\264;\345\304\025\275\325\360s\272W\2728\2721gw\273;$\377\274{\361\216\274\342]9\274OX\346\273-Q\255:\\\364\242;\037\200;\274\201s\020\273ljm;\276/\235\271\tn\001:\306eo\274\373\303\324\271\237\277\024\274\222M\210:\234{<8\212\262\030;\374`\203;\035\304\343;\376c\313\272vB\322\273R\266\2028\034\335w\272oi\260:4AU\274\260\371e\273\306t\255;\367\r\353;\301\004\245\274\243\376^;\'\326o\272;\314|\272\010\2649\274\244\323\240\273\316{0\273+\207\217\272\327\302\241;\220\367\227;\010\256\271\274/\354i;\362\212\241;)\016\020;\254\030\330\272x\241\230<*\356\234\272\306WM<><\177\274\0329\'<\333\201\266\273\000f\256\274\203\227\351\273\365\2437:d\212\250;\007c\242\274@Mu\267P\031\010\275\253c^<\377\361\306;\217\257\212<\210a`\273\210\235J<M \244<Q>\023\274\351\010\233\272[\230l<\316k\251<}\244l;\265\322\032<\357o-\275\250\331Y\274H\030)\275\362{5\275\352\3170<>X\034\275\006 \202\274\371\332\007>\036g\270<\261p\204=\375\367Y\275\335\317\253\275\230\207e=M\005\325\275\242uZ\275t\016\310\274\024\000*=\342\367\341\274{\300\242\274\212Ui\2757u\342=\372+\0249\375\374\327=\246\336x\275\246\365\243=4aN<`\373[=\270\347y<\300\034c=^\022\377=\327\007\375\273\0366\375\274\266iD<\251`6=\342\354^\274\230\277f<x,K<\032\231\337<\372\304\037<1\010\000=\341\203\020<x\276s<\226^\242<v\363/=Ef^;\2148\321\273\033\374\231;\207\376\027<\342\360T<\352\355\257\274\206jZ<y\013\354\274\364\334\372<C\253_<\3413\025= F\017\273\210<\035\273\034\321\017=\223\3550\273 5Q;U{Q<\271\370\260<\234\t\312;\261nD=\275hw<\214\250\200<\031\261\262<\330\254l<x\367\234=g3\305<]\301\331<w\353\013=\202\253\373\272\243\267\345<M\302\274<\305\322b=\rN\244<\226\262\266<\362:\237;\001\034\303<\213\213\010=\030v\231<\332\213\331<\244\226\307\2742\014`=\223\255 =\2316\025=\313pf;Z\364\000=\266\r\320<\"\243\n;\360w-<Y\203\020=+\337+=\264$\327<\026\310\221=\207\357|<<N@=-\374\034=)qa<\326\223/<\200\352\374<\350\005\255\274\260\001\275\272\226\262X\273Y\353H\274u\225X\274I\311\217<?v\323<\251\001\304=\300h\"=\330\356\214;*\014\373<\003\215\374=b(\277<:j\013=W\0207\274\320\320\323<\270\357\3347\277)\351<\271.\212\275\000\341\227\273!U\310;\222I$<\333\366\005\275\370\272\345\274\3618\360\273\371\310\221\273\346\3111\274I\372\242\274\240\241\300;\221z\026\275f\336\312=,k\315<\224O\t>\375\027\366=\021_\331=\241\242\222=\213\021H\275\345\034\223=\337\366\267\275\3270\276\275*\032\244=#8^<\260x\336\275\032\032L\275\232H\345\275e\325D=]\243^<\354\350&\275\367\367.=\323\343\340<E.\254=\367c5\274\004\"K=\242\324\312\275\357M\270\274\013t(>\253*\002\275#\3153\276\332\032\030=\2761\374=\243\236:=\262\276\230<,\021\263<\247\'\212<\224/\037<G+\337\274\306g\210\274e\375\213\274\017\014A=j\375\212\273\210;\013=\243\\\271=\034\307\202=q\003K<\214\271\333<5E\010>\006\014\311\274\257\367(=\307\231\301\274v\014\013=PL\021;PA\"=p)\227\275?^\267\273Iq\001\274\210f\247<\346l\007\275\255\270\017\275\202\316\351\273\205q\235\275\312\356\017=\315\031\342=\036p\222< T\353<\272\005w\2734\353d=:c\266\2745\364\301\274\271\003\343\274\310\010\312:\214\274\266;\306S$=m\004j\274\305\nz=\016\366Q=V\225\266\273\014\261N<\302\335\263=\353\275#<\360\017\007=\265\213i\274a\304\030\274\tq,\275\2369\243=\355\200\177<O\030\304<#\r6<\277{\014<nI\224<m\314\321\274\014\300\374:\270/B8\2777v<\222\014]=zE\177=\303\021\244<S<\203\274/\336\027=\276P)=\226\303,<\262iq\273\013\247\r\274(\254\200=g\323?<\246\355J=\357,\231=}\276d=m\316\321\274\335\352\212<\"\310\257=\361\017\271<\037Z\200=z.\004=%\342\225\274a\375\276\273\264>u<\244\265\237\275\346A@\274\263\334\272\273\013\'\245<\246\206V\275N\300\373\274x\0134<\313\246\236\275x\241)=\241\223\220\275}\313\315=bZ\316\2754=\006>\021j8=X\204\273=\222\r)<\347p\377\275pW\211>\371$1>\'\253\343=\307\037\004\276Rrx\276I\322\361=.\316B=\264\277\267\275\024\001\202\276\251\031E=cS\262\2747\001K>\331*o=\032\374\206<\321\255\200\274\246\347\300>X\203Q>#\330\232\275\3468P\276\023g\211\276*\271\336=\270\374o\276\246Y<\274\002mY=/\367\302=5\356\210<+_*;,\020\255\273\325\025\207=|1|=\205\240\303\274Q\372\002\274c\242\007;\244\316\312=\246c\020=I81=\250\355&<IG\244=v/p\274\017\377\274<\340\031\271=\365\036\265:]\335y=\371\355\313\272\022`\341\274q\025\333\274\367\276\207;\375j\254\275\231\013\002\274Ki\357\273\302[2<\275\233/\275\t\213\t\275l2\001<ao\211\275\267\2556=T@&>\tR{;F\301\025\274uF\226\274Iq\311=f\r-=\021q\243\274\016\r6=\307Dz<\035wj=`\265\210<\212\330\004\274H\313\260={y\270=\351\225B\274\345\324\355<\250\267\240=\266\335x=\276?\216=\314\377\251<9\030v\275\273\363\215\274n}\244<< 4\275\030,!<\306\266u\274p74<qc\';LZ\271\275\'\313(\273mf\024\276w\275D<\371\014\';\357\355\210=\233;\220\273\310\363\257\273\331\004R=(\231\224\273\032\242\370<\231\236\351\274\201\351^\275\244\273>=z\216$=Dv\307<\321\261\333<\330\352\214<2\275\226\274\237\332\205;q\006I=\204hz<\215\270\000=\031\'\367<\221;\273\274bxv<\030\0225=\004A\220\275\226\350Q\275\201H\274<|\t\001\275\255^\207\275\202\211(\275\020\315\363\274\"?k<P\200\256\275\304\363\376\274\320\242\275=\350f\202\274)\371 \276\224<\305=\203\260\241<q\270\013>\017y\277;l\267?>#\010o\275\030\326\207=\243\331I\274k\311\235\275\350 R=z\373_<\n\374}\274\212\320\376\275\3220\220\275\257Z\236=:|\232=\014t\226\275$\356#\275\223\026\372\275\325g\204>\036\025@=\232\264\005>7\314h\275m\354\353\275\217\241\241=\t\031,\2761\270\224\276?C\263<\n+\355\274\237V\316=\035\274\"\274\006\260\017\274\372HF=t;\374\274P\210\357<g\014\212\275\277M\272\274\263\224\225<<\370\366<\n\244y<\241\205\331;u>\236;p+\004\275J\261><\2741z=\324\233\353\273\317@#<\356\322)=\002w\020\275^\347[\274\356\023u=\371\302\336\274\020\301\203\275\260\367\362<\360-3\275\020\232<\275\357|8\275`\3479\274\232\004\346\274rRV=p\212|=^|\032=\307\345%<\320&\345<)\026L=\243\227@\275\223\322:=\354\336:\275\322\031 \275\020\262k=\315E\211=\315\315\240\274\350\366 \275%\037\247<\303,K\275\356\202\304;N\354\226<l\226W=TV\366<\211\242\002=\257\324\305\275\304\014}\273X\247i=+\254o\275\027_\372\274\336\177\302<\333@r\275\241\302?\275\317\020\254\275ay0\275<\033B\275\253\030\022;L\342\263:\216j\270<&\204_;\216\253n9\341\337\206;\320;\251;[\313\325;$\216\266;:t\303;n\205\242;\233\025\275;.\013\000<\345\276p<\220\332\366;F \255;;\251\212<xcr<{mS;/\232\322;\201\352\025\272s``<\273&\216\273\005\\%;\342e\310\273D\234g;\022SL;\311\301\310;\240\232\013;\250J3:\241\026\016<\2163\316;\362P4\274%4N\272@(\321\274\323\0308\275\243(\035=\005\337\013=j\221\365\274\260>\241\275*\212\032\274BJ=<-+3\274\313K;\274\306\251;;I\216$=\n\301\323\272\240\277\340;\007\023\224<*\005y=\350\372\302<\361\270\272\273\331\205p\275s\304)=\251N\026=\325\220o\274\322\215}=Z\033\330<\336\242]\275\002\275s<\"Y\375\271y\230\214\275g\365\256;\372\332\273\275;\213\216;\357\036\242\271\321T\252<\347i\311;v\371s;\307\004\227\273^\266\331;\022J\006\273\357\331\346;\307\330\270;(\221\007<\355\013\\;?\371,<\210\'\251<\227\3700<}\350(<\244o\212<\\+\205<\236\213\217;\265K\347;\304\001\030\273Jx\244<\2766\222\272\316s\352\272\374CQ;*!\243;\356\350\331\271\243\323\025<\203~\031<u?\032;9\337\030<cR\252;:\235\364;}//<\346\252\227<R*\010<n\246<;/\254\022<\013bd<\327\347\277;\022\004\013<\2723\375;\371\272\302;|=\264;\n\313I<\037\311t<\r\025X<\345\2409<\211\251\207<\201\320%<\305\345r<\253\322\r<I\003\320;6\035\\<\031/];k\344\'<\3204Y\273\243$\025<\367[%\272<0B<\014\254\016<~Y\t<\354\301-<\257\000\007\274\254\246\350\274\3159\220\274\374\315y:&B\016\274\002f\353\274\220\310E\274.\003W\274\274\374\364\274P\202\026\274\177n\332\274\361at;\306\266\332\274L\2519\274\n\226\032<&Ze9\313\235H\274\264\302\225\274\363\277L<O\327\301\273\271,[<nu\250\274/\333\225\274\"!\313\274\372\220\224\271\300^\202\274\231\201\003\275\242me\273\223,\271\273\213\004\t\275\362I(\275\364\264\226\274\0034\n\275\221\257\033>\263\261J=\03734\275{\3624=T\233\301\275u\372\242<N\233n=\'\201Q\275nC\215=4\361\237<\017\233\215\274\331D~\274\324#\026\275K\330f\275\353\326\273=\177D3\275\217\026\251\274\367\334\233<\022\325\340=\305\276\301:>=F=n\334\215\275\220\370\002=\262\224\213\275\014I\004>5\3269=\232\220\346\275uW\211\275\217\235S=\207\034\334\275\016\342*=\277h\003=\001\306B\2753\341\213\275\037\243z\274\203\231\364\273\300Te\275\032\\(\275,\224\027\275aVG\275\202\326\010\275\213\225\317\274\204\027\207\275Qw\200\275S\222\370\274T\320\320\274c\014\265\274\304\212\265\274HM\033\275\331\230\260\272\204\363,\275\030t\010;\334t\337\274\001Q \275\014\374\201\275\007\352\237\273]\257\233\274D\212p\275X\231\337\274\357Xa\274&\331*\275l[;\275m\224\362\274\251L\223\275?\2253\275I\227I\275\367s\233\275\365\033\363\272\253\335\030\276V}r\275@{\206\275\326\214\235\275E\245\314\2731\326m\275\221jn\275;\373\260\275s\361;\275\345\350B\275*a\t\275\2242B\275\030-\226\275\366\301\\\275\236\250\200\2759\233\253\272\007>\232\275\025p\312\275\207M}\275z2\330\274\317\252\227\274\001\212\244\275\342]\231\274\014\245\312\274y\212\253\275+\201\222\275\200}\220\275O\213\354\275\366\372\032\274V\376(\275\354\360\224\275\024\316\217\274-\n\242\274\260\233\r\275\3566\035<\345\327\235<\033p\310\273f\340\210<\341u0\275\341\r!\273|\263\016\274Z\214\333\274\272*\303\274\366\307\322\274\021f\307\274\002\334\232\273c\231\360\273/\0002\275\205r\205\274\031c\200<\372\312\001=b\367\344\273\030D\016=]H\226<Q\345\252<_\365,\274\206YV=\355\300\332;\313a\235\274(s)=x\363\237=\207\332\000\276\207t\005\276\223\0224\274w2\306=\201\360 \276\334b\n\275\314;\220<|\333\037>=\361\004\276\024\rv>J\215<\276\316\203\312\274\353\233\006\276\237\207\035\273\037\276t=\026y8=\246\373O=\010\322\230\275\021\006\022>\257\345J\275\250:\212\275\373\027\241=t\305\003=\356\325\273\275\326\002\241\274Q1\273\275\207\002\007=\335\317\\=I3\265\275{\223\027>\361\200R>\002\206\240\274O\007\235\274\261\323&\275\013\026x\274\310\tD\275s\227\303\274 \202\221<\376\240\035=\330Q><\221D\003=\225:\365<rX\343\270\3452A;J{\246<\305\347\216\274+\242\331\274a\330\275\274\300,\033=\245n\371<\362\313\224\274\201O\326\273\3240\315<lQa=\033\025\001:\004s\033=\335\324\310<p\\5=\212\217)\274\010\242}=\222\254\3239\246S\255\273\3066\'\274\266\231\314\274!\333\006\275dH\226\273\372x\307\274\316\036\203<G\306\016;\220\224\203=\203\006p=\227j\367\274\024x\031=\262.\004=Z+\003=\314c\010=\333;\261=\274\345K\274*V#\273\236\272\263;\013\223\005=\316\304s=\002\334\370\274\346\334\201<xS\251=G.\367=hs-<\263.q=\354\234\346<\005\265n=\312\366\252\273\254\247\237=^\337]=\313v\271<-\354\232=0\235H<_\2401\273\202\023\330:Y\373\002<e\377\204<\377\001\242\274\267aa\274R\314O==\274\257\273\367\225\377<\030\r\212\274H\2224\274eg5\275\034\326*\275jk\246\274w\034\n\274\272)u;&@\277\274\372\237\337\274v\231]\275z\313\353<\316\304\244\274\307\342\021=\t5\272\274\322\033S=a\277\320\2720\372\202\274T\347\242\274\237\266\355<Q\376\020=F\017#<\024\334\272<`\300\001=\244\365\271=2\260\000<\264\343\035>a*\352\275\221_<<f\031A\276V@\356\275d4\220=\223v\032\271\307\247 \276\311\013(\275\315x\244<\360\307\334=\031\211\267\275\323\267\037\276\243c\243;\375\277\310<\376\271b\276\345\214L<\351qI<\354\372\305\275J\030\273\275\347{\244\275\177\370`\276\265)4=8\021{=\313YB<\177O\021>\0009J<3\210s<\2026\375\274\214\235\371:\270\336\023=\212\263\313<\353\3405;\004D<=3\231\214;]O\205\274\tB\331=\344ao\271\2317:=\250\212\340<\215\320\203<\300Xs\275\244\255\215\275$\367M\274?n#\274\362\304\250<\345\312\372\274\n\351\\=\324Og\275\245\001\203=0\353\024\275Q\246\335=\305,\013\274%:\034=\225\017\007\2746\024\207\274\003\207\325\274\277\005\307;_\356\275<A\037\312;so\360=\320_\267:`\274K\275P-\255=\220\"Y:cg\217;f\034\032\275T\356t<{h\357=\235NI\275\243\237E=S\253\031=\010\301\204\274\241\2429\275\316\322.:\253N\370\274\021|\014\275\250\225+=\351\211/\274\366\033\226<6cv\275X\020\364=\335\026G\275\t\331}=jx\244\273\323l\304=3g\246\275\254\245\013=\201\315E\275\301X{<\261\267\036=\001s\217<3>o=\212\'\320\273\271\'\002\275\315\3505=E\234g\274\024y\352\274\306:!<\003\360\200<\233/%=N\255\257\274\206\307\316\273\356\300/<(\304\261\274\271^\377:\360\232-\275MO$\275\341Cz\274D[\027=t\317\220\275\313L\\<\004d\366\273\314\322\204=\200u%\275\304\221\245\274\177\004j\271\037\210}\274\346^\234\274R&\201<D,\026\274t\\V\275J\225R=-\000.\273[\365\n\275\032\272\336<\322|\254\274\204\257-\275\325\356R=\217\374\017\276\271\325\n<\317\334\001\276P\233\231\274\267\326\335\275\025\261\033\275P8\374\275s\005\305\273Q]9=\r\246\220=D\347\331\274\031\013\362:\262\364\217<\263,\377\275\245\226\246=\256\216i\275d\252>=A\240L<\326*\342\275us\344\275,\212&\275\326\345F\275\266\266\007=Qv\034=\001\031\320\274\330\210\337\274\306q\336\273\244\004\274\274\323-\335\274j+\177\275^#S=z\360\026\274a\350\001\275R\341\201=\330(\023=A\017\325=Q\206?\274,A\232<\344?\200<\266d{=M;\237\273\020\003d\275\347\334\201\275\272\347\344\274q\322\007=\026\350\273\275T\034\263<\316\225\337\273l2\273=\322\014t\275\025\017\001\275g\265\223<V\321\306<_\030\242\274k\250\033=\004/\307\274\334\212L\275\022w\177=\345+\355;\021\220p=)\003\013\275\361\t!\275\036\316\205<\366u\263\274\037E\214<\303\277A\273\313\277\237;\330M\257=\236\246\211;\346 \032;\3426\204=\223\335\004\275\027\n\226\273\016\2507\275*\324R\275Fh\250\274\373\373\037=\305\342\233\275\217\235\211<\355\026\244\273\233\3316=\341\254\"\275C\303\010=Q\371\007\275Q\257 <#b\216\275}c\016=g\366\037\275\346\220%\275\207\352\200<\300Y\252\274\212W\226\274\214\035\232\275\014\215G\275\355\225\222=\010\355g\275\021U\235<]\300_\275\372z\023=v\375\222=\037\370,;k\3321\274w|\232=?\345\267\274\215\322F=\264\332\035=\026\023\001<7{\335\274~\206\207\275\315\237\020<\361\306\211\274\343\270\217<gT!=\327\325+\275\024\014`<^\303{\273\224\000\201\275pJ\"\275\373 ::\244\237M\274\210,\342\274a2\266\274\307\005Z:Vc\231\274\356\325\276:#\3020\276\007\243\252\276SR\307\2752\2278=\006\226\257=\207{O\275s\030B\276\324\206\256\275A\274\272\275LL\t\275\237?E\273\010*\277=\216\335\034\275{\001?\275\254\214\026>\257\'\247>}\233\214\275\027\250\371=\322Q\027>\224\344a\276\2771\233>\221\345\036\276J\371\n\276\304m\200\275u\030\204\275\256\247^>\316\375\232\274Hq\210\274\310\373y\276KA\311\274\032\300\261\275\036F\307\275.\377\000\276\276\230\035=A9\312\275sY\002\275\331\215\350\275D\371\372:4\300a<\336\305\226\274`\031e\275\002\020\213\275\356\264\001\276\243\'0=\336}\255\274\302\342\337\274\353\325C\275\345W\237\275.\033\201\275\372\237\002=#\006\022<\237*\271<nmQ\275^\023\370<\361\214)\275H\205\213\275Y\024\211\2754\206\004<\010\326\024\274\212\275]\275q\271\033\275\321\274\301\273\343\307j\275\034\215\013\276\341i\364\275\307\021\214<iD.\275\207Y\241=\202w\016\276~x\214=W\262\307<\366\265?\275nu\202\275\024B\334\274k\335\360\275\';\244=?\223\235\275\265\266y\275\247\317\231\275\273<\326\275\026\356-\276c\340u<\254V\260<\\N\323<&E\236\275\266I\205=\317}(\275\037{c\276]\374\264\275M\304\263\274\235>\337\273\227\240\006\276n\005\350\275\266?\r\274\364w\022\275\231\246\317<\367\311Q=\326\237\257=\243\322\315<\267B =\376\371\301=\245\215z<\271\263\214<\026\t]\274p\242\304<\241\215W=\013D\330<\244j\024==>-=\301\016\324<\264\342\332<\021\001\022=\222\352\'<Qs\206<\200f2=;\032\233<s@\254<\2439\017\273\365\207R<\353\271\n\275\354D\207<\326\364\223<\034-`<<\271\213\274J\254\232<\004\232\003=\300\376\273<\024\347@=\350X\350\274I\306\n=f\275!=\035\375)\275\251%\275=\201\302\226=\356\245\013\275\372\346\305=2vz=\003\311\214\275\016\221\024>~\343;\275\2125#>\373u\216=\347O\216\274yS\325=U\347\264<\3041\307\275\254\247\200\274\266|\255=\334W\237=\225c8=LR8=\001\034>\274\024\246\370=e*\327<N\270-\275\312B\305\274\2435\227<\330\022\237\2757J\230\275\370\374==\322\351\334=`\210\271=6\214\327<\364\225Z=B\342\273=.)\341\273\312}\227;\344i\317\274\024\231\006\274\272\276*=\021\326.=\031\206 =\227{\270<\373\"!=.\213\001=\004\201U=`\321u<\354~\r<$5I=L)a<\245T\340<\020\017D\274\243:\333<\353X`\275\337\035\303<X`\202<\207\353\002<\n\275\017\275w\177\247<\tcI<\302\273\311<\203\217~=\241\004\302=\023\247\225=\000\342#=\355\352\357<cg\323=4\275\027<B\301\217<5&-\274\372\300\361<\347\023\233<\341\3448=\342\336\271<4\023:=\271[8=\217\014\005=\022\242Y=\341\332\"=@/\003=hq\177=\343:t<\r\255\317;<V\353\274\307\230!=r>\321;o\205\"=\016\317{<\0336\276<2\275\273<\016<\321;B\220\332<G\207\023<\271E\003<BU\221;\237:T\274O\020\307;P;k;\001H\344;ot-;0Fr:E\260x;T\2056<Dby\272\325`E<\302\235\262;=f4\273\366\177\025;;]\236;\312\357\'<\226\327\247\273\374\217\234\272\177t\367\273\247\237I:\346\200T<\253@\030;\247\326\036\273\222<\022:\202Sg<\227\014\252\273+\237S;\323\326\232<\322\355\320:\\\330\361;\373\032\r<;\2347=c%\261\273M\2034;\334\223\203\275\024\330\346\274\303L\305;k\0002\275\335\213S=kBf<\001^\336\273\367(\252<\363$V=\021-\036=\267\247\377=:\333c\274\0059x=\342\360\007=\0273\357\274\025G!\275\030\257\200\273\202\353\261<\023L\215=\363\325\236=7\r\220\273T^\374;\361\364\301<[\364P\273\344\267E<d8U\275\241?\027\275\335\262\r\275\301\315N\274\210\010\207<\357\223\235<(\365f\274\362>J<\276K_<\367\tn<\010\246,;B\266\311\270\344\357\014<\222\272;<\356\270\345;\202\250\326<\361\205G<LH\027<\023a\n<6\375B<\372 \207<wW\244\273\203@\325;\376\221\335\273\211\230\227;\223\256\255<\365#\214;+\366\335\273q\235\264\273\202\355\276<e\223\223\273\273H\251;\363\024\200<R\241\217;\346W\034<Z\020\324<\344\201\361<\000\010z<\375Jo<\361\326\246<\014\227\t=\254+\310<Wv\261<g\367\367;\332\024l<\3146\250<},\024<\353\334\016=\326R\313<~^\305<X\336\210<M,\316<\277,\327<\213\033~<)[\254<d\214\333:\366\210\265<\005\263\376<y\354=<\321\245W;\267z\014:K\261\373<y\r\265\273\243\316\210<5\316\331<\311\251\323<%\376\263<\032\361\216<\021\260\226\274\212\335\320\274\372\001\244\275+\n\306\274\0353\212\274\034&\200\275\201\301\3349\"*\215\274\265\032\257\273h\336\010\275G2\234\274}X\024\275\370;\r\275)\016\305\274\234\005\004;\262\224\374\274\3764F\275]\216A\274\232\361\220\274\270\016\204\274\270/v\274d\271%\275A\272%<\020z\332\273\004I\330\274\005\000\021\275\347W\246\274\002\232\330\274\374\017d\274SIQ\275\360b\373\274\370U6\275\217B\030\276\371\t\007=\273\244\027\276\350\322\215\274{2\356\274u0\267;\255\210\014\276\231<\237\2753\344\363<B?\246\274PE\035=\373\006\210\274\344\253\373\274\202\000\025\276\\\302\210\275f<U\275o)\215=P\251\213\275\221\001-\275\232\357\034\275\216\331`=\327\340\355\274\342g-\276\203\245\004\276\\-\n\276x=\307\274\270\035\350\274L\021\2409\311/\242=\244\261\r\276\312&\347<\001\t\303=\375=\017\275M\t\236\275\026\344\232\275\270\370*\275\302\275f\275O\027_\275\220\'\240;\324Q\200<n\320O;\003j\207\274\243\242q\274\2077\203\275\343\301?\275K\231\030<.\0233\274\004\'S\275&\345F\275\326\342\314\274\201X\264;\264,\332\273-\024\007\274\306oV\275\034$\331<;W\336;I\200\216\274\342<g\275\223n\235\274\240\250\357\274T\225\300\2749\357R\275\000(\337\274\303d\265\275\307\231s\275r\276\245\275\275X\022\275\210i>\275\324\372\222\272.\322\225\275\216o\333<\321\243\203<\374\252\240\272\217G*\275,2\251<\207\244\213\275\252\215\302\274\325\354\205\274\355q\277\274\340\2734\275i\343a\275\273\275K\275\254\3307<\246$d\274\244:\334<\007\232,\275\340\312N=\331\021\214\274HVU\275\376\335s\275et\037;\311\240\016\275\246(c\275_\\\030\275\237\010\003\275\224\361V\275\267\017K<\346g\202:\276\237a=V\267\372;\352R\306\274\353\224\355\273\340\222K;** =\211l\215<\\+l\273\220W\324;\036\301\r<<B\256<]\022\276<\017FB\273?\2372<\013\334\234<6\004\332<>\243\370;\365\254\355<-*\232;C \251<\242h\340\271\t\3468<\250OU;?\236\203\273L$\t=\241\330\202\273\222#9:\273\235t<\34373\274\032;\362:<<5<\034\010p\274J,0\275\355\032\336:\363H\306\275e?\222=\264i\276\274ow\216\275\325\265.<[\302\221\275-\243\"=\273\250\247=J\241\033<\201Z\311=a`:\274\271/\007=\364\316\262=\364\0372=\332\244\360=\346\275\224<?\241:\275\\R\206=\337:\227<\306~L\275\241,\202\275\306\236\330\274_\335`\274\356\343_;7\001A\274\276Z!\275A\376X<D\366\t=\253\262\255<\260\216\321\273^\355]=C\343\236<ti\351\274rh\375\273\214\372\001=\207\024\307<tl\230<\023\255\274<A\371\242<\315c:;\356\352\024=\307\375\024=\235c\227;1e\264<iv\276<\350)\177<\336\222l<\364-\n=\330\223\010<N\205\302<+l\300\2749^\217;\350\000\037=\345J\320;\006\300\371<\252\373\027<\313\221\260<k\246\205<)5\'<\0060\033\274\233\205\376<\371\304\014=\311\264X=\350\323\267<c\002\236;\346\364\331<\231\t\003=sv7=\206V\360<z\\\264<\213\370\252<\311y\265<.\245\r=[\027\010=y\373n<\252\205\000=#I\r=\304\021\230<\177%2=\304f-=\222\306\224<\004a\007=!\206\223<\202\357\263<\255^\257\273q\244\236<\031X\341<\'K/<s\350\252<\335E\007=o\177\217<\301\245\004\275l\320\234;\014\034\252\273\226j\\\275S\237\022\273\250\270\027\274\220\013\213\273[$r\274\314@\001\275n\356\226;<\200\261<9\344\330\274\260\353;7\370G\316\274\030\256\\;\001\200{\273d\312=\274\265\311Y\274\344\237\217:\377\354\246\273\032a`\274N\353\306\274s,4\27429\370;\301\364Z\274t\242\224<\316D\256<>\307\372\274\216v\366\272\300\247\"=\322\221\300\274\003\010^<\214\323\031<<\034\266\273\022\235\230<V\205\275\274\212E\347\273\227\030\341\271\261\350\346\274\231}\362<Ax!\274\217\227\032\274G\021\260<\370\022\014=\313\237F\275m\022\361<\233\224?\275\002~\213\274+y\277:\003\305\211\273\344l\226\273\212>\335;\310X\246<k\202Y\274\340\317+\275)\235\031<a\247d\274\306\217\352<\315\356\241\273\014\204\006<\215\221\374\274\261\212\016\274\3106\371\273\312\3540\274\201|\243\274?\370\016<\270\300\337\270\277\350\203\275\215\205\200\273?\202\374\273czw;}I\213\274\223M\026\275Q\377\376;\277a\275<\346\217\257\274\323O:;\306\252\024\275\312Y\244<\026\351\375\271w\004\207\274\235\271\256\274q^\034\274\205T\365\273\237&\216\274\235\344\332\274ZH\226\274\2711\311;\222M\360\274\354\215\214;cH\010=\313\004\006\275\3340v\272\2702I=Z\352\016\275\320U\252<\003\310t<\276+\036<Gd\201\274\237(0\275\230\350\222\273\317\367\250\273w\010q\272\322\036\030\273@\346\360\274k\217\000<l\327\250<|\205q\274\237\230\375;\220\"\232\274\307\373\005<N\320\340\2715\276\221\274\261\317\276\274\333\360\271;p3\300\274\276\377\263\274\305A!\274\361_I\272e]\212\272\257\315\325\274\210&Z<1-\342<tm\t\275\370lE;uu\r=)\262a\274B{\'<\346\035\330;\311\227\261\274\032\332\313\274\316\373&\275ujS\275.t\261:q\207\202\27415\357<\026\376s<\254\311\267;\334K\013<X\347\200\273S\344\027\275\033xc<\265\240@\275\003\014\255\274g\344\317\274\2667\224\272\266\026\215\275\020\255\233\271\363\267\260\274\206\232\241<%\331S:d\216[=\0160&\274l8\031\272\327\255\341;\331dg<\3461\242:\252\224\250<\243f\005=\256\304?\273\tL\013<\256\333\255;Q7\003\276\023pN\276\250\n\334\274\030\265\007>\003p\370\275\314\263\301\275L\302w\275\300\003\022=S\327|\275g\313E\275R\305\370\275(<\216\274\342\365\371\275\270{\021<\256\205a\275\347\006\263\2742\275\365\275\014\215\222\275\303\240\022<\302\240%\276,\204\274=\216\'\366=*r\r\275\230_(\275\200\232\350\275V\2128\275\323&>=\365\035\262=\366Me=\324;\344=\374\364\242=\354\324\236\275q\337\203\274\201\310\t\273\005\363t\275\376\370\313<\327#\033=\216s\022<V\314\306=\242\021\261<(|\262<\220F\251=#\364 =\032C\351<@\333\215<\367\230\000\275\"\014<\275!\255\246\274]Q\370\274=\357\271=\017\373_\274\351}\247=\377\321\276<?S\243=\205\266\330\273l\212\022=4\201\232<dR0=\335\324\317\271T\370\r=n4\363<\026V\220<\353\"G>n\036\212\275&\247\215\274V\036\014=\243o\302\274\t\371(>q,\366;!D5=\024\207\374=\226\252\341\274\202)\321<\304\216\252=^\214\025<\314e\245=\267HJ<\272\304\313\274\211$C\274\036\310^<\371\006.\273\303 C=R\334B\274.p\267=\234Y\200=\201\375<>\320\003S\274\002\346\321:\374\214T\275\324\246Z=\212\306\302:\031^e<m\201V<\224^2=;\276$>\342\225\222\274\331\252\331<0z\331\274\202(\201<\034\255\301\273\001\300\232\274\300\300a<\341\345\354\273\226!W=\030H\351\273\373|\215\273w,\324<\373b\201<\207\311\004\275\267M\322:\305\034\031=\n5\244<\213\322#\275\250j~\272\340o[\275\331]1\274Cpd=!lL=\255\252\r\275\352{\234=\374\230F=\240\242V\274\250#e=\226\245x=\374\210f=\223L\302\273z\340;\274.Y)=\207\212\251=\362\366\343<\323\220\217\275\252\177\226>\\c!\275Y\246P\275\256\227I>\025\376\322\275\313c\265\275\214\302\014>Y\r\000\276}\377\351=S\334,>[\256]\274I\263\321=\035\257\213=\016\337\034>\220tz\275\267YR\276\204A\254\274\255m\216==\216\220=\24674=\240\320\260;\037\0269\275\000+\317\275o\013\230=\202~\n=\221\020a<\223\016\235=\242-A>\0174\027<\024\316\371<\373M\025\275\031\330\364<\343\257\226\274\014b\311\271\304\364\334<6\317\305\274\203\033~=\335vf\273\333\177\026\275\'\344\253=\242\031*=\211<\323;C\215m<\200d\243=\320\312\311<\"\037\216\2759\301\027=\261\006\217\275\300\366\214\2708\266\247=\002\261\227=k\177\210\275\252u\252=\r\315\265=iq\222\274\0050\302=\245\240\252=\271\013>=c\343\341<s\0147>;{o<\215\024J<F\233#<#:9=\306\226\220\274\271W,<9s\210={_m\275\036<\252=\206\177\221<\026\027\177\275\037o`=\322\014\275=\372\314\222<\216C7=\202\035\365=\363J==\310\006\351;w#\350\274\tGn\275\327\371\264<\222\3660>C\016\221\274\274\220\022\275S\253\310\273\021\354\326=\362\204\221\275\331\265\365=N\007*=\306\007\371=\263e\301=\3476\363<\377<\247;\233\205?;\337\032s\274\033Pn;l\2057<\226\363\200;\303\177p\272A\233&<apf\273Ko\t<\251\200\305\273\033\203\020<zQ\263\273\267\372\254\274\250Q\3429F\023\250;\353\032\024<\310\261<\274!\324.;\226\351\251\274E6\025<\324\262%<+\346\353;dc\223;\024(\325\274\237\262\006<\357\256\364\273U\365<\2730\240[\274\"\304\327;t{\004\273}\231\306<\332(r\275\353\001\276\273\315S]\275\031\246c;\245\222\226\275\337\036B<y\347B=\363\346\217\275\226>\210\274\246<\247\2747\305\325\275\216z\211=\253\354U\274\353A\204<\302\364D\275Hq\231<rc\224=Is%=\260\215u\274P\3641\275\261\3622=\215}\215<\203\326\332<\377\244\"=D\0247\275\217\272?\275\270\222J>5\230\235<m_X=\241\266\274\275\326\224[=Tj\347\275\355s.<?\232\347<\244Q\352:\333\252\375;\240\242\226<\215@n<\332\3074\273\376\024\226<\'\2303:\302<\353;u\265A<\266f\303<\332,5\273p\244C\274\235P\322;\'\276 <\355#\250<N\233$\274\026\307\306<\'\311\202\274\3335\226<\035\330\222<%2\000=\324\330\301;l\243/\275\315\233a<r\330\266\273\247\363\332\272\243oi\274\211] <\031\251\034\273\207\\\021=\370\006\241<\224n\241<\351\212\034=\255\014p<\300w\210=\337\264\260<\004\343\322<d\353\036=\252\214`\274d2\305<\211Z\366<\350\315E=\267\332d<\216\311\201</cO<\2162\252<\340\300\036=\200\365\255<M\256\030=\275+=\274\227xA=3\341\273<;\251*=W\205\311<\030\205Z;\270x\032<<\231\252;3\324\254;\234(\314<W\'\243<\347\303\313<e\236\212=\377\271\301\274\346S\243\274z\220\002;{6U\274\350L\236\274w\tT\274\242vN\274+\223\017\275J\'\000\274\304r\347\274\210\230g<\343\356\000\274\306\257=\274g\3013<\004\n\311\271\r\250\344\2739t\234\274\371\224\231<N\030 \274h\330\244<^\035\013\275s\335\217\274\252\\\016\275Y\345\315\272\271\317}\274gv\020\275,\320\316;\365}\234\273\177g\017\275[\227D\275@\342\260\274x^\275\274\336.}=\343\331\202;\371l\344\2757\037\333=b\032\344\275\326\274\350\272-\246\222=\347N$\276\340\324\024\275\331\024\347=~#,;\260\317\037=8rO\275\262\323\327<Y\231\365<oi\000<>z\317<\004E\235=\031\036\034>\352\335\026=!\274\206=Ac\323=\201_\002\276\tM-\275A\224L<\032R\024=eE2\274\031\023\001<S\376\377<\377@$\275\025\3244\275\374n\222\275X\216Q\275\023\241\247\275\342H\322\274\031\014.\274\226be\275 \263P\275\336\320\027\275\200\233~\275\216\003\005\275\205t2\275\374\006\222\275%O\266\275M\331\375\274(B\333\274\205\360\322\274_\215\271\274X\2007\275\026\277&\274\335\265^\275\331\305\236;\236\212;\275\364\016%\275\275\034\231\275\310\2717\274G\027_;4\344\201\275u\226\222\271\217\250\237\274aLD\275\203(Y\275\004\375\377\274\333\334\310\275\254\220\216\275k\362^\275=w\270\275B8\263:\271\312\035\276\003p\203\275\230$\237\275J\354\367\275\242\344E\274\300\306z\275e\025\217\275\014\210\323\275\353\333j\275\376\305\213\275o#\006\275\2200\205\275R8\264\275\242}\241\2754\232\270\275o\\\235\272\025\207\033\276\210\254\326\275\262\276\316\275\255Y\n\275m\326u\275J\331!\275@Q$\275\037\026\345\2749r\265\275z\225\275\2751\300\204\275gw\013\276\346\002d\273|nD\275\321\257\177\274\232\177\365\272oz\327\275zv_=\230@\315\274\005\003w;W\370\227\274O%n<\334%\263<\215\017\313<6\313&\275e\247\3349B\231\210\274v^T<\234\253\341<&\036};l\210\227<2\201\231\274/)\234\2747}\026<)i\314<T\201\361;\240\326\314<ImE\275Z\241\026=\245A\203\274\222\024\016<\254\274\336\274Y\350\267<W\224\221=\217\221\330\274{\372\340<\327\350\002=\207\352\276\274\003\215R\276N\267\263\274_\351R=\3071\332\275\311\031\007> \335\3337\375\207\235<\275!}\274\327Y\014\275\000\312\t\275\034\227\3418h\300\224\275\026\264\211\275\013\241^<\233\2154\276\004\204%>j\313\344\274\236Z\372\275\226|#\276\315X\322\275\377RQ=\022\204(;S^\220=\310g\244\274E\312\241\275\305O\252=\356\027\272\272)\233D\2762\240\025\274\326\345\254\275K\362Q=\226\243S\2735\303\315\275\207\316\330;kk\203\2752\223E=\302\322h\275\252\223\005;7)\271:0\367x\273\306k\220\275\262\367t:\270\317)\275\370\026\346\272t_\333<DY\t=/L\022\275\2365y\275~\234\213\272`>\304\2746\300\326=m\350\036<\322\366\226<]\267\276\275\222\267\031=\025::\275p`\267<\025\352\016\2750vd\274\035;\323=B\310E\274 \253j\275\035\n\021=\236\346x;\376C\270\275\"v\276\273;Rb\275|\347\336=c\267\323\275\360\346\224\274\3009{=O_\000\2753g\000\276\307\3247\275\360\370@\275\226xo\275\344\226\277:\306\223@\275=\221\311=\337\365\332\274\314\033\002;\236\3233\276Q\233\233=\371\202\023<F\226\204=I\215*\276mXJ=\230=\310\275\262Z\355\274\274\231\362\275(j\266\275\350\366\224\275\010\232\251;\026A\';\230\214\241\274\223e{;\314\303\355;\341\307\312:=\270\340\271\302D\224<\3110X\272\265\346\242<@\251\030\274\322%1<H=\0279\261\242s\274#\r\221\273\037\205V\271\260k\265;]\206\034\274\357nQ\272\305\217\004\275\364\222\324;\230\027\001<:\004\017<\246\226{\273Y\277+<\251 \235<\335~T\274\n5\205\272z\305\277<\202\354u<\356\215\"<UJn<@\373\035=IW\356\272]\007\341:\343C\233<\341\251\365=$\024)=3\034-=\226L7\275\007z\251\274s\374\205=X\257|\275\320\2726<V\353\200=f\303\364\273P\245\005\275\032T\265<\034<\261\273\255fM=*\362\253=TV\352\274z=K\2756\224\317=\025Fw=\314\350\253\272\267\002:\275=b,\275\324\343\315=\234\316\261\273N\332\313\2745D*<\366\321\213\274\013)\315=\357M]<p\031\021=u\261\321\274D\277*<\003\377L<\035\242\220<\311\204X;W\302\227<\270\275\252;h*h<\367\005)<LV\007=\303)\321;\300%\211\273\342\031\211;\202\300\326;z\271C<&\204\210\274#\333\034<\300S\006\275\237\236X<& {<q\236\244<6\037\223\273\343nd\274\305C\355<\031\0032\2743\001\222:\264\240g<\222\236i<\034\222\310;\013s\034=\257\320\224<\2474\316;\rhK<\357\310\202<o@-=\226p\251<3r\304<\353\201\222<\355\215+;\2772\350<\334=\037<\002\2555=f\262\247<\235\373\200< \314\210;\260\252\244< \246\321<\315\251t<m\036\210<\2003\346\274Uj\t=\3244\364<\003\367\260<\327{n;\000\202\334;(\035\362<\2053\014\274#\300\'<\376E\002=\224\240\t=\361\311\300<\262\306+=\351|o<\317\264\266<\222\351\231:.k\216<\213 \353<\327y\214<\336d[<\235\323\026=\024(/<f\305\000=\310eR\274\333\336\360<oX\016<_\025(\274\251\275X\273x\355\206<\351\031\317<%\301\235\274\'i\357;\004\021\251\274,\317\006=\325\002\321<,\207\013=\363\262\341\272\377\247\367<\264D%=\311\212\203;\211^\031<\3665#=ous=\242F\330<~42=\245\322a\274\322]7\275\352\274>\274$\035~\274\346\004\246\275%\264\272=\201\202\236=\360\233\007>\371\356`=\241\244i\275\000\321\023>]\256F=\364\356\212=2\034\256<y\360A\275}\277\252\275\327\257j\274\003\323\311\275\2720@\276\036KC\275-O\023>\020)D=\036\364d\275\016\374\341<%\265\224<\313\264\257\275\027\300\t\276\370B\343=T\235:=lD\313=\237\"\206\275.\211\000\275\230O(=\240\004\267=\231\274\373<\241X\235<\203\275\303=z\316m=\301\273N=x#\212=G,\027=\265\317w=fl\315=\245\264\316=[\244\376<\017\371\352<\236,\347<\336,\347<\232\223Y=sc1<|\273V=\204\001\325\273$-\241=\314\0267=\313\375\232==\262P<\367\330\035<`J\221=/J\202\273\3020\357<\201\331i=\316\025\203=.d.=\372\245\366=B\177\260=\210\350\207=\377\201\313=c\233\036=TB\327=\264G\237=*P\276=$\316\341=\266\3552<\0224\210=\016M\205=G\236\004>\276\242L=\367\346\332=+\314%=p\242p=K\003\267=\316\212\302=\245\227\272=b\177\351\271\353\371\346=\016\003\360=Y\202g=\241:\031=\375Z-=?\216\232=\270\277C\274\331\037\031=\340S\335=\2506\265=\205\333\225=\201\305\022>\353\222|<Li\211<(\'\201\274J\324S<\023\212\362<\210\3319<A\236u;\342\016\245<c\302\341;\326;\307<r\273w\274\033{\315<O\001\374;\010~\017\274\352\324\0069\010\263\r<@\262C<\000H\335\265\274\005p;\370\337\225\274\016C\234<\203k\207<l\336\271<\375\343B;@ \274;\253\341\364<N^\026\274\354\010\231:\032\204\376<_\335\302<\210\264\205<N\300\370<\331\205\254=\001\353O=\r\016)\275\301\353\025\275\002\340\247\275\204<\364\274\247R\210<\203\344\207=l\221\216=\311\356\310=1\245E\275w\014\327<\216\224Y=\276\224\">\253\3507\275\017\334F=.6\247\274\0005\004\276o\n\034\276\335\"\373<\237U\312\275&\271\372<_\244\237\274\230#\337<\004\352\234\275\207\354\320\274\004\376\225\275\272\373\016=\031\r\260\275b\n!>\326U~\275\345\207\262\275\214Oo=\362\007\215=n\246$;N\265\253<*\020\231=\250\273 =\267\242\223<\205\217\320<s\250\215<\250\341\n=\325\226\036=\304\022\217=\234\305\306<\221\\\001=\247&\264<6\317\337<.\313\362<\007\361;<\303\n\355<1\366\022\274\330w\177=~\217\023=`\0379=\324\013\315;P\022;\274\306\034Q=S\021T<\325)H<#M\027=x&\356<\252t\334<\362\264\270=\263rA=T\304C=\234\354s=vY\355<\233T\t>\255\367j=\001\341d=\321\025_=;\236\026:\216_S=\334\206!=7\325\306=\311\305B=\304[x=\014O\371<G\335Z=\026Nt=\241\372w=n\341\207=\324\232\'\273p\005\367=\302\220\237=!\365c=Z}\001=9\326\256;eh\216=\213\324w\274\330m\340<4V\226=\206cO=\264\325n=\017\t\362=-\325\340\273\362\037\201\274},T<\354\\\264\273\246\202T\274\352R<\274\375\005\374;\354\021\313\274 \365\n<\357\234\024\274\330uc<j\\a\272\235L\016<\371\336\327<RE\245<\227\362\320;>\340\313;\327U\370<\366!\350\2735\213\037=\321\306\276\274\321\333^<\330z\363\274\3167\206<\335\302b\274>Un\2749\371>;\231\366\004<\350T\025\274>T\363\274\036\230\263;(\253\222\274\352r\000>3?\024\276\324G\327=\320c\265\275\232 \n>\353>@\272\260\2369=\364\232\261\274\301U\206=\025s\252\273\252\266\034\2741\343k\275W\220v=\010\350\'=a\337\243=\375\216\253=\356A\311=\265\252g\275H(\264=A\321\377<\330\342\365\275\332\344\371=gu\037=\265B\343=\273~p\275\347lT=\200\\\020=Cu\300\274\213b \275N\340\276\274\277\325v\273\315M/>\256r\241;\272\376\206\275\032\020f\274m=\230\274\342\177\'\275\271\205\"\275\242/\262\273\350Iy\275\2743g:\200b\202\274\003\252\241\275\345tF\275Z*\316;\247a\363<S\247H;\335X\035;\362\316\212\273\367\2705<X\355\333\273\317\214\032=\266\251Y\275 j\255<,\345@\275k\204\203;>V\312\273,\336o\274\276n\367\274\376X%<@d\034\274N\217\250\274<h3<\310\250\014\276\023=\345\273\300_\252\274B\346\001\275\337&1\2742y\n\274\314W\301\274\373\177\037;`\026\205\275F\3357=,\022\270\274\242\316\204\275\t\250\344\274\252\033\217<\003D\031\274\226\251\240<g_\361;\356\322\n\275\273\234\342\274*\016\223\274\233\3563=k\374\251\275\317\325\007<\355\311\036\275Q\010\367;\021\246\312\2755\350\217<\215\274\n\274\257\235\256<\317l\373\274K)\224\274VY\266:\360\343\373\275,\274\n<\354@-<\275\273\"=\t\215<<\317^\346\274#\316\247\274h\366S\275\302\005\335<\273U\331;\276\315\035=x\303!\273H\022\313\274G*0\274\030\014\034\274\241\236A\273r\337^=\n\305[=T\001\333\2742\331\310<\225:\264\274\303\200\376;,\303\326\274X\322\267\274\340\337\211\274\335\331s\273\360\320\275<p\201\325\274\257\254L<\260\302V\271M\205l=C\232\345<M\177_\273kr\234=\006)\357=\342v-=^\306\312=C\357\233\275\255g\353;\235\300\177\274%\312\024\275\376\227\321;\270~\266=u\020\023\275MZ\223=\350v\366=yY\214=\305\211\254\274z\312\306\274\346D]\275\360A\335\275\374\273\377<`,\267\272\204\024\t=\365O\337<\036\010\255\275\013\254\000\276.\343\326\274J\035\345=!\004\004\274\035\261\337=#\216\207\274\263\335_<6\216\225\275\216(\346=\347\271q<\233H\310<\363?^<?\303T<\313\367\361\274\244f\240\274\214ZN\275{o\214=\n\245\272;\237\r\023=\304\203\377<\2607\024\275\013+\270\274\256\263\024\275\342\347#;\004+X=\331\223,=\336,\214\275\013A\300;`k5\275\337]\272;*fX\275\337\340\033\275\354\005\246\274m,\016\275p\371N<[{*\275 q\271\272\354\307\023\275B:8=\240Z\271\272V\335\031<\r\214\256\273sA\201:K\334k\2748(\220\273\227\360\217\275\340\037\322\274\244\333\274\275\246\373\203;\345\344\277\274\2048\322<\2754\345;\364\253\225\274\212\322\204\275j\223\257\275\3523,\275\022\275\353;\237F\227<\221O\211\275\004w\004\275\372\336(\275:\005<\274?\227\373\275\364\215\201\275\214\217\346\274\020\001y\274\031a\337\274\367\005&\275\302\213\021\275\325A\036\275\252\223S\275\375\037L\274\020\213\223\274d*\220<\362ah=\273\006\273;\366+\204<\202\1778\2754\027\346<gm\316\274L\"u\273\300?4\271]{\003<mJ#\275VU\'<\362\311\247<<\340\233<\371F\220<[\006\237:\333K\263<,\037\336;\317\204\245<-\341c:\021\354/\274\243\367\337\274H \320;A\321\370<\033\347i\275\247\007\303<<\2726\274\217\277\303;PZ0\274\254+\374\274^\007[\274Y9\022\273\230\231\321<\275\211\244=`\311\320\274\356pg=\375\254\350\275\025\226;=cD\216<P|\363=\203\010\024\275YM\337=\353:\373=\017\304l=\306b\336<Jb\004\275\000 \323<\221=\211\274\025\017\247<\3279\233=\351\260\230=/\264\267\272~\216\346=G\265\205<\372\203]\274\226Z\247\275/$\376\274%\374\247=\264\306.\275\324\303T\275;\021\'\275l\250b=\245\311\005\276i\300\373\275+J\n=\210\227\340=\023D]:\017\376\001=\003\364\343\274\355\035Q=\332\331\254\274i\201\234;\\=\000<\335\225k<\377\016L\274\304jl=X\017\210<a\321\317;/@\024=a\275&<)9q<,)\276<\271\231\360\274\264\326\3229\030D\t\2756\003\036\2757\014\324\274.(r=\313\252$\275ty\036=\251\267\246\274\376\275%<\241\220\336\273\246Y\371\274\354W\304\2740\037e\274\262\247\273=\300\363\273=\366xM;n\006\210=\023\024G\275\242\321\212=\\\300)\275e\303\274\274\231\350\222<5\275E=4\342\351\274\221}\204=4\241\027\275\030\307?=\364\353\t=\367\211\001=\031\323\252<\037`\242=[\227+\275\207ul\273U\226\321\274`3\372\2743\"\305\275\215\231\223=\226\302\250=}3\377<2~\355\274\344\216\210:\226\rh=\236\336B<\353\027t<>P\005\275\200\006m:uC\225<\225\252\017\275\315m\035;r\344\267\274\001\031\315;\037Z\035\275\222!u;\334\243\210\274h\220}<E\360a\275\375\251\300\273\\\303\333\2743\004v\275O6\375\274\365\341#\273\301v\025<\\3\213\275\327\217\034\274\207\251p\275\016\236.;\214\005\322\274\"\311\330<\006\241\272\274\373t\220\274JE\207<\2548\227\274.2\256\274D<l\274\277\234P<Y\374m\274\253\257j<=v\272\275S\361\374=W-\207<\304\316\371<\230+j\275\223\354O\274\223\030-\274F\353s;N\222;\274\335\013\213\2754H\276\275c\313I\274\324\001\362<\327w\024\275B\326\217\275\205\320\267\275\220\016t\275\037\343O\275\243\333m<\\\027\233\2741\013\235=\"\262\230<\275q\001>\257\261\352\274\207\203\013<\001\257P<=\211\274=\242\204\222=!\370Y=oD\312\274\220fy\275\274w\354\275\367\317\216;\330\334\211=%K\307\274\351\026\036<\375\004\202\274\321=\322<5\007&\275>7@=\2349(\2746\370\n<x\370\021\272(\300\t=\032\256\353\274L9\200\275\263`\245\274\026~\214\273\271$\330:y$U\275\024-\177\274\033Q\215\275m\346\000<\177\203>\275\275\253\370<\201\016\010\274\315\001\010\275\016\036\222<\350\205^\274Z\014\037\275hB\010\275\002Zg\272+\211\020\275z\336R=\234F\010\274\220\330\243;d\226k\274\346Og:\246\244E<\301\346F\273h\304g\275\343i\215;I\017V\275\307\375\316<\010\214<\274\305\207\230<\247/=\275E^R\275\350\322I\275\375\003\224\273\356\267\303\271B\\\355\274\300\204\023\275/\241\243\275>\031\347<\236^F\275\274\221n;\263\366\273\274\222\220\371<EF\212\274\364\375\202\274\321\2350\2755\241.;/\350\200\274\024E\316\274\255<N=\22078;\034\243\202\274\234.\300\274\204\264-\274\372\336\311:A\0010\275\305o\013=t/f\274\006\271^<\331w\025\274\300Q\341<\205\r\342\273IF\302<1\204\324:\010-\246<\201\203\255\274\177\267\222\274<E\273<\036\007\237\274\0242\347\271\266$\021\274\034~\022<\335\231\260<\027\376\315\274\235\'\013=]\007u<\217\350\276\273\300\003\377<\211,\t=\0206\232;\227$\303;S\327\221\274\004\014l=\33210\275\305\245\266\275\206\364!\275\272J\304<\370\016m\274\016\332\250=\327\240!\276e\n|\275\273\r\227=:@;=\243T\312\275(\263\020\274\262D\231\275\273:\215=+ \375=`E\305:A\213\350=P\\6\275\314\216E\275V\361\325\275xW@>\215`7\275qm\'=7\"\254\275hIk\275\2050\213=\274/\201;\217\242\223\275\024\177\361\275S\205}=t\213V>L\025\231\273\2259E\275\032i@\275\352\304O\274~\231\201\275\001\023w\275G\254R=\333$F\275\021B\374<\355\036<\274D\300\242\272\312\347(\275\013\220*=\241\312.=\217\021\306<\t\277\232\274\230:\377\274\236!\320<S\017\234<\311N\237;s\207\223\274\221\225\372<\320\256\034=xy1\275n\275\336<\320\355\334<\361y\035<8\025\\=RD\037=X\244P8\n\376\370<\016<\274\275\277$\017\275QI\244\274q\355h\275\265\371\000\275n\203\376;\356]\024\275F\306\245=;q\235\275\201\277P=\241\213P\274\263\216\277\274\037\223\336\274T\273\277=\025\3013=p(*=E\306\314:v\312\035\275>5\031;\343\306\302\272\362\022~;\260\226P\274\273\365\302=\214\261\267<\311\364,\275<\200\312\275\332L\240=2m\372\274\274\037\206=\361#d\2749G\010=\257s,=f\000\342\275\372\221\027<\211X\207;3yu=\233)\212\273\341^N\274XO\203<\256\370\260\274w\001n\274H\036\371:tu\300;\374\3627<\215\305d<<\007\032\274 \305\016=\330\375$=\317\305\330<\250\322\017<\237\222\327;\353\323\335:\022\241\243\274\222w\331\271z\265$\275\374eT\273\0307\014<0\260\330\275K\236\023=\223#\325\274<\354\031<,\216\251\2752\366\322\275;\366\341;\214\320p<9\237U\275\213,H<\353N\237=$~j;j\312P=\326\301o=$\335\377<\340O\021=@\315\361<h5C\274\345\361\341:F\320\014>\210\205~=\000\022\266=y\327\272;\242\\X=\234/b=\202-\255<\0175\013\275[\213\267\275/#H<b\333K=\230d\253\274\312\017\334\275\013B\027:?m\260=:\316\323=\231\3574=\354\314\002\275\256\372\337\274/\302\233\275\316\217%<\017\370\303<>Q\240\273m;\215=\273\303m\272\244\371\201\273\247\332\220<\037]\235\274\206X\037<\200\364\260\274\271\224\307<eg\223<\177\332\031\273lF\204\274\205\375\304<d\274\025=^:\001=\321l\035=\366c\n\275~\226\202<I\231\021\275\035Rt\273\225\246\036\2754\342S\274\307\030C\274xX\355\275skq=\247\322\007\275\307H\271;\353\237\215\275}\302\265\275\025\001w<\203E\216=\322!\205=O\231I=\265\202\220=\370=\253<\213\371\376<\223\003%=\021$\250\274\242\000L;\n\364\340;\200\277\017=\036\\h<)Rb=\006\030\345\273\t\210\216\274\303\375n=\313|\360<\317\337u=\017\266\347;\236\020X=\026\227\323\2737Mm<\260\275\242\275\334\210\205\273\333\272\233<\374\211\271\275\304\271S=\211\261\365\274gq:;\002\266\235\274\336\207\204\275-2#=\324\371d={k(<\213\030\374\271LOy<\217\307I<\327I\224\274\272K\021=\305}\357;9\353\201\274^\332\335\273\260\312q;\352\031G\274\254\333d<\303\253\235<\2229\361<X@\336\270\'3!;\3061\001=\323>\343<\301\022\261<\243\'M=\005\314N\274\004\313\322<\273\227\315\274\353\244v<\034\245\343<\357\227\362:\207\360\270<\351\227\202<\204\250\220<9\247\035\274\375Q/<\337g\221<%\375\264=T\033\345\275X_\207<\372\016\263\275jP}\275I\261\214\275\306\315\215=2\310\001=I\327\177=p\342.=p[\035>l^1\274\315\215\r\275\025)\006\275\005\373\276=\261\205\351=\365\002X\275\200\274\006=\354\265\303\275\225\033\201=O?\t=\346\002\007\275\306P\205=\347\277\014=\270\305\200==\213\314\274\273I\032\274S\365\367\274\247w\204\275WIe\275h\202_<\272/\352\275\227:\216<_\\\004<\372\236\304<\203w\224<\202\227\220\274p\010\254<\005\002\231<\034\037\007\275U4F\274\211\017\224;\333\200\270<\3736r\272\2145\323<\2268~=t&\234;\247\3566<.W\336<{\277S=\325e\261\274\022\252Q=P\336\242\274Q:\031=\331h\211\275\214\362\031<s\'^=\351o\017<\326\201\251<\317/\306<\243\244-=#\217\227\273N7\256<y\312^\275\212\034\365<\242\001E=\353&\000\275p\302\227<\353\r\037\275e\3138=hI\271;D\340\\\275`\002\316;T\315\277\271q\257\005<\3409Z<\236\211\002\274\357\232\371<]\037\017=\317\017\260;}g-<\332\224\013=\002-\030<EzT=$\023Y\275\014\255\'<\364\253\232\275\305\203\264<\331\257\r=\0056\005=\364\003\225;E@\247<4\020\352<\316\266\241\274\325l\002:\205\212<\275\223n$=\002\025#=J\377\320\274\3649\364<\025\340\031\275\277\324\021=Ed\205\274AG\034\2744\016}\273<\234\231<f\306\037\275?\272\207<-\010\347:\006\301\013\275~l\240:\373\007\316;\347\2064=\234\336\036\275\004\321L<\311 \240\274\263\374\255\274\377V\252\273\335\025\337\273\355|f<m\037\200\273\316\225\002=t\202\202:\267y\373;\'EN<{\303\201\272*\010H\274H\325\210<\264\030\215\275\201\255N\274\233\220\201=L\304\215=Y\243\346\275\364\276R=\007Bm=\364\030e\274M\004\257\275zE\210;\'\266\265\274xLi\274.\033\333\274\365\375\026\276\204\000\366<\316\315<\275h\254~\275\2454\200\275\330\017\026\275\322\003\321<\336|\375<D\217\302\274\001\230\230\273\270v\246\275\263\025\036>\013\001\352<\034]\003\276[\000\214=\244\352\343\274(W\275<2\354\332:\346()>\333>t=\315o\324=\377\204\231\273\351$\205=[\327\301<4_\242=q%:;\r\342\016<\340+\377;\t>\010=*\3178=[\265\334=\332I\362;6\001\236;(\023\320<\340\177\352<\022\251\020=\247\016\245<\332\362\336\274.\0269\274\002T\322<\273U\215\274S\274\\\275$\325\036=\270n\271;_\234h=\002\246@\275\335\225}<\243\025\342<\201\332\353:\270\357\206\273\377)S<L~\216=\215\270\273=G\370\237\273\233:\243=enQ\275\004\017\263=\333\031\251\274i`\330\274\236\025\';\304\241\223=\251&\367\271\263S\347=\322\231\216\274cn\177=wBH=\"2z=\266\354\246=b*\262=5w7\274\034t\243\274\2609\234=ULc<\375\2266\275\303\270U=\326d\210=i~\236=\207,\217;\312\311$=P;\273==\363\255=gV\006=\002})=e\374\376;\270\"v\272\375!Q\275~V\357;\303\332\213\273\t\020<=\303\317.\275*\016E\275\361\230\267;\270m\250;k\337\261\274\013\363*=\372\313\r\27477\264\274\016\272\217\274\t\334R<\025\240\037\272\253\206\263<\271\201\327\273NR\006<\312\365\271\274j\2155=&)\205;\236\373I;\232f[<<4\205<\350\307p\273\361\233\205\274*\036\353<\224;\232\274a\235\201\273\232\264<=f\024\212\2734\005\234\275\212\244\030=dDL=\231\227)\275[\204\300\275\266\345\255=/\256\263<\341\330\013>i\312Q\273\332W\241=\274\303l\275\237`\356\274\232\246\031\275p\206\343<\366C\234<\257\265/=\327\031`==\374\216\2755\027V;\256t\276=pP\350\274\320\211\000=n\236\272<\025\332\231\275\374%\247\275>.\245<$)9\275\366\'\035=\\\363\177=\360\2650\274\025P\221=$wk<\317\274\005=\022\323\020\274\204dq<w\'><S\364\006=Ri\211\275\340\306\313\274\214\312i<\232B\035\273\264\254\331\274X\001\'=~=\032\274\334\361`\274\231\304r\274\3632\304<l\211\005<\013\316\203=up\244\273\310\302\266:\311@\235\274\367^a=\\\325\306\272\321\376\007<\263z\221\273,\026\267<Yc1\274}D\276\274\233\261\375<\004\016\236\274\261\242F\274\"\002\264<\366\256\035=\021H\356<\306\234G;^@\031=\333\037\341<\262$W=\212\333\026\275J\346\210\274G\364\252\273@\001\237<W%\250\274\025\224l=Y>c\274\333\371#<j\222)\273w-\365<vBl<\273\305\026=\030\020:\273\314g!<\263z\240;\301&\251<\373\304\225\274\317\242\253<\014*\361<c\243\325<,\333\204\273\016dX;t\3539=6-\350\273,\316\026<\305-\203=<\344\361<\374\364O<hz\226==\310:<\253M$\274\264r =8\004\310;1\223A:\271\363\214;\211\324\377;s\033\374<\343\263Y<\375\310\230<tzh=\354\252c=\336\371$<\327\313>=\351^\216=\025@\005=:c\013=\010\230\034;\013f\350\274Q\2102\274\257\374\355<AE\207\275\360\336\035<\251\350i;\312\013t<\367:1\275F\232\017\275[\351\215<\023\363\016\274%\303\307<^P\302\274=\362\207=\356\334\234<{\210\325=\275%\005>\226\200\026=\002\202~=Q\255\272\274\3471\010=?\264\223=\220t\277=\014\033e<?\301i;W<\'\273,\342\017\275\310\261\302\274\236U\377\274\022\205)=\014\373\352;\302\371\000>.\202\304<\2245\213=\366,\217\275\241\233\000>\276&\017>\036\021\254\275\010<\327\273\037\\.\276\230R\347=\271\322\272\275\307\033\204\275\230cE=\260\256\255<\210\036\234=\316\265\210<k\303\007<\004\220+=\356+a<vB\233\271g>\000\274\345Z\315<\231\004\216=\377\201/<\177\341\204<\250\024h=\347\345\207=\364\200><\366\200r=\372\365\347<\014\312V<\375W\337<\336:\240\271}\267\367\274\327M%\275\n\366\252<%\351D\275\342:\255<\310\316\224;\331\2050<e]\014\275(\232\t\275\305\177\272<\321\325\2519\233]\246=\313\210\263=\264\014\013=<\324\r=\311\223.\274\334\340o=r j\274\236\200x:\351S\222<\204\241\r=\240\2412=\236W\'=\340c\326\273]\263\267<N\255\236=:\334V:C\313U=\016\004;=\335LL=\004\336\014=\252\276\027\274\036\314\214\275OE=\275\220\326s=\231&\261\274\2473\301<\275\315\201\274\343\351\311;c\003\231\272\207\027U\275W\340\317<z\010Q\275\017\253\313;\267\233\024\274\0322$\274\254$\235\272\362|\223\274W\026\350;>\314\331<\361\357\344\274\326\013o:\026\374\266\274\237\236q;\'\265\222<\217\224\244<\016\227\241<\253,\350\272P3E\274\3520\323;\027\312\333<fm\177;*\377u=\202)\260\274N\336\224<.\232\266\274PZ\030<S\274&=\252>\232\274M\313\256<\227\276\264<MA\263<\242\325\204\273\224#\230\273\300(\217;7\225|\275\301\314\324\275\370\022\313\275\005h\277\275\320]\035=\202D\202\275\247\221\000>\025\234\257=^\'K=\276\014\371\274\027tQ=J\364\322<m\357\354\275\351\320\253\275\030\357\373=\236\275\313=A\244\'<<\331\323\274\231Y\310<\366j\256=\000y\267=\2132\347\274\354[\004>w\270\327=sp\"<\210\337\\\275\013u\253\275\353\026\253\275\200\034\323\275\032\242\204=\026\307G=\201z\351=\360\2270\273\014\257\014\275\232\007*\275\316@\035\2741\377\334\274\322^\241\274GLF=\232V\245\275\013L\305\273-($\275\356d\026\274\365Y\241\274 ?\362<\274\275\275<{\324%\274\212\003,\274\026aX\274\2718\271<h8R\275uS\206=\233\205\023\275W\244\357<\310\211\211\275!L\235\273\355\2224=\221\357g\274\241\356\247<\\m\023=\313\243\r=\321W\177:\270\215#;\347\256\022\276\334\357\362\2742\330\271;_\254\241\275\242\235\253\274eQF\275\371](\272c\336\006=\3277\326\275|\031\327<\212n\'\275$W\3009_\373\207\274Q;\253<\2700>=\311 c<\214\033\277;.:!\275w<D;,\332\032\274oTx=\026\021\216\275RAL=\247C3\275\373\265W\274\336F\255\274\n%x=N\201m\2734\014G=\010\226\373\273\273*7\274N8y\274\034\343\316\275A\211\234<\253\030\337<t\033\310<\370\246\222\272\214C\245\273\343\341\000=\262J\274\274\357\341#\275S\223\205\274\340^\216\2738\254\031<\320\312V\273V\262u;\275\317\002=\312V\341<\245P\267<\006\031\234<\2442\241\274\024\211\262<L\016\365:\374;o;\036t\314\274T\263X;\217J\240<\244\315\014\276\2569q<\223W\016\275\313Y\322\273gO\316\275\354\215\234\275\313OK\274\340K\206<=\266\352<Q9\360<Q\254\214=\334\270\220=\315U\010>\005\005\353=\245{\001=b\315C\2759\203L=\\Q\255=\266\350\262\275G\026\034>$l\n\275\310vf=\270\261\325;\341\r\203=\tx><\307\203\307\275\\jR=\340\371R\275ez\022\275\242\321g\272\345j\002\276Y\340\237\275\226q\315\275\210U\320=\251\360\031>\363\332\t=/y(\2753\233\211\275mg\262\275\204\303\305\275\273\321\020=]q\013=%(\365<\362\027\276:\245\301\204<\357=+=\342*\t\275\201\237\002<R; \275\310\277\330;\217\257\024<\347\207I:\2202\033\273\330\273k<D\370\350<\214q\210<A\033?=\001\325S\275uL\236<4\214\020\274\323,=;k.\272\274P\3461\275\347]\342;%L%\276\2343\007=u\370>\275\361\242\233\274\016\r\355\275\3618\201\275h\372\213\274\243\3074=j\377\262=rJ\232=9\023?=\315z\256<-\032\036=YWt=\247\216/\275\024\002\354;\266u\201\274\335\362\360<\313\236C<n\000I=l\361\223\274.v\215\274E\344B=\356\032\020<\253\027U=\263\035U;\245\232\023=\034\242G<\364P\305<\204\356\260\275\247\\\r\275\240I6=\240\273\242\275\025*\256<,\233\000\275\013c\217\274\336K\374\274(]\225\275fQ\221<\256\221\\=\272\242\373\273+\3756\274\361\210}=\350W\246\273\375\212L<\273\204\364\274;2%:\347\356\r= \2614<\301G\320<p\035\302<XL\034\273\232\226A:\031\270\033\272\010\373;<\3204\212<\334\026\013;\355,,=\3006\032\274\305\250\301\274l\201\351<;\007\237;\203\261\211;Ki\202\274-\251&=\001l\007\274\235\274\252\273\233\301,<\352\360\205\273\233\313\027=\340\235\031=\336:!;\213\320^\275\204\222\210=\233i\242=\354\321\235;:\363\364\275}\256i<\177[\320\274\242y\347\274\236\274\314\275\256@\022\275\3617f\275\367\034\213\275\006\213h<\353\021\r>[j\202\275`\000\"\275\000\235\216= \000?=\016N4<\306\313?\275j9\022\275\363\366\213=L\370\210=\302\0027\274c\236\030\275\327\216\306:YA\206\275\324\253\225=\213\026;<\023\315\030\276\037m\007=s\267.\275\034\231l\274\2207!\275bx\013=*\034\023\274wH3<\351\007\021\275\204[\3647bI\360<\223\rK<\217n\373<\353\200\205<\022\343\227\273\032\263/;Q\307\r\274\033v\000<\020\311\213<?\202\311:=\024\274<\322&)=V\363\330\274\274\317\021=\260\210\376:\222,H=\230\340\305\274\302@\035=\272ra\274/\215\305:\355\343.<\355\224F\274@=#=\373`\000=\307\027\334=\336\255\371\274\237\320 \275\321bK=d\023{\274\263\311\223=L\020\036\275j\235\314;:\242Q=^\360\3509\344\211&\273\234!\332<\002\360\014\272\360\030\007=\214\204\333\273\007C\265\274w9\225<\343G\016<hlu\274\371\302\n==b\301\274B\023K=R\320\006=\356\310o=\376c\031\275\224.\206\274K\026\205\274KW\350;/\200\204;\032\351\010\275Vv\032=i\316\263<\302\240\222=\232f5\273G\203\n=\"\276>=!f<:\336=\341<\263Q\210<4\341\304\274\224\203\212;\352-\301<\222\034\025\274\274\373\004;\276\337\377<\276\223B;\366\252\027<\272\222\261<\342\206\236<p\221\014\275\205\177\316;\370\275\202\274\364\"\224\274g\372\223;y\331\215;\374dM<\207\331\255\272\331\373q\275\222iH<.\204\236\274\251\261\022\273\271\362\300\274\333b\272\274h\t@;\243\"\362\273\362\035H\274J\353\201=\211\177<=\220\3502\275\254p\020\276\002H^=e\340\225\275V=\026\276q\r\312=\256\325X=\352\354/\276b\333\020<\361\007\277\274\000\005\340=![[\275u{\250<I\330\372=:=.>C\310\304\275\376RY\275^;p\275:\366j=\303\320\360\275`\333\216;Rw\336\274\360\272\323=w\374g\275iQ<=E\330+<\030R\223\275p\241\014\275\363\036\\<r\337a<\204\'\016=\355Iq=\331?9<\265\302\204\274\266(\361;\246\344\233\274@\275\\<+\031\352<\001I.\274\222\215Y\275\315\233\'=i6\006<\304\0270\275\355\305\314<\320\036\021=\254&\350\273\230R\325\274\326Y\370<\364l\224\274=\272\354\274\267\214\t<\307\224C=\221q\245;\220\355\226\275\031\316\306<\235\253\033\274\350x\2639b\341+\274\361S\247\274<l\005<\355\037l=\261\027%=\036Tb<\264g\333=\246m\013=\311{\001=aSe<\204\016\006<\\@#=\323\243\002=<\022%<\316\321\t\275w\374G=\234\0004=]\345\027=\226\300D<\370^\253=Y\023&<^\000\031=6Y_;\014\355\003\274FD,\274\370%v=\203\244\020<\310\001\273\271\250\276M\272\245C\317<j\254%\274\254\341\252<|_\030<\273q\205=\350\331\221=\322\036\177=5 @<$z\025\273\3531N:\205N\013<O\316\233;\n\216\347<\002\2573<\3217\353\274\006\311\037\273kDp\274/%+\274\360\270-<\357\232\036<\240\345\305<\244r\232\272\014C\023\273)\226\003<h\300\022<\032\211\004<\274lW=\'\254$\274|u\304<s+3\274\"-\272<\264\335\301;Hs8\274\031\371o<\306\337e;To\245;\255\371\261\274N\337\344\272\342\303&<N\345\003>\253\306\004\276\001\363M\274\266%\252\274\374\003\330\275Re*=\234\005\350\274\345P\222:\262\321i\275\322V\250<yx\276=\377u\261:3|\225\275\301\276:=\341\3523=\265\272*=?\304!<X\013\211\275_\320\351==\004\265<\317[\264=\352*j=\251W\320=Wz\321;+s\200<`\324\320\274\301\253\315=a\221\220\275Ccr\275\023\016\342\274g\215\016=M\206\333<L\305\315;g\233\251\274\220\370\260;Xkl<\272\353\333\272\364$c<\314\240y<\030\234J\275\026\212f\273!\224\332\274\2407\224\275\240\324\325\271\261\330\214<\020$*=\334\364\253\273\242r\362:\240\322\210;\365\350\010=\002D\037:|\035\207=g1C\274uC-=\305\236\022\275\034:\243<}w\002=l\242\263\273L\314F\273\376\263\205<{-\267<\317\321:\274{\365\004<\312\346\213\2750\n\033\274~\300}<\254\223\224\274j\346\354<C\312\327\274Q\037\344<\372?\335<\337\034Z\275\335\214\263<\253\034\235\274\222W\360\274\242<j\27356\241<dW\023=_K\305<\366\331X<N\224:\274\210<\346<\351\232\224;SRz=\t\237\337\274\237\271F=Q\322\035\275\342@\332<\237\240\035\274\014\220==d\307\230;+\306\n=\2338\177<\032\335\016<\\\243\212;\255\316}\275\232S\037<\275\226\335\274\362L\216<\257\221,9\361> <\370V\322\272\310X\003=\356\006-\274K\231\320\272y\232\264\273{\014\025=\266f\356;OgZ<4\224R=Hh\337<O\305\340;p\361\325\271=\252\037=\375-\371\273\0074\037=y\220R\274\010`\010=\2023\372\274\253_6<\311n\303;\340`\312\272T`u<\362\206\277<7\235p\272Js\221\274\267\276\222<\256oj;\354\377\332=\301/\371\275T9\237\275\253\337\244\275\355\214\246=e\306e==\014\037\275\262\274\332\274\000.L\275\363=\304\274C\221\262=\020\252\334<\363k]\275\2246\033=\307\027\027;K\264\n=\236\004\203=CK\003>\037{\030<\000\025 <\341\342\345\274\347\250\247\273/\376\266\275\323\245\342<w.\260=x\003:=6\221f=\262\177\006\274?\365\207\275\rM\263=F7\315=\202a\027;q.\013<.:\237\275\327x\241<\264U\333\272\274K\213\273\306\267\273\274\276\324\035=\nN5\275\356\351\r\274\263\260\315;\262=\250;f\252\005\275\243\350\234<o\253\207=@\335\242<\356\'\037<@\004\303;\377x\034=\217\237\334<\033\346>=F\366\200\274M\344j=K\261\263\274\005\366n\273\272{\230<.\010\334;\307)\303;\023q-=\361\273\211<\214n\217\273\376\213:=pb\352\274\335&\340<7F\030\274\353q\310;\315L\335\273Z\312h<\206i\360;\231\347\204=\305\260\210\274\360\276\r=\"\347\363\273\276av<L\365\302;\014\272z=L\272I=\tFj=\213\357\247<2\017S<t\270\204<5\014_=\257\246h=\201\347g\274\376p\221=\236>\216<\001\334.<\366\310p\275\245zJ=\367\236o;z\307P=\251\364\366\273\010\222\355<\3224D=\026~\034\275\273\2114\274s\206\256\274},\006=\025\241\327\272\037\255\003<Q\300\253\274$m\225<u\306\233\273\372\303T<~3\370\273;\371\013=<;y;\245\357\312;\273\320\001=\246\244\223<`\256\013;{\310u\2748O\001=l6\"\274\251\210\272<\n\364.;l\010\203<eO\277\273\362<9\273\345\311u\274\323f\212\274\016\034+\274\003f\r<\314\\0\274\306\243\260\274\232\211\034<}8\254\273z`\232\274\246\370\353\275\261\0277=\2716\003\276\213\242\006=\225[\316\273\252x\367\274k\332\357\275\036*\002=<\236\205\275T\256\262=\371V\202=\262+\204\275+\177\301\275\357\313\236=\202_\264=\307\261s=\3575:>%\023\322=\324\374{\275\212i\335\275\3121\271=\355S\216<\353+\177\274`-\027\2728\234\270<$\236\331=e\023\342\275\212A`\274\364\362\033\276\354z\326\274\355\337\256\275X\352I:\261\246\226\275\035\353{<G\031.\275>A\007\2754\303u\275M9x:InC\275\304\316k<\007\313-\275\336rO\275\270\262\214\275\3008\256;\373\023\013;\374\252u;\311#\010\274\272\250c\274\021\226W\274MI\233<\301\265\264<E\354\017\275)D\272<\253\353\373;m{\277\274\331\226~\274\312<\307\274\345(\005\2742,\377;Np\213\274\261U\230\274\352O\242</\347\001\275\034\333\216\275\'*@\275\336f\237<y7\037\275lw\203;\270\321E\275\376J\000=\262\334\212\274\020x\021=!\227 \275\246\3357\275\223\202$\275T\031$=\327\000e\274[\001\356;\017,\313\272\2429\"\275\255QF\275\357\301]<k\253\014=\351~O\275+\022\366\272T\204\"=\253kJ\274\253\225\006\276\373f\223\274Q.\231\273BPe<\200\255\\\275QT$\274\270\303n<]\206q\2759\274\2079\004\301\364<\316\241\025=|\273\347;\2458s<yI\203<\2470\234\274n\366\314;\314\002\361<\006\236\006\275$\210\306\273UO\036=\230B\220<Q|\364;\3161\201<\250\0007;\'\234\002\275\001]\264<\312W\034\274\257\202S<~\371\261\273\371\351x<gE\n<\267\264\331;\036\227\350\273W+\251\274\022\035\306\272\203c\340\2742%L\272\360V\330\274\220\010\243\273\301\335u\274\274\0305=<V\216\275`\177\364=\300\3672\274\031:\202\275v\277.<\233\020;=\310\325\013=\325\324\205=\n7\233=h\216\245=$\326J=\306H\222\274\371\336\221\275j\025\033=\301\322\264\275\236G.=G,\375<\006.\247\275\243\233\362\275A\036 >Z\325b=a\205y=7F\356=\256\331\223\275\026\367\021\272n\277\275\275G\341U\275\365\034n=\212]\'=\322s\273\275|\254~<\272\230\344\272\n\262\224<\253+\342<\236z\340;\230\256\237\274\035\253\204\274\270\243\332\274\257\034\255\274C\266$=8\246@\275\241\230\244\275\033t\215<\021F\242<50;\273~  <\377\0106<\300\245\024\275\r\343\024<$B\372\273\204B\205<KGt\274a\360\223<\344\334\211<\253\3224<\"\313\315\274\207b\261\274{\372\341\273\247\273\305\274\002v\304;\005\350\214\274\364\270\t\274\214\317@\275\275\267\343<\224GB<\005k_=CV\"=<|\302;\271^\234\273\323\\\'<\247\212\347\273\235`4=\256\031\000\275\335\253\221\275\370E\326\272N\226\"=N2\263<.\354\236;\n\326}=Q\344\355\274nI\302;P\320#\275S\347\252<\255\372\203\273\237\356\207=\243l\013<\357\326\217<\274\023\323\274\001\354\234<US\023\274\327\240\031<\366Y\300\273?xv=\235m\262<\267\367O\275\250\337\226\274\264x`\274\331p\333;VU\223\273dg\216:\006\2273\274t\302\303\272\307\314\002\275\020\230\271\273\324\224\340\274\376\277$<h\310\350\273\r\2304;\006\312K<\341\253q<\330@@;9\002\250\273\252!\231<\371\037\022\274.\331\324<\220)\333\2743\310\177\274\323\tR\275\363\205\321;\315\243\027\275\313\306\017\275\2001\342\273[\316\227;\004\222\034\275\334\315\002\275\364\273w\274\005\223\310\274\322\307==C\010(<\t\303\225\275\224D\001<!*<\275\004\260r\275\216u\\\274\361\366\001\276\025s8\274U\024,\275\025c\276=\273\326N=\022\256\341\275\365\300\r=\320s\370<\323B\231\275)yh\275\365V%\275\017\271H>\331C\364\275?\215\023\276\271\377\326<\222t\260\275\346\327\014\274\272u\241=\360\261;=B\"\023\276\274\320\341\273[\006\360<VL\350\275J\356\255=\367\350\300\275\224T\373\274\010\360\210\275K\321\017\275\345q\020\275\017i\336\274R\032V\275\354\0204\275\255W\230\275.r\010\275\346\\\210\275\240\037\363\275\225\221\257\275\023\306\221\273\256X\004\275u\276+\274>\274\026\274\252\n\020\275\364\314\301\274\300\325e\275\216%\202<U2\250\275\256\022\270\274Zx\360\275\177J\304\273\026\003\031\275\330\214=\275=\252:\275\317\372\301:c\334`\275AK\255\274\246D\315\274\230}\345\275$I\366\274\201\3259\275K\352\317\275\226\0204\2750+\257\275\271\226\204\275\351\235\202\275\016\256\014\276\324\261\266<\014\241\244\275eX\354\275\255\256\223\275\313\345\214\274^\206\375\275\"\343\321\274q\005\220\274\240j\302\275V\305\217\275\260>p\275\335\241o<C_\212\275k:\023\275\030\220\235\275\n\206\003\275\236\026\000\276\327\301\017\274\216\303\216\274}ka<<\263\310\275\2346 \275C\017J\275;\033\242\275\330\3658\2747\364%\275Q`/\275 P\277\273\312\203\270<(\362\013<uZ\366<\372h$\275\363\212j\273#>\204<69\372<S\312\303\272\031m?\2741j\345<:\014\326\274;\027\304<V\005\013=\324\036\236=\'\025\256<>\307\350\272n|7;\317\213\211=\300a\336\274\3139\213;o$\211<\252\014\245<KO%;\266\226\277<\235c\352\273%\253\365<Bz\002=\353\2045=o\342\037\274fr\305\275|\314\370\275!\210^\275\211\235\261\274\304\354q\275\206\022r<\\\336\302\274\334\n\211<0\243\301\275\314\177)8\301K\302\274\321\342\014\275\2111\224=\035~A=d\014/<\303\0329\275_\262n<\333\251\317\274>\201\215\272\324\370?\275\024\005\242\274\200\237\2249\240\334\016=\234%l;\023Q\207\274h\236Z<\257\212\010=\007\004\352\274\362\303\002\275G1\322=\327p\300\2755\020\227\274Yf\202\275\377[\335\273I%\017\274\220\000\353<=22\274\326m\027=\213I\022\274\305\320\364\273\000?\376<\"\312.=\330\230\271\274\224Y\203\274e\020\003=)\250+\275\006a\323<,\036u=\325\000\240=pe\211<\235J\005\274\024\334\230<G\362\303=\301\351o\274f6\262\274\367S<=\305a\335:-\224\020<\271\374\336<\243A\206;\367\261%=?\330(=\275\235\020=\346\002&\275\335K\307\274\024\007F\275\275\327\306\274\025\021\251<\274\217\324\273\313\002><\216:\236;v\377\252\274R\364W;\013T\345<{N\235\274\270f\276\274&\350\335\273\351\240\r\275\316\303K\274X\237G=\023\200)<\254\200R<\270O\267\267s\017n\273O\342\005=\002\205\217\274\276Q\214\271$6\376<\2602\371;\027\275\207<\354\256w;\364\352\227\273\273z\024<MW\240<u\032|=|\217\367<\203\207A=\006\204\371\274\246\020\333<\354\214\256\274TW\030=\313\227\204\274\311\327\320\274\304\322\275\273\3471\300<\252\371\033\275B2Y<c\r\002;q\'-\274=\017\314\271nr\010<av4=S\235\220\274\t\236\230<\024aC\274\370KM:$(\256;\314\3239\2737Wj<\347\275\210\273\336\025\036=\210;\014\272\346H\001<:\220\004<\346P\211\272B\322\\\273S$Y<\341rs\275/\231\021>\346!\301\275\267\326\276=\r\004\013\276\251\273\231\275,\304\010\273r\277*>$\372\240=O1\254=T\274\342\275_E\320<\221b\336\274E\350\365\275\267\205\030:\t\262\027\275h\262\224\275\321\224Z\276\253U\321=\333\224f=\033J\355=\037\273b\275\361\217\240=\032\215\016\2752\351\362=n-\010\274\333\347u\275\377\326\224\2756\227\205\275\331\3256=YS?\275N\324\000\276\275\250v=p\017\363=\264q\026\273`\2704=\357\210 \275\032\243\260=y\336\247\272\334\017\226<\265\347\322;\341\024%=j\256\\=!\330\263=?Y\026<\032\301Q<\263\323\312<\024\t\346<\020\2454=\330\313\004=\233\3039\274_s\256\273\006\351\375<\332\340,<\323D\'\275\346\2561=)\311\300;\354\216~=\016\3002\274\017\2150<g\260\214<\332\025\210;\346c\035\273\377c\021=\213g\243=\311\202\324=\213\364\202;P4/=\202\317N\275\275S\311=bjv\274\274\023\322\273~\335\204<\376\306\204=\366\365\377<\023/\311=z\216\331\274Bh[=9\3374=Wyb=K\n\226=\022\213\305=0-C\274T\005Y\274\235\247\245<\3144\305</X\225\275%\207T=\352\271\002>m|q=\335\031];I\374\'<\343N\314=X\3752=m\\\370<,q\037=\357\3031\274f\303o\274\276rY=@\002i\274\341a\264<\275\n\222\273\037\301h<\356\005=<R+I;\201\350\232;\"\221X=\260i\027<6W\243<\216\341V=\313V+=\260c\024<\244\227w;\346mC=_\310\222; \036\006<\376\025#;\307\234\221<\351\250\010;\365\222\233\272\207\255G\275\260\334\3639)\251\240\274\247g\200<)\032\365\274qZ\351\274\032T\335<\205(\333;`\"\000>\360\231\341<\024\201P=\250\202c\275rH\r=\300\272\271=\016y\244\275\240,J\273C\224\373\275\331\314:=\365Y)\275\035w\272;\034H\224=&\202\005>^![\275\325D$>H\3568=c%==Z\336\245=\235\002\005=\250\034\025\271f\177\265=Kc\203=v*Q=\222\356\253\275\234\000\004=i\251\207=\001A\326\273\022\026\251<k\206\020\275\354\277\337\274?,/\275\221]\t\275\377s\200\275(D7=\254\320\027\275H#&\274\363\375\031\275\316\363\300\273\312m\335\273\021\264\252:\350Q\333:\235\201e\274@\300E\275\330y\311<\276\371\013=\363\227\010=^G-<\364\276`;\007\013w<\031@G=\235 ;\273\2702\350\273\312\\\026=C\345+=KP\243\274\010\234\225\275\244l\232;\246\037p\275\356/\254<\t\256\364\274`\226\245\274V\r*=(\375\360<AZ\215<s`\237\274\316\356\361<G\245\267\274Y@\'<\326\263\220\274\255\024\365<\357\177S\274\304\211\367<U\005\352;j)3\274\2341\224\274\021\022\220=J?\007\275\300B!=\177b\\<{\361\223\274\n\nH\275]\326X=\306\351|<\317J(<\335(\025=OUu=;\373\202\273Lt\033\276\362\2357=\360\264\017\274]o&=\n\037{\275\2377\273;\222&@=?\276&\275\223,\234<\022\033V\273y\200\013\275\225>9<\234\021\215\273n\0301=A%y:@\272]\275\236\232\020\274\002\200\031:\277\017}\275\251\272\000=\250f\322:\274]\030\2754z{\270<\331\3439\246\225\362<\341\342\027\274F\022\322\274\250\031\307<\265\356\375\274\ne\t=\362\231\230\274\210;5;h\r\004=B\350\377;|r(<\003\026\214<\025\266\304<\247\037\035<\341\320];$\314/<|\347\252=\267:\362\275\205\340\363\275sVQ=\311\200\371=\262\310\030\274\332\356$=\001\276\361=\375\207\240=\330\352?\274\\%(>\002k=\275\330RE=\023\214\331\275\004f\203\274e\035\265=Nr\225\275\276\345$\274)\247\013>\261\316\344\274\2037\215\275\020\346J\275\321Rb=\243\264A<u\023\020>\343$ \273-\300\320<\t\017\003\275]O\246\275\233\027[<\335I\333<o5\007=\256lj<IJ\204<\212\262%\275B\354\235<)RM=\265(\007=u\340\265;\227\233\276\275\2071\375\272\354\\\364:\033\260\202\275\333\240r=\035\350s<n5\367\273\274\350\230;1[R<\236\013\2359\273\322\316<\243\342s\275\366\264\001=p\006\221\274f\365\353<\326Q\216\275$j\013<\227\276D=\027A\305<\264;\014;\205\n\003=\232\323O=W\017\264<;\264\211<\356Y_\275\244\250\232<\313\360\303<\306\244\230\275\006\223\244;\027\020\017=\206\311\343<\244\337\034\274\330]\000\276{MB<~k@<\336\324_\275\'\017L=\201\241\016=\275\033\237;\306\257\263<\211\310`=\3006\037\274f6\314<\200\300^\275\327\272\211<^\300\021\275\210\357\306=\032\267\355\2741<\t<\3675[<\340m\312=\260\010\274\274\211\215\212=ZE1=0\231}=\251\177\331<OT\\<\245\240\203<\340\033\217<\360\016\322:r>\223<j\227\n<\205\236(=c\243?<\273\354\243;\3361$\274\002\340\222\2742\216\230\274hS\006=\214\270\236<\273\216&\274\376\257\351;j\221\000\275\223A\345\273#=\337\273\223X.\271\324?*=t\220\311\273\202\037\216<n\305W<\003\243\037<\275\357\205<\272\274\275\274/E\325<\377\202\251\274\351h\204<\246\372\305\2732+\207\273U5H<\016P\212\274]L\211\275cL\220=:\026\336;*G\303<\322j<<\336\206\267<\344\324\346=\330K\035\275\362\336F=\243\366\017\275y\030\356\273\245u\305\275\227\002H\275\t+]=\311\331#\275|%\214={vE<p\272\001\276]~\027<\'D\006>\204\033\037\274U\344\002>\304z?<\203\020)=s$\202\274v_\303\272\\5\221\275\325\035\347<@\253e=\214\212\033\275\034\322\341\274Ch\220<\000\253/=%\220\014<\316\"\330<\034\177\334\273\246\363\260<\212\217\251<dI\r\275O\211\307;x\241\005\275\325\342\374\274\000,1=\345B\r=i\316\214<(z\205<#\331\324\274\346\342\245\274\014W\332<QV\233\272w\256}=d\262\270\273\347\365\301<.5\305<)e\033<\315\323J<\"\034\234\274-\032\235<_\274\007\274K\270\024=\217\010\377:\203.);4\260\253\275\377\216\001=v\313\245<\355Js<\307\013>=\'\007%<D_\372<-\213g=H\207\225\274\307\340\326;\244\310\004\274\200 \337\274\350\256j<\241,c=\023\366}=\213\374\032=JA\355<\005\t\264\274\013\212F=\337L\330;\nuF=\303\337\205<#\255\344=\026J_<\003\222\256<\213=\010=\0078&=[^\003<\257\207\002=\372E1=A\216\224=\221,\262<\272\376\277\275z\353\023\274\3712\214\274a\300\222<7BM\274\351\034\332\274\177O\206:\271<7=\215c\257\274\311\246F\274\032\260\001\2749MO=\027%\206\274\252\t\232<&\326`=\0215\347<fI\024\274.\366\252;E\336\005=\005e\262<@\356(=\360\215\271\274d\315\013\274\0259\327\273\261\252@<\274\356e\274\235\2762<tB\347<?\331 =\213\272\332\274S\214\031\275Py\235\273\243vb<\205\277\226<\251\244\024<d\021\345\275\007\355-\275\177\300\352<i\351\005=\221\377\315\275q{\340<\264\276\276\274+=-\275\320\344\262=\023\365\202=\366\361\251;\255I\375\274#\007 =\351u\243=\200\300G=\000e\021\275XA\033>r\025\353=D9\321=>\361\203<&\037==\206\333=\275=\357R=\256\245\314=\370\303\256\275\311*\212\274\357\323\370\275+\205t=\"\032\354<\375\346\342\275\222V\001\274t\315\372\274x\261\205<\271g\205\274\213\030\033\274\024Q%<\270jV=R\253+\275\264\206\371\274\327\005j<\260\251\244=\310\233\236\274Z\304\247<\006Eg=f\020\026=7\207^\274\323\215\037<\267\344\327;B\002q< \366!=fE@\275\362\337\"\274:\332\366\274\225\326};\227\375\004;\203<!<\\\361\221<\300X/=\004\363\374\273\312\323\016\275y\311{<\277J.=*\032\035\273\n43=\325\367\353\274\321\345j\274-\022u\275\231O)=\213\335o<j\277\354\274\316(\326;\307\300\317;\361\250p=\350\177i<\302\350\244:\035?\347<\351\233\205=\022\005-\275\'%\320<m\240\247<\232\271l=j\220\r=\006\350J\275i70\275T\275\354\274\352\300\264<\2379\347\273B\371\260<~M+;\306\177\276<\345\260\275;\310\301\231\275\203\370\021\274\037\326\337\274i@\364<\337\000\252:\371\227r=1\222\021<\233W\306\273\304\234\376<\004\275y\274~\304\321\273\373p\212;\302MB<\343yH<3\341`<\311K\273\273\254\331\017=\322\340\355<$~l<J\\\210<\302\005W=6\344m<O\252\276<,\374Q\273\0203\252\274)}\006\275k\017r<H\3368\275\273\240\3218\274m\264\273T\260\230\273R\202\032\275\337\317\023\275o\255\251<\255*\300\274\271\021\203={t\007<\236\231\361=C\022\335\275\321\034:=\344o\013>A\260k<\017\2327=[\307\334=]\336\200=P\223\253=)k\275=\337\231\273\275\237*\212;+\223\342\274\027\243\036\275\376-\305<\221\374\355=\243E\370\275c\'\035\275\034(\332=\326\342\315=\343\006\034\276`\255\340\274\310\031\241\275\367U\016>\264O\017>q\331`\275\367xt\275u21\273\n\366\267\275\026\035$=\346\215\371;.\317}\274W\225\200=\026d\204:\244\0051\274f\304\360<K\234$\275\2443\233\273\032B\r\274\031\371\274<\366\365#\275\3723\275\274a\217\235\274\205\326\343<^\242\000=+\200e<\264\236\307<\233\236\021=\342\270\365\274\310 U<\360/\'\274\010\377\343\274G\224\240\275\2471]<dII\2758K\236;0c(\275\243\240W\274\230?\023\275\352.\370\274m\365\273<?~\010\275\360\223\321=\035;(=I$\376<T\342\033=g\255\345\274\227\335!=\204\352j\275\202\000o\271Y\307\345<,G\206<\303\263\223\274\035\307\224;\220\355!\275\375\366\376\274\206iB=\270`\311;g\274\360<\253c\307;\371\312r\274\032%\265<\223\370\322\274\023k\307\275\227j\270\275\006\225\t=y+\344\274\247u\220<\257j/\2757&\201\274\262\"\022\274bSE\275^\035,<!\375\215\275\325\274\354\273\226\261\334\274\203\264k=\267Q\"\274\"\234\273<\325\272H;$\317L\273P\006\374<Z\336K;\024\261\365:#\000\263<\273s\312;~ Z\273\030M\323<\276T\024<6p\335;\213\214\027\274S5\031=\335s\\:0\272>\273\334S\254<\332\206\303;\3511\002\274\036\275-\272\233j\317\274B,D\274U\240\036;\330\304\001\274^r\356\274\317\330\005\274uk\372<\307V{<\215o\236=\017\231\342\274\351\241\224\275\312\032\271\275\310\254\n\276\356\257\315<h\337\275;\335u\010\276=\245F=F\232)<\302|\306\275c\322\201=]\343T=\346\n{=\003\253\361\273P\237\213=\225Z8=\263\001\006\2769m\377\275MeT=\235\0012\275\003zA=\250\030\227\275\300\035#\274\265\225\314:&\246\031=\261\235\223\275\213P\257\272y\001\363=lw\224\275\250\244\003<K\3010\276\t\247\331\273@t\213\275\201_h=\362[\213\274\331i\201<!Q\312\274\311\276\204\274K\343\232<\262[U\274TBS:W\320\013\275\3736\027\275?\330K\274\2706\035<\006 \215\273\034\340$;\226\014\023<UB\207<\235#\237;\301\373\216\274\020\303\356<F\255\225<\315u}<\360\002\353\274\022\356\031\275}\341\317\274T\322\225\273\323\266\204\274\274\336\325\2748\037\230:\004\221\366<@]\002=\304\352\025;Fz\331\274!\351\026=\001}\246\274\203\031C=\036G\245\274\306\271\014\274z^\356< -\027\274-\243\211\274\275\330c; \307\240\274=\177\223;\343U\020\275\231\300\251\273\366\'\261\2747P@;+H\256\274\375\354T<\366P\261\2717\360\263<\002\005\013\275\340\025\370<\r2\341\273\312\254\236\275^b\336\274\225o|<_\255\333\274O[5\275 B\027\275l+\237;[\030\313<\023\342\314\273\027\331\017\273[\331\343\272\343V\250\273\005O0<\243\353\307\274q\314\305\274dF\301<\021\263P;=\337\307;\0356\345\273\362\001\265:5\240\030\274+\202_\275\224\216U\271\322\037\214:\010\311\021\275Mi+\275N\323\274\274\241X\203\275\246mK<\327\215\235\274\223\222\231<m\301\257\274\335\245y\274{\363\020\273\343\221\221\2743\326\204\274\264\225\027;\004\nm<v\241\':\250U6\274\326\223\222\275{\021X=\240-\003=\020\"\225=\025\340\277=X\367u\272\276\335\253\275\305\221\226<>\3331\274\231\372\r=q[f\275q\021\370\2756S\303=h\363N=\354x\261\275\027Z\230<2N\t=\177\014\307\274O>\005=2\362\226\275\036Q\253=q\250#\275\035r;\275\360\001!\275\261o\205\275\210h\343\273\320\301\321=\231\023`<\004\214\233=k!\352\272@\374\234\273$\217\227=\217\242)\273bq\"\2749\036Y\274`\273\366\273\037\027\267<\274!\213\274l\241\014\275L\233\361<B\035\003<:\353\214\273\317\342\364\273\217\247\\<K\270%\274\377\317\204\275Z\347t\273\371\247\033\273O,)\275\317\006u\275\236\304\020<b\312\203\275\326H\202<\207+\344\2745SR=\001\356\250\274Ss.\275\314\004\301\273y1\260\273rE\252\274\356\3167\2743\276\033<-\022s\274\276\305f=\004\304\305\274\035\005G\275\277`\200<\007<F\274\034{\230=[Q\033\275\302\271\250\274\217\376\301<\315gm\274\014\253\366\273^&\357\273\362/|;f\253v<vz\007\275;\245\031\275RLz<|\016\376\274yU\373\274\364S\027\274x\254\231\275TMQ=u]\203<qs\204=\375?2\275\220\236\324\274\370\241X\274\227R\262\273\353Jy\274PT\231\274\001l\364<\3678\001\273\024>G=\300L-\274?zS;R\226\336\274\200\364|\2726\274\342;\034T\257\274\367s%\275\\\247R<nu+<@\262\016;\316\026\010\2757\326(;\314\321\363\274F^\206\2750\205\006\275@\252N;\320?b\274F\256&\275\333\'\000\275\343\035J\275R\365 <\376\030\266;\215|\240;\260\025\230\274\211\205\035={\355\372\274\221\275\305\274=\016\020\2753\322\214<\\+\033=D\014\215:]0`\274WV\255<b\214F=\304\335\253\274\200\033\365\274\270\031\254<\025\020h;^l\374\275\371\210\t\276\001U\231=K\365\236=I\352\361=\t\202\200\275*\372\263=\033\230\202\275I\201\335<\014\303|\275g#\332\275\334\263\227\274\243\313\303=RN:\274\227\304\323\275\363r\244<\\\274\356=\023 9=\311\353;=\352\356\004\275\'f)\275\234!\207=\332QH\274v\177\221\274Z\036f\273vy\013\276H4.\275`8\315\272\002`\027\2755M\013\274\tt\006\275\366O3\275\222al\275\250\307\232<\"\377\303<,\224\206\274\254\212\230\275W\310\t\274Z\301\035\275\2050\257\275\247\306I\275\201:8\273\275/\000\275\267^Q\275}\016\372\274\r.d\275\312\026\201<\325X\n\274\334\254\351<\262-\235\274,-\301\274J\2466\275\350\305\235\274\203\3476\275\203MK\274\2465\341< \035\265\274\315\234\373\274\241*\202\275\021\231\250\275\017R\344\273\020\003A\273\303\231\034<\332D\256\275\271$-\275\317\276g\274\317\310S\274\003)\352\274\357B^\275V\334J\275\304o\263\274\374\211\235\275\226J\255\275f\334\346;\036\267:\275\203\354\230\275g;U\275\030Ec\275\212\265R;\265\367\362;F3\223<\351AV\275\004\352\353\274\0373e\275\264q\\\274j\245\006\275&:\211\275\341\207\375;\373\274\304\274z\364\214\273\'}\264<\305\216;=\333\010\350\274\340\314\243<Vt\270\273\342\366&=\346tL\2747\272\311\273w\250\215;\337Jf<\264\3405\275\252\260F<5\301t\271o\334\\\274b\323~\274\257{\014<\335\302:=0\203\252\274$\363\261<\\}8;v\360\004<\271\354\252<S#L<\253\250\254<\221\272\004<\215\317\276<\336D\246;\210\252-\274\223\233x<\302\233%<\312\362%\274\373D\025<q\206\342\275=T\363<\033\267\220\275eH\274\275L\341\222\275\350\275\321=\372\005(\274\201\321\002\275\322\306\205\275\rQ\235=\275P\263\275\005\317\244<\271\227\233\275\201\303\252\275\225U\237=\t\r\316\275\273H\234<C\231\005\275k`\353\275\014Q\376\272\037\253>=\321x\024\274>\275\256\2745\265\000<\024|\010=&\337\002=O\222\336=\0079\245\275\2500\000\275\273\261\020>\\L{\275\207\311\022>\361f\216<\014/\353=\\\274\303;\333\004s=_\375\006=\263`\245=MN\004<\241\\.=Tq\325<\016Q\037=~\326c=qy\307=\243\003|<\350><=\023\216.<\317\204\272<\315\361l=y\377\372<\262\230\232<P\330~<\204\001\216=\021\007\022=\220\006\023<m\274e=\223\030\031=\275Y3=\246p/\274\362p\260\273\214\036\037=\336\332Q<\247\010\337\273\007A\226=\307\240\334=vG\334=\2307C=\361\345\241=;\030\037=0\253\314=\315\377\331<\336\022{=[\302\256<6\0207=\377WL=4\253\336=\036\305#\273\355\217\211=\364\222\364<\\\301X=\306}\236=[\t\337=4\376\333<\365\364><\347L%=\271\365\200=\327\010\321\273\263\177}=\2439\327=\356\250p=V\365\021=\017:\231;\nb\326=\377\273>=\367]\356<\217\345\261=E\004S\274\373\360\367\272\245*1\275\200\330v\273\362\331\312<\361\370l\274%\333\217;v\274\224:k\016\274\273\310t;\274\0009\313\273\220\220-:\351\017\335\272\331\006\020\275\237\232\300\274\204+\322\273.\024\312\274HY\312\2743\033\202\274\320\344\242\274\301\213!<=\023\276<9`\304<1d\324\273\311\247,=C#;\274Pm:;_\t\312\273\273c\001=\344w\350<\010\006\331\273\321\305\231<D\264\262\274\024\353\214\275\027\226\033<\235\204\227=\360\364\235;\313\311\227\275\357\332P=:\000\321\275\220f\t\276\213\272\254\275\234\210\315\275\220@\224\275\343\303o=\231D\341\273\363\023\214\275\225\347q\275\210+A\275\002K\212\275\251\002\031\275\251\177v\275\331\261\214<f\220\312<2i\257=\352\027O=\007;\237\274\203\221\021\276>@\237=\021\010S;mF\305<\247\272\334=\035n\027=\242}\322=\323?\213\274\330+\004\274\251\256\002\275\347\223\231\273\237\250\016=\020\272\225\274\r\273\032<\341K*<Y\035\333;\207\252\235\274\030\305\254<\304W\263;0\013\362;\313\225\314\274\225\220\004\275\306\226\252\272\243\307\347\274\375\326\375;O()=)!\256\273\202\274\247<W\254\345<\302\356\204=\345\034\245\272\335\221i=v6g\274\242\215\376<\035\0330;M\201\365<\351\357\320<\343\243\023\273@\204\032=\024=\210\275)BP\275*j\245;\253\262\215\273G\233y=1\352\027\275)L\014=b-\354<\313\374\314\274M2\342\274\353\277\201<\323\247\312\274\026\220\n=u\370^=\22276\2756B\3628\316<\353\274\304\351m\272\314\327\227<\364)\204\274\213\310\202=A\021\263=\2712\274=\233\327\321\274\r\345X=\363\013\306\273\254f\007=\"\351\263;\324\241\201\274\323[\251=k\025\364\273M8}=\016\350\245\274[\316\030;\373\316\233\275R\371N\274\271O\334\274~\323\215\275X\215,<\254\325\226\274.\361\265<t8l:\034\376-\275\221\272\325\274\034\177\341;GP=\273\316V\310\274\216\004\341\273C\314\t\275\232?\\\275\337\230\340\274\211\262T\275\332\272\037\275\233\3532=]\2112=\314\2023\275x7l=1\216\035=o\250J\273\226]\345<\001\325\203=8(L=\354\211\333\274\253\3771\274h\016\316=\350\366F\275>\006\264=\230\325\311\275h-\300=$H*\276\025\205J=Y%\201;\330SI=\037\323\353\275/\357\224=\315Ux\276arh\275N\217$\275\236\020\266=\256\303\005=\201\333\273\274\255:\034>h\037f\275\201\030#\275\377\2222\274\340^S=D\000+\273\303l>>\032A\010\276^Y0\276h\271\212\272\204\246\316\274\344\250\033>J\370\316\275]\001\212=\300\366\240=\'\207\027\275\374\333\006=\210t\276\275\234\001v\274~U\257\275\027`\'\275@\332\033=\264\331\304\274\2143R=\356\333q\274<\024\226\273\0362\004=\374@\020=>\257Q=\301,5\274f\254\333:JLF\275\357,@\275E\363\010=.\267\212\274f\231\357\274R\246\223=C\305\256=\231,0\275\321!\024=8\367~=\375\362\017<0\244k=\355U_=#dQ=Z\177\205\274\030\204\241\275\235\325l\275=($\275\340ub\275\333\206\202\274\243\252A\275Q\336\007\275\207%\214={\032\261\275\275$\375<\304K\207<\357\375z\275\346;\340\273\026u\245=\265\375\332=\305Y\234\274\271\263Q=\244W:\275\030\224\231<\270&\226\275\014\200\006\275\266\222\321\2747\3352>\377\242\354<Z5f\275]\266*=\254\312\277=\236P\263;\234\331\214=\252\rW=Z\246\321=\033\023\022=8]\243\275"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\256\n\000=\234\264\002=\323N\312<\004\325\311;\256\314T=\272\262\245<Xk\264<\206\2767=l\025\254<:\325,=\327\300\305\274\021\366\344<6B\313<\336\244\337;\222\225\\<\2078\265<z\3633=p\327E;U\301\026=\001\267&\274\202\210==\374\267\034=(\224M=:\260\236<O/\025=q%4=\276\1774;\367\215f<Q\377\203=\027|\205=\t\005>=@,O=F\026/\275\203\016\255;\212\363(<,S<\272G\026\211< e\336<\256\372\002\275Y\224\320<\230iz\272\264\2121<E\306\374\273\014\321\245\274\003N\032=q\301q=`\177\203\275\212\370\256;\201\347t<(\010\275\273\335\375m\275\370\250\327\274o\273O<\0225\311\273qf\253<<\216a\273\017\250\037\274\367\341h\274\034\271T=\027.\007=\024\002\311\274\237O\366<Q^\004\273\232\261\000=\205:]=\260\031\325=0T\235=\3149\361<\007i\301=6;\226=\035\013\214=>\342\330=\023\305i=\205\200\224=\363i\367=\205\242\373=\372\233X=\266\216\261=\030YL=\214\334Q=d\251\244=\234\313X=G\010\326=g\260\017<\021\036\322=T\305\210=\327I\313=s\206\017=\340\222H=e\234\257=\t\260\204<v\310\021=\301\270\303=\001\200\222=\177<\235=h\341\025>\212\035\307=\246a\324=KW,>{\220\022=}\374P>H\267\336=\377y\330=\367\323)>,%,<iI\301=2\203\007>\347\323\026>H\367\264=K\272\377=)\232\205=fz\303=\261\335\005>\361\020\001>\304W\366=\205\252\"<\237\2422>\314\257\'>\350|\334=B\035\237=\235\261\221=\275\020\276=\325&\362<\234\036H=O\227\013>\013\344\361=\352\243\004>\267}R>"
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "rnn/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\243-\243\276\355\324\021\277\t\031\036\275\\\000\253\275\222n\001\276\020>\020?$$i>D8\021?\253Fe\276\314\240\270\274\200\r\202\275\\\366\202\276\017I\324>s\236\232>\264\333m\276a\002\222\276\350%E\277\376~\201>\021E\246>\036-\202>\315\266N\276\253\224\261\275\340O$\276\206\361\267\276\270\227\216\276\003J\236\276\377Is>u\253K?\nf\002\277\2118g>\n\237p\276F|\311>\321\024\325\276\260\246\236<\242/j\275\207w\277>8\322t\276l\204\r\275\250X\305>uC\332\276\344\375 \277y\367\246>W\023 >\277\017\366>b\235:=l\224\234\276Pm\236\277\274\372\306<\010X\303=\001\':\275\207 \310\275\330U\007\276\241\200\035>i:\225>V\342\222\276\035\234\347>6\222\317\274\214\221\327\275\n=c\275\332\002\261>\022\347\374=UC\260\276\2754\001?\337\350\330={F\301\276\025\233\205>\350\311J\276X\356\351>a\202\252\276\256k\304\276\312\322;\275\375\256\336>4\3422\275\025\352\371\272\335\357\210\276\377;6?\026}\244>\200\264\227\276\231\006\330>h\330\230\275\006\2130\277\265Q\227>d]{>$\337\231>\356\325\305\275\343K\264\276(L\177>\216\233\224\276\351i\022\276\000\214\307>\335y\376\276tmg\276T\315\350=\201O\241>>)\355\274c\365\252>~\013^\276:\301\353\276\210\346\033\276A\336\214>1\034\257>\001\375\003?\025;\313>)/\n\277\264\000\000\277\262\246\016>\310\367\352<\370\365\337>]\317O>]2(\276\241\236\3139!\003\'?n\374\214\276\327\037\330=H\307\336\275\335\004#<\237v\210>\336\300\351\275\322i>>7\313f\276F\346|>\250{\332>;E\014>\027\231\327\276\014w\t\277\347\"\241=\312$;\277\274\037\335\275\202+\004\277\324\343\\?UX\003>D\312\356>\3130\206>K\205\337\275\322\257P>7\333L>\265\0377\277\320\303\273=2\241R>\206;\353\276\223\005\025>vb\026<\262bB\276A\245\207>\035\237i\277\276\340\335>\0105\305>\330.\236>\331\250\034\276\017\221l\275\034~\224\276o\022i>\241\006\230\276\302p\347\276\r\000\024>\376j\021?\232\0108\276\342\260\210\274E\004W\276\036\306\257=8\324R>E\221\336=]\367C>\377w>\274\t*\230\276\343\325\223>A|\324\275\351O\267\276\317\231*?\205#\212\276\234\023\247\276[\263\204>\353\323\273>\036=\232\276\323\'1?\230\210\254=k\346\021>\035\2512\277\346U\325\276\014\367P>\316\2713>\214\317\333\276x\242\373=a\t\250>Ev\317=\242K\352\276\007\243\216>\271Y\023\277\307\351\374=\261\243\207>\323F_\277-\024\273\274"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\034\027=>\322z\230<3\2618>@\3169?\324%9?)<\006\275"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "rnn/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
