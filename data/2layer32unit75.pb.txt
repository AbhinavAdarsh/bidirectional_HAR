node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\t\000\000\000"
      }
    }
  }
}
node {
  name: "reshape"
  op: "Reshape"
  input: "transpose"
  input: "reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\316\251\350?i\000:\277\265\324\363\277\272t*?\"\247\377>A\234a?#\334\\\277\001\025|?\032\251\002\277\024 \300=\372\231\265?\336\026~>\364\263\023\300\312\037\031\2774\257\n?\300\215{?\360\010.\277\207\013\223\277\"\n\276\277\374\244\301>\3363\263\277\014\360\215\276\373\017\005\277\246\220-?|a\236=\376?\231?#d>>\030\301\325\277\272\001\\?\033\375\232?\220g\004\277\024\220\265\277c\264\024>\007`\214\277\322\"\306\277H\007\001?bo\340>I\025\353\2762=\206>\004\324\"\277\036I\354?9\"\035?\216\335\t\277|\347\214>\032F\223\277Y\177\273>\330A\226?\333\325\023?\342P\005@\254\240t<\005\321\335= \226\242\276\306h.\275[u\330>Q\030\"\277\2202g\276^:\031\300\353!\232\277\024\332\237\276P\177\234\276=\325R>\340h\210?)U\030?\370j`?\225\301/\277d\343\261\276\273\226\341?\220xX?}q\224?+un\276D8\016?\023yx?\233\212\214>W\347\323?\000\014\207\277\300\235\356>\230\237\242=\240FZ?\3078\177\276\234\216\371\274\242\250\031\277\227\322\224?\357\252.?\362|\267\277w8r\277\264\200\241\276Tl\352\275P\036\237\277\014\'\023=\n\003\222>\357\331\005\277b\035\215\276$\352\021?\226wV\276\362\354\025\276/@\240\277\226\234\022?s\372\305\276;\307\213?\002\206\006\300,\313+?kt\021\277D;\347\276\265\335\007?j\342\307\276\317\001\003\277\031\242g\276Fx\007>\312x\306\276}\350X?\342D\013\277e\236\347?\026\224\006\277\327\216X\277z\373\264?\253\307\202\277\261\036\372=\036\363\022?\226\254\334\276\225\302\307\276T\013\234\2772_\223\276\304\331\033?\005,\003\277\371\253\343\276\232n\277\277\200f\317?s~.\2777\356\274?\353\'d?\034\363\224\277\304>F?\213\315\232\277\342\235\225\277\315\231\'\276V\233\367\276V\356\266>\260u&\277\336\242\016?\342\001;\277\341\333\016?\177\355\005?\016x\353\277\375\232C\275A\323\334\276\224\3501@\322\272p>l\247\267\276!\332\010\277[\n\267?aO\312\277\027w\370\277\266\2253\277a\226\244\277a\3054?Ry\213\277c\200\027>\232x\363>f\224\252?\205\361\273\277@\371\236\276\360(\214\276\346N\220\276\331{\343\275\231\271\010@\322\177\355\277\251\311\201?\203\320\253\277m)\021?\'\366[\277T\213\370>\032\220S?V\332h>F\014\257?\356LQ?\234\315\211?Y4\022?\304\317\037\277\006\372\231?\263S]\276-\225\364>\377O\216\2775\001v;\033@\310=\317\302b=\\@\271>7\251\204>\271\235\321\276\002\314\207?F\201\205\276\276\275\354\277\023\346\263\277\3361z\276\250\335\027\300C\020\375\277h]\235?\211\345X\275\301?\n@f\270Q?<\'\217;\177\2740\276>\302\272>P\220\304?)f?\275\311\333`=\036\232\217\276D\245\t>Yd\214\276\234/8>.\312\251\276\215\266\273\277~\262]\277\313E7\277\313\230G=\343R+\277\274\351\314\277Z\330\003\277;P$>\001\377;\276\274\034\232?\375.\223\277]{_?\304\010\355\276\220\314\225?8\346\266>j\200N?\037\035g\277\264\272\000?m\351\337\277\360\211W?!\322\201?\356[\004\277)\372z\276\256\336c?\335W$?\0312[\277.m\343\276\304\0002>\034\327\242>H\023j\276\345u\031>\004T!\277\306\351\317?NF\021\277\224\3455\277<1\225?\245 \207>\246\316\203=1\300\243\271\270E\220\274\324\320\330>\365\245 ?\254\0232?.\343\226\277\275_\265\277X\353*?\013,\005\277\276\266\205\277v\275\024>\001\342w?t\332\301\276\203\230\311?\321\246\212=<\370\033?W\031\275?\302\002\007\277`\225\275\275-\275\006\300\334\177#\276\351\216\005\277\214\027\177?\240\025\264=\372\247L\276j\310|?\211\221\324\276\322\252\357>\025\347\016\277\031\321\247\277\327^%\276\362}\301\276>\212t\277?w\022?\265qv>\021\2009\277=\021\017\300\375&\212\275\217]\254\277W\334\r@"
      }
    }
  }
}
node {
  name: "b_in"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\274=\262?u\321W?:eJ?zV\006?I\326\002?9\202\362?\230A\001\277\352c]>\350\213\332?X\t\315?\374>\366?\007\006!@\351\004\005>\216\316\371??\257\200?\272L\275>\346=\374=6M\223>i\035e?\370\315N?\2608\330?i3\360?BM\305?\345\"\342?\021\354\334?\014\031\200?\n\223\337?DUy?\023]!=\324\320\201?\310a\240\275\217\262\004?"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "reshape"
  input: "w_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "b_in"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 128
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/fw/fw/Shape"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/fw/fw/strided_slice"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\326Y\250\275\374\325\242\275\357\275\202\275\232(\311=r\177\025>\363\024\024\276.\277+=\"\372u\275N\3341;oz;\275\237X\353\275I\225\235=\357\212\004\276\035\0317\275w\225#>\263@\000>\261\212\005>kC0\2758z\030>\254 G=\235%{<\207K\226;\322\262\032\275\374\'\340\275$6\303\274\321F\031<\212\243\362<\324$N\274\\\234\031\276\270 \201\275\027\035\n<\377P\213=\241\300\376\275\263\206\355\275u\336\205\275\3221\262=2\\\220=\327\005\036>\257\027\235=\200\211\'>\r\201#\276\204\004\305\275C\371\004>1}.>\027\361\226<\317\236J=\226Wm\275\223\206\316< \351\370<\213[\205=\\\273\313\275\367\013\332=\346bl<?(\241=q\\(\275a+\010>\3510\220=7\377\347=?&/\276\343\346\007>\201\300\355\274Be\226\275t,>\275\361w\">0\362\207\275^\276<=\373\276\032>b\376\030\276\0144\256\275\'?\026\276wM\t>\351\212\266\275\356^\013=\006`0=6`\261\2744\250\r\275\337\262\035=\222\254\221\274\007\006J<\270\265\340\274\n\026\371\275\\.\263=\355\027\211\273\375\231)\275\316\364P\274\320\022\211<\372\353\200\275oH5>-S\031>9|\224\274b\246\236\275\301>3=\314\340\274<\021\314A>\356\351+\276b\016*\274\215U\253\275\217\232\201\275\014\353=<-9\">\355\337\250<\2654\316\275\254\303M>z\357\214\275E\372\310<\232c\220=\202\371\003\276\356y\205<\357\363\314=\010\213\372=\005J\020>\345\270`=\303\313=\275\255\033\254\275UA\251=\326+?\276\2767]\275\344\304\312\275<\373\025\276\354\205\274\275\265\315\235=`3\261\275H7\377\275\204\210\205\2758b\260=\313\005\006>\002\275\222<\317D\317=\377\370\022\276\263\221\251<:\240F\276]\004\301=\273\373e=\327\2527>I\206\347\2754\262\240\274k\022\267\275\222gq=\307W\257\275\017\266&\275\327ll<o\273\307=:\261!\275Q\237\001=\363{\236=~B7\275\267}\235\275\226\027C\275\246\2657=\320]\214<)/\220\275F\305\214=\301\007\275<w\201\322\275h6\364\275^\240\203\275\002w\004=\314\360(\275h\377u\275\r\320\347\275\025(\223=\256P:>\206\260\"=x\214\t;\202\013K<\262\351\267\274\252o\366=\027b\275=\366\252\017<~\331\237=\204B\026\273\201\247\354\275\265\313#>\256\354\302=\326\250\262<\354C%=2+H>f\220\003>\331\365\032=\'\331)=\034\354\242\275\277]\002\273)W\251\273trq<\251t\333\275\353W\306\275u\326\346\274S\341\231\275\315A\253=\202&\224=A\035\032\276c\337.=\235\004\311=\200%:\275\204\215\353=\374\014-=;\323\344=/\270\222=!\210\245=\324Rt<S\326\351\275\010f\252=\211b\001\276#+\317=bcH\276zY\205<\036\353\311=\375\003F\276:R\250\273\262\207\034>o\362\034\274\000\304\035>FP}\275w\341h\275\014\242i<d\'\"\276\351\354\341\275\213\255$\2761\037\260<D\\\014>\327Q\000\274\343,q\275\022\317v\275c\027;<\362\213I\2742\013\301\271M\314B\276\263\343\202\275\0256.>\344R\305\274|#R<\307\236\222\273\252\334>>\202\244X>\276\014\245<\271D\250\275\310\365\255;H\375o\275\226l\246\275\233\206[\275P\272\"\275\316\235\006>\317\325y\275\274-\033>\243\020\247\275\343\223,=\354S\027\275\341\217\227\274\"!\247=\237\3669\275D\265+\273_Q\n>\004\201\004\275V\335E\275\255\2076>\261\rS= \250.>/\003\021=\312N\252<g4|\275\331u\373\275\225(\335\275A.~=\246\037E<.\333h\275\t\337\302\275\300\255\017\276w{\333=\036_\030>\342\315\331<0\236\202\274u\355_=\325yJ=\004k&=\321\310\016=QA\345\275\251e{=9q\n>\362\225c=\202\226\227\274\217W\000\276\317\224\231\273\257\372\244<\234\220\217=\332a0\2768\271\212\2750P\201\275{\324g\274 O\274\274\t\020`\275r\250\021;\025\215*\275/\345P\275\002\032\372=\204zZ\275Qw\r\276>\221\r>\020\0200>\014_:\275\313\330\331=j]\250=\366\327\242\274q\363==!U\037\275\023\247\260<>\021\261<\237+\t>\337\363\355=\304ut\275\322\232\312\274@%Z<*\006@\276_\t\310=g\322\225=B\256\003<\374>\240<z\tZ>\323}\';\214\030\240=\202\330D>`\361\321\274\315\322\221\275T\266\026>\240\022\335<u\177\010>5_\303=:\211\226=2\036\351=\352b\221=|\377\007\276}\301\250\275\356\342\004\275Y R>\311\364\327=f\324\222=I\330\305=]y\362=9\371e\275\014\314\240=\364\230l\275\231\023\023\276UvP\276C$!\276\026\036\'>\233\271y\275\255\021\312=\"m\265\275V\360-=\321\027\"<t\036\246\275\334%\t\276\216\253W\274f`\241\273V\347\034\276y K\275\001\331\345=\267\210\306<\314\264\014>\022\234\031\275\004Q\217=\363\376?<\374\254\030\276\372\274\242=\273M\327=\002\257+>\373qP<\276\251X\275t\322\307\275\223[\367;~\010\210=\342\026\266\275kc\333\274\245\365\023<\326\325\364\275\211\256^=\202\307\242=\210\220K\276\324\206\317=L\227<>\022*\247\274\036\355\026\276M\331<\276\3235G\276\034$\035>\224\266>=?\206&\276\216|\222=\213\373\205<\202\027\371=C\355\350\275\314x\374\271\356\372\253=C\356\316\275P\232\004\276\330\263)\275\237\274\021=\225\242\310<\215\007M=\350\343\322=\233\334A\274#\266\344\275\352\331\272<\222b\247=\001 \233\275\352\237\200=\215\351\246=\340\253I\276\316\013\314\274\022\177\325<\260Xy\275\310\357\020=\316\002E\275\311\317)\276\262\272$=\261\235\027\276\371w\035\275l,)\275\332N\314<\n4\337\274lHm;\177e\235;\235S\370\275T\337\245=|\0363\275\307\200\022>\314P\361<#\225\372=\365\333%>\302N\006\276d\017\344\275N\031\343\275e\357\'>\317\351\353=\320\324\223\275\246\241\207=\356\'\233<\334h0>\333\204\341\274\004\"\014>(\371r\275Mp\266=\376\354Z=}b\346\275\231[2\276\242W\201<]\364\212=\325&\004\276\226@\377=V\352\305<\201\035\025>7\247\235<\013do<M\010\375=i,\271\274P\035\007>\213\223\362\275\300\353\027\2761\263\226\275\261uV=\343\"\003>2\265K>\307\376\322\273\200j\367\275\nJ\270\275\277g\376=.\033\374\2746\217L\273\211=\031\276I\274 :2\306\243<I\305\014\2765Z_\274\006\021\334=\347\014l\275E\352\302;\241i\253=\277$V<^\323\266\275\351\273\345=N-\005\276B\332\210=\025\025:>\230\236\255\275\307\027\021>\033\255\346\275\376p\002>\335\233Y>\016s\221=1\257\010\275\032I/=\235j\361\275b\372\222\275\341\306O\275\277\321\003\276\tX{\275\307c\320\274\227|\004>.\302s;\303;\315=K\314\035>z\253\010\276x\007\017\276\271\2000\276\020q\360=Lz>\275\033\234\363=:\346;\276UP\313\274\233k\361=\003u%>\036\001\311=\206\327\004\276\2178\302<\200\336\255<.\343G>m\036\000\275\001-\026\275\317F\366\275\225fL>BL\333=\331q<\276\3253\341=#m\262<\324\200\322\275\226:\333=0`\036\276\035\212\001\276b\240\211\275h\267\273\275H\334\227\2751\250\336=@\247H=\2061\312\275)3\256=\223\025\371=\276+\221\275m\267\021>=\355\351=P\210K>R\000\244<T\270R\276\302\224\021>wB\244\275\356VM;C\326\217=\320WE\275\260I\331\274v\313\342=F9\021\276\255\307S\275\306\002(>\252\327\034>[y\211\275\020\237\022\276\351 \020\276\354t\341\275\222\nB\276\324\303(\276;\365\211=O\210\020\276\210\372\333<\037\365@>36\232\275\2056\354=hs\326=\020\264\260\275r\353E\274\333\231\255\2755\352\332\275\273yr\274\000\377\332\275|[\255=\346n\207;\031\033\304\275\260\334\206=%\033\005>\244\342+>\221\364\250<\234{\213=\273(}:\376\031u\275*C\215\275\250\253\271\275\237\274\035\276n%\302=\007\'\317<\010\010\357\275\333\234\370=\304vD>)\267\341=\"[\000>\1775\365\275fY&\276\202\244\007\276\261\375\230\275n\233P:\350<\223\275\025\252\332\274\316\347\n>U\276J<e\216\216=\375\221\000\276\024\224\251\275y\036\264<\376\254\313;6\230\336=\344\241\006>\014\2047>\031\377C>_\r\363\275\365\000m\275\307\332\342=[\032\232\275lz\337=(1o\275\261\235\220\275\314\030\346=\216\262\230\275\rL\367=\245v*\276\223p\355\274\346$\262=\330g\372=6\214\024=}\325\002>\376\335&=\213\203\">4\025\036;\260 \337=\326\r7\276\310\026\254={\243\025>\350t\362\275|/\354=\250\250\356=\325\021\037\276\220\034B\276u\370\310\275f\371n=\371\265\306\275\313\363\241<\333\321\021\275\t\032J=C*\307\274\340j\003>\205C\210=\276XO>T8\316\275\371\014\210\274+C8\275R\354\250=b\226\016\276\334\302O>\243\350\277\275\275s!>\304\316\223=\247\3065\276\341\000\310=\341^\202;\334\373\025<eU1>+\377$=\033\323\351=N{\215;\353\304`=E|&<\321\356\306\275\177\033g=\245\235\377=\201F}=\213\326\251\275\001\3564\276fw\250<\324\027\">ic\250=\007\205\342\275\006#\266=\357\266X\275\273wQ=nCT=\242\352\241=\331\353\354\274/\233\033=B\031\332=\037\215\362=K\237\362=\006\3011\276\361\342\275=\375\030]\275\363\273:>E\347\310\275t+\010\276\2545\231<(\201\035\274\030\256\360\274\203\307\346\275\027\304$\276\253\250\'\276(4\252=\374\"\027>u\205\306=\362z\203\275\352a\334=F4\377\274s\237e\274\306\232\377\273\367.\026>\\\347\270=\336\203\014\275\0061\030\276\317S\216\275!AA\276J\224^\275\016\007\337\275*\231\025\276\376\013\032\276\347\374\306\275\013\342\007\276Z@\266\275\005\003$\274Y15=\200\206\027>\370q\230=F\214\221<\202\235(=\316\264\n\276-\351\311\275\276\274\375\275fo\245=\211\331\365=Y\304\276\274\362i=<\255\326\243\273\322U\025>!g0>&d\216<\334\302\027\2751\343\367\275\235\320\311\275h\2743\276J\001\360=\341\243\006;\3110\032>\014a\254=HG\215\2744\206\027=\3305\342<\331\345B=N \003\276\366\367\245\275\036{\232=bW2=:\316\244=\347\314\315\274\030)\207\275\3629\020\275&\364\005\276\315\336\342=(\327\017>\326\366\005>\377\037?>\227\231\205\275\340\205|=\357\311\335\275_\366d\275Gb\016\275\312\'\326=\0109\n\275\rK\322\275\206X?\276\027I\017\276>\007o=xe\267\275\351\234\031>|X\026=\023\244\230\274\332e\333\275\200^-\276_\311\005<\356 \266=\264\316:>b\253\010>`s\311=\002&\355\275\220\366\350\274n!\313=E\302\353=\255<\247\275\320V\210=\261]\246\275\354P\212;Mf\247=\000\332\240\275\266\205T>\230\374}\275\340\257\227\2754\367#=\216\364\261\275\007\332\373\275%\307\014\275\301\306\275\275d\331\337=HXb\275\374g\271=O\343\245<\034\374+\274\361\222\223\274>\322\363\274\327!M\274\230S\376=\302`\255\275\263\310\031>\\\002\232\275\217M\007\276V\304\n\276\302\035\255<U?\305=p@T=t\326\240<\0000\211=\370G\254;\"t\331\2752\327\213<=T\027\276L\305d\275{\344\232\275\333\372\231=\301\003\020\276(\223\003\276\271\341\326\275KQ\272\275G\225V\275\265\\\311\274\357\205\233:\245\3015\276\305\007v=\240\3519=.]\364<5\351%=\007\t\232\2747\372 \276\350\216\272=\210\351]\275e\2159>o\202\022>\'\207B=\244J}=]\342\014\275\350\345\306\275\013\370\246<H\210\251\275\222\203\313\275V\240\312< \'\003>\276]v=\322\206\350<uh\214=\274\244\035>*[\317\274\210M\377\273B\365\035>NG\365=C\213\245=\334\021\333=\304\205K\276p\377\222=\373G:=\023\260S\275<F\t>9\312\321=\364\332\357\274[\350\007<\\9\215<\025\273\202\275\265IT\2751\334\310<\002\332\006>\216\275_:>\373@>-\177\250\273M\353\232\275\314\352\001\276\335#\261\275\244\221\206\275\023.\253<K\003\327=\310`\037\276\206\360\374<\362LG\273\227\270\240\274\031\246\n=\235t\322\274\301u\017\276\225~\034>Z4/<}\355\024\275\217\211\200=\370\347\252\275\037\013\204=\226Z\210\275\247I\367\275\247\3356=&\3371\2758H\037\276\032\220\330\274W\312\342\275I\330H=\3276\r\276%\211V>l\325\262=3\325\364\275\014(\225=M\274\301\275\246\027f\276\266\347\332=\215\272\273\275\306\026\214=\r\332|=\033\360\362<\2528P;v \005=\304\006\'=\311\327\031=o\331f\274i=0\275\212\277\346=\036:n\274|\326\326\275\026~\030\276Z\006+\276\335\003+\276\317\230\365=\340\n\334=\200\260\003\276*Tr=N\357,\276Ud\370=\026ay\275\276\022\212=\017\274\235\275\333\024\020>6\361\007\276j\337\314\275\321\302 \276\355\005\026>\310\227\007\2761\031\356=\305\005\372=f\021\330=\273[\'>\250\273\t>\237r\023\275o\322<>j_\315\274\265\"!\276Z\302,<\'\323\211\275\324\007\210=\324\225\363=\323|\267<\3057n>\023=\023\276\275;)>U\330O\275\037\332=<|{\035\275\356\277\352\275\344\320\177\275\376U\337=\342\245S\275e\242\357<\234\300\216=\216\214\314<#\217\361=\305\020\231\275\334\305\010=\207\360s=q>&>sL \274M\224B=Y\014\275=\207\002\343\274\340ZM\2766Vw\275\310\332\304=\242IY>^S\314=_\270 =\244\324\263\274n\227\331=\245\271;\275\023\372E>\224y\002>\365\375\010\276\356\022\265\275-\3259=\372\273\317=.\254\331=4\025\236<\311\326 \276\205\222z<L_\000>\230\201\277;\256h\227=\005Kp\275\355Q\216\275c@\257\273\300\020\212<\370~N=\277\025Z=k\214\035>\3662\023\276\336X\343=\3420\031>\310f\030\275\235\\9>\274\316,=\'C9<@\t\200\274\2524\352\275M\371\027\276\357\354Q\275\252\312\376\275`\324*<\313!\252=\214\327w\275\351\021\025\276J\035\277\274<%\n>\320\007\017>\254\n\374=_\301R\275\332\226\034\276\210\036\223= \036\007\276*\367$>x\262\017\275\237\271\344=7\240\004>u^!==\325\000\276\231\006;=\325\247m\275g\010\t=q\251\222=N\"\361=\374\027C\276\301\201\307=G;\270\274\334e\231=\345a\340\275\315\2340=\263+\024>\307\225\016=\224$\266=\236\304h\275\304#!\276\244GH\274\371\2710>\243~>\275;\332K=H\217m\275\330\274(\276\307g0=\267\330\351\275\277\016J\275\202\344\003\276w\262\275<\006\205\243;Df\277=\374h\224\275|\252c\275\306U\022=\017\036\010\276V\314\204\274\327@\010\276#\311\037=\330\004=>u\034\302\274\367 \362=\315\000\302=\271 \032\276{\335\302<\241Qm=\266\036\355\275*\032\312\275V\017\010>\271\225\361=\263q\377\275jC\207\273\037\324#\276\t\3044=b\\\353=2-\203\275\247 \351\275\225\267|=\263\032\251\275\301\244\203\275Gx\310\274\314\201!\274\236rJ<\377\245\213=\231]\022\276\036\316\000\276\310\321[\275\265\306\021>\224\0326=}\351\215\275g\r\254=p\276\202=\326D&\276\263\352\274\275\256\000 \275\313\242\r\276\275\246\006\274\300\265T=\346\210\321\275n&\230\275\347#\033>\201\224$\275A\207\323\274X\237n=\212)\022\276C\262\215<\342\240\303;6\202I\275s\225\013>\303\261\033>\332@\215\275\346Y\302<;\251\232\275\332\000\361=\031\337\t>l\214A=\231\331\'\276\n\326\017\276\302Q\372\275\031\013\023>D\331\217\275\301S\010>\336\271\302<\216q4>\023\306\023\276(\345\334\275jl#=\274k\002=\347J\016>\370D\270\274\246t\324\275$,\0219\325h\371\275fJ\374<\034\354\244=\263z\017>9\246\t\276\367\305\024>\327\366\021\275E\210C\274\2135\032>\233\t\005><\205\335:\342R\376\275\372a\247=\324!\032=j\013\n\276\237;\034\276\347O_\275x\331,=\277\370\030\2745\276\327\275\r\246#\276\2204\314=&\016%>\366\371\224=Mn\320=\367b\302\275\206\332\320=\324\233/\276]\225\030=\325(\361\2754\264\205=\361\364\215=\tG-\275[A\315<\210`\362<p\032\220=56\n;\3447\340=\365zT\275\266\374b\275\300\360\026\276~\301\343\274\201$\337;\264@\315\275\010\372&>\261Z\317=~o\014=k\335(\275\240\375\371<\242\270\036>\031%\006=\271\025\324=\315|\241=\200\251\214=\032\357P\275\353<\322<\\\361$\276\304\221\037\276\254\207\207\275\230Vf;D\2703>\344\347\t>\177\016\347=X\204?\275\320x\004=zr{=\212\327\010>K\034<>9\254\033\276Nw\250\274s+\232=J\255\237\275<\'S\275+\236\246\275g\375C\275\223\017\t>\r\3277\275o\014I\275`Y\321<w\254\261\275\365\351\371=2\211\023>\273\3250\275\362\205\005=\323y\026\276\r\247%\275)\303\\\274\3705\326<W\004\340\275\234\220\257\275\332\324\013>\332\237\253=\223\345\213\275\373\340\025\276Z[\366\275\340\212\320\275\035F$>\267\362\013>\035\233\035=\221Q\300=\267\201\317\275I\366\222\275\265\351]\275\013.\350=#uL<j4\314\273\020\264\003\276\001R*\276P\377\273\275i\314:>\372\347\021=#\216*\276\026\261\366\274>[\n\275\033\236\341\275\34554>\330\344\200\274\204\312\006\276;\343\324<\376{\342\275L\275\031>\316_\223\275\337\261->\316\357\306=\347-\364\275\354o\314\275\247\274\207\275\241\002\350<[\3563\273\020\267\241;\376\266\315\275\235\017\025>c\323\026\275\237\217\r=\307|\004>\23772\276\341\034/>Qi(\276\366e\220=\321\345\200\274\252T<\275\206\312\007\276\324y\275\275\360F\t\276\247\002\366\275\304\'c\275\343f\000>\222]\006\276\035J\357\275g\350\020>\277\200x=\347\025\t\275\312\356\224=C\326\224:]\377\252\274\240\373\320=\251\364\201=\031h\311=Z2\355\275\006\231<;\220\323\254\274[\236\006\276\304m%:G6\001\276\237h\033\274\344\\\026\275IY\001\276\202d\320\275\'\n\235<\347\006\327=\227\242\254\275\366\365\016>\257\275.\276n\010\230<D]\005\276\224\033\362=\320-\003>E\245\273=\315\256 \275\326\277n<*\200\213\275\341D-<\2679\224\275M\346\001\276\3502\334<\225\274\347=\r\374\021>a\214\007\275\002\021\364\275\021\361\266\274\240\331\006\276\240\376\344\274y\316\257\275!m\345=\372\036\317\275\324f\300<\023\263+\274\237\371\024>)\2309<o\251z\274V\324;\275\344\344\221\275\010\314!\276\033\227\327=t\020,\276\217\337\302\275@YQ=\362\222\003;\036\210\304=_\275\315\275\304~\361=\010\372\205=c= \2746\236)>\302O\275=\225i\010\275]\352T\275CWt\2756\211\203\275\3400\233\275P\370\335<\014N\021\276\226z\221\275\031\217\321<ex\325=\221X\016>\224\226+\276p\237\025\275\224\315\331\275AS\357\275\2228\350=\225\322T\273H\221\236\275L\003\326=M\275\313\275\256~E\276\271\226\241\275\346b!=\\L\223=\202\211\324\275\335\361\230=\206\004\225=\032\316\370\274\242\360\"\275\372\340R<\264\035\356\274:\250*>\221\365B=n\351\235=\370;\032\2762\235\005>\362P\022>\371\325\372\275\365\354\327;\220\350\330\275\316s\356=|\270\234=nk\034>\273a->d\030\253\275\255!\004\276$f)\276\327\002\013\276\301\361\307\275d\247\030>^\324\251\275K\'?\275\217\n-=\231s\307\275\006\r\237=\340\007\014>\201\330\014\276\221\325&>\2064\361\274\017t\243=M\313+>\227\347\260=\'\326\004\275p3\021<A|L\273\213>==ty\021\276\306\230\364=/\220\265=i\313>\276L\211\310=\3150\227\275\r\2150>\037\032\037>\226\363\356=q\032\367\274\273\351\273=t\224\317\274~V7\276\265\274\'=\314\367\035>\273\016:>\263Rc\275\353\233\225<\320\251\327<\366L1\2751\236\007>\351\035Q\276\254V>\276\036\031\034\276\r\237\232=\241\262\020\276\353\345\255=\003\017<\275\366\355\312\274lC\350=\'\264\253\274\225\213\267\275)0\364=\210\240\">x\324\267=/\351*>\207r\n\276{T\241\275\343\205\332=\347\213w<\363u\025\276]\234\013\275`\013\004\274\327\024e\275\343\316\222=\223\340\354\275\315\302=<n\271z98\344{\275\300\235\376\274 \252\264\275,\036\201=qI\267\275\356\330V\273h\321\"\276\026:\320\275\004\0368=I\240\t\276\220\271\\=\334\323\334<v\273\033\276\300\n\202\274\272;\237=\261E\267=-\325\351\275\213\300&\276\224\r\312\275LB1\274\211\231\303<\355M$\276\305{\224;h\332\'>\005e\034\275\037\313\r>]\217\273=u\314\311\275\017\227\372=\002\217\317\275\340\005\303=\354\177\255\275\261\343\311\275|\206#\275d\270l\275@>\035=4x\233\275*\246\353\274H\362\373\275\274\332\034>$@\225;\010\264\265=~(M=\002h\364<\275\346\006=\020\201\356=\356\257\217=\245#\251\275\270\027 \276l#\"\276\361EK=\250~r=\030\270p\275\307A\212<d\251\363=n.\305\275X\265\"\275,2\274=\265%\250<\201\326\035\275W\017\250\274\332\234\337=\340\035\312=\027\031\352=\367\226\265=Di3\276[\023*\276\345I\023>|\202\016\276GM5>\364\334\034\275\251\342\022\276 83\276\035\034\211\275@E\347=\216w\n>\324\361\230=\035!\200\275\016\274\201<\310\230\277\275\300\356*>\227\207\211\2754\316\020\274\350\223\004=!f\370\274\263af;W\301\037\275\243/3>\016r\t\275H\231\240=\323F\351\273#j\033\276\006\211[=5\036\207=\350u\252\275\331\230%\276\372\213*\276\277\271\037\275\"8==\262\324!=\354{\342=|\2031=\025\241B\276\306++=bX\"\276\255g\353=<j\361\274\315>\013\276|\007\257=\261#j\275 <2>%h\266=\002\237s=8w\212\275\023\235C>\033\262\026\276\304\344\r\275Q\256\202\275\210\323\346=\321\375D\276\262s\310\274\255\363->\334\370\005\276\302\2432\275%\331z\274\275\360\022<+\021\272<|\337e>\351\251\234\275Myj=\266,R\276Y\322\345=C\342\037=\022\272\'\275\264;q=t\2631<\340\335\254<>n\250\275@F\037=z:(>\032\262\023>E\n\206=\242\021H\276\246\242\267=!Z`\275u#\263<w\014C>\255\200\350=\261\246\367\275\"\354j=\r\026+\275;S\017\276\226B\375\274\316\316\236\273\254\227\301\275)\003*>\225\305]=d\000?\276\213\345\213=\251\327\323=%\017\316=\203\224d=\304\036\004>\304\325\240\273V*\270=c\313%>i\352\312=\306\355(=\2212\"\276D\303D\275\023I\037>\367\261\230\275\272\235\032\276G\305,>\234\026\375=q\373\020\276\206\302\301\275c\262\335\274\366?\036<\202\210i\275\321\215~\275\326\241\260<]A==\351bf\275\246\374I>za\311<N\353*=(\030-;\232\217>\276]\276\272=\336\225\031\276\325\000\325=\'\243\323\274\035\262\311\275&BN\276a\024\256\275\0175\021\275t\246\013\276\355\\z\275\345B\032\275\324_\206\274Nc\002\276\245C\336=\347,\226\275\324l\322\275x>\322\275\306k\247\275z\222\230\275T\213#>\347\330k\275\320\230\023<\035N\036\275\256c3\276[\3342\276\213G\371\275\362\026\273\275\220\2272>\204(z\274h\370+>\330K0\276$\341-=\034}\253=0.\212=sq\207;A\215\341\275uQ\276\2754\302\036<qV\374<\325\345\035\273\020\216\371<I#\210=\026\230\027=C\325\014>u\307\032\276\317\326\265\272+\242,>2\035D\2747&\031>J\001\007>3\344\335<>\367v=\303H\035\272\036\360\r>\344\304\037\275\223\2252=\003\256\253=\355\264\003\276\376\317\262=\\\350\016=\254\271#>5m\026<\264!_=\030\256\376=V-V=\263\240\031>\233l\020=\364{\326\275\030\320!>\324\370\317\275+P\223=v\212\265\275\223\0332>\247i\250=\354\343\345=tG3=\321\220\017\276T\336A<6(\017>\253Xy=\000\n$\276a\314\312=p\307\004>\314\322\026;\277\005\021\276\265\254*\2745\356s=RH\037\275u\273\245\274h\332\322\275L\2602\275\261\375\231=\350Fc<\271\003\362=\223\"J=\234\250^=\026\022?\276\240n\221=\220\302!>Gy\004<+\214\201\274\366\005\324=\017L)\276\215\0104>\001k_=\371\256\014>8|\374=\031\237\010>\255~f=\314\256\212<o\001)=\352\222\234=\243\332\037>\323\2751>\020pA\274Y\0060\276\256 \370=\311\245\257=.\013\024\276o&\024\276\304\302\317=\225\263\314\275\321\221\200=\"\255\222\275\331\2535>e\362\244=\213\305\004=\2434.\276\244`E\276\245])\276om%>\265Y#\276a-B>yK\037\276\270\232)\275Y\310\200\2755o\211=\241\001\247\275\232\013\013\276\242\335\307\274L\n\325\275M\315\376\273g\210\354\275t\t\203\275\266\001\246\2740T\350\275\346\203,\275\237\237\220\275bt^=\034\245\320\275m$%\275C\364\014\276g\2104>!I\215=R\377\315\274\317\351\017\276\t\022\004=bA\000> +\256\2758\005\237=\261\016\037\275\207\260\347=e\003\203\275e\353\r>7\2651\274\2169\231\275!U\">\346\003$>\\i\243\275\300\021\336=\363\204O=\221\353a\275 \3147>\310t\005\276\005\255$\276\303\214\254=o\302\031>\007\361$\276\256\023\021<\230\365\r\273\256\374\244\275\233\375U\275\253%\233\275\277/=\276\215\312\006>}]:<f\003\366\275\265\306*>V\326G\275\232\207{=\\\250f\2751t0\2760=p=\004#\002\276|<\010\275\340B\n>h\312\340<Q\232\343=\233G\331=,\327\367\275nZ\301=T\212\"\2748\376\016=\245\205\033>\025\016\221\274D0 >4\003\014\276|\241\010>\207si=\304z\177\275#\212\211\275\017\001i=\211\211Y\275S\020u\274\321\226N\276\007\223\270\275l\002\002\276#\360\304\275\\\203\256<\352\356\020\276\240\273~\274g)\322=0*\265\275\326\033*>\037\271\360\274V\222\024\276\233\225\314\275\003\350\013>\030\222&\276\236\375\231\275\004\273\031\2764\"\324=\305E<\275\033\244\322=\351\326\000>\225\'\024\276>o4\274B\316\000\276\035\326\343=\367\336\213=\366\346\307;\215\271\023\276(\'\006>\240<[<D$\257=E\303\232=\037\223\252\275k\332\355;Lx\023\276\024#\231=@\"\354\274\317\031\021>w\277\">\3234\252\274\374.%<\354\247\357\274\222|;\276\321\234\240=\256\267\336\272\265w\324\275\2676N=\334\023\265=\375\027\010>\236_\227=\340\td=;o\006>~\"N\2753G\3069,\252\225=4Z==SR!\276\211v\016>u\301\033<\236\350\371\275\356\200\241=\340\255\005>\030i\321\275 t\321\275\231\345:\274VC(>\024X\313\274:\350\007\276I\357\352=\246\204\246:\024F\372=\243\365\024=\346g\037\276A\226,\276\275:\027\275\312\326\222\275/_\243\275>\273\324=\341\2269>D!K\276\\\t\007>\367\005\013\275\013*7=\216\375;\276Zr\354;\317a6\276fT\302=\305\235\256=\214\232\363\275_\031\030=\243\217\241\274 \001\031>\302\"@\276\223\375\367=\"\362>=\232\327.>\300\003\031>\036\252@>OL\340=\035\302\321=\270\246\223=M\253B=e\202\033>\307\312\275\275\377[,>\356\321\337=\235\3077\276\353\221\206\275\350\2279=\'}\014>\332N\247=o\340\323\275\321\364\350=\237\234\336\274\327\241\243\275+*\237\275\274\3729=4p6<\323\316\025>\322\230\032\275\330\030|\275\"B\231=s\246\202=\356\017\361=\251\247\357\275\274\214\n>Y(\275=\013\343e=\260|\255\273~W\226\274]\205$<\247B\016=M2a\276\340\334\321\275DT\017>\3050\365=\007\331\220=N\343\214=b^\010\275\246=(\276u\351\266=\323H\273\273\350\3013\276\314\024\351=\312\331\24797\316\017\276\"\033\366<\324\335X=2D\333<\255v\215\275sg\n>\225\020\026>z\201\326;53 \276\252g\277=Y\031\355<\241\202\370\275\r\371\005>\371\265\260=\226\314<>r\010\330\275g?\356\275\373\226\231\271\203\266\257=\317\211o=\242\206\000>TOJ\275fc\346\275g\366j\275\257!\177=\224\237\374=\325h\036\276|1\324=\226\306\333;\333y\032\276\267\360\202\275\035\316k=\367R\310\275\rq\254=^\030\300=\375\030\222=\216\326\355=\225Ns<\321\277\354=\255\325\234\273\231\361\322=\355\352\302\275\335hO\274\245f\\=\034\370e=6\246\247\274\324\224Y=Pj\373\275p\2252\274r\357\333=\251\010\341\273\236\255d=\311\313\017>6\003\354=\347\"P\276Y\253\227\275\222^\274=D\013W=\255\000\247\274\022\021\370\275\220\'\360\274\026:\240\274iq^=\370`3=5;\215\275\357\n\t\276X\250\366=l\243\333\2754\233\356\275\002\024\001>\265\034\">k\235\341\275\231\376\311\274<\377\230=\247\306\363\274\016G&>fH4\276\327\031\'\276\375W\331=\221\344\302<\327\323\205=)\2268\276\022\225&\2744\325>\276\014\223\327=-\340\263=\315\016\036=\262q\223\275#@;\276\225\235F\275\\D\316=\004\265\t\276@q\204\274\240q\\\275\013\313;\275z\317J=\252/\202=\310H>\275\367\024:\274\2769F\275\022tj=$\262\303=\222\362F\275}\355u<\347$\213\275\235D\336=\024\0149=,#\226=\r\224\374\275!\337\375=\224q\377\274\234\373\372<\036r\022=(Q\331=3\336\264\275\024\007\273=\272\320J>y\000+>D4\030>\227m\024\276\241X\316\275\030C\323\275 \020\311\275\r:\t>x\325\314\275\355\010\177=\202\370\024\276*m!\276Yk\354=\335\306\022>\273D\013\275\365Y\345=0K!>\342\373\364=\300\020[=B\240\350\275\333\347z\275R\021 >d+\202\2745=\370=\010\316{\274\221\0240\276\211\357D=\020\220^\275\346\003\310\275\'\324\010\2759\007\017\275\333\245V\274\270\031\301\273\0356)>\222\212\023\276\215\264]>\226~a>\n\270\347=\245\263\322<\337\367\034>\200\217\256\274\336\333s\276e\025\245\274\032T\214\275\327)\020\276\305Q\010=\242\244t\275\344v\223\274\306;\004\276\312\013f\275.c`\275\302`@\275u\323\271\275l\210\240=\254\037\204\275?\337\217=;.p\274\371\333\235=\333\265]>\301\"\033\276\000*w\275\034\341\247\275\220y =\266\367\266=\253\3677\275\221;\037\276\230\244.\276\3354q=\327\344\006\276&#O;\314\215\336=\026\207\372=,ga<\224\334\351=\272\001\230=\036\307:<7\241\227\273?\220\203=G\262\323\275\n\232\030>\023\004@\275\'u\006\276\0245\215\274s\362,>\221\030\304=IO2\276Pd\332=\034\203?<\226\222\342=\201\033>=\005\274\323=L\r\307\2759\222\301\2757\000\361=\201\036$\276\246\307g\276TKa==\265h=\316\275\243\275\260\246\257<\032\303&>k\362\007<\271s\371\273\240\252\032>\365d\244\273u\267A\276\014\220!\275v\200!\275\001\264\017\275\305\373_>6\220\341\275\223\373\026=N\202\364<\025\'\370=0\336\341\275GY\330\275\276\352\014\275]}\372\275Q\357\300=T\343\357\275P(\305<\201\365\235=\364^\001>\\\243+\275v\276\374\274l\270\344\274\234\253\222=o\336\031\276RDX>\'\256\347=7\216\222\275\200:\n>W\221C=u\222\016\276R\345\235=\364\022Y>`\034/=\215D[\276\376d\357\274\211\221\315=A\243\023>Z\332>>Hh&\275Y\207\230\275\0173\256\275lX6>WF\206=Y\212\321\275+\252\322<p\237\014\273\t\322\206\273\216V =A\220-\276Z\025\242\275\301\211\330\275+k\022\274\017\320%>\261a4=\345_,\275e\231\324\273\026\002\337\275\351\367\360=|l:\2754!\311\275\277W->\230$\352=\037\231\304\273\367]&\273U\310\206=\336\346Z8/\220\223=>\021%\275TUX\275\02241>\276\277\372<\023\231\314\274\264\362R=\006\205\307\275\203M\016>\223\023\215\275\236n\033\276\312\014\253=\026r\r>\200-\305\275m5\233\274\004!\032\276\235K\200\275\366\367y\2757E\303=\032\223\210\275\361\357\371=JE\315\275n\014\314=\374\206\274\274bl\365\275B\277\226\275A\235>>\277\\\027\276c\200Q\274y$)\276G\010\347=\363\365\004>:\234\266=F\032\254\274\330MC=\014\306\020\275N?\3639WN\025>\016=\005\273\234\356\340=\240\203\004>\242\021.>f\272\">\356{U=eF\263=\005\002\267=\305\000%=b\n\231= \036\001=\233\363\317=\304\030\375=J\321\274\274\200\222$>,j\252\2759\257\027\274r\031G\275,\313\"=\302\325\210=lA\217\275\335{\037>\004\350\324=c\3055\275r\363z\275S\310G>e\307\217= \230\370=$\177$\275H\375\314\275\371\r*>\316\227\320<\033\252\340\275Y\341i\274\261\324\334:\255\302\020>h\027\376\275\2376\211=\214o\310\275\034\334\031=K\027\263=\261N\332\275\351.t\275t\0004\276@\205c<Z\0050=\323\331\n\276\277{c\275|\276,>\21142\276\325\227\374\275>\263_\275\021\034\352=\'\340\034>\2478\246<\204\266\177=F\230\356\275\343I\033>CW1=\233d\"=q<@>\030\202\340\275<\327\366\275\207\010\256:\277$I\275\024\317N>\240\232\021>\371\212\333\275\031\210\332\275D\023\007>\022\275\372\274\363\226<\276\217\365\300=)P\325=,\0270>h\267\010>\213\005\375=.X\027=\027\305Y\276^\264\371=:l,>\233Z\206=\333\001\033=\230\312\264\275\366TA>\3569\024\275u\007b\275\005\3560\275\334\306\367;]mD\275.\301\314\274\027\215\271=.\321D\275P\376\026\275\"\204\351=\236\2008\276k\232\346<\234\273\263=Kx\244\275Ul\310\275N\213\306=\023*]\273U\332\256\274\334.\024\276\332E\362=R\242p\272\250^\233=\277\324\030>qQ\\\275\251W\212=@\214.\276s\022)>O+\361\275\375\263\006\276\036\307\271;s\3268>\3542\320\275 X\032>\\g\022\275\r\273\350=\234\331\013>\3730\236<R\010\316\275S\371\317=W\025]<\004\226\206<\371C\034\275\304]\203\272k\273\026\276T\323\227\275Z\325\\<\241\226\357\275\025l\030>pJ\322=\247d\007\276\254\225\355=\235\210\321\275m\202\034;\337\313M>2\177]\273\226/\217\274\346Y\037\275a;\367=\356\201\r\276a\221\"<\010\220H\275\335\2201\276\311\033+\275\321\251\025\275\356\343\256\275\365\342\016>{\364;>\3754N\275\221\371\031\276\273^\245\275m/Q\275\214\255\244\275\227)2>t\267\346\275\210\000h=\240\201\222<`O\373=\316Z4\275\252^\360=\216\364t\275M\2131=\356\257U\275\325\200\272\275\225\234\333;I\277Y=\022\031O>\013<\354\2754\247\315\274+D\026\276\277\367\312<\022D\'\273\016Q\252\2750\332*\276\024\036#\276\272\256\022\276\206!\212=\322\373\226=i]\247\275\315\303\266\275\306/a=z\006\024>\216\003\324<\307\013%=\260:\210\274 \014\223\275\213\305\276\274$\236/\275n\030\021\276\226.\363=\252Y\316\275\234K\323<\377b\023>\352VD\276-\365\311<\212\226\277=\375*\211\275\340\250\030\276k\333\021>][\306\275m\037\007\2762\010\210\275\324\302M\276\334\260\341\275\251_\333\274#\025\326=\232\027+>6\223\332\274\\\006\016<\303\375\021\276\315\216\306=\t\177\267\275\335\203\243\275:\262l\275w\247#=,\351T\275\367V#>\273)\320\275\244h\357=\240^\023>|\246\212=*\247\372\275\246\231\255\2754T\n>\260\222\332\275\262~\010>\t\226\307:\036\324\270=\347Q\267\275\265\253\351=\221\210\323\275\241\n2>\025g\210=\225z\265=z\0212=P\305B>\031\356<>jZ:\276Ms\r>\264B$\276h\n\001>\023#\265\275?\322?\275<w\n\276\224\030\372=\n\311\315=\340\265\017>\363d\342=\214\002o=\306\t\021>\212\305z=\342\211\004\276\000\306\267\275\243\261[\275s\320\355\274\031\265\312\275\265\367\016\276\211\177E\275D\262\265\275\213\232\271=v\251\367\275\321\367\270\275\000\355\r>\\\355\233;g)\\=\373\r\036\276\371A?\276(RL\275\222\353w\275}\200==9\361\270=\n\231w\275\002\2236>\346\317\326\274A)#\276&/\314\275Nc\262=\024\342\300=\034E#\276\013B\021>I\366\346<\302\262\211=\346j\354=%O9>9\363\215=\204\0205\275-\355\341\275a\204+>\310@\344\275\340c!>\323,l<\'\027\212\275;w\356=W\257\032\276uA\217=\nH\"\276\322(\377\275o\205\303=\265s%\276NP\322=_\266\007;)h\007>\366\317@>8\347\335\275\254\351\036>\300\2542\276\242\373\204=\306il\275\243\262\315=\223%\032\276\366n0\276\177Z\025\276\220.\271\275[\222\226<\330\216v\275\n\224k=\002w\003>\353\024!>e\271\034>\037S\372;\030\250\007\276\240|\016>\341\3067\275\327\250\241=\270\242\002>\354\316L=\302\311\010>\302\267C\276$\321\020>S9^=\325\212#\276D\311u\275\334\316C\272\275\324\004>Z\241F>\313\010\232=\205Bw\275C\223\275<\250\177\254=\344\010w=\034\346\302<\'\014\336=\276\226\327=\271.H\274)d2=t\300\353=`\345\025\276\020\3350>\023\256\">\226\007-\276\036\275s\275\214\025\000=\246\245\004\275\301\005q=\317\230\312=)\030\000\276\331\177\301=\317\006\037\276\341\234\335=\023 C\276\256\026)>}H\311\274\377P>>\362\264\027\276\212\213\207<\330y.\276\222\362\031\276\373Q\014\276|L\260=(\003\231\275\362\347M>\243x#\276J_\253\2741\301\036\276\226y\267=<<1\276<\337s=4\313C\276\374\340(\276\017\250#>0\273\244\2759\241\277=\236\226\025>\234`1=\334E\036\2766\316\314=\377h\000\275\265\364=>>\353\337=\033(\220=\336\211K<\001\255-\2768\252\t\276\032\024\325\275\301\275\000\276\020y\007=Nw\013<\3406\334\275\006\007\223=\217f\206=\226\323\277=\321\'\332\275GU\372=F\004\035\274(\005<\276\354\002\305=\354\003Y\275\255\262\222\275\372$_<\000\2141\275\306~\217\275pI\033\276\034\342\255\275\320\354.\274\371\273\035>\2040\353\275\'\256#\276\t:\002\276\331y\333=\\-\220=L\327\364=5_(>$\263\020>\240\245O\276T\257\246<\313hO=l%\002>R\245)\275\255\241w\275\005\034\301\275h@\322=\356NX=\340\260\036>\337\234\246\275\364\330\320\274?\322\234\275\305\300\371\275^Z\250\275\363\343g=\024@\037>\237[\373\274\034\030\317\275\t\212\326=s\t\351\275+\363\217=X1\331=\303\2413\274\2605\263=\032k\271;l\030\202\274U\335A>\216\307\t\276\205\343\252\274\212\341\013>\'\267*\276qsr=\205\330\242\274\360\244\306\275\353\004\250\275\321?.\276\311\277\007<\027\310\226=\262\205\202=}\347\241<O0\373\275\021\256\306<6\0302>\227\340\255=\302%\221\274\'\364+>k*\231\275\370$\316\275\253\307\265=\241j\364=$\033\341=\255\211\312\275\270SS\275\361y\036>\325^\354\275\211\3658\271\230\262\217=\354:\253<\024\0242>\234a\302<\273\312\263<\006\364\345\275\006\271\335\275\201z\005\276**@\274\262{\004>|\313\031\276$,\217\275-\'\020\276\277\277H\2745L\332=m\306\321\275\273\013\001\276\314\324(\276\316\231L>+5\203<G\275\346=kF\377<\235\017e=aq\235=\227\225%\275\242n*>\266\361\327=kT\024\276\362\332\256=\324V\313\274k\340\001\276\214\310\202\275[\006\320\275\236\256A>\234\352\263=\237\244#>\276x\222:\037U?\276O\337\372=\322dW\275\337=\036\273\363\226\241=\322K\000;`\227\345=\264\313\013\276\226\2044>\032\021\214\275\264q\303\275\364\255\365\275\226+\005>\007C\023>\205\205K<`\364U;\256\320#>&\353R\275H\035\210=\002C\250\275\355\225\245\274\023\372\372\275F#X\275\2676\332\274^L\310\275\340\243g<\211\252b=\317\363\201=\324\026*<J^\332\275o\005\303\275y\023\007\275\331_\t=w\222\313=c!\236\27542m\275\373a\205=\334w\260=\021\262\032\276\361\333\024\274J\314\007\276\t\017\t\2763\210c\275\320\242#>\037\312\033=uB\001\276T\013v\275oi\332\275\250\206\302:\252=\000\276\236E\261\275\370\361\030\276\324\246\213\275j\277\323\274\276\0017>\246\256\035\276\251\211\335<*\362K\275\373g\031\276{U\336\2755\342\331\275\336\017\245=\017S\323=\233|$\275BZ\007\276\300\367\2257\033\016\232=i\266N=\360R4\276+2\303\275\265\271(>\212\247O\275\177:\303\275\004W\312\275\2004\000=!\005\025>\244\007/=F\n\273<\002\3339>\364\014\312\275\370}A>\3326\340\275\230)\235\273\256\'(=\177\315X>t\354\221<k\367\251<d\207\002>\222J\267\274\013\341\020>Y\251\256<\326\373\320=+\003\215:,\277\316=\021\375\214\275\203\212\263=\354O=\275\013\007\226\275\364\306\t\276\233\367\327\275\252\314\240\275\t$\014>\006\205\023>\323T\245\275\211\364?\276\010\326\341\275{n\327\275\374\272\270\27524J\275\034O\323=\023t \274\353\255F\276w\026\022>>\270\013=\004\016\254\275\213\336!>\352&\254={\352\226<Q\230\273<L\035\360=w\266l=y`9\276!\366\231=\335\255Q\275\032l\345<\016\\\022\274\334\244\264=\005]_\276\234\252\004>\032(;=\032\325+>\234\013\274\274Z\350\r>dl\013\276\370R\221\275 \221\355\275\273\366\331<\351HO<\236\246<\276\223B\243<\023z\315\273F,/>\315M*>\221$\201=\"\2060\276`\375\247\275~_\325=Tl}=n\"==\377\013v;\236\2732\276\356f\031\275h\2318>p\232%>\253/$\276M{\201=\001\276\346\275\3064\\\275\332t\224<\'Z\240;3\352\341\275\200\372\210\275 \306\343<\326Qy\275T\230\241\275\336Vg<\007b\245;\277\033\r\2753{\n>>t,=\335\355.\275A\236\">t\0047\275\331Y\023=\237\346R<\270\250\314\275\377\207\243\275l7\030>\207b\017\276N\357\022\276\235\376\337=\020\311\007>fm/\276\261\316C\276K\257\316=\025yI>`\010\177=\200\t\352=\376\253\017>\326e\027\27642`\275/z\021<\025\246\006\276\227\202\022>\210\205\311<s&\232\275\363\033-=8+\330=\207\371\346\274\204\036\211=\357\211\023\276ns\321=Q&\360\275\177\216P>Q\337\337=%^\313=\'\016\217\275X\301\310<\\u\240=\001\177\233=SJ\346\275+\355\017\276{\3649>\252\345F\274\226\205`=|\245x\273@,d\275\374\220\333\275`\377\250\273\360\243\017>\207\017\246=\037\264\351\275\274tu=\025\364\371=\243\250\270=|\216\023>\317&\250\275\264\214\003\275\370\023\256\275\036\357\334\274\314\344I>\202\230\300<U\203\375=g\005\331\275\253\322R\275\272R\267\275NQy=\220\2558>\304l\257=\351g,>{\337\335\275\261\355Q=\347\315\021\276\203<j\273L?\3629\321\264\030>\324\236:;v\257\307<\001=b\275n\231\362\275\253\023s\274r0\332=@\2768=\301\233\377\275\266E\332\274\304\300\312\275\240\213\014>\366\217\223=\030\016\031>\254\266(\276\212*\030\276F\321\335=\014\230A\276<\257\315=\034\211\336\273\027d\034>L\223\247\274\307/\367\275\341\257D\276\023qE=\3442\032><!\327\275l\274\025>\303\222\021>\271\033A:5\336\326<\303\356\341\275\021\233\213\275T\177\335<W/#\276*?g\275\247\311\212\275S\215%\276#\241w\275\261*B>\240\350\261;\253\006\255\273\346i\014=\024\027\">m\212\213\274\333\3624\276\302o\310\275\2074x<\214\207\023\276\320\370\003\275\336\t\271=\275J\311\275|\201M\275K\264\251==\330\027>ui9\275\261\005\025\276\375:S\275T\332A\276\25250>\355\363|<\360<\016\275\225``\275\n\264\023\276`\367\026>\340\332\221<\364AJ\274\007\304v\275\343\003\313<\267\336\343=\305]\317\274K\224\220\275\201\352\267<~\3323\275CE\320\275\363\305\326=\206\213F\275r\372Z\274l\340\362=\"\373\213= \314\356=xk!=U\322\265\274\367\314\t\276q}\'\276\257~\026\276\277\270\210\275+/\307\273\210\360\357\275$c\253\274<\225\005\276\240\0018\275K3\262=\320\357\340=\0047\'>\223E \275\275\035\246\275%\326\371<5@\310<\342\\%=\315EK\276A*\205\275\004\006\257=\024\020\006\275\034\306\276\273\354\373U=\030\2176>\203\346m>\337-\224\275\262\t\345\275|*\317\275\303\332t=\354O\271=\200\230\216<T\261\311=\212\250/\276lM\033>Um1>q\212\350\274\327\376\354\274\032a6>\377\377\365<\343\247\213=\270\321[=\321\"\341<\302`2=c\003\366=?\023\264\275\343\346\313\275\311\000\200<\326\305&>\244\206]\275\006\262k\275\034Q(>\322@\226\275\263*\255\2759\356\010\276\355\351\017>\253V\215<^\374\006>\263\334\025>\3657\241\275\267\036\274<G\236\n<\363\370\214<M\204\314\275\326E#>\026\354;=\325\271\321<\016\022\205=j\202\336=A\316?\275}\250\027\276\207\362\013=\241g\321=b&8>\227\236\261=\'<(\276\306\300\014\276\205\222\032\275\026\260\317\275\220\234\324=\221ET\275\330\361\334\275\233\214\277\275\016b\016>\200\327\036\274\202\262\023>\035\316#\276\231\004\241=\273\025\276=\'#n<\223\257\035<\322\034\006\2762w\311=\024\206\353\275\274\336\352=\225\225\331=\222D\n=\270f =F\331#=\210\000i\274\242I->\211\321I=\265<\374=\351H\232<\353L\355\275UB\010\274\002\337\205=\225Y\037>\023\212\366=\314\037Y\275\276\316`<\366\331N=\331\033\351=?*\273\274\207\216\000>M9\275=\305w\366<\225\377\007\2745jl\274\315k8\276\2641\376=\324\036\243\275\006.\243\275\205\347\264\275\276\277\250=+\325\223\275\343\023\272\275O^\330\275\211\217 \276\313\016\352<\223\256i\274\237\203\014\275u\254\372\275\005\267\274<~\342\314<X\031\333\273\361\302\330;K\352U=h\"n\275n\354\\\275\020\240\013>\203l\020\275\210:\200=!\307\217=`\306\276=/\365\375\275\363\036\225815\313\275\2268\320=\370k~=3\001\343\275\2620N\276\306j\003\276R\246o\274*\222\311\275\304\027+<\244;\206\275\343[\251\275\241\301\367=g\265\272=\352h<<\327#\000>\243\336\375=\325a\266\275\237\332\261=\237-\266\275\205\037\247=K08<\0213\354\275\352\255\t\276\001\014\360=t\224\335\272\344\335\275\275\331\364\010>Z\310\320=}\354\246\275\216\364\305=tK*>\316g\304<\025v\277\275\3744\022=\373)\025\276\033\350\325=\004?+>\300\3710\276\n\275\034\276ml\314\275\232U\203=[\276\356=.\377!=\322.\275\275\017*\302=\342\227\333=\003i\003\275\360R\264=5\226\234\275C\242\341\275E0\033>TS\021\276W\207\262\2755\'\240\275\n\321\260\275\231v\r>h\242\264\274\264\013\366=l\0349\275gH\033>\311\022\000\276\234\270\000\276}\337\001>U\375\301\2756\004U<O\030`=~\244\322=\276\311\206\275\260i\036\276T~\251\275(Xd=\241HE>\265\351c\275\363@?\275r\222\363\275\362q\351=\276\307+\275\200\3410>G\007\340\275B1$>Zq\300=\304\\=<\002W\263\275\323\342\224\275d\016F>G8*\275\332r\205=\225\301\230\272\024y\321=^\375\311\275\\\342\020=\362\013a=\223\260\276=T\200\276\274\215x\350\275\304d =\373\271\354\275\262\233\035>W\232k<X\2728>`\032\010\276\374\017\022\276m\246\267\275C\257n\274K\207\315=T\276F<l=9>\\q\020\275\251\240\222<\276@,\276\023,\033\276\0005\367=\343I\022\275\366\342\363\274m\220 \276\216\371\347\274\017tE\275S\340\244\275Kn\215=\330lH\276\271\'o=7P\037\274Z\312\024\276\006\313\006>\312n\357\275)D\345=K;\317\275\321\313\000\274\334\261\312\275\373\347N\275\224\006\330\275\230i,>3\253\r=m\177\251;\226.\312\275sv7=\302PT=\013c\314\275\343\\S<\243\203\370\275\203\366)\275\013\374\030\276\300\315P\276\303\014\207\275\004\274\014\276\233\361\373=K\205\030>\335\224\006\276\307(\220\274$\3279;$#\265<\235c\273=\360*,>\033\005\226\275<\335\276\275\330\306\206\275\317\207\207\275\000\314\274\275\306\031X\275@\322\311\275\344\346\300<\277_\313=]\363\370\275\374\212\314\275\251M\000\276a?\031>\312\351\231\275[\214\014>\225\222)=n\363q\275\260r\t\2766\274\265=\324\032h=e%-:\021\261\347\275P\244m=24&\275\214\204\003\276\244\"\344\273mZ\010>\377\"\370\274\366\330\227\274\225\272Y\275\320\010\017=e \025>\"\231O=\326G\366=\315\271\000\276jc\243=T\016\356=\303\276\265\275\345\231\237\275\024\347\305<\374\212\003>\264P\215\275\242\302\323=\236\222\324\275\321\240\310\275\336t0\275\354\313\003\274\200\210\227=\256\321&\276g\340\244=}\363\302\273.\211#>\203z\321=]\251\314=\305&i\275eD\315\275\017Q\334\274\250u\371=\330\241+\276BT\245=Rc\235<\257\277\206=\027R\037=\246v\n<.\037\022\275yB\350=\301R9=\341.\254=(\345\236\275\202\274\000\276l\004\304=\006,\274<\256R\314\2741\240\035=\t\031E>W4\'\276\233\204\320\275o\347\000\276\376\344\307;\377F2\276\027\340\243=7I\001\276\240\251<\275|,\035>\361\300\315</\365\010=\327,\273<L(\r\276F\000!>\216)B=\204=\317=\265\372Y\275\322\215\201=t\246\247\275\033\364\014>5l:\276.\033\273=\216\203\317\275\235\233i\274\357\t\033;\237\365o<m5\033>\200\243C=vz@\275\356Nv\275\004(u=\3256\200<\254\221\014<\226,\244\274\315\r\033=\315\r\252=d\006\017\275\351n\033=S.\352\274\224\003\026\275\215\257\024>\320@\240<\024\225\004>\021\263\026\27623F;\324\036|=\243\036\026\276\336\261Y>N\334\024\276\257\202\271\273\024@\340<\326\000\003=\2647,\275t\334\366\275\nC\313\275ho\351=\205\327k=\203\214\350\275\260F\016\275\025\321\336=C(\004\275\341fS=\356\204\354\2744N\023\274\246\243\315=\307(\r\276^\304\021>\241\376\227=\225R\276<G\310\231;_\350\352=\316\253\030\273!5\007\274\331l\315<V(\302=\207O\272\275\026\r\227\273\360\273\355=\356\242\324\275N)\\\275\036\353Y<nW\362\275J\275\313\275\351\244\201\275\372U\030\276\036)\233\275\271\017\035\275\312\354\200=2U\023\276\257\210\271=\266\351\336\274\341-\304\275\321,\216\275\223\220\035=\373\360=\275\323\222r\276\004R}:m\247o\274\014\027\215\274u\206\375=D\005\212=U\200\352<8l\236\275\215\314\241=\002\277\211=u3\"<\316\260#\275A}\266=\362\024x\275\302\014\037>\225*\226\275\342\365\372\273U\305\216\275Cg\221<\271S%>\032\rD>(vG\275\220@\320\273zc3=\320\212\272=+\032\363;\215)\341\275\345Ov<f\276\216\275\306\241\356\275S\364\027>\241\336w:\245\270F\276\364\220\235<\377\273\006\274\214\306\375<\255z\021=\207L\222\275\014X};\204H2\276\371\"\010=6T\241=\002R\257\275wM\233\273*\202\276=c*s\275\217\337\352\275\232\366+\2748\374\002\276\373\262\324\275\362\305\367=!\252\310=L\024\325\275\025+\t\276\350\370\242<\n\\4>\021\3233\276\232O*=\351i\'9T\005\016>8\272\274\274\002\303\354\275\254\320\203=\360\274\020\274\361\212\017\275\0140\r\276\036\251\213\275?\240\000>\025\r(\276\302\231\016\276A\260\024=\312\327\007\276\250\007\376=\310\265\300=W\324\010>\351\343A\275X@\311=\037\304\253\274o$\003\276\230@\265\275\022\2121\276\202\237\262=\\\220\233=\201\361\357\275\373>\005>\211S+>\r\346\370\275\346\342\021\274\350\302\374\273N\007K=\224\266\t>\343\357\202=;\030\032>E\037\013\276F\000\260\275\377\324\337=\276\001\303=\237\266\337\275\216\350\304=\336\216\244=\254\264\236\273\2020\323\275KP\020>\231Cc\275o\337\230\273\301:\254=&\"\313=4\014\025\275\227)\244=\346Q\022\276\255\344\006>m\013)\276<_\'>\231\360_>\213\006r=t\261\262\275\227\347\251\275\261,\315\274Z\037\371\274~\225M>!|\271\274\221\317\341\275uF\017\276c\313\n\276\302N_>\210h\037\275\235\265\241\274\371\267x\275\010p\325\275>(\347=\030r\343\275L\330.>\371\243\310\274(>\252=\342\'\356\275?\004\204\274K\320\214<\246\351\000\276\325\233\r>?\006=>\342y\004>\016\216N>c\r\203=\377\235o\275b\233\'\275\'\346==\304\271\017=\220\223\245=\246\035\025>Q\247\001>Ld \2760\316\027>a\312\347\275\246(i;7S\356\274;\264\300\275t\262\337=<\336\351=V\036\035>\241A\236\273B\034c=\035\206\326<\204\263\363:\375b*>i\004\000>Lu\003\276]\251\301\275N1\232\274\311\245\333\273\223Rz=\037\205,\275EV6=M\364\034>\321\245\221=v\376\310=\206c\220\275\177\235\377<C\254\227=\270Q\305=\251\211\247\275\375\305\272;u\323V\275(\375\026>\031w >\337\263\316\275\351\226\023>\320\300\036=\312b\343\275\010\006\213\275u\324(=D\025\371\275\240\304\324\274-\307\202=\214\'1\274\340\032\372\275\221\362\202\274\352P\227=+\303\370\275<\343\013>\304s0\276\356m\"\275\200!\034=}\354\272\274\224c\317\272\215\360v\276\363\230\230\275\006\216\321\275p\336A>\302\\\257\275\024}\201\2756\002\233=\266nH>\313\230\376\275X#4\274k3L\275\377i\340<\277\303\t=\263\244\233\274\367M*\275\264\334->xRF\276mMP\273\307(\r\276\000\365\364\274\322C\246<\272O\270\275\351\020\346=\177\340\r==1\376<\371\364\025\276k\022t<((O\275\261\317\200=s\337\255=\272\013->4\317\001>\246\353\266\275K\013\236\275\202\260\224\275l\357\037\276\"j\331=n-\037\275\372[0\276\323\261D\275\303\377L\276\010sT\276\255\266\031>\317l\'>\221+\301\275m\250\226\275\343J\217=\374\326\345\275\277\014\326=\371\341\232<\'O`=\330\264\336=?_\266\274R>\255=`2\r\27606\005=\314\311:\274\177\201\224=\256\253a\275(&n=\207[\003\275=@\200\275\t\374\375\274\004\014\367=F`\330\275\341\256L\275\375\177\230\275\231\216\211\274\006K\006<\370\224\336\274+F\010> \214~\275\355\226\006=J0\225\275\007A;\275N\001]>\270`a\275\345R\364;\216r\253=\347\250w=\"\262\201=t7\243\275$\350\014>\300\225\223\275$\373\215<\205?\370\274\251Y\300=\225\177\210\2769\017\002><\330\027=kCp>\003\324\341\275\270\313\010\276[%`\276/\007\201=a\2474=v\374\342=\347\" \276\360\347\217\275?\276\220<b\321\267\273\203/=>\350\3255\276\2325\206\275\376\375\217=\014U\036\276\373\3250>_\271\315\275v\017W=\001\272b\273\310!\307<%\353\251\275\247\316\n>{S\373=\207\220v=\202\360\347\273\231P\005\275!U\306=\t\223\303\275\007K\016>v\321\001=\262r\344\274w\320\220=\026\214\351=\377%\314\275@\261\032>\357\010\"\276h-1\276\nAY<\332\350\276\274\322\326\206=\004\342u\273\371\316\347\275\375\302d\275\301\236I=\320~2>\271\034\216=WR\234=\030<m=\027\313\277\273\"O\255<\324^\334\275-\272\005<\261\2657>\357y\034\276\t`W\275\231!/>\033c\350\274_\0260>n\275\016>\203\211\241:\340,\203\275\002\367%\276\034L\316=}Z\233<\336\226\307<\253T2\275\332\224G<\270\231\020>5\200\330\275d\202%>\\\231\272=[\020\341\275\320\3513\276\366\005\232\275\240\316\215\274t\377,\276\370\370\035\275\302\224+\276\331\365\225=]\301\323\275?\006p\275\214\351\311=\376D\326=\271\312\205\275\245\3213>\226\304B=\020n\036=\235\241\370\275\235\t\275=\021&\346=o\256\024\275\224rX\274\234?u\2753\t\240=\200\207b\275\352\r%\276\014\300\373\275p\363\347\275[\331\227=\037\235\366\275\266\340-\276\230\334\026\276#m\037\276\3734\n>R\332\247=\237\352\366\275\n8*>m\n\355\275\277\262\231\274\340u\025> \371\037>CE\215\275\357\017\335=\027\307V\275\013M\300<\245{\006>\343\352\224\275M`\000>/DK\275\333\2219\276E\244\037\276gK\343\275\370\265\362<t\312e\274\034)\026\276R\306\206=Z\032\022=\231\252\204\275\016\t\235=\213\321\227\275`b\317\275\272\177i\274\3242\243=H\324\316\274\306,\301\275\336z\010>\014H\010>\313\301\025\276\240e\347\275\360:M\274\242\256\235\275`\\$>\367\260\262\275\245\232\330\275\324\327%\276\320Y%>\370\264J<+\206\354\275|l\272\2749\373\r\276>;!>@\341\323=0\261\220=\335\031e\275\217\371\"<\241\033\326=\303\2658\275\344;L\274\307\256\006\276d\230\234=\251\2162<%\252\n\276\300\263\023\276\333\205\021\275\354\025\220\272\374\347\n>C\365\003>\200\276\010\276\t\321/\276\314p(\275\233W\033<\035<\030\276a\334\246=\232k\243\274\361\315 \274P\010#\276\376\363@\275\220g\r>\216M\276\275B\216\212=\376\304\035>MD\035>.\311\213=&G\031\276\010;\024\276\023\303\255=\215<h\274\242\206\353=\242\032\037>\324\030\376\275:d\274\275\354L\320\274O\266\001>\267\340*\275\027h\363=\257\255\234<pd\'\275\316j\352\273\010\327\020\276[\271\033=\037=~\275\370\302\037>M\376\340<\3246\206\275.w\003\276=>\027>7=\275\274\206u\306=\027\255$\276\237\204\331\2750\337\\\275\217\347\346\275\331`u\274\223\345 \273TD\025\274\033\305\002>Y\317\307\275h\304\020>z\031/>t\216\037=d]\267\275\222c\354\274\006\373\321\275\013\331\307<\236\223\262=\353\251X\275K\361\026>\204j%=q\025;\276\034\242\000\275\255\357\333\275\003@1\275\350,\333\275\2606\326\275k\325\'\276\317\250\265=\354\217\234\274\010+C<\201\314Q<-\357\252<\360y\304=\003\233\036>\253+\016>CJ\324=\347\000\004\275HC\224\275-\213\334\274\225\221&>\323\335\303\275\254\351~\275h\024\354\275PF\237\275\223\212\257\274Q|\213\275\207z\321=\364_\243\274\331\345\202\275\344\007\360\274lq\315==\026\030\275\227_\206\275`\207(=\377\221\254\275\350$M\276L\254\000\276\230~7\275\316\363\275=:\277\204=\316aY\275\362a\242\275\303\030\007<\341\360\237\274WI\315\274\274>\023=\215(\300\275\244- >\347\260\211;5\205C>\024\312\203\275\322\320Y=\177f,>\t\030\213<O2\024\276,G\302\274\017\241a\275c\275a=s?\017\276\212\336S\276\321T\225=Yf\324=\300<\235\275B\312\374\273\\\227\363\2758=\217<\265\203\316\274w.\024>5\032\262;V\204\322=\252\330\016>M\332&>\314\201\355\275\3479\007>\247\224\013<BV\013>\013\330\213\275d\305\375\275\030f\034\276q\314\353\275j\214\241=\351\277\244\274\343\353\357=\0143\033=\362\374\345=\001\313\317=a\"\231\275\037v\331\275<\351f\275s\271\206\275^V\362\273\246\037\350\275\352U\003\276\311\332*=\242\242\233\275\217\336+>\263\032f;B\177\317\274g\235\022>a\032\236\275\321\346i\274\004\254\202=\247\211\361=\216&\260\275\266\312\032=\230r2\276\032\232\345;\230d\275\274\346\2411>\243\275\357\275\366\001\207=?\255\006<\227iX=]T\340=\315\333M=3\276\004=\240\374\355=\251\326\343\273\237\367\204\275\316\373\027>\204\272\235\275i\327\025\275.\267B\276t\341\351=\206\010z=\220\004i\275L\231n\275\323\202\224==|3\275\236\014\300={2W=\206a\223<\242P\302=\270\373*\276\210\336\251\275\272\035\232=\325\215\000\276I/\021\276\310\350\254\275\233/\376<\034.\005>\363/\304\275\322V[\275\2054]=\304\341M=.4\354<\224\022\365=r\032\r>\304\243.>\022*\356=\246\273\377\2746\036\245=\307\243\223\275E\204\330\274\255\332\212:\013\231\234\275R\307\344=}1k=\312\030\253=\241\225\014\275\223\001\233=\235L\255=\341s\255\275\371\r\334\275\374\373\366=TMX\275q\227B\275\242{\213<\274\260\246\275\264\235\307\275\363\257\007>H\356\340\275V\375\345\275\240\277\000>Lu\002\276o\255\230\275~\317\240\274\206\316.<\212N\265\275\024\335\366\274\372\200\244\275\324\005\365=2\267K=<f\271\275\230\220\340=w\361E\2748\337N=\01617\275\230\361\271=`\314\013=~3\022\275\021\023\233\275um\025\274\021(\211=O\267\343=\342\275\213\274\007\200\273<\234]\310=\221S\212<\t)u=\007\207\237=\276-\265\275\357]\276\274\225\333\006=\250\027\313=\236\302\033<\274!\332\274)\232\266=@\261\221\275\364\351\014\276\210\227\277=$\243\031>`>\276\273ygs\275\nB\265=q\334\373\275\033;\365\275\240$\272\275\3779@<\244c\017\276\007#\000>\250w\004\274\364.\221\275\236\315\013=\310\017\274<\267\303\375;\014a\316\273\006\375\270\275\241\236t=eS,=\356\260\202=f\254\031\275!\365\002>\237\350\227;\365\226\250\275lEY\274~\330N\274\\3\242;\372o\003>\"\014{=O.C=P\366\034=OU\303<\325\254/>k\013\212=\010\276\304\274\351v\314<v\247\213\275\200\361\305=\317\253*\272\220\277\265=\250J\037\275m\002\235=_\310\361<\346\243}=\266\303\270\275\372C\347=\361!5\275\214\250\350=o\236\310\275G#\035>\037\312\222=\357\251/\27645\270\275\216Z\316\275\321s|\275nph\275\240\216\020;\250\257\357=\n\312m\275\037B\t\276\227\202#>a\266\252<\252=\001\276\217\233^\274\\\231\036>A\200\350=\245r\313=\001\000\363=\236\023\024\276\221\223,>\226`\203\275\035N\217=n\363\325<R\277\340\275\024ta=i}\334\274\355\275\337=\256[\037<\315\306\267\275\222\006\261\275\034\"\306=L\035\341=Xfq=\025~\003>\323\007\327=\002\353_>\247\023\032>/\265\007\2758\266\267\274\271\336\213\275\222\001\373=6f\331:\036b5>\362Q<>Fj\003\274\305\350\274=\024\237\335=\374\300\245=\243\375K>\261\236\034\276\000\'e=Q\272a>2b<>\363\024\n\276\030;\237=W\017\264=\316\324\252=\307\002<>%\352G<t\366\017>\272#^\275H\331x<\313F\271\273*\210#\276Q\323?\275\364B\336\275\347tu\275\224\241.\276\204\323\336=\220\272\311\273l\354\\\275`V\021\275k,)\276\177m\005>\307}.\275\220\0109>\232\367\324;\342\2352>1*\030>&\257\n\276\254\370\261=\216|\014\276c\307\274=K\201q=\363\331\351\275/\307\002=\266.\236\2756\363\240=;-\322=\333L\253\275\324W\274=a\360\322\275\337P\002\276J\354\013\276\240F\377\274G|\005\275\231\312u\275g\213\002\276t\023\017>\">\\\274\317\3665>e\303)\276\254\007\234\275\214o\273\275\243~\201\275\263\330\236=\007\022\303\275\334h\311=;\242\035\276\t\306\364\275\377O\216\273{m\370=\2659\255\275\202GA\274\306\230\232=$E\267\275\230t\034\275\233\222\337\275\310\255\334=\235?\033>M\340\331\275\247S\354\274\204\317U\276\026\013\200=^\220\274\275\216)\026=\244\224\022>>S\014\276\254\030`\275q\301\027>\0218\266<v\247\300\273\300m>>B\373\272\275\320K\n>\350\214\373\275\352>\334=\005[\367=\035>\023<\037\226\206=$_g\275\353c\374\275\313r\352\273\247h&<\345\232\260=\\\006\257\275\r\020&\276\373}\233\275\220,y\274\225\337\324=T\353\363=7\216N>\253\035\263=\326\026\226<\234%\037=B]\325=?-t\275T\257\206=+\206\n\276\241;\363\274\372\n\\\275\231\227\362\275\324\177\232;\264Xa\275\210\024)>\221\201m\275\025^\276=\332LD\275.\372\344\2750\216\320\273\245\013\237\275\303\327\267\275\n\301\373\272\024\341\317\272\300o\273=\ru\311\275\353\212\'=\324\240\222=\0149M\274\367\3014\276\212\036d\274\314G?<W\221\307=\346{\217\275\031\305\206=<\263$\275\013C\034>Ny\332\275^\352;\276<\350\002>\216\277^=\032 \010>\246\027?\276\253\250D> \261\r>\336\333\262=\024_\204\275v4y=\251z\311<\340\256*\276\013\347\013>\263A\306\274\0036b\275$eg=\306\243\003\276\213\325\001>U\2060\275\312rA\275HX\266=Q\353\207;\366\2131\276w\3256;\022\261\222=#\215.\276RTy<\227\357\023\276\033!\366\275\333|\003>\024\336d=\354Z\367\275\001\235\013=\251\305\324\275w\036\226\275RL\322=R\026\260<\253\245\360\275%\230R=@>\202\273\222\002\207\274\236\025\347=|K\337=\344\0050=\267\010\004\276\n\345\273=w\363s\274\230\032/=\241!\203\275]\212Y=N/\025>Z\266\261\273\224>\">?^\014>\017\206\004\276\002\203\322<\317`V=\226\256\342=\324\330\005>~\317\364\275o+\212=nn.\275\227\020l\275\376\003\364\275\033\356\271\274\006\245!\275\036\246\023\275\364\202\366\2750d\323=\303\2277\276\334\200 \274\356\267\221\274\206\235\226=\3504\020\2768\177\301<\026b\362\275\216)\002>\376[\217=\366\371%>\371\300\257=\316\341\026\276H\005\215<\200D\t>\177-\007\276\311\306#>ZY\344<\306\r\213<*\356\337\275a#\014=\004s1\275\350\t\343\275\324w\220\275o\330\351\275\241\325\274\275\035\347n=\256\025q=;!9\275\3260\224<\334E\032\275\375&\243\275\021\345\325\275b\324z\275\317^F;\312\013,;\353\335\030>M\353F=\006\316\361\275*\237\213\275\026\272\031\274\234\310\004>\373\301/\275\004\274\020>\237\336\\=3\220\006\275{H\372<\3755H\273\366\367\350\275\224\342$\275\362\246\274\274=m\032>\303\313b\275\274\3171\274\320\016\201\273}w\253=8\210\332\275\226=\252\273\252\n\004\276\3352%=\006;\2309\303\277\236\275p\362\370\275*\224\t>\312\022\336\275\356\263b\2762\0363\276EQ\254=\367\222A\275\352\366p=)\251l\275:\237\237\275\010\351\001\276\032T\210<\332X\363\275\350[\023=T\223q\275|\357\320\275p\205\026>i\276\363<x\301\357\275w\004\255=\326\246\314\275]\211\006\276\010\242\353=m\233\270\275\024\312\307;L\276\213\275*\240\327=O\037\337\275\247\005%\274\313\336\004;{h\025>\265\201\303;\327\363\001>CS\370\274%}\004>U\003\262=\330z\345;\377YJ\275\347\032\007>\036\240\273\275\365\226\304=\326t\365=\246\311\017>&\313\340<6b|\275>\272\013>lp\226=\344J\314<\020\234\034\276r\346\026\275\341v\304\275~G\213\274\343\026\246=\277\341\200=\003\336u\275\027_\353\2756\032\213=0\263\017>^a&\276\037;;=\345d\204\275+\223@\275\2635\370<\337\323\177\275\210\013\217=Q\231\202<\271\217\274\275\206\365\235\273Ea2\275g\3751\275\266u\224\274\010\244\261\275\3026\264=\2159\303\275\370\304\342\275\240\000\316\275\334\314\333:\365X\020=\003\027!\276\344k\033>\243\265\231=t%\014>[nC=u\373\032>@\360p=)]L\275pJ\311\275$\201\231\275i\314\000>\004#C<\003\361&\276\316f\264\275j\237\235\2738\372f\275\225\265\253<a\364Q<\352K\201\275\026P\223=\375t\314\275\357\2517\275}\230\334<\340\315\222\275Mg3\276{\337\257=\025\310\247;,\370\377=\223\010\215\275_n\t>\034\375\371\275\357\201\356\275`\334\034\275\337\014\257\275\364\031c\274`3\246\2753V\340=\217\202\240\275Ux\010\275\360\254\r\276\037\331\310=\375\303\263\274?H\342<\230\226\375\275\026\275\003>\232\277/\276\240\217P\275\343\222`\275\310Z\003\276\034\361\327=\324\315\247\274\003\357\376\275\352\360\230\275\'94\275\201`B>\311\310;\275\341\314/=\257[\350=\017\326\257=!\016\345<\033]@>\217:\r=Awp\275>\346\211=\370D\035>\367\341\001\274\003\326y\275q\225\n\276a<\361=\374\365\212\275|\221\031>\3167\224\275\375T\026\275\321\221/\273\212\233\027=\242(\346\275\214\326\355\275$\237\273\274\026\000\340=;<\003>z\036 \275\334\267\223=\2548k=Y\n\366\275\037\250\350\274\357\016\263\275!\267\246=P<B\274g\337x<\222\276\350=\005\221\357=\024?\210\274w\216\001\275\331\375\273=\320|\034\276\253\363}\275\317\211J=nB\361=4\000D>\034H\214\274\231\267\365\275F&\010>`S\020\276\374yR>\375C\031\276\351\271\364\275\371Z\230=\273,\303\275\017\032\357\275+\271\006\275\\\320A=R\264\306\274\347\353\306\275<o\351=\214\266I=\035\304\n=!=\331=<W\177<v\2753>\376\3016=\253T\\=\345\002\302\274 \t\024\276\267\313\265\275\006N#>\001\002\316\275\3221\024\276;\274\023>\030\333:=\353H&=\237\275\316\275\265*\373\275\005MY=\243v\272\275i8S\275\035*&\275x\322\220\274\031\037\010\276\2611\216\275W\027\323\274\3023\316\274)\nI=\261%\222\274\325\316\212\273\0351y<\236\023\007>\002?\216\273<4\371\275I\026\302=H\371\270=\210\031\341<\375n\234=hR\337=\032m\002=\340\004\000>\3349\307=j+\304=E\036\357\2745I\206\275\273Q\203=4\r\232\274\372\205\352<S\250!>\264\363\021=h\231\360==r\341\275\201p[=\027\242\315=\001\247%>\211~.\276KY\270\275<V\327=\242E\337\274\304\226\026=\235^u=W\262\224\275\237\027\237\274OW\342=\351\024\320\275(\202\210=3\177\370=@\327\330=Jv\025>\320LI=\275\370\310\275\325\010\310=\310H\026\275\332\265\365=\027\260\n>\354\030\005\276\007q\n\275\200\345\346\275\t\225\334;n\"C\275\235\224\002>\007\354\277=(\362\r\276\034\360\024\276D\261\277\2756,\023\276\007\345\242\275\003\244\250\275\333\226\226=\211U\207=\r\342\340\275}F\241\275^\214\315\275\206i\336=-\323\273=\021\260\017\275\362\220\026=Go:=\nJ\234\2741\250\021>\224\340\r\276\033I\354=\257T\t=\272,\360=\014I8=\247%G=b7\032>\346\006\017\276\307\357\006\276\313\223\027>\3155\032\275yf\031>\010\243\271\273\243\276\025\2763\006\036\276\3008n\275\237\022v=9J\007\276\356\363\203= \361\r\276\322\t\002\276P\\\252<\351\017\275\275:o\"\276\362\\|\273\321\322\357\274\231).>\200\275U=\305\340\026<:I\036\275&\251\201\275\2467o<`f!\276\216f\203\275\272\261\317\275N^\350\274\200o\022>\244\350+\275\001F`\275\251D\022\275\371\"\347=\236?\356\2754\367R>\370\357\353=:\217&\276u\033&\276f?\273\275s\373 \276zPv=:S\242=\244\341\310\2751\322\224;l6\003>\301\255\350\275\016\033}\274\271m\260=\220\334T\275\346\014\237\275a\245\245=\241no\275~\313\226\275n\320y=pN\302= \322\265<5\005\313\275\334\356\322=\362\345\014>&\r\332=\3377}=\020\253\375<y\346\007\275\373\211\230==\237\355\275}I\013\273\276\370\264<W\203\031\276x\344\271=\320\306,\275\334M\030\276\232\201R\275M\211)=\252p=\276`&(\275\257qY=\346\231\341\275\230\027]\2757\273\363\275\326k\363=f\240\323\275\315q6>\225\025\344=\032\347\334<\004\254#\275\310\204\257<\313\256*=\242\367m\275\231q\306=\033\021<<\250\334\271<\360\027\341\275(\216\261\275Q\207\026=|\323\001\276\375\321\332=\202\231\210\275\314)+\276H* >\363\237\237\275\300\017\250\275\207\375\344\275\237-\034>\204\325\251=\316\036\027>\227A\\\274U\217\343\275\242\304\024\276\210\316\357\273+\200?=3\021\036>\306\322=\274-\020\234=\245*\373=;\271\243=\2649T\273)\310\305\273\320\252\323=\006.\001\276\265\305\023=ae\347=\313\252\277\275n=\357=\254\035\000\276\265R\215=\231c\317=\251\343\037\275\253\205\021\276\301&i\275$\033\331\275\202=\357=u\2169\275\236\261\037\275\323\002T=\301/\241\275{<B=\23379\275\377\344t\275AR\r=\025\355\270=\242M\344=\207\010\314=\257\030\325\275\342\037\345<\377\370\223=\206w\347\275o\233\327=\234\230&=\234\377\316=\034\331\006>:<\316\274?:\024\276\216N\245<\350\254\310\275\370\303\225=-T:=\177\002\370\275\300\302\034>\306\021\\\274\004W\340=\361\355\022\276\033*q=(~\300\275\214I\240\273\242c\013>\324\353;\275\354\322\213=\262\t\363<e\320\033>\267H\276\275\376\340\317=\273=@=\232\217\010\275\232\273\021=\336\007\365\274\312\315\271=N\027]=J\360\377=\337\\\313=\326\324\r>\033,\246\275\365\225\311\275\003\254\n\276\375x4<\233\262\250\275\344\325\027>p\355\333=\255\330\036=\034\343\026>2y\321=j\326Y=\3354\271\274\030e\037>\326\343\243\275\314\276\271\275\316^\025>5\027_=\326E\010>\211\246\317\275\261\271%\276p\320\010\276r\351\316\274 g\265\275\255\310\r\276mo-\276\203H\022\276@E\301=\270X\030>Fd_\275\'V<\276\240\375\235=\363}B\275\274\303\013\276\343\257\017\276\253H\246\275\357\221\203\273\234L\306=\337#?\275\360^\346<\003^\261=\266\263\000>\213\371\220\275wX\343\275\3127-=\032c\223\275\343\331\021=\327\211#\274\370\245\267=(\233\345\275\236e\253=`\327\034\276\302\021\247\274\243M\201<\344\324\034\276z\257\244<\335\n\n>\010\036\236\274\023k\245\275\231.>\276V$1\276\t\325f=\003n\021>1_\212\274\311%\222=^^\303=s\323\315\275|\317O<\240,e\275\0135^=\3446\024\276$\t\244=^\3521\276\'\220\032\275\360\017\223=1\037h\275\220\361\000>\320}Q<&\240\204\274\322\276\276\275\273Q\020>\215/\004\274^0\243\274\362W\300<# \272=\3558\204\275\002\013\016\275L72>\261\246\226\274C\363\014\276,\344Q=^\"\"=\231\351\214\275\361\232\365=aM\344=Q\251\361=\272\247\255\275\311!w\275\016b3\276\374\036\016=\375nA=\023\325\316;uR\365\275\000!@\276\025W\201\275U\224^\275\"g\231<\201\036*<fRL\275\206\202$\275\321>\024\276\250\001\240\275\315\253\375=I\275\353=8\256k=6\361\001=\306@\373=\214\306\277\275;\277(>W\241\031>\215\245\367=\"\366\333=\301\240i=\325K8>\245\361\022>\016G\202=\274i\244=\373T\216\275\355B\355\275\211\227`\274\273\263\224=\364\334\033\276\304{\225=gZm\275\211!\247=\371&\260=\236\363\277\274,\027\260=\342\310$>F\177\315=\2028s\275\243\3413\275\2733\"=8\312\323\275\230\362z\275\304\032\225\275\227W\212;\337\233\002>\024v\365=x\344\351=\354\200}\274\374*\341\274\321\350\013<\351\230\005\276\237\215\233\275\305F\237=t\257\353=\003P\000\276\323\303\233=\316\235\332\275R3.\275\314\017\037>\250\276\245=\253\311<>U\325\034>\327B\n\276u\027\013=\321I\371=`\'\262=\224\300\271=L\003\031\275\325/\213\275\353~\326=C_\263\275:\255\244\275\231\264\003\276\227\004\327\275W\342\033<\354R\026>\'\217\365=\004\201\346=?\332s<\220\025\034\276\304o\311=\205$\265\275\306\023\362=J\267\277\275\332\327\312\275\017\360<=E\202\030>M\250s=\204\374b\275\276\025\007>?0\343\275\177\347\327\273\353\221\275=~0\311=G\261\251\275\350\321&=k\244*\276*\247\234\274\022@\376\275\300r\377=h\023\'\275\ne =L\014\222:\231W\276\275\037\313/>/\n\327\275\001n9=;\343\017><\244\210\275\023\264\344\275Rz\245\275\216\202\211;r\005\336=/\240\235\273^\014\377\275D\265\002\276.\333\336=\211\357\357\274\253M\021>U\300\302</\316\243=R\032\221\275\\\206\022\276E\006\010>\213\215\230=\215\304,>\372^\277\275\343{\326\273\300(\222\274\342\321\327\275P\rI\275\306PS\275\373\323\027\2765\362F\275\315~\301=\20625=\"\202\306\275\\\277\240<>\363\027=\016@\307\275\030\324\032\276}\372\025\276e\376\211\275T_\021=)\345\320=9%>=\0233\357\275T\235Y=K\214\006\274\265?*>)\372\036\275\215!\207=\037\312H=\222Q\035\276\227\335(\276\325\342\250\275\350\014\">\231\2148>\027\354\214\275t\313\036\276_\377\014\276\250\364\353\275CQ\315=\352^u\274\257L\023=\323\0320=,\020\014>t\342\004>\025\022\222=\274\'G\272!\265\303\275X+\325;B\267!\276A\370\007\276\314\266\031>\367\005\323=@\'$>\357i\241\275-0\021\276\2446!\276\347V\023=\200\312v=l+\362\275\352\310\334\275\t\345\022>a:\026>\353G\205\275\217\321P\275\214\021\035=\254\311H\276\257b\361\275\256\224\n\276\216\263\t>\371!\255\275uu\311=6\022\335=\266\r\335\275\330:\274=\330\323\006\276\r\231\301=\363\325\'\276\342\220,\275\273\013\225=\311\2675<\374k\211=h\224V=\017\341\364=\335N\\\275\217-\037\275\000/\214=\362G\270\275\333\252[\275\257-\307=+\007\347=\262\026\252\274\346\3372;\347\222\322\272>\215!\276\304\007\271<\202\261\267=8H\026>\312\253y\275\361\216\216<\377\300\347\275\304\206A\276\270\031\337\275/3\241\275\032\213\224\273I\343\361=\262Q\245\275a\005\233\275\320\332\323<\315\341\340\275\201@\301\274\220\335\014>[\352J=\306\335Z<\273\346\023\276\247\265\376\275q\327\273\275d4\331=\323V\356\275\334\201\327=\266\212\304\275\350>o\275y\270\265\275\002\t\210<\222\333*\2742%&>Y\335\354\275\030\312R\275\024f\362=o~\030\275G\234->4\006\251\275\346\207\021\276\271;\034\276\014\036\327\274\016\332\216\275\326(c\275\356\274\032=j\343 =\031\321i\274S\341\242\273\215 \330\275D\313X<2N\022>\274\352\221\275)l\207\275\240 \230\275\230\343L\275\371\246\036>v\360>>Q\303A\276TI\231\275\376s\365\275\025\316\264\273\027\237\"\276k\256\343\273\3333\227\275:y\016=}Y\036=\300\304+\276\260\254\252;~\327\227=\247\2102\275\006J/\275\260+l\275\224\377%>\260M+\276g\322\334<\034\372\000>oh\264\275zf}=\252\260\036>\237rX=\025z2=f\236\352<\010\211\230\274\005Ol\275\035\213{=C\340\266\275\255\270\006>\371\264\262=u\235H\276\260\026\010>Bs[=\333\334\233=Xc\013>\200\337c\275\300\236L<\240\242\361\275[Y/>\241\350\320=\023\215U< \272&\275<F\020\2764\020\000>\374\217\232<d8\363=\315\'Q>\323\222;\276\271S\037=\372\376\023\275\004\375M>\256\n\'\276\032]\304\275\372P\222\275Y\265A\275\210\320/=An\350=5\252\016\276\342\315N<\376\336\374\275X\264\200\275_9\241<\n=!\276Q\3413\275\333|\014>j\3619>\3335,>\351\340\244;\034\360\221<\341\t\243=vZ*=$x>\276n\237\205=\321\276\003>\245\022\304;\232\202\007\276\255L\034\276(\256\242\275&1L>;N^\274\022\335\202\275&<u<\325\207z\275\373M\r\276\251^\275=\303%\354=\265x\374=5@d\275,\337\000>\321\210\321=~Q+>\3428\036>\277\242\323\274a\263q=7\223\252\275\336\021\255\275\227\256\035>\023\345V\273cZ.=a\017.>$i =\353y\326\274\261W\013=V\014E\275\362\337\t\276D\301E>t\217\304\275\334\276\032\276\231\270\265<\376~\034>,\000C=\035\373P\275\004)\236=\327\252\354=3\225\242=\377}\253=\224\200\000\276\232\307\020<u\375@\276B\365\"=\'\235\201\274\333\203\004>\005B\212\275\312\330.>\n\211\307\275nV\227\275J\230,\276\020l\323\274v\357\035;\252\303b\275\361j\030>xB\213<z;|\275\277\204\244\275<o\006>\024\221)<\336\320\303\273\242\225\250=\265\235\360\275\3108#=\330 \004;a_\242=\02196=\355\302\022\276\324S\303\274\251\330z\275X\275\353;k-\351;a\263\374\273\2719\t=\203z\351\275 \217\341=\007\025\326\275Z\325\227=\240\353\215;#\224^=\367^\355\273\200>:\274x\016\303=\027n\371=\231\216\266<\023\203\027=1t\334\275\316\222\354=\300\001\"\275V\254\016\276\031\320E\275\n\260\342\275\233\236\235=>c\266\274\353F\366=\210\036\253=}\217\025\275\327\273\343\274\317#~=P@\026\276\232\350\325=\201\221\257=\302\233:\275? \025=b\341\206\275\322\223\271=\'(\354=\214\211\235\274\322X\004>\022\233\014>x\261]=\224\236\212\275fR\027\276\262\213\037\275\275\273b\276\302\3373\2769\377\374\275\334S\014\276\222\243\371\274\223\321 \276\217S\222\275\356\347\205;v\\\266\275g\262\230\273un3\276\275a\220=\227=\006>\367\336P\275\013LY=\244f\207=\037\227O<N\257%\276 8\312=\246\013!>j\356\251\2753\256\213\275\006#,\273\303\t\022>h,\002\275\023O\006\276;N\375\275\261&\r\276\305\217\363=\007\"L\275\030q}\275\257Q\270\274\001\377\323\275\250\374\370\275\225{\374\275J\2668=\003\014\353\275M\206\000\275M\222G\2759\211\267\275>\305\312\274\266\3401\276\345\364\027\275\217\331X\275\256s\361=L\276\033\274\"/A\275h\005\236\275\346\255\'>K\260\265\275\016\251\270<\010\300\220\275\340\360O;\017\320\367\275W\307\r\276\342\207\303\275\006\025)\275R\001\362\275\034\276\333\275\\b\204\2744G\355\274\211\213\233\275\225d\270\275\232\257\020<!\3564\275\214\234\353\275@<\013\276\223\313\377\274\177\375\354=[\301s\275\023\230\205\275\354\221\226\273\214\020\307=+\032+\274KH\247\275~\200\241\275\006\013\202=\010\333(\276{g\262=\025uk<k\020\025\274\371}\n=\236\323\022>\372?\322=U\177\006>\277\025\244\274n\205\202=)g\316\275\221z\001>\3325$>\307\373q:\337\241\306\275\274\223\264\275\344\213\003\2752\253k<\207vx<\010\234c\275\260*\027>}j\374\274\354\030j\273\251N\237\275\244G\376=\230\224j\275\316\240|=\022\350\265=(EO\273\001i.=7\300)\276\247\343\001>\271\316x\275JHr<\374a/\276\230~\223\271{G\361\275\253>\365=4h\370<\375\335;>\372\207\022>\331\374!\275\036\343^\2756;\367<\276Z\004\276]\332\360=\324p\177\275o\237\333\275\243\307\245\274b\334\030\275N\2747>Yt\230\275\377{\256\2752\365s=\2022.>\344b\004>\245\331\252=\3179\004\276Y\270\352<\363\376c=m\007\035<z1.>@\326O=M\344\025>\241T\314=h\330\217\275\233z\215\275)\341%\273@\253\347\274\247(\252=\354\222\270=\256h3\275\004V\000>\334\234\230\272\306s\360\274\211\3707\275\346m\316\275\'\350\215\275N\223\3108\033q\317<\014Z\373=\371H\n\276eR\211=(\021\025>\016\244p=*E\336\274S-\"\275\202KJ\275\025\255c=<\024\006>Y\311\274=U\234\342\275\275\234\023>\250_\376\275r\223\030\276\333&w\274\250\237\314=\275\367U\275KJ\371=2\2672>1\265\003>Y(\001>\234K\010\276Fx\027\276\006\260\013\276\304\305\376<\244y\036\276\222N\221\2757\232\177=\221\366\240\274.O\227\273M\023\032>$\227)>n\250\371<\225\357\256=\264)\253=\221\002\020\275I8\262<\257\271\006<tF2\276u\263 \276\004\202\245\275?\264\276=\366\373\261\275\231ZE\275H\017\035\276H\033\371\275\345J\303=\241\201\006>\0369\374=\330\2464<C\026!\275\2068\036\276\017\336\274<\0204\333=\340\0174\276!(\r\276A\212\034\276f\345\374<xE\272=.\367\235\275\232\240\004\273\032\177\200=\\J\254\275\244\3435\275\253\313y<\263\037\020>-\"5>\305\363K\275\265\033\274\275\177\346\014>\212G\300=e\017\374\275\025d\272\275!\010\024=\247q\003\276j\025\350\274l\363u=*\263\345\274\020\357,\275w\260\230=\350Q\257=Y\346\216=l\365\321=\'\227\">\215\013\325\275\014\212-<uGl<\367a\227\275\234y\004\276\247v1\274\023\223\345\275\010\306k=\300f\\\275|D\032>\007\033G\274\260A\232<=\3648\276\240+\020\276\351M\262\275T6\004=\234q#\276=e\371=\272\321\206=\376Hp\274Dn\262\275q0\004\275\223\305V\274\204\"\350\275Ml+\275\317}\007>\205\333\227<ya\021>\201\363\211\275%,\230\274\353\036\275\274\266\217\0278j\371\305=A\334L>\353 \030\276\227!V=\306Y\302\275\223+q:=\324\325\275\374:\216=\014}\">h\022\251\275<\317\020>\242\257\371\275z\263\026\276\261\004/\275\335\334\032\276(T\277=y\035\216=\240\3725=z\244\246<\007\301\324\275\255\233\006>\177\256\002>.?V\273X2!=\177\016Q\275\341\352\273\273\266y\367\275F\r\261\275\207\250\377=\203T\373\275\032.<=\3132\264=\273k\024>\346&5>\221\210\252=\255+\317\274\002\254\016\274\264\205\027>\301\027\023>\354\266\274=\234 9\276\026$\337\275[\247\r\2762_\264<\270\225\265=\034\035\317=\373\347K<\022\3215\276.\300a\275J\266\222\274]\353R=)\t=\274\222\323\250=\253\212\324\274\325\327\256=\250\'C<\247G\236=\244\221\366\273\273\373\334=&\236\336\274\347\236\002\276\230Kf\275H\"\026\276\214\335\344<\001b\372<nc\026\275K7\332=\262^n<\016yK\275,\177\374\274[\377\376=Q\233\345=\210\360)\275u\203\027\273\024$\214=\202\360\037\275>\340\315\274\254\267_=6-_\274\377^\276=E\273\314<u\374\354=\245\303&<\360h\263\275\374z\307=7\025\263=\367]\235\275[M\034=S\004G=?\312\315\275O\241\233\275F\251\320\275\230\317\375\275T8\315\275\375\335\270=\242\251+\275A\276\272=,B\372=>\240n=\031\327\272\275\025\305\344\272\205\227\323\274\203i,\276\021u\225\275\032$L=\362\233\307=\327\014|\275\013B\216;\202\350\312\275\031D\267\275G\376\031=E\337\205\275\312E\235\274h\3675\276n\250\212\275\330\270\333\273\206\330\276\275\025*\n=\366\007\321=\263\005&\275\353t\361\275\254h\023>\221\256\026> b\222=\222\230\263=m<,\275b\217\002\276{\310\032\275!H\004\275\342l*=\346\331\034>\007g[\275Q\254\240\275\355\236\220=j\313\273=3o/\275D\323\'=0\236\244\273r\233\267=h\020j=\221\004\t\276\334\213\327\271;]\021>=z\376\275\304\0149=YI\320=<\233\352\275\234\276s=>6\216=\337\327\035\276\20006>\224\327\212\275\235\305\301:9-\363\275\246\276\311=\3653\252=\257\267\261\273kd\335\275\267?#>)W\253\275\332\\\002\276_\324\007>\014u\244<h:\356\275\332NO\276_\026\n\276\013c\362=\217\331\246\275\215@\204=\265\212\266\274\252\304\001\275Co\277=\255\330\360\274L\036\231=\t\346\037>\356\320\206\275wM\376<\371\350 \275\203:\211<0\202\202\274\314\n\332=\"R\246\275\270\2167\275\010sG=*\205P>\220\303z\275p\025K>1\214y\274)\033\275<\330\021\370\275\341j\013\275G\347\344=f\217\307</K\311\275\276\346n=\314\257\360\275\201P\034>\253\366\326\275TjL\275\355\230\">s\277t\274\325\243Q\275\tbR\275\022\235\014>\'\256\n\275\375\002\001\275\347Ex\275\215?\027\276\245\357\022>Kuh\275r\224\023>h \004=\"\354L\275rb\016\276X\333C\275\215\317=\2762\207\037\274_Yj\2756>\201\275(\352\225<=\274\274=\375\200\301=\221\331\325<\344\206\276=\2418\361=K\374\202=\216\037\335\273<\335m\274\026\210\213<\006!\021\276\370\004\"\276,\")=\237\354,<\003\033\010>\000j\032\276\017*5\276-\265\014>r\243)\275\337\340\035\276\301Rl=UY\316=\222\300\375=n\273\231\275\256\356J=\377(\021\276\206\311\235\275DZ\252\274~\006\205=4\034\032=\3535\003\276$~\253\275\213\227\254=\362\210\016\275\335\355\031\276\260\374\367\275m$\277=>T\275=C\355\223\275\346=B=\223q\034\276\207\303\300\275\240\027\010=\005E\306=q\301,=\205\233.>\305\271\223\274\211\242\214=\01461</O2\275\237\356p>\351\203I=\\o5\276\3438\346=jT\223\275\300\032\204\274\2462;\275\207Vj=\023\303$>\226\311\367;\271_d\275\256\035\270=\243\257c<\301\210\327=\375\321\014>\004\257\264<\027G\177\275j\211\373<\231(d=\276l\332\275\264\260?\276\356\354\"<7L\255\274\031\024\306=-\323\361=\336\260%\276\263\237h<\230k8>\231\221D>\214*\245\275\"=\010\274h\022\311\275\223\3070\275Q[\270\275\177\243\334<\247\303B<\331\240/=\327\272\322<7\t\005=^Xh=Q\010\344<\014\002\";Q\022\271=jr\330<\325\334w\275f5\'\276v \345\274$\304_\275?\227E=}\226$=\214\005\264\275NkC\275P\324\004\276\372\rM\275\001\300>\275\341\372\331=\206Y\021\275\306\222\265\275\244|\031\275\343\225\022=T\220\374=\233\331%\276\201\014F=\024n\252\275\224\376N;\2457\274\275\335)\221<\203\001\212=eC\212\275\271\320d=\264\331f<\352\257\374<\031\353:>\315\030\306\275:\312\r>\254\326$\275K\304\013=\247\007\262<p\312\025\276\345=\031=\211\321.=2\214\216\2751\"$\276CR\206\273h^R=\225\317D\275Re]==\027\226=\240\321\231=\024C\372\274\013\2512=\217&]\275\303\304\330=\334$\037\276^\016\036=\036\374\261<\2554\251\275Qj\016;\010\231\034\276\03024>\221\275$\276\004\324P=X\227?=\242[\r<\301`\323<\211J\023>I\226\376<\024\250\312\275\353\032\236=\245\031\217\275m\223\000>T\224\227\275\227p\372\275\327\330w\2758N\341\275\032K\021\276\363N\013\276GK\005\275Gx\343=\370n\353\275\243?\264\275\271l6\276\206\2062>\243\024\260=\377\263\313\275Y\315\335\274\344\232<=\030N\220\275t\317\327=O\336\361<}\276@>\250.\010\276K\311(>\035\237\004\275W^\n>\031\310\266\274.\266S=f,\376=~\340\232=\203\215%=>|\223\273\010>\312=\346\321\177=L\342\t>\350\033f\275!`\001=RA&\276r\213\177=\261\006\251\2753\177\313=\341\200\007\275\2050\330=\377\213\r>9\253\017\276v\254m\275\320_\300=\326\306.\276\325?!=\253\233\253\275\361\235\227\275D\306\267\275\340\264\006=\036\310\022>&8\340<\2701\223\275(p\212<\3074.\274Cq\303=\301Y\003\276\010+\322<\365\265\366=\245\276\324<\325R\010\276\003\263z=\002\266\206=ObR=\340\214\355\275=\n\350=+>\036>v\026\006>\250?\327=`\347z=\311m \276\346-\200=f\022\n>\347y\022\276Z4H=3\3110>P^\372=\tF(\276\217\021\247=\322\2440=9\215\005>\352\006\026=\332\016\240\275_\202\032\274\000\233\254\275\023\205\344\275\035\337\330=\320m\236\274\240Q7>O,\366=\220!\n>\005\037\236=\000\027\300\275\006\351>\274\322\241\345=\027\223\001>\311\335\034>a\334*=\3569\277=\226\'\362<3\254\004>\354=\274\2751K\234=\010\231\212=\257\234\210=8)\241\275\022j5=\003\2266\2756g\036\276Q\t\017>\013\344\265=]=s\274\244\243\000>\267; \275\256\221\"\275\377\203\017;3\341\311<hD\376=\365d\027\276y!R=\302\310\020>\303l;=\031\177\035\276\000\342\277=\323}\016\275.\201\346\275@\2724=\350\370\253\274\2031\203=\214<\276=\313\267\007\275t\035y=*\313\021\276\005\022\360\275Z5\222\275u9\376\275\323;\310=\347\353~\273\033(\302\275I\201\330\275\333\314\341=Y\001\255\275\017\354\330\275\004j\360=SF{\275\030\232\247\275H\355\374\275\241\267\243=\033\227\201<{\363\362=\256\211\014\276W=\035>\307:\261\275\367\254\305\275\252G\316<\357\017\242\275\010\277=>\357\003\327\2752B\317\275.Q\257:#\214\007>\rbD>6#\325\274\370\205\222=\347S\021>a^*\275T\357\016>\231dR=\2354\020=\004\"\243\275\254\342\212=\205\356b=\373\200\220\275\224\220\376=\220\027\014>\232\317\256=Q~\321\275\267\240\035>\260]\215=F.]=\013\005\020>y3\'\274{\277\027\275\365\311\210\275\360W|\274M@\223\275\325\000\376\275\177>\227\275\334S\241\275\025\"4\275\031\030\337;I\357,=<4g\275\214\224\367\275\376F\256\275\362\247\017\275lr\001>lf\360\275\333\275\211=\030\373\266=v\246\240\275\253\026\262=5+\016>\214\202(\276\212m\024>uF\'=\000N?\276\'\032\327<\023\220\353\274\203\252\203\275s-\266<K\242\215=x\304\336<\363\352e\275@\352\3269\270`\365=Z\214\347=\017\252\213=tR\027>\276p\030>r\313\353=-&M>\266s6=?L\321<\201`\324\275\305\321\372\2753=\220\275\246\317H=J\220<\276\n6\334\273y\374\336\275\211\260\346=?\2641\274\374\247-\276\345v\364=\223T\001>\217\306\211\275\177\210\263\275<&\247<\n \016>c\017\034\276*\243\026>\364B\006=\277\350^<X\"-\276\334c\022>\205\036\026\276\0109\003>\325IQ=^\010\\;`\265\023\276Z\036p=B\352\271<\210\004L\275\206\360\217=\216\276C\275\365\353\305=u\246\330\275\376[)>\261f0>Qd\341=\277\224\267\275\262\t\222\274\323\361\250=e\300\002\276Y\256~\275up\252\275\375\026\231=sL\t>\216\220\"\275c\353\027\275\212\235\027>\021&\'>;\316\024\276f\376\355=\007RS=\001\240\330\275m\261\361\275:\235\322\275\371U\220\275\255\272b=/\260\224\275\005\261)>\004\003\r>,U\036>\034\200\344\274\331O$\275[\200r=\314@\260\275\t&P=\351K\206\275\321\237Z=ix!>R1\">\264]\030=\303\242,>\366\2176\275\232R\266\275T\276\t\276k\356\322\275\350\231\024>\251U\021\276\t\353\211;Xh\356=\023UB\276\261\2609>\353\352\223\275\260\226\031>\305\261\310=\314\240\331\275Xz\234\275\034\210\367=\355\037V\275u\266\033\276Ih\010>\325\257\217\275,\237O<x\372\246\275\020~F\276\220\2661>a\246\313=\363\306\010>\035( >L\260/=/\324\252=i\355\257=Sr-\276N\356\267\275\331b.>R\300Z\274E\273\010\276\001\227\033=\2635\220=\214\325\225\275\223\276\264<!\316)\276\244\2340\276\307\370o=\025B\027=K 6>\330\021\016>\235\306p=\307\266W=\006(\375\275=\035\r\276\363q\251\275\203\255t<\302\352\304\275\334\236\313\27574\n>?\237\246=\240\032\363\275u3(\276\321\374?\275\024?\300=\327\326)\275\360q\317=\1770P=\351d\325=?\323T\2759\261\321\275\002A_\275\345\005-\276\212\334\377=\327\270\034\276<\t\013>oV\322=\371}E\275x\325\344=\024\210,=\265\271t=\272\255,>Y\237\334\275\334q\n>\217(:<\201z\202<\356\024\256=\021r\023>h\006[=\314\350\025>XK\022>\337WE<\355\2661<&\311\371=\265\025.\275\270y\353<\322!\030\276/Y\"=P\006\030\276\237/\017>\377\n\005\276bZE\276\'\344\263\275\034\315\246=P\335\037\275\314\367\034\275\376\306\207=\246Qt\273I\302&>\352J\376\275\027\3700=Q\271\302\273\227m\321\275\227X\353\274t\026\360=wH\340\275\013\302*\275\244)\020<\237\243\316\275\256\272\014>H\005->\371\230\n=\304\305\\<hA\234==+\320\275I\030\315=\323g\313=\325\014)>\367\023m=\3531*\276\037^+>\256z >\262b\270\275\200\212\351\275\017||\275\302V-\2765\270b\274X\276\262\275\223\247\344\275\306\224G=\315;\273\274\001I\364=p\3303\276UY\262=\316\205;;\313\222\215\275)\307\013\274\367\\\035\275C\355\002=w\343\037\276\321\260l\275\342\222.=\267\375\205<\034|v\275\361\245\010\276_*0\274SF\001>\037T\360\274\363\253\273\274\"Q\211=\270C\017\276o\302\366<\341\211\004>/\353\226=uvq=K5@=\306\267\003\276\244\343\362=*\'\306<\010!\010\276\263\234\322;DI.>\376\261\307=\305j\225<\270\306*>!\312/\275tep\275\235u\366\274HM\020\276|\226\003>\033\200y\275\330\224\366=\247K@\274\257\326\211\275\037~\237\275\305\334\014\275X\013\266=\t\206\370=\'\n\t\276sk\013\276o\207\014\2766\331\271\274\207\017\211\275\"\364X\275JW8<\363s\310\275\n\002\271=\231(@=\t\312\005>\340\001\022\276\252\310\034=\324\345\370\275z\2563>\304\2678\275\372zx<\013\372\t\275\310W\025\276\257\027\225\273e\220\276=:\037P<J\346\276=Z\347>\276r\353\001\275\215\252\340\275}\251\020>\232)\215=\350\274\322\275]\257\344\274\252\022F=\330\367\007>\337\236\253=m\354\204\274\342\223\345=\314\020\265=\216\226.\276\246+\244\275._\367<4=\265\2750\024\234\273y\306\227\275\3509!\275\371\264\037>\376\013\001\273\357\256\240<M\203\004\275D\031X=\006\353\336\274\020\204\337\275W$\371=\333\013\215=\251\316\270\275\364\343\201\275\036^\346\274\344\306\351\275\032?\321=\257\347\332=\265\023r=\261\312\371=*\323\000\275\004\303\237=\322\2316\276>+\274=i+\230=\225\352u\275}U\356=\'\246\016=\3126\303\275\343\246\374\275\025\210R=\353\363\360\275\253\364\351:\t$5\276\333\275\254\27535Q\275\t\323V\275\350\332\251\275\311p\221={8f\275\250\323p;\254\335\355\274\252U\237=\343g\264\275\211\237\032\276\323\3221\276\377%t\275\022J\001=-M\367=E\323\366\2756\361%=}\317\341<r\251\252\275\325\236c=go\275\275@\325\302=\232x\254=,\2770<|N\350\2756\321\215\275\236P\337=\207\365\001=E-\004=\372`\266\275\267+\221\275p]\206=\330\246\006\274\0171\352\274\320\367\017>\022Q\002=\335\307\247=D~\006\276\232\222\303<\274\0259=1\224\234<\360g\273\275\362\224w=ZZ\000=\214H\325\275\264*_\275jR\267;\353\336\335=\334\232\252=C\334\245\275\242GR=\0251\363\275\240\311\325=Oi\006\276 \022P=8\024\003\276\320\244\327\275%\214\340\275\006\225n<\370\234g\275\022e\023;\254QI:F\245G\275\2447\252=\022\2141\274t\245\253\275J#\236\275\206I\201;\336\316\354\275z2G>\333\270\001>\246\221\254\275\304\t7>\014(\240=\370v\376:R\217Q\275\014i\254<\031\301\206<b\342\333=\310\221;\275J\036\025>\253\216z\275\330{\327=C,\313=o\243\010<\223\314#\2733\201\365\275\rd\356=\323\374\002\276\316\217&\276Z&\275==V\321\275\214\300\204=\3245(\274 \200\370\275\225a\224=\210W\006=sv\361=v[\223=\263\262\375\275i\027\303=*yf\275\027w\206=\244\207\271=\232\031\007>\007\212\305<\341\266\301\275\305\203\014=\001\336\032=\234?\250=\347\210\347\275S\007Z\274{+\257=\200\374\344\275\261\330\303=`\243u=\2714\311\275\317\360\350=)\351\242=\262\201\374\274r\004\005>^\363\n\276T\332\303=\014\303\227=p\232\255\275\343\271\002>u\356\342=G\350\311\275\252\227\372\274\234\022\341<\226\326\371=\251\365\037=\314&\017\276\333F\004>A\335\337\2750\246\313=\331e\035=\321O\201\275\347\267u\275|\234\r\275H\232\302\275\276\315\005\2760\230n\271\336\204\002>\0334\020>S\246\363=F\2327\275\024\200\324\2750\232S\275Af$=H\254\020\276G\211\363<q\371\013\276!j\313<\024f\026>\3420\377\275\206j2=\234 \257\275n\3642;y\032\271\273C\370\330=%D\276\275~\271\342\275\255\265\322\275=\257J\274\230\374\375\275\22623>\205o\302\275\"YE=\036\220!\276(\233\027=\223~\242=\354\245\310\275\021\347\253=X\200\250=\217\240\365=\320\321\"\275U>\260=Y\327J\275\362\361\212\275\210\377\342\275\371\201\205\275(\261\010>c\203\221=\271\003*\275\356\325\222\275g\221L=\031\324\353\275\213\276\'\276\3368\006>\352\262\003>S\354&>\352<D>\251\017\342\275\200@\342\275\237\001\316=0yF=\002\302:=\340\256\023\276\353\301b=\275d\323=\023\2012>\315s\006=\374\253\360;\014p\024\276.\375\'>\333\002\216\275d<\327\275\331-t;\313J\014\276\254\017\330=IT\224\274\005\010T=n\372\034\275\277\013\273\275FV<>\272\033\375=\310[\323\275-\361\353\275n\237\342=\217PH\275\360\247`\274\212\336\363=\310\211#>K\022\355=\037\277\240\275\3650\000\276\350S\003\275E\025\374\274\033\215\036=\373\261\205\2745\312\235=}\n\231;\306(\304=T\274\275=\310M\312=L\277\306\275\220\276\377=\351\354\'\274\216<\343=\354\244\202\274\224\211\320<\251\253\371\275\321O^\275\211\243\322=\310lx=i\3728\276\214\256\003\276^Z\310\273f\247\375=\236\306\340=r\303?=J\003\000\276Xo\020>\247\344\r\275\352\306\276\274\341\360\010\276\354\257b\276sC\244=\305+\331\275\242\347\215\275g\223@\274\253\327\206\275y\"\351\275\217\322\037\276\314Wf\275T1$\275\271\216\373<K\242\242\275\210\331\265\275\213.\202=f\260G>^\356\033>\nfc<?\020\212;\343P\222\273k\324\265\275\371\306\351\275ug\255\275\230Fr\274\376%\351=\3553<\276\270\353\370=l\341\367=o\372\020\276\231\000\270<\035\267\317=.\"\327\274o\021\220\275\034\375\330\273-\305\201\275D\376\005\276\263\022l\274\320\224\342=\246q\363\275\304\331\002\276\327\224&\2768\033\021=\301J\302\275\030\365\317\275\254\330\263\275\246\177\205\275\300\tL\274N\332\211\275\340\231\202=\007\262\301\275\346\364\221\275iY\035\275)}&\276\241Q\201\275\342Z\000>\\\230\373\274\267C\217\275\204\025\370\275\\T \276\272\336\256\275\343\277\235=[\377d<\303\237\342=\274\316(\276k\300\206\275\200c\031\276\307\2216\274\t)\272<\372+\303=t\017\205;\316!\">\204\315\010=\366\2310=\267^\336\275\253\373S\274\027\221\014\274.\255.=\377\032\037\276\002\252)\275\316\020\202=\211\246\250=\247`\231<\316\252@<y5\006>\367\354\364=LpD\275\363U\020>g\'&=\266\027\205=\232\250\004\276\360\3244\276KL\331\275$\257\246\275\275\246\007;\351g$\276\344M\021>\363\316\355\275\370\225\004>\275\204\207=\226\004\306\275\321D\016\276d\010A<\374\3568\275\241\231o\275\225\263\t\276;\254\036=\247\266\237\275\312\362\252\275\256#\222:\354\327#\276\336\240\275\275\232vI>\201\3505>\323\001\203=\272\357=\275\221r<<p\243\200=\267rl\275]\023\241=U\275*\276\377%y\275\311h\310=m\315\251<\305\320\'>\373\025\330=5\022M\275\013s\351=vsE\274\240\034d;\022\332\210\274\235\200l=\3021w\274\3262\007>\334A\236\275\304u!\2768\024B<\341\232\026=\032P\027\274?B\261=\006u\003=\244\255K\275\361\025\272\275=\'\023>8\351\371\275\250\275x=\260i\310\272K\027\215=)\240[=\272\233[\275\334m\226\273\3233\252<\235\376-\276\214\221\363<\243\336\267=U\252\014\273\001\243q\275/\374m=\245,\300\275\224A\007>K\204\033=\202 \n<\026#\005>\234\255\001<\232S\260=!\354\261<\244\334\010>f\014\014\275\366\311\317\275\245@}\274x\277\210;y\177\214\274\274\251x\275&h\303<\362\255\334\274\364b\265=O\276\n\275\270\340\357\275#\236C>\255\231\360=\r\021\305\274\341\234\003>\325m\006<\373\316\310\275\230V%\275\233r\030=JD\216=\013\314\010>\024\212\342\275\035\036\371=\271\321\307=\304\203\010\276A[k=\303\350\343\274\372\362\020=\357}\005\276\021\306S<\354H)=\302\257\032\275J\215\332=0\352\346\275\301\267D;U\215\344\275\010\321c=o\307\355=\374\321\305<p\322e\275\232\260q\275~\343)\275t^\201\274#\246x=\325H:<Z\017\326=\355\031\237\275tN\326=\035\331\356=\317X\345=\374\346K=\235\037\202\274B\250\251\275\273\026\233<\n^v=\340\234\300\274\230\037%=\362,\211\275r\364\352=r9~\274\241.\325\275\004g\027\276\031\312]=\360q\000\276\262p\367\274\312BE\274\000P\244=\246\335\002\276\366\252\202\275\322\252\203=\343\266\214=\215`\325\2755=\374=-%\313=B\260\335=\336p\236=(\0274=\274\305\034=lvw=2\241\216\275\271\353\363\275-\211G=\305=\242=\034+\344\275\315P\317\275\031Hd\275\323F\200\275\263\025\233=\262\246\351=Xr\247\275w\244\353<\257\002\032>\213^0\2758i\370\2757\2573>\nc\333<\305uD=\231\270_=\000\204\320=\315\030\021=W\273\355\274U\376\265<V.m=\226\220\243\272\336\351\324\274\n^\370\275\326\327 :\363\022$=\271v,=f\215\205\275\370\241\t\276h\217\306\275y\245\203\275{\333\013>lI\003\274\375k\327\275_v\225=\360CB=\3057\014\275\300pP\275Z\262\262<j\354\'=\017\313\237=\336\221\362=\377\311\210=\212\350N:\373\'\304\274\363\206\216\275\2668\201=dF\314\275I\237\267\275s\313f\275\364.\200=\365\\|=\207\335u=w\231z\274\252\242\270\275l\336:<\253^\273=\302\2116\276\202M\256=\r\373\255==\357\367;\037\001\306=,\214\257=\337{\343<~\032\027\275\241\333\307<\224\325\374\275\366\3623\275\214}\032\2762S\013=3\005U\275\323\034\256\275\360\236\031>\352\332\200\275\212Yl=2MQ\275\366^\317\274\312A\021>\'\310\031\275\265\177\177=\353~\356\275\014-|\275\353\215\322\275\347I\222\2753H\020\276\222\332\030>\247\267\010\276\315\252K\275\032-s\275Z\001\331=\331t\311\275\253h\260=C\256\035\275\\\342{\275%\233\204\275\361\310\004\276\314\302]\275\014\032\t\274w\311\334\274\203\024\231\274\220\307\324<\344\200\021>h\2467\273\2754\022\276\205\3711=\261t/=\032\317\245= \337\312\275\273\314\025>\264?\010>C\026\317\275e\034\361:\240n\343=\240p\245\275\020~\351;\031\363\346\274\320?Y\275\202\256\227=u\316%\276\320\223=\275\313\271\202\275+\372\024>u\006\225=\206\375L<(S\010>\314q6\276\212q\270\275q\315\003\276Y\360\325\275\266i\351=\026\331I=Al\r\276t\004\025>\235\305\217<Q\313\014\276\270\260#\275t\372\325\275A\346\273\273<\005:=\341\221\244<E/\001>.\203\014\276A\337\017=,\034\016>\371\345\034\276l\354\201=<F\305<\251\224\200\275\034v\277\275j\324\255=\371\0020<F\241\325\271\216\223\366=\362\022\261<&\331\373<;\005\027>\"7\235<\033P\005\276\031\016|\275\256~\t\276\314\000\370\274\372\340\262\275\345\335?\275Y\263\236<}\254\312\275\035\341\317;*\356\356\272\252\240\311<\357\345\255\275\367*\215=\203K\233=\354U\031\276-I\204=N\353\200\274\312}\201\275\257\276.=7\037\300=Z\341~=\353\344\250\275\230\352s\275\225\347)\275g*\243<5\246\260=M\001\270<E1V\2753\004\005=\261+\216\275M`\236=\304\036#\276\244\317\256\275\304\201\362=\223\273\261=\'\337\301\274\252/\245=\263\375\017>\2511\233=p\337\331\275\250X8=\244\267i\275\350\3429\275\307\340\374=\n\034\016\275_\252{\275.\2063>g\311\270=\027C(=\256\313\266\272\312\233\013>\016\313\242\275\033<\376=\r\267-\276\371\327\321\274\360-\263=\332\377\014>\345\352%\276\\Vz= \204Z<\267\201\213=\313\340\230=/\302\210\274\000d\t\276\321\001\302\274;\212==\310.U=f*\231<h\317I\274\000\0201<\341\351\356\275\200 \005\276\323L\352\275\334\220\363=\345_\326<\223o/>\370l:9\335\006\320\275K\276\327\273@\003\336=\336\033\r=/i\023>|\234\331=C$\373;=\261\226\275\345^\316<eh\020\274XQ@\275\337\023\321<\257\233x\273\265)\263=d\351\312=\250#\017\276\337*R={D\304\275\320\235\327\274\227\365\277\275\355\"\233\275hi\027>\2042\256\274\367.\236\274\360=:=]&\307<\361*\016=\321`\320=<\261M\275J\315\002\276_#w\275\261h\204=\327\225\326\275)Y\035>\224\350q\275!\232A\276\301:\210=\030\035\247\275\330\\\016\276f\2369\276\366\216\304<m*\006;\036/\305=U\247A\273_v\314\275\275\243\r>\033m\033>\2628\306=\315\201\033>\340\223\222\275\025\373\360\275\260:\007\276\370\275\334\274\363\210\037\276\320_\237=\243\221\366;I)\275\274\273|\n=\2253\034=\274M\236\275<d\260=\246\023\021>Q\0210\275\347\347\025\275};#\274>\033\270\275\256\205d=RK\344<\020(\365<{x\242\275f\260\303\275\013\233\000>QZ\322=\243\034\261\275\035\036\252\275\321p\203\2705:!\276x\3453\275\206\356.>8[\022>,\224\334=\3255\035\275\311\261\203=y\307\332=\030o>>?\241\252\274\230y\033\275\347\341\266=K\021\303=\351\035\202=\251r\242\275\226U\375\275?:\006>\300\343\010=\354P6\276\274\375 >\223\027\'\276\364\027\264\275\320\213}=\262G\034>zQ\265\275\240c\317=\"\307\362<\275\242\276=\215\357\365<f\244\">\014+\n\276%\275\237\275\206>\037\276\246z\030\276\203\255\301=%\265\304=\266\377O=\006\344)>\322\373\"\275[\032\036\276z!M=\345\366\370\274ls \276IX\205=\300}\205=\236\023\307=??\230=\370\203\341=,#\'\276}\317\233\275\265\224\035\275;\010u=p3\202\275\216i\022\275\032\"\270\275\2053\236<\220\255\315=8V\r>v\003H\276\260\216\262=Q\224\025\275\353h.>\221\321\263=\21444\275\370\276\246=\034\021\034=\206\222\037\275\212w\330\274\314\027\264=\334\225\371\275\360\024\227=v@L\275\204\346\237<\207T\024\275\354\202\235=V\355\204=\322\367\214\2753_\r\276\314\333d=ua\'>\267\374\335<\2538\342\274\215\375u=\346Me<\344\220/\276\216J^=6,A\276P-\235<\232)V=\313\263\271\275|\366]<\37715=\231\td\275\253\345o\275\220K\204=\010+2=\225\324&\276e\241\004>4\241Y<-\261\000>\\\342\243\275`\204\"\276]\365\221<|\351\207=\366\271\366=Ec\034>\rD`<\212\010W\275\356\257d\2759)\021>l\036\306\275uF\031\276#\357\016\275\265M\346\275\316\264\336\275\224b?=\302\274\232\275\210\374\307\275\263A\353\274p\352\004=2\032\356=#\224C=r\214\224\275\377e7\276\233\246V=\3700e\2755\335Y\275?3\245\274!\201\004>\254\365\316=\216\3278\275<B\352<V\237\251\275p`e\275\364\243\340\274\017m\304\275i\334+>Z\350\337:\271U*\276\376E\021\2761\373\224\275\256\031\353=}\264-\275\220\nQ\275\247_\022=\306w\376=\323\002\316\275\320\"\336\275\332\301h\274m\232\216\275\361\233\247\274\024\375,\276\325\360\214\274\243\361\026\276u,D\276\261F\037\276\307~\t\276\312\263\227\275\005\025U=\200d6\274\"\010\364\275\003P\302=\322\306\203\275\2320\205;\257i\276\275\270\273\315<\200~7\275%\340\231\275b\214\005\275\324L\354;\321\232\344=\247\333\017\276\217}\376;\020\337\260\275\347E\005>U\001?\275\326\254\330\273\233\342\306\275\261)\013\275\2108\024\276R\244\367<:\217\024>3\302\227\275\030\267\215\273\020\2408\275\202\221+>\020\022\251\275\325\021!\276\t_\254\274\203e\325\273\217\200\255\275\001\320\333<l\311@\276\215\254\235;\026+\r>\375J\r=\366\311\221=*z\016\274U\0004\275?\277\200=\016x\221\2753\205\357=t+\003\276<\277\222\275m\352+\274;\263\365=\022\206_\275\037\234\246=)\372\254\274eK\303=\351}:\276\373\033\216\275\027\"\216=\226\265\373=\251H\327\275iD\356=\341\024W\2758\327\233=s\322\021\276\031U4\275p\037\303=\026u\350\275\252\037\033\276#Bp\275\260\332\222\275x\303\025>]\377\037\276\000i\345<:g<=!\014\244=\216\226\034\274\234\r\310=\324\263\n>\244\374\005>\265\273\360=e\006=\275\355\032\315\275\250U\006\274\201\317\246=\026\302\324<umo=(a\375=G\307w=\005r\372=)\2632>\352 \n\276\033\267\267\275JdA=\016A\364=\235\037\312=\010\233\003>\345!\314\275~\317]=\235e\207\275\370\240\356=\271\3307\275\263\036\017>J\314\016>\200\270\277\275K\302\317=)\n5;\240x\235=\250+\266\275\374\302\235\275:\017+\276n\000F\275\233\367\244\2754t\037\272]\021\t<A\3431>\323\371\252<\'\304\215\275\224:\355:\361x\017>\326t\241\275?w\037\276z\326\021>\242M\261=\350\340I=\360\037&>D\004\312\275\212\r\264\275\264\236c\275\310\027#=x\177\345\275C\267h<\004\356\371=\272\350\304<9\310\004\275\031\372\363=)B\316=\337\227K=N\205!\274@\315\361=et\340<\221\204\232\275\005\343\233\275!\273\247\275VAL<\364yK\275\342\034{\273\302{,>\364\007!=\215qV\275\375\223\017>\243\321\016\276B(\002=pKm\275\275\010\237=\220e\240<\036\336\027>\267*\033\276,\344\n\276\226@\264\275P\262\n\2769a\034\276\224O \276\205\200e\274\241\340\320\275;5Y\275-\000\306=u\010\246=\200\215\r\276\341\335\345\275\224\346\361=\366\260\254=\323\247\304\275\333\277\n>\272\"\355\272Ka\'\276\037\265\306<\033\277\007\276\001Z!>mg\315=;8/\275\024\365\021\2757\203M=\201\225\256\275\037\364\204<O\261\240\274S\230\013\276H\253\027\276\037<\302<v\314\375=\364!\266\275\346k\346=\252tp;\3271\362\275\331&\204<\262\223\021\276O\2529=\351\262#>\255f\022>\212\264\370\275"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\006\344\030<\032\245}<\334\233\375:~\2614\274\214u\240\274d\231v\272y\010|=K\003A\274J\252\004:\345I \275TL,\273\302`\231<\323X\007=\273\016\032\2749\233\217<n\267V<\244\207\033;n\242\250<J\262\373;\036\345.\273\340\330l<!g\316;*(\352\274\253\320\214<\206F\246<\322#\253<\246\t\026\275\004S\256\274\031\350#\274\246\251`<\306]\367;\022p\276;\240\344\373\274\010MI\274\030\255\233\273\360\315a\273\341\220\233;\364q\275<t\320\261\274\334\263\323\273h\361%<.\214%\274\357\376\237\273\201\017\214<q\320]\274\334\302\300\274j\037\177:=\023\216\272\213-M<0\251=;$^\3058\rI\202;@\240t<\321\331\364;\366A\214\272\367\306\033\274\332\357\023\274\257\000B\274\272\2275;\246En\274Fl\367\273\325\227t\274m\373\230\274\345\022\307<\2472\255<\177\365\243<\017\242a\273\232\236\3379\207B\262\274\220H\320\273@\3302=T\331\206\274\021G\311;\006G\000\275.\216\325\273A\254d<\306(\\=$M\314\273\2726v<i,\025<4\364x:=\351 =\211A\373;\304\324\033\274\335\266|<M\231\033\274\0000\356\274\256\352M;\010\001\256<\002\267\257<\327.\013\2754\326\205\274\201Y\364\273\366\215c<\230\357\376\273\356\026z<\304M\024\273_}\227<\007\325;;\007\233\304;#LY\274\320*\277\272\263$\206=\024:o\274kQi<u\311\245\274;\305\276\273\334@\257:~[\301<\241Q\235\273\202\260r<\344\261\002;t\330I\273\003\0259=jo}<\336\351<\274cE\207<\026\336\240<x]\345\274y\257\271;\370\2621\273`0\223<;\250\021\275\362 }\274\030\217\254:\t\257$<\256(v;\323?\327;"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\360\215\024>\244k\244\275\274\214\241<\267y\375=\240\323N=\327\306H=Q\344\322=\347#\007>\307\346\r\275\332\325\277\275\304\275\216\275W\263\037>\255\346 >\244\340\244\275p\303\267=\007S[=\257\371\027\276|\016\010>b\235\214=\005l\263\275\220\037b=\257 ->BA\266\275\310\213\017\276\364\2004>\026<\250= |\234=L9\262\275U\202\266\275\302\025\230<V-\371\275S@\337\275\242V\031\276\0005\377<t\337\353\274\r\006\346\275\313\230\253<\327\245\201=\251\340\216\275?\207\004\276\241!\n>?\332k\275\323\267&>\215\243v\275\373$\001\276\352H\265\275\361\253\031>\010P\031=\272\234-\275y\265\320=h.\007=\032\346:>\037\202_\275\007G\206<\322\320\202<\'\177\213\275$\254U=\313\350\310<\336\313\003\276\322k\237={\256\013>\216\252\264=\201\021\023\276\275e\324\274\256\260\024\275H\n\372=\325\251\361=.w|\275\0254\330=:\326\377=\275\265\326=\325q\200=\030m\322\272\323\333S\276\034e\211=\216\366I=g\350\210=\274D!\276\223\360^=\330\262=\2751\003\250=~\244\225=\257<\202\2751\224\315=G\322\243\274\202#\001\275.\253\037>\312\004X\275w\324\013\276Rv\211<F\220\030=@\024\t>\247\3139=7\321\324\275\214\267p;gx\017\275\352\370}=\315\346\003\276\301\311$>j\340\010>\323W\330<\3244U\274\256\3660=\300\364\002=8\260-\275\260\002H\275\3745\360\275\344\243\034\276\211\301\261=\216N\327=\336\371\225=\322c\033>Dv\014\276FC\000\276\2468!>{\341\360=\351\375\023\276\035\001\014\276\254\005\270\275\201\321Y\276P\344\306\275\231\313\205=/\033\007\276\255\364\014=\305\206\007>\220\350\320\275\"\274\370\275\377\033\203\275\273\010\032>\246/\027=\272\207\001\276\305\216\313\274\036\"\251\275a\t~\274\350\023\033\2768\277\311<\307_\213=\260{\371<6!r\273\353\3408>|\244\314\275\223\302J=\262\216\'\275\306\271\014\276\316g\261<X\264\363\275Pr\376=\305\316)<P\250m>\214.\252\275\021\206]=\333_\264<\315\341\335=\026&\241\275\245\242\277\275Q\256\247:c\310\020>u\353\036=\312M%>\3174\031\276\231\016J<\337\202\t\276\315~\273=v\273\272=\342x\327\274\326N\211\275\352\216\001\276M\367&>x~5\276\032_\031\275\311u\003=Q\253\221=\211vI>c\301\004\276\000\271\326\271Aq\\=o)1=\006\261\222\275w1\336\274\232|?9BZ;=\311\177~\275\225\240\244=\033\355Z<\374\007\300<\007\235\216=W\272\'>\304M\r\276\373\333\315\275L\356\244=|\022\275\275\346{P\274\030\272\003>\214\335\304\274\033\375\271\275yJ\342=m\300N>U0L\274\252t\'>\216\224i=\001\016%>\334\223\031\276\367\325\030>~\356\330\275\200\316?>+\200\206<\035\223m=\251^,\274\251O.\276\300\247\352=!\2502\276\253\277\031>M\346\253<\332\005b=7\301\247=\302\362|\275\202\261\345\275\230(\334<\355A\206\275\3319t\275\177\n\335\275Z\244\006\276\277.L\275\247\346\264==5\232=\275.\375=\250\303\223\275Q\237\301=\356\000K>\325\002\316=\220;\310\275\325d\2379P\364\006\276\217xd\275\266M!\274\002\014x\275\372&\023>\355\026k;}\0059>g\033\237\275\273\256\004\276\032=\274=6\320\234=\262Q\256=&\025\177>\344\310\273\275\256\333\027>\323\302\016\276\363\325\017=\262;\241\272-2&\276~\317\231<H\241\355\274\365N\224\275J\303}=\351o\361<:\257\r>+]\231\275%x5\275\264N\243\275\254\335\370<\216\237g\274\273\377\2179\264\002-\275\302k\223=\255\231\277;\r\360\"\276\270\316\241=\231<\274=.\263\224\274\216\033\016\275\023\251,<\221Z\021>q\353\371<\030\013\025\276l\377\3729\032\262.\275-\315\234=ZD\364\275li\007\276u\336<=\357\207\t>\222\345\236=XE\005\276R\301\323\275\266\206\025\276\313\256\n>0Hu\267\007=\245=\242\352%\276\325=\310\275\357\224\317=\243v\024>\330~\000\276=\240\004\2768N\274=\301o%\275\004\001\352=\021\026\033\276\272$\272\275\215%\221=f\205\221\275\3011/\276_\300\270\273\t^\030\276y8\273=h\377\220;\036!/>\315b\357\275\222\014\n\2761\373%\2757\222\223<4\366j=\020)\216<|\344\022>L\356\005\276\353\246<>\305]\026=\003\027N=P%s\270\234iK<\r\315\342\275\n\014>\275\017\354,>z{\004\276\211\'=\276\026H\224\275|V\220=k\247\023>\353\330\234<\223\350\344\275\250\330\t=\030\221/>\3206\265=\307\330\310\275\'\307\311<8\322\026>c\246F\2750\307\362=\027(\342;s\365+\2766<\205\274\344\351\264\274\227:\307\275p\336i\273\315\344B<A\330\301\275\262)\027=s\205\362=\220\242u<\030\005X\274Y\353\370=\263\201\214\275\265\364\006>\262%q\275\0311\311\275da\234<A\365G\276\337kI=\225\324\032\274\262\341\177;]\\\010=\364\364\001>FY\010\273(\245;=6\034\322\275>r\232\274\270\337\324<\014\366\n\276\3067\257\275\"\316\223=\203!\020\276\264$\005\276\357\310\273=\002\"\372=\016<\003\276\322\233\005>\204\213\371=\247l\363\275c\326-=S\266o=\000\203\231\275\001\177\t\276\r\255\022>\372d\342\274\004\223\326\275\341:\004>n\327\360=\227\317\312\275f\0162\276\336\233\001\275\303\033\350=\003\335\262=\343D\241\274m\034\020>\266\242\206=\326\323\264\275UW\202\275\336\004\340;\212\301h\275\306w\241<\230\030\351<`\215\014\276:N\363=t\347#\276y\361,\274\304*\323=\027Q\006\275\007W\302\275(\300\246\275\367\224F>\253\235x=n\216\207=\021\327\224\275\016O\375\273\327m\360\275\272\310\n\275\371\333\227\275A\265\322\275\010$5\276\t5\331=\362\326\207<\324\276#\276\202\305&\275\375\272\227=(0\003\276\316\215\276\275\212\354>=y\350\213\275\000\306.\275~\241\272\275\267\323\222=\335-\\\276\016\023\363\275\025\036\246\275\224\244\334\274\273\362\303\271E\304\"\276\235\177\236=\376@\037\275\024\036\r\275!8\266\275\345x\321\274\345*\276=\236T\"\275En>>\010:U\276\200mx=\373Y\304\274\007\266\324=\233\231\237\275\352><\276\263x \276D\225\233=w\321\251\274\264|H\275p\035\350\275\266\027&=\336\307\020\276O\030\350\275F\226\236=\347\306%=B+\317\2758\022\257:\237\215\221\275\372\307\250=!\3536\276\025\341\036\276\036\211\243=q\215%\274\202\313R=;\"8\276\022\277\306\275:\3223>S\231\371=\177}\244\275\247W\223\275e\221\014\276\204\025\000>\363\000\255=n\317\"\275`q\361\275\300\325T=\206y\320\275\000=\372\275\2052A\276l\207,\276\022\006\014>\274\373\260=\373\352\214\275;x$\276%p\306<\256n\342\275wQ\261=\372\272o=>.\007\276;\317h\276\212\334\206\274\232\327\003>_\233.< \350\252<=\315\301\275\316\337\263<\222R\247=\235+\023\275\262\030->\t\216\363\275\326\021\333=\242m@\274g\2175=\r\3702\276\254\253\324\275\027\207%>\026oA>\005D\244=\244\345\026\276]Q\243=\317\212\217\274e\337\342=\365\021\223=,W\274\274G^\007>\202\320~\275,T\350\275\007o\">GJ$=\031\020\005<M5\312\274@\t\376<\002\307\303=\300\336\345<\006s\004>C?3=\343\377\362\275\235\276\301\274\375\254\021\276\263\033;\275\014]\266=\332V1\272\223\267\013>er\031=\377#\347\275\362\227\265\275\2523\300\275\372D\331\2750o\207\272\261. >\024\266\n\276\025\327\322\275\326\226\232\275\374\205G>\315\201\347:0\241\225\275\205\234,=\'\003L=\202\037\301<\216\213\377=\240f\352\274\223\311v\275\300V\"\2768\310\257=e\034\201=J@\024>\207\224\037\275\252#\313\272P\377\013>R{\334\275o\204\r\276\020a\242\275\276j\256=\022\005\202\2757\211\255=\007d%>\017j\030\274\022\010\270\275\262\331\350=\254\316l=\371\361\360\274\272\202\020\275E\307\n\276\260\0034\276\311\301\221\271\014>W=\241\033r\275&\331\375=K\017\256<\221\375f;\2565&>\177\246\343\275\014{:>\2267\271=J\234\335\275\337p\334=\207\321\023=\237M\344=\343\221\204=l\211\210;7\t\037\276\206$\215=3\222\001>\310V\376=\317\306\214\274\262\014\224\274\0043\356\275$\347\016\276\r\000K\275\177U\300\275\301\254\232=\366\326L\275\241\0203>\325\214s\275\231\243\240\274ol\037\276\2454%\275\243\037\035\276M2\237=X^\362\275\361C\201=\275h\035>E\202\307\275\344\r8:\0055\n=\215,\005:O\251\377\274\230\345G>\374\350\301=\261\262\003\2742h\371\275\237\261z=0r\267=\245\275\022>\264\364\267\275O\247\n>\010\000M=\220*9\276\273\224\376\275\021\364\007>\014\3723\275\\r);\'\2064<4\002\005>\373T\013\276\030\362\357\273\006w#>\020\303\353\275US4\276\275\037\352=B\306\355\275\213e\262=\255LS=\3743g\274\335\257\002\276\310,*\276\224\266b=\356\306\275\274wT\251=\254\243b=\026\033\371\274\335\256\342\274\007\225\200\275\023K\270=\310>}=\325\023 \276\007D\234\275\360\247\214;\365\256\261\274\204c\307\275\031\017\032\276\376\277\020>\364\007w=\025\323\310\274\314J\337=o\343\314\275\225/;\276H\361\002\276\252\201!=\022}\323\275\321S)>g\243\301\275!\215\036\276\022\022\253<U{)<4\363:</\337:\275\276\017B==\367\310=\324\276\\\275\324_\035=\262\205\314=P\204\361:A\304%\276T~\251=\246\346\005>\312\245\242\275~\242\026\2763\321\247=-`\005\275y\002\255=,\300\332=\331\371\322=\341}\216=\2060G>Z#\016\275(\332\372\275[\216\310=\022\025Y=\203j\356\2758v7=.14<E\340\223\275r:\306=\215\020\006\276\003\r\216\275z\331\267\2752\014\013\276\334A\016\276\002\037\225=pW\022\276w\354\232=\371\032\253\275P\222\362\2757\374]\275\324R\031>\034\327\204\275\024\010\374\274\264\016\243\274|z\023\276ge\217=Q\301\320\275\020s\371=\322\254\021\276-\372\254\275\254\327E=\374-\010=*\213\313=\224\277\027\276\253\245\302<\022D\315\275\376\356\335\275\243\310\273\275\331\302\325\275\rE\215\275\3613\323\274\271\353\273=Dm\217\275]/Y\273\361m\n\275\222\210\212=\3413~\275\037\333G=\3318\221=\245fR=\276\242\301\274\035\303\241\275h\307!>\335h\027>\212I\223\275\214\034\365<:i6\276\t\210\r\276\264\223\340\275\033`\275<\360\206\013=\003Q\253\275\342(\005\276\215\313\351=p\005\016=h\327\005\274\311\274\255\2757}Q;p\322\"\276Z\333\023>\343\016\204=\353\374>\275\237<\037>u\204q\275\002~\007\276Z\240\016>\325\276\215=.\343\255\275\035\344f\275\225\322\320\275Q\"\t\275\206\256\240\275\2619\022=\263]\343\275\010p\216\275\256q\024\276|T\217;o5!=\317E\311\275\210\331\335\275i\261\r<H\263\010\275\346Y\203=\302\224\337\275\323\361>=\367\340\027\276Un\177=\341g:=\014\314\007>\221\333\315\275\021\364\256\275\266\234\234=\202\'2>ie\362=|\272\312\275\234\377#=\244\323(>\302\332\214\274\230\363V\276c\022:\276\030\321\201=\224OE>R\350\234\275\002D\204\274]\242\261<\315\275\017\276\310[\027=\213\254f\276\346uS<zH\350=\363d\253<\234\357\201\275\327\341\300=B\234\004>6\253?>1\361`\275\241\2471\276\022%Z\275Z\207&>\204?\273\273\267b\343\274\372\323\002>\322c:=\200\2351\276\260\236\375\275\377\344\375=Q\236\325=\0376\330\275\r\204\310\274\\j\331\275\260e\245\274\355\272r>9\034\r=\010\243\334\275\316\003C>\021L\261\275\325\262!>\020\226\363\272\037!\021>z\205\271=\003l8\276\326\341N\275O\213\026>\n\367\341=\366 \013>Y\303\355\275\225)\034\276\306\303\031\276\361\017\256\274\\\272o\275\303c.>L(\000>\030\205\013;\2005\226=i\033A=\231\262(\276Y\325r\274\240?\317=\323\r\252<\332\322\326\275\245\375\275\275E\376v=\t\270\370\275\341[\033=\333\250\305=\335\014\t\276\260\014\360\273o\033\270\275\263\021\204<kP\345\275d\034\327=\353\\\013=\374\270\252\275\277H\207\275\375\332h=$\317I>\363)\024=L\205X\274\306l\025\275\352\222\030>\245!D>\0231g=R\311\201=y\235\264=4t\322\273dV\300=\377Y\310; j\003\275\200M\243=\031\341\037>\263@\031\274\256\260\271\273\344\224\366\274\222\005\314\275\356\262\355=\307\003\302\275=\361\330=\027\377\334=\014\037d\275\211\271)\275\303\212\245\275\037\316\267\2750\277l=\344\331\360\275u\213I\275K\' \276E\007\024\275\220\247\367\273\226\300\254<\027W\376=\356\221\235\275\214\350|=\240\321\342<\351\204\256\275\303m\351=n\017\243=w\003 \276\314\330(=\001h\273=o\232\364\273\347)o\274\273\223{\275\256\216\251<\221n\t>~H\302=\314\321\021>\210\016\021\276\204\301m<\201\003\t\276s\375\371<PH\000>\010\315p=\206W\363=\351\212\302<\254\306\026>\r<\243=\371|\006\275\301\264\202=\036\242\317\275A\351\304\274\030\"\211\274\270\010\004=[x\"=Z\243\021=O\314\017>Y\222\306< \247\360\274\n\313(\275\234\270,\275o0r=\371\251\255\275\304\266(=\037\177\005\276\221\031z=3\314\266=jU\n\275\332\376\252\275&\024\263=\246\236#>\232\253\257\275\300\266\030>\225\272\006\276K\227\342<\201\361!\276M\337\000<\004\233\356\275\326+\r\276\224Y\254=ud\003\275\361\312\201\275\377\211\250\275I\257\270=\n\202$\276\225\227\201\275\267\317\242<W&\256\275\313k\r<Z\2728=\361.\306;Q\272\273=b*\275\274\210\t \276\327k\226=\225\363\t>\004\320N\275Z\227\367\273`!?\275R\007\233=\376\336\332<\267w~\274\275^\016>\370)&<>\300\300=6\020\326<\240X\331=\366\262\335=\032\370\235\275-\n!=\220\331\231\274c\3430\275a\037\377\275#\217\252\275\347?\013=\222\255\354\273#\251\301\275\324X\227\275\2514\360\275\356o\020>\033\003\375=\177V\'>\014j\357\275&.\251=\227\230\353=\016\323Z=2\"\364<\214?\233=\033.K\276#K\215\274\252)\002\276:\"<\276-\037!>6\244,<\312\317\362<\031F\001=\014\236\t=\251\211\320=@]W\275~\336m\275\025\331\320\275\257\222(>\260r\024\276,\235\033\274UV\007\275\3407\273\275\207\216\035\275\326\242\356\275\246\222\254=^\315\251\275\217\006\014\275\243\377\334=\264\t\364\275\370y\361\275\307s\215\275\351\313\023\276\256\217\264\275\323\264\205=\332V\332\275\2239\205=\330\036\255\274\3438\016>\240X >kn`\275Hf\352\275\0372\032>4rS\275\342\025\220=\223~\316\275/\336\334\275\246\363\030\276D\240H\275\214\2721\276\177i\341=\243s\357\275\301\207\235\275\261j\021>\370\265\335<Vx\303\275\337\2371\276\257\303\310\275\006C\217=\005\335\306=\242c\356=a\375\265\275%\372\213\274R\263\376<@\037\006\274Z\305P=\026\004\312=\231\000~=\236\316\264\273\250\367\005\276\351\243\325\273n;t<\373wb=y\353\315\275~\007\242=e\341\345\275S\241\271=\213#\214;\033p$>\031\343\342\275F5\022>+?\006>\226\235&>!\306\306\275\262\252g\274\361\021\316=\031\261\035>\002\303\347\275\223\267T\274\362U\310<\022d\013>6\350\336\275\222\307\016\276\206\335\022\276eWd<\357\277K=gY\020\276J\325\341<\254\372}\2750\312\210\275N\300\317<\032u\274=*\306\217:\217>\361\275(TN\276\321\350\254=\356\206\306=\211-\243\275)\023}\275\211\007\230\274\343\036m;~\026)\276nt\031\274\024^\363\275G\274i=:\030\302\273r\216t=p\216\356\275\233\335\372\275y\347\340=K\272\375\275\0369\263\275\\\206\322\274(\205\274\275\322\035\315\275\300v\314\275@M\246<\305\032\'\2762\353\036\276\354\005\371=8m\017\275iP\327\275r\217\010>\027*i\275\362Q\r=Eh\324\275H\305\007\275+|\313\275`\203V<>\334d=\255#\002\276\334\224N=\035\010;\276\317\351J=A$E\275\277k\216=CB\264=+\346\230=F\260\322\275\312\r`;!H\372<Aux=\264\351\314=\212\023\233=\022\261\034\276m\363\276\275\\\275\013=\004\315(<\025p4\274\356#\n\276\000g\357<\2151/=\366\235\025>\231\351\366=\"\302.\276(\312[=W\241%\276]\3365\275\020\035 \276z\2144\276\327d\202=\240N\030\276\251V=\276\342i\315\275\241\313K;\360\267\237\275\373hr<\216\347\251\275H\013\357\274\305\227\032\276H\373\034>B4\365=\032\262\310=\353\364\264=\307-\332=\3365\036\276`z\265\275\tl\367=\036)y\273\202\217\257<K9\016>\341\246:\276y\334\307\275i\231\271\274C\211\037\276\037\277\327\275\374? \275\211O\353\275\315o\">\255\236\023>:\331,>\013\002\300\275ZF\215=\360\201\254<[i\363\275\206\025\275\273\301)k=\210j\033>\032\206Q=\034\350\020\275E\037\t=\224\346\016>\313\207\241=\372\035\303=\356\307 >+e\371\275\330\317\003\276\016~\013\276\250/w=vQ}\275\006.(>\t\236*>\373m\352\274_\330\002\276\027\247*\275\324\212\263\275FKO=/\203\241=K\362\270=f\310\223\275\354\036>>\017v\022>\030\352\265\275B\255V\275^\301\312\275h{?=[H\002\276^\272&=\373\216\254=\205\214\216\275c\317\177<k\324\222\275\003\006\007>\374N\262=\274\275\025>\\\320\020\276P\353D\275\331\\\016\276\343\372f:\006{\305\275H\366)\276\003\326@\275\332A]=b\006\333\275?\251\242<[\360\322\273Eq\225\2758\3773\276i&\204\275A\301\333<fz\340<\235V\016\2762\024\240\275U\201\240\2750[2=\206\257\250=\336\372\373<\236p\013\276\326\324\217=G[\270=\241\214\202=(\2101>bUQ\275:\033\235=#E\207=A\242\305<\233\266\000>(\255J>\343\344W\275\213\036*>\323\267\320=\200\021\271\274H}b=\267\277\020>\306\205\277=\177:\002\276\300V\002\276\025\277\022<g7\252\275\002\356&\271\021\251=>W\n\024>\345\341\200\274\215\000\313\275Xa\361\274\275\367\002>[\n\035> _\211=*\207\262=\211W\321\275\260\232\005>\036\036\216=7\026!\276X\334\347=\025\306\025>\004\327;\275r\027)\276\252\310=>\375\204\'\275\325\'\373<.=\215\272\362h\364\275?-\240\275n\017\222=\206\277\025>\201i\357\275\277\204\373\275\317\3511\276\332\036=\2750\203\257\275\365\035\266\275\321\330\375=\024\214\001=R\014\273=k\030\004>\320cD>x\341\237\275\372\267\314=\353\336C>\253\"\366=\232o%<\265\257\365\275\356/{\274\224\352\221=\211\264\300=\321\350\002\276i\016\267=\245mT\274\013\013\270=\331\003\">0\327\t>\357\274\355\275\201\t\301=\320\372\212\275\032jj\275S\303\341\275D1\007>\021G\036=B8\210\275f=\302\274\212\224\363=\242D\321\275\000\305\301=\24482\276\313\324\302=\221\354\204=4\227\\=\322\001\275=%\355\212\275\364\271\237\275\210H\324\274\211\316\230\275\343x\023\275\376S\264\274W\207.<\215\017\354<\233\201\350\273M3\017=\024O\345\272\006)\332\275G\0037\276\277\377M\274\033o\304=\377\301\320=P\035\222;\374\214\305=Y\262\222<-\025\370\275\360\n\360=[\233\004>n[\331<\241\"-\275\343u\024\276\tj%>\264\317\251\274\001\224\013>\3164\032\275\367_\350\275\254\006\334\275\211\037\340\274\341\202\367\275\'_\023>\020EK>6u\010>u\314\016\275+\305:\275\311\245\370\2756X4=9:m=\322~\247=\347\345\002\276\261\357?\275\317\016\035\2764\233<\275\273\360\027\276{\022\275\275&\246\254=Y-#=O\"\377=z\200\246<?\323\007\276\356\330\010\276q\246H\273\275\250\030>\225\004\227\275i4\267=\235\205^=\273\2210=:x\\=#\0354=\303\216g<f\022\035\276C\361\320=\252\017\277\275\225\006\027\2762CL<r\376\026=}R\204\275K@P=\301=S=)\204\037>\257\336\300=\332\023\361:F\325\235=ct\247=[\254\332\2742f\013=\023<\177<\313\234\022\276o\247\317\275\314\250\'>e\207->(|\'7p8\266\271|\251A;\007\244\275\275\342\351W\275/\351\336\275^\213\325\274\3642\025=aV?\276\345 ;=\223\221D\275\022>=\275mr\370=\327\325~=\223\335P>\020D\327<\026:{\275z!\307\275\224\353\030\275p)\252=\304\006\277=\274\3107>\343\016I\275\003\332\003\276b\345\002>\376\324A\275\023\021\024>\313T\243=\230\260\250=f\022\000>7\245\315\274|\025\266=\243\225t\275\320\340,\275\315H\354=\326\024\254\275\276-\212\274}\3233\275\377\315\304\273o\262\235<\272\260\315\274P\366\033>\2419\004>\023\004\016<\026\353\303\275\370\275\000>\274\177\366=\016\337\212\274\204=\334\275\356\211\241=\202\3201>\237\204\224<O\204I\276)WN\275Go-\276~\343\210\274x\034\010>\226\363\347\275\021,\306=P\375;>\234\014\332\275nS\324<\360\034\3137\357$\n>4_\363=6K\003>\320\230\231\275\324?.=\371\026.>x\006=\274\322\332\337<\301h\273<\312\2558>\006K\276=>8\310=8\257\"\276\013\304\344\275\177ob=\275o\226<\257\364\001\276\002.\365=\210\342\204\275\3062\367=!g\347=\367\256\362=\211F\205\275.\031\335\275A\316z\275\250G\376:2\317\347=\020Kd<%\240\355\274j\005o=\225\345\275\275jam;\300#\275=\024\tY\275\227\nG\275\265\353\355=8\301\207<7\007\027<\031}t=\254@\220\274on\251\275\030C\311\275{\300]=c\242\227=\260\277,\276\320\337\250\275\267\204\006\276\321\257\215\2744\252\023\274\203\025B\274\016\211$>:>\335\2757\261\306\275\027\367\036=&\364\203=\300\245\207<J.\207\275$\261\225\275\362\"\370\275\005\220\242=n\001\351\275\270\325L\276\262\234\277;\356T\325=0\324\301\275\312\242H\276XO\213=\002w\025>\2467\367\275\004\374\305=}\207\237=\024\323\323\274wDF\275\267=\363\275\366\216\245=\352\226\241=^o3\2761\n\020\275\317./\276;O\310=\275\371\022\276fU\240=1d\010>\"\343^\276e\005\037=\327\036\346\275\262\253\322\275\322\307\371=x\362j\275\271\010n=\275!\276\275\303\226\224\275\331\3021\276$\024\303=pw\315\275\335[\303\2757y\254<>A\323=\",\302;\242\203\204=l\224\324\275\271h\334=\226M5\276H\010\340=\\\347F>\371:\274\273\247n\177= \227\026>\300\304O\276\335\303\013\276w\242o\275\343\002\'\276\305\025\223<\367\261=\276%\272B=\351\010\005\276s\203\322\275L\021\017\276\376\273\030\276\213\023.=b\332\314=\343\244+\275\242\356\t\276&\247\237<\2317\275=i\003\010\275\2535s\274\246\001*\276~]\034>\241\3461=\344Z\305\275`~\333\275\203\204\262=-\267A\276\262\203<\276G\333Y\275h\216\315\275Mu\331=b\213\321\275\200\345\326\275\356\211\361<\334I\025=\231\r\323=\211\251t\275\270B\243=.\304\221\275\250}\021\276.\n\003\275\3017i\275p\n\330\275\030C<=\034)\276\275dl\204=\3310\002\276>\202\261\275~lg=\305<\323=]\235)=\177\375\352\274\253\001/=\353\315\376\275\257\277}=F:\205=\202-\245\275\2365\005>v~\236\275\033\354->@?\006\275\265\260\302=\256\303\232\274\271\274:;\tWT\273=\033\365=a\362\300<(\002\272\275S\300B>.\343H=\007\034\242\275\0058i\275\212\236\334=\235\\\333\275\226u/=5/\252;\3431\010>\263{\272<&\201\337\275*R$>w\355\366\275*\246z=t\030\320:\2650,>\332\330\257=#\')\276\3144\014\274\031\276\212=\3348;=@\376\363=\301\214\351=\336\026\305\274p\002\342\274\245\350\232\275>^\330\275\353\rp\275\nfX:\233\035\010\275\314<4=B+\354=\333\016\361\275i\002o=\036~,>\027E\036\276U\001\214\274\202\243\207=_:\363;k\344\003=\264e@\275-V,\276Z\267g=S\025&\276\311\332F<\375G\221\275\263\355\260=~U,\276\005\320\236\275#\232\213\275\013B\275<\262\313\277\275\202c\007\276\241\263\304\275\230a\017>T\312Z\275\354\255\230\275\374\211\342\275\223\212\360=\262\260\246\274k\024\367=;\005X\275\241`\302\275@\256\254\275\'\223:\275I5\323\275?\031\335=L\330R\275\313\025\203\274\314v\321\275?%\203\275\214\036#\276\r\344q=*\370\201\275c\2721=K\314\343\275\377o\'\275\333\341q<\314\3214\274\210\207\273\275\205=\357\275v\301\322=\232\334\310\275\345\\\177=c\377\212=\267\255%\276y\207\304\2756\223\353=\0043\322\273Q\355\337\275\214\324\245\275\212[\220\275X\266n=>(\270\273)\360\302=Y\2427\276\r\214M\275O4\005=\341\262$\276Vs\326\275\327\322\376=@&\n\276\0334\021>\030\314\365\275_F\023\276!9\337\2759\022\242\275\020\003\221=\300$\316\274\007U\245\274\316\376/>\031\033\224<\334\375\030\2768\253@=4\013\337\273+5/\275&@\215\275MR3\275\320\230\370\275\273\220\013\276X\314\247\275\322\237\370\275\232\354\233\275\001\'\310=\203d\202\274qx\344<7\342\311\275\311\304\024\276\260\031!>SJ\200=\314\317\243=\312C\232\275\371\351\352=014\276\n`\366=\256Z\031\27621\324=!i\333=0\343~=\313\274\313=\305q\375\275.\310\034\276\362\276\'\276@\365\200=j|\026>\033\010\320=,~=\276+eF>t\231M\275iIF=\333\t\227\275,\035\322=\r\332\364;\306\001\341\275\242,\r=F\344\215\275\271#\014>\274y\375<\371\014B\274\023\365\343=\313\335N\276I\203/>\2463*\276F\313L\274cL\251=\266,q\275\323\261!>\336T&\276P\3041>\026[\255\275\020\350\214=\003\217\310=\337M,\274\003Q\005\276\017\214^=R\361\361=\367\221\211<f\002\217=)\204\n\276\370\257\340=\010z\264\275z\017L\275\254\026\261\275\025\272\005\276\246\032\336\275\315s\036\276\301\320\233<y\306\027\276z\312\033>\227\367\242=\233D\245<\360\236\'=\003\372\372\275\234\364\032\276\242(\r=>\037G\274\253\302\324\275\200l\223\273G\372_\275\254U\003\276&\016\235\2756\3014=\261\370:<.D\373=8\252w=\355\037d\276\326\313\357\275xt\321;;\017=\276\351\024\305\275mr >\321`\200\275Y\235\236=\\\t >\367i+\276\335p\353=\017\027\006>\322\016\t>\212\307\316<\010\361z=\304\237\360\274\341\n\252=\313\326*>\3342\027>\234\370N>\237\260.\276\321Dd=\306\276\376\2758m\272\275\304\374\340=\023(\334=\337H*\275\227\326\315\275\207\340\244\2752\005\341=\375\266\024>\016b\244=\"\322\221<\002\330\'>\3133\032<\3566<>\3227\246=\322?\004\276\020\017\233=\"\3731=\005#\035>\017\374!>L\303\277=\272\311\376=N]\350\275\324\246R\275\250\030\305\275\257\253\337=P\032\005>:\006\275;Tr7\276\037o\362=\030G\t>\303\256$\276\271}\030>Xf\036=\315\036\265\275\354\034\025>\355\315\327=h^|\275Bb\030>\010\022\214\275\222b%\276\037\014&:\227\014\030\276\253\210\"\276\261\342\223=\2337\021\276\377Y<>\317K\277<J\365\252\275\300\375\301=Q\310\364=\027t\013\276\355\220\031\276\270\335\305=\311\325\010\276|\3719<v\250w\275C_\321\275\036\214:=@\276o\275\362\236\273\274\204\275*>FU\220=\204\245\334\274f\001\035\274\222\216\227=\332c\032\276\252Y\355=\316\263\303=\316\017\372=\376^\352\274\350\207\343<\337\223\361\275\340\371\001>\223l!>\014KG\275Lh\037=\333\301\215<x\247\r\274wU\003\275\017\n\333\274yg\333\275>\024\021\275\321\260\234\275\254H)>\357\264^=/,\327=:\271\311<\325\306\276\273\224z.\275\037V\246\275\222\210\">`J\007>\n\026\242\275]\345v=;\232\231\275\241\001\315=\307\353\355=\365\203\357=!\355u\275\032K\377=+\377\304=L.\237=\371TX\275;\t8\276\255\223\005>\243cj\275\356Cu=\034\341\275<\226\330`\275\247\222\010>\240\177\036\276T8\210=\231@\306=\255\235\334\273tf\350\275\3710\355=\2327\'>\270\'\205=o+\021=\323\232\270=\263\310\371\275\212\244\352<S\346\225=#\036\013=\345\243\267=\251\336\246=\222\274\216\275k\031\250\275\003\347\231\275\200,\"\275\242\375G=\216\274F\276\005(g\275\025\242F\276\223h\260\275e\372\"<\030\302->\032=~\275\0055\365=\254\224\375=\354@\331\275.\364\'>\305\006\235\275V\337x=:\360\371=\022\025\323=\210{\200\275\362\246\203<qJ\250=\003\013\233=\004\216\217=,\260\007\275L\327\035\276\232\270\327\275\262\025\226\274SN\t>H\342\301<\263<\325=\226\212e=}\256j\275)\364\277=\2734U<\322d\002=\267Cm\275\247\2171\275\354\200[<.\030\314=\256\300.\276\240)\324=\037\313\262=\254\177\316\275\025\240\271\275\250qf=\027,2>\376\037\336\275\377\340\352\275\271`;=\211\363\001\276!\3040>7iV<\214\226\237\274\205\205\001\276}?\306=\010r\263\275\364\327\007\276\267?\n>\375d\354<\232\221\257=\036\242\300=\254\213\t\276\2273\014>g\013\025=\217>\366=[\352\200\275H4\264\275\312\304\317\275\237Ov=\270\270\025\273\342\202N>\370\203@=\025\260>\275\275\345J;\201\234\235=\376\234D\275#\232\253=\256\235\347=[\355\004\275\0225\224=1\347\013>9\311B\275\312\037\240\275\344GO\275\305\322P>\334\257\230<\216\262\312=\333H\323\273\321\300\235\275v\277\303<u\031\254\275\036\253\305=\313g\000>\\,\253\274\271\211\022>5T\215\275I\277\223\275\371\"\250=\021\\\213=\276\2223\276\'\036:=\274\027\304\274\n\324\006>:\323\232=\261\331\336=Y\344(>\217\377\212\274Zv\017;M\366\266=\234k2>+\203\003>%-\002>R\226\241\275-\376\036\276\204H\351\273X\372\235\275\310m=>\220[\036\276\271\344\031;!\350\362=\203 \025\275\207o<=]\321\337\275TW\352\275>Q(>\310\243\033\276\0377\014>\233B\341=\341\277&\275\0020\321<\305\324\177=\242\325\301\274\320\225\307\275VY\316\275\317\230\n\276\344@\360=\337+B>\330\322.>\254l\t\276w\0220\275Lj\210\275*\006\225\275\305\371G>;\326\242\275h\315\376\275\205\217Z<\253\230.>E\307\371\2757\243q\274\3310P\276\232|\035\275\033\364\027>S\364\215\274\374\022\006>jy\034\275\244\302\371\275*\267\347\275m\003Q\275\006\200P>\223\354L<\024g@\276d\344\351\274\353\237\300=\320\201C\275@\246\304\275\317WQ\276\360\372\363\275x\362\331=R\206\342\274\201\2379=\023\252\304\275\na\246=\034$\303\274%\010\214;,$\210=2\356R\275\360\236k<\212\244\020=\342B\272\275\237\002.\276:\220\367=\317\242<\276\262K\301=\340l\250\275_\010\356=\321qw\275k\375)>\276&\n\276\t\325\362\2750o\177<\374\353O>\2224\211\274\232\177\225\274\213x\023>\350\204\r\276\256\024m=-s\001\276Z<\317=\347\327\265\274\253\314b\275<\252\332\275\323E\006>:|a\274\243\310\262=I\0276>\361+\323=\374\242\317\275\2428O>\033\324\242\275\350o\266=\320\317\002\2736\025\224\275B\3037\2763ch\2763\315\201\275R\014\241\275Y=\237=\273\377\372=\276\203\205\275<\303\356\275w1\340=\020\270\343\274m\3751\275\355\230\'\275[}\002>\276\331\001\276\002\346\216=\335i\037>\341SX\276\373f\210\273>\351\264\275\266\254\206=pt\'>\211\373\235=f\024\256=\035[`\2750\227i=vy\r=\315\312\006\274~U\233\275\214\341\014>eF\210=\034\316\340=\337\252G>;\021-\276\300T\211\275[\230\237=r\215\302=\034\300>=\344\376\315\275\206\261\023\276(\325\016>\311\214$;\241o\203\274\242l\315\275j\361\221\274\247EL<\006\223(>\203\212\n>\t\270M\275JH\335=\222\234\262<\241\216D>\337\370A<\366\247g=F\223\200=\'\325\221\275^\207\251\275g\250F\275@\347c\274\354\204C\275\332\020\036>\263\255\351\275\354mS\275&c\265\275\034tE\276\216\206>\275\372y\314=\255\225\332\275h\271\262=\\T\024>\211<\213\275Y\022\020>\352Md=\t\034B\274\r\003\034\276mW\005\276W\232\262\275\264\331C=\025\013\263=\\\357C<\nt+\276\007.\034\275Y\367\342=d\037b\275O)\037\276\351#\325\275\024\274\336<g\344\341\275d\315\204\2737\003\346=\341\337$>`=\206=q\3111<\357\026y<G\322V=@\226\303=b\214J\275,y\357\275\247\203~\275\324\227\003>\337m\026\276Z\263\254;\241\212\356<\217e\202\275\013\260I\276\323\207]\275\313\325(>\330x\302\275E\3650\276\037\276\340=Lc\027\275\360\202\242\274\310BD\276\265\325\243\275\310\363Z<\376)o=\023~\356\275251\276`\311A\276$\375D=\317\303\263\2750\205\354\275mv\345\275\234\020\313\275\347\301\254=U\361Q\273\234\262\247=+\333\253=ly\342\275\032x%\276\234\007\304<\242\2059>\352\266\350=\001\\\257\275\'\220\366<XUe\271fX\323=6\031\236\275\036\035\026\276\377\261;\276\307T\243<\356\034@\276\210x\010\276\360c\022\276\361\247\370\275c\346)>/\322\034\273j9\225=A@\022\275\255\343\032\276\224\261\217=w?\023>Fz\221;=zH=\313?\003>^+0>u\177\360=\352\324\334=\272\252\206\275&\341\216\275\037\020\273<s\306\303\275\311`\023>\222\212\377\275u\251\202=\226\000\032>CD\360=\325\037\352=\3753\246\275\024>\n>\275&\364\274s\324\267\275\232F\357\275\257\377\034>\217\206\242\275\030\374\364\275\2551I\274\344*\300;N\312!\276jS\304\275\205\316\343\275\360\0274\275\243\235\373\275yJ\210=\002\254\265=\026&\006=p\311\212=\007\254\356<t65>\037x\303\275.;\t\276\nH\032=\027\233D\2759D\036\274\027-\336:\346\265\357=z\234\365\275\007K\376\275\037\223\025>\232O\n>|[\215=jy\273\275\305HU=\201\354\375\275\222\313A\275\300\337\006>D\313\216=\220\310\342\274\247\220\260=\010\372\357\275;\277@\275YZ\022\276]%E=\352\017\014>\037\241x=|.9\276\264\361.\275\26109>\264\233\257\275o\001?\276\363\310*\276t\224\024\276\257\013\023>I\020\304\275\016\241\021\276\372\205\200=\022\2009=\244o\326\275\303\227\016>\005\232\001\276\235\306H\275\347\236~=0\207\335=\232\320H<U\206\026\276):\334=\253\032\005=9\274\r>\371):\276n\350\233<\241\254\227\275va\322<\224q\340\275\367\014\273\275\346\005\311<\221^\027\275 Z\005\2765\317:>\213\365\203=\216\027o\275\277\227\373\2750\205\016>\312\226\241=\335\0274\275[\202\036>\035\307\022\2769\316\301<\310\033\014>\360N6>\206\014V=\255s\177\275\324\346\302\274\345B\356\274~K\365<\016\246\241=\207\224\310=\367\312.\275\263bP\276\355\310)\276\273\301\324\275\3347\377\275\321\\\236\275\300b\000\276\263\272\013>66\311\275\351\014H>\000\256^\275&T\234\275\200\264T\275\214\252\025>IT\251\275\202\3674\276f[\024>5|\003\275\010\2216=\251\010\204\275\364\212\225<\301\256\316=)\303r\275\334!\302\275\355Z\300<\002\202:\275\252F\362<\3358\233\275b\211t\274j\026\234\275@s\364\275{\301\253=\355\311\207\274\237\351\312\275\035\303\262;\256\245\000>\373\003\312\274|\307\223\274\273-w=\270:\n>\365g0\275@8\036\276\343S_\275`\272\240\275E\271S\275\373\337/\276\216t\016\276\275R\312=\340\214\346=J\212\242=4Y\033>\201\014\325\275nA\001>\333\236\031>\000\314\253<Z9\343=c`\236=i\326\365\275\3464!\276\370%\265=F\303\354\275\3013\237=u3\031\276\027~\375<Y\374\017\276\302\361\024\276\352\277G\275\316\256\024\276\252H$> K\302=\227\316\034\274\376\236P=Z\206\220=\330i\025<\306\330==|=\225\274fH\326\275\304\255P=\247\307\002>\2306\377<\267z\260=\352\275\370=K^?\275P~=>-\226\\\274\366\272\021\276\344\203\345;\307o#\276\244s\033\276\003?\275=\324z\376=B-\300<\256\216\022>Q\353\260\275Z\336\206\275\3539\352={T\200\274<\035\206\274&c\343=\034R\273=\242\204\366\275\332\275\370=\305\\\032\276M\177\014\275\313\265\325\275C\275#\274~u*\275K2G<x\1775=;\254\352\275\013|\202=G\370\346<\326%\253\275\372>5\276S\212%>\347\314\006>\023\302)=\346\n#>R\376\316=\251\254c\275\267\355\006=Y\356\365=kd\336=\313\026\006\276\373\352\263=\225\2772>\353\177$>ZP\373=D\302\217\275M\377\262=pd\010>/\302*>I\363\017\276\327\261\357\275#w\033>\232\235h<\"A\035\276!\006\013===@<\200Dj\275\320\311\201\275\261\037$\276\336\245\331;\213\235\021\275\037\331\372=28\020\274\037\273\344\274s\372\355=\253\267$>t\3338>\234\3467>\312\343\037\273b(\017>\235\357\033=\210\310}\275\366}\006\276\316\252\224=^9\335\275\235\266\177=\243\"\233\275s\351\317\275\347\376\345=T\035\337\2746\373m\275[\212\024=3\201\265=\316M\010\274w\254\351\275\367\\\021\274\347\346\321\275\252\354\030>\256\266\327=\311\271\244=\231\013,\276\200\037\335\275\213\277\361\275 \270?\272\013?\255\275w\214u\274\253c\220\275\017\177\324\275\342\266\352=\357\007\272=L\360\376=\022\245\260=\261`\361=\230\3138>\240u\007\272\352\031,>xP\t\276\n\320\260<Q0\004>\006\220\033=\357\217\362\275\215O+=\311\371\222\275\275\326\274\275\352z\305\274\267\374\356\275_\"\010>\257\023\007\274$_\000>g\237\303=Yi/>\242B6>\235\0171\276\030\302\"\275\017~\203\275\013*%\276\316@X\275\337\346r=\372\024\277\275\024\350\346=i\230|\274\362\255D>l\266w=6mL=\355\304\321=\036!\264\275\264\361T\275v\327\037>\261\246\000>zO\344\275\264\361\311=\345M\036\2764wU\275ovU<&\253@\275\377\336\325\275\354f\303\275\265s\333=\234!\255\275O\272\354\275\215{\035\276I\365\313<7\210\325<.\375\034\276H\345*\276*I@=Q\241X\275\260\254\330=|e\r=`\324|\275\302z\036:-!\006>\335x\370\274\372\236/\276\341\323\030=Q\317(=\221\334\035>M\3451\274\036\037\356=\021\266\t>\311\347\201=9\323\025\276\221\214\001\276V\234\362=N\337\223\274\372\207\253\275\336&\377\274\274\340\334\275\216\375\036>\001\323\274\275\321\335\212=\264>\305\275\324\260\\\275\266\261\346=\310@!\275\217\270\210\275\230hO=\360\243E\275\311\212\210=\rK\363=<H_\275\\\267\261<\342\303`=\333\211)>\314\317;=\363\014\315<\005O\223=\212\371\257\275\033\345\205\275\360\250\351\275*\2772\276\324\330\007\276YR\005=_}}=eK\210=\236\313\272\275\2746\347\274 \313\010>\267\304\276\275\340\3023\275^\025E\2755\276~=\025\364\'\273\234\371k\275\236\273\032>zz\377\275\264b\337<\336\223\235\275\265\304u<\263\311\236\274\313IT\275\001\254\256=UK\260\275\225\336\025>\307f\t\275u\335\273\274\364I\016\276\'\023\374\275\021\230\220=<\303\257\275\273X\231=N\357\002\276\3278M\275\313\3331>-\202\234=\271k\016\275\255\210\301=a\304\254=\253\373\202<\206X\n\275O\273\252\275x\001\357\275>A\304=4\t\343=\275\315\255\275F\022T\274o\200\036\274\033\216\"\276\337\210*>\222D\333=\026j=\275\271_Y\272\016XN=\'\250\026\276\004\"\032\276l\375\362=\220\200v\275\316ta=)\201\002\276\341\235\315\275\363x\343\275)S\017\2765\222\361\275m\257\372=\002\003%\276?pB>J\314\310\274BC<>\005\227T>\022\342.\275\0325I\275\007V\362=\307\231\007\275xf\017\274)\331\025\276\206\030\336\275\024D\210\273\340S\356=\022\334\255;\327\224\251\274P\367\327<R\215\007>\306M\374\275\'3C=\246\344\207\275\265\353\255\275D\220\252\275>\036<\275\036I\037>\373\371\233<\300~\023\275\301\360\236=\302\353\034\276\205\014-\273\341\233\'\276\021SF=@\351 \2766\250\356<//$=\323\017\030>|\321^\275\211\320\232\275p\023\030>\001\361\253\275</\376\275(9\r=,\254\330=Ls\377\274\260\2417=\023N/=\013\264\330\275b\302\222=\306\217!>\303\250\270=\323+@>\'\266\240<5\210\247=\275H\002>\223\032\245=Y\311\036<\360^\032\276\345\203>=gU\002<i\203S<\220^\003\275U\360E\276kom=\036Hx=\241q\'\276\253OO\274\2762\004>\314`\214\275_~\335=no\035\276*4\351<\341\335\303=Y\221W\275Yv\326<#<\345=\026\334`=\266e\256=\2446\332\275\316j?=\'M\205\275\345)\362\275\035\360\224\274\241\361\017\275\213\246^=J\344\">\342\320\026\275:.\300\275\303\030\312=K\220&\274\321\324s=\272\275\234=\030\207+>\207\373\301\275\307\302\373\275AwZ\275\024\335&\275\304\301\204<\263\347\352=\302Wz\275\004\374\242=.\344\242=\\Y\254=`}\264;\213=;\276\"J1>\366\2256=M\247\307<\006\353\267;\213\021\371=?\3745=\222U[9\237\273\274\275\334K\357=OE\372\275\003\300\001\276\310\263\217=\305H-\276\240L\371\274\353r\035>E\225\335\275)U`=}\367\"\275\r\377\346=(\316\031\276\r\026\032>\332P~=!\376\307=\224\031\327<]W\264\2758\357\n>c\247\271\2756\331%>r\302V\275\310\177\201=\345}\315\275\023\202J=0\246\033<k\301S=\367\337\214\2756*\026\2763\233\356\275t\\n\275\32555\275\355U\377\2757\307\266\275D<\255=\014\306\264=\266v\033>\315j\242\275QF\371<EI\300= Z\246;\331\003\202\275\245\300\255\275\3072s\275\267Q\032=:\025\224\274\277\231\034\276\323m|=\2351\374<\232\313\232=\206RL\274YX\030=~\204\207=T\215\037>\330?\227=\263\003\261=,Rk=M\203m\275t{1\274-W\225=3Tc<Z[r=$F\355\275\247\371{\275+\234\025\276\316\346\307=F\215\226<D:\020\276P\271k=~\217N={M\212<\354bQ=\\6\236<\356\'\261=eV\375<\255|\234\275\016\300\256\275\271wt\272-\014p=2A\265=1\323&<\263\330L=`\325R\2757!\025\275Z\257\213=\335\341O\275%Y\217=\226\313;\276)\377\'>y\303\022\276\243{\017\276\251=M\275\215\205\022>\322\217\335=W\014\t>:;\237=\255\255\000>#-0\276\250\212\0169\350\014<\276\353o\022>r\3309=\376\270\220=\232\026o\275u\335\002\276O\222\274\275R\335\316=\357T\035>\222.P\276\177\027\304\275\215Lz\2756y7><!g\275\222\311\026>\256&&>\r\026<\276TlT\275\243\024\272;`\237\227=\331\262b\275o\321O\275\233\314\">\204\031\036\276\271u\254\275\246\263\252<\212\344\355\275\376\322\202=\316\234\003>\232n\303\275\334\222\320;o\364\364=\303#2=\262\237\276\272\006#\031\276\371\267\363<\366c:\276\273\362\342\275\201\352->\261\376\223\274F\255\r>\266\032\n>\206\256\235\2757\240\020\275{^\007\2765\345i\275\322~.\276\303\227\312\275\222\023<>G}2=\355p\n\276p.\204=\367\\)\276n:\351\275x\212\005\273\221\360\301;O*\216=#x\211\275\"\316\253\275rh\026>4\2701\275\375\362\201\274|\253\205=\016\250\300:\206\334\327\275\0262\006\276\274\356R\275\272\377\354\274\017\336h<\256\264\007\275\264\377\">\274\273\250=\272\245\321=n\311P<\265\312\202=\206\326\336<\324\374\005\276\310\033\306=\2667\324=\240C\352=\324\241\342=o\317\317\275\265b\341\274\342N\271\275\351\023\340=\"\212->\250\337\325=j#2\275\005z\245=5T\302<W\273\000\276\270+\022\276\022\000\377\273\347\2019\276\340D6<\276TU\276\330\371G=\027\202\003\275\210\206\373\275\377b)=}\377,\276\200\303\216\275\267\214D>\035\370\247<%\373%\276\333C\316\275\365Lm=m\262Q\276\256Q\001=\023\254\024\276\277\321\036>-y\002\2760\271j<ZCR>\307\262]=\313\365\361\275\035\242G\275>\354\271=H(\3549\301\306\r>\005\371\276\273\351\003\"\276\215\0336=\366`\307=\235L\307=P@\230\274\001\257\022\276\333\333\310<\240\204\344\275\010[$\274\331v\353=\312{\263\274\301\272y\275\014\231a\275\206\311\340\275\222\376\014\276\327\242C;\017\010\025>:v;\276v_\233<\375\263\377\275\232\362\237=\246]\222<1\355\r\275S\241\010\276\270\003\360<#k0\276zQ\231=\250\237\245=\256l\207=6A\030>Kn\330=\240\177\r>\267\022\n\276\270\0300\276\325!\256<-\254c\275\375\256\006\276:\236\004\276y/;>\016}G=\311{3\27689\253\275\367 \325\275&T\013>-E%=>\270C>\307\232\231\275G-\277\274\375v\376=\365|i\275\232\333\261=\351\014\261\2753\365\"\276\354\234\031\276\266u\276\273\001&\002>\244d\334=2\033\227<s\036\351\273\"\034Z>\024\257\321=(z\345\273F\257S\276\267\315\252=/\344\007\276\002l\243\274\324\311N>=\265J\275Hp\344=\035\177S\275@\271\251\275\301:S\275Fh\026\276\261\320\306=S8(=\247\3101\275\377\3641\275\303\343\376=\220\227\235\275\256\3525>\r\030E=Y\001\324=\305\274|:\301X\261\275y\336\372\275\\\270\362\274\346\317\260\275\247[\304=\014(\273=\251\203w:\246w9=ca\354\273%\330k=r\341a;b}K\276\3567\"\276\303\037\306\275\201\356\366<\0366\030\275\220\2050\275\274D\313\275\223\010F=\232?\367=\013\025*=z\n\371<\276l\233\274\030\331\020\276\230\336\002=\2730==`z\341\275\204\337\037>\216\355\007\276IjJ\276$c\220\275\216\312#=\274x\244\274)\205\224=\213\014\371\274P\2179<\3546\021\276{\327\342\275tZ\211=\020\201L=\326\207.\275\351T\301<\260\330\022\275\204\365\273:\221\361\306\273\202;\023=%\354\313<|\242\t=|+\354<\304\243q<IA\225\275\357\264\240\275\354\305\312\275\036\231\301\275\317\022\246<\331\014:\275\355\027\255\275\307\0038=\274\371\346\274\241{\361\274 \020\014=\374\362\334\275\245\220\352\275H<\334\275\255\352\277=5\224\334=\213\307\357\274N\313f<\260\210v\275\335<\374=\010\330\322=\350\373\312\273g\021,\276\036\026Q\275K\251\362=E\023\373;\235\320\010>|pJ\276`\0260\273\313\2209=SqI\276\300\0211\275?t\225=kx\217=j\375I=\031\230.=;2|\275\322\240\225\274#\232\013\276\337^\252\275\232\362U\275e\301\333<\355\314\231\275\321\001\222\275\326@\300\275\315k\315\274\032\177s<iSv=v0\247=\360\276\243\274<^\313=;\337\303\275\211\332\267\275\001\245E\275Tj\364=T\\t\275V\352\254=-\350\274=>\230e\275\201\034\242\273b\255\'\275\007o\037\276\366%@\275\340\362\201\274\266\360\333=\037\331\030>^A\244\275\204D\235=\334\r\276\275\302\307\222<QO\305=c\330C<Z~\352\275+\346\300=\256\312\207\275\027j2>\024\360\304<\362\372\020\273\301[\245\275\367\364\304\274\345j \276\255\313\274=\013\\\370\274\rW\344\275\322;\357<\376:\331<\220\236\217\275uaF\275L\032g\275u\360\226\275D8\312\275\2034\030\276Z\213\304<Z\334\003<\251\221\361=rH\360=\375\304f<\366\216\337\275\314\3663\273\377\'\225\275%\361{;\305\214\205=\261\r\314\275\274\326\240\275\217\365\013\276i\310\352\275\244\331\257;\344\340\315\275\3013\272=\3655\003\275-\2606\276\314zm\275\364`\203\275\363\373\035\275\234\262\265\275\371\212\302\274\254\274\206\275\231\244\275=\216\200\354=,\327\262=8\320&\276e\240\365<v\243\241=\206B\311=\217\234\265=}\332\005>p\256\210\273(lZ\275\"6\311\274\200\002\346=f6?=\334\262v=(\373>>\000z\026=\204Fl\274\257\'5\275\316t7\275\023\346U=\244\266\243=\314\355\353\274\366\366\031\276\201\000\263\2753,\344\275\370\236\034\275\263\340X=\357iz=m\024\027\276l\\\305=\304\345\017\276\243r\303\275\273\t\361<\226\373\340\275m\231\353=\300i\252\275\341\374\027>\305\267\375=\266?\237=\250G\254=Y\204\252=1\273\212\275\275s\271\273\n\227N<\032\303\366=\335\010\221\275\315\317\t=B\377\325\275\232;\177=\037\320\031\276g\355\252\273\337\374J\275I\244&>v\245\330\275\265\367\334\275k\240\354\275|\315\"\276\367\220\316\275\201\027\205=\2422\263\275\'\323\037=\025\215\370\275\234k+>\030\213\205\275\023\260\354=\005\031r=\314\"=\276&\345\347\275\364E{=#\255\237\275\252\344\253\275\021\374\003\276<\333\270\274.@\010\275\201\256\006>b\001\332=\\\260/\276\264\2309=\225\223\272\275\010Gk\275\226So=\342l\224\275\n\302\024=u\244\230\2759\003 >\005\261\006=\243\267\343\274RS\026>(\211?=\352(\002=#\341\010>\300Q\274\273\322:-<P\267?<\372\261y=\365\327\377\275\331\247\314\275\272M\264\275\3011N<\300u\351<\"\347\205=\204cl=\343\016\257=\031\007l\275\375\364\020=\004`\226=\006\222\205\275\232\344><\002\272\034\276\001\002\243\275|l\301=\274\263<=1c\222=*!E\275&7\334\275\242\330\007=a\013\010\276\310\220B\275\373:\271\275\251\350\002>\205W\005>k\273\311\275\213\003\245\275\324r\n\273\"\245C<\271<\300\275\266\213\010=\021\016]=\373\\\366<4+\252=+V7\275]D\"\276\014\321.>K\017\265\274\037)\001>\337\3346=\372\372\233<t\243\002\274\336k\237\275\203C\237<\273\276\326=\272\237\020>\\\220\221=i\231%=\370\331\347\275\375\3746=\024\337\013\276\363\013\326\275\255\354\024\276F\345S=\214\346\215=\2767\262\275\2779\354=\312%\022\275\353\340\301=\327U\265\275FWB>\254\376%>\245\351]=5,\000\276k\216\324=\342s.>\375\366V\275oD\034\276\177\365\212\274Jz\265=\220\003\372=E\204\331=5\233\374\274\225\351\365=<8\022\276\266ck\274\207\244\362=U\333\203\275h\314\350=n\240\214\275\263\024\215=\225e\034>M\331\317=nn\036>\215\243\370\2748\300\316=\265D%\276\222\241a\275\300\2141>\366\014\021=\021\"\211\275\025\261\304<p\030\221\275^\327\215\275\375|I\2769\222\357=h\210\374=\345\343\327\275\0369\270=\246\245;\276z\210\007\276\327\310j\275\023\221\204\275\r\362d;Z\014\321=\216\021$>M-R\275\014\207\271;\223\2566=\254>\277\275\343\351\031\276F\207\210=,\257\305\275\240\027\242=\220\020\241=\342\206\244\274\341\221\020\276\374\363 \276l=\256<D\000\221<t\021\271\274\233\246\374<\025\361\242\275\225\030.\275\251\346\277=\202[\032\2763\250\272=v\177\220=\323\2468=\373\003~<\275\326\311=\030\331\363=\203\024R\275Y\017\n\276i8\t>\343\332\n\276\362\350}=\"\372\317\274\323\007\254<\223|\352=4\313\025>8\026\000\276\264\235\r=\005\315\352\275\332C\223=\236\360\241<\215\344\316=\030H\356=\332\274w=.0\203=G<\244\275|\343A>u\201\315\275H\330g=F|\252<\262\263\003>\342\2504\276]\351(\276\r\264+\276\027\243\303\275ml.\275|\240;\275\301\244\355\275\325h\221\275\302\r\\=\262x\360<=\030\004=\375\300\014\276bGZ\275\204\215\023>\253\373:\276\n\202\322=\261\030\254=s\310G=Q\245\023>\255W\032>\370_\037\276,)\350=^{\211\275\276\303\227\275q\0241\276o\034\305<\026D\255\275t\023\262\273\353\352\333\275\332\354\270\272,\264\255\274\333^\005>\231&V\274\205)\204:\343\374\275\275\220\237\212=\251Y\205\275\300c\026\274\016!\345<\303\002P\275(\355\211=\266\341/\276J[7>\307\311\244<\230\245\r\276\n\252\033\275:)\314<%`\360=$\206h\275\023\205z=5\367\234=\220\317\245\274\341\264\253\275H\315P>u\317F\276\007\207Z=X\346\306\274\2328\003\276@\240e=\032-|\275\365\304\006\276\001\243\035>\207\320\033>\310\"\020=~86\276J\363-=8\243\r=\004\362\353\275\344\372Y\276\025\310\031>n$\000\276\242R%>\207\245\256\275\206 1\276\265?\'>D\374\375\275L\000\032\276$\004!>f~\n\274\032rE<\217<\017\2768\006\021<U\211\254<f\362\010>\262\214\324\275\002\030\327\273\210\316*=8&\035\2766\206\355\275\326\001b\275\377\377\026>\211\216\006\276\374\261\034\276\002\375\226=h\266\260\2744)@\276c\210\001\276\332\345\325\274E\230R\275A\253\213\275\234\374\236=\374\363\006>\261\242\200\275\346\274\241=V\357\262\275d\325\361\275\336\227\t=\214n\201\275\010\355\233\275_0I=\020\340\230\274\221q\006\276\272\333\t\276\360\207\273<\264u\t\276F$O=\224\234\233=S\356\263=r6\342=\253\031\343<\224!\305<\007\002~\275\330-\346=8\340\273\275\325\262\275=*E>=YU\300\275\312]\364\275a\260$=z`-<\177\322\264=\376S\270\275\025\251\222\275f\360\013\276(\2520\276\317\241\036>\333\304\341<x\215\005>k\334\007\276\254\301\032\276\260\246\331\274W\243K\273B\347\004\275\254\'\206\275x\205L\276\243k\031\276\037) =w\313\320=\302:\325\272jX\225\275\303\331+\276k\245$=1\254\020>\240\213\274\274g\345\321=\177{\257=\376\266\267:J\230\271\274\\z\325=H&\023<b\016\245\275\010-\257=\332\266J\275\327\252\023>\200\222\356=Q.\242\275\024\251\273\275?\241#\275f\244\272=x\312\254<\276\257H=\371\264\020\276\016\267\003>\0230\334\275\235\270*\276|\353>\276\317\353\032=o/F=\024\305\206<O\217\003\276\3434\351\275\314\nH>\353\"\301\275\027-\231\275\230\240(\276\242\273)=\231\237\226\275\205\243\336\275J\313\266\275(X\251=\351\r7\276:\023\232\275\301\226\311\275K=\331=\2027\035=W\365\317\275`\325\r\276\215\355\326\275[\333+\276%\3132>k\033]\275\3051\272\275\342\251\362\275]\320Q\275\215\315\301\275\\\314\311=u\261\026\276\336\023\272;\310\026\371\275`\331\370\275\270xh\275\326\222^;\036\257\357\275\375\330\000\276C\325\201=0\271\016>g\361\r\2762\367\003\276\310{\347=\002X\t\276\234H\033\276A9\022>\032\310,\276\250\014\034\276T\352\236=\3344\212\275\311\345\370=\272\021\203\275)g\252\275\232R\025\275\333\035\353\275\313JJ=\340\\E\2758\233\244\275!\241\353=\377~\227;i\366\326=\301\"z=\213Z\014>\003\246U>\031\221\217=<7\270:\022\314\257\274\264\370(<\366\250\014\275\205y\264\275\310S\371\275\214N\352\275\250Y\332=u\247\270=mb\317\275[\242\227\275\225\370\211=\020\322$\275\334\261\345\275\202!\324=\001\201\007=m`\025>\205\323/>\370\353\336<\330{\027>\244\356\344\275\320\337\374\275r\236\006>\2375\360\275\372n\361=\344R\323=\206\316\262<}\252;<\\<\004>\324\307\360=6>\003\276k\311\311=j\240u\275}\257\257\275\201\232)\274\366J\375\2755^\002\2765}d\274\027\235N=\261j\344\273\372\336\257\275\032\273\245<{\264\247\275ih\272=H/~=\207m\027>\324\322\001>k\202\017=\234\234\366=\032\035\366\275\024\001 =q a\275H\353\t\276\345\010\025>\306\203\021>\025s\003\276(\316\016>E\247\362<\023\326\222=Z\2014=\255\031J\2751\'U=/\213\321=\260\3573\275\016A\032\276\220(!\276\213M\002>\315\231\302\272[\n\267=J\332\336\275,\353\222=xz\216={(\361=\335\232\304\275\277\244\315\275\334Ja\275\200\341\007>\341\305\r\276 \216D>\261\211t\275\340\375;\274M\241m=\360\367N=\2674\223\274d\200%\276\010{/\274]\206\226\275G\211F\276h\335b=\032+\367\274\206G\017\27670z\274\300\330\304\275\227\217\230\275/G\243=\032o\251=c\204\033\275\326b\037=\032u\030>A\227#\276\004I\037\274\014\021\026>\213\377\005>\n=\244\275Z\377\004\276\016\020_\275\347\351\325<8\355 \276\206m\'\275\261\301\r\276`IZ\275\331B=\275\2335\\=\344\0033>\332X\304=\376\026\364=?\251\232\275\362{\023<\342\003Y=\035\333\023\276\273r\276\275\237\365,\276\236\236\356=9Ls=/v\017\276\000\263\265=q\310\325=\273\376\n\276\357\373W\275<\336O\275\304\343\026\2764\330\244=\377w\274=\217\241->\004\374\234\275\213\234P\275\223Y\301<\211\332\266\275\322xE=\020R\264\275*\t0\275Hn\312\275\010\224)\276\313\245\234=\'\"\375=\254OJ:\361f\034=v\325\225\274\027\323]<g\rj\275\025x\356=M\226\222\275\267\000!=w\244\314=\212\037\373=\265\007u\274\274\\\215<i\037\032>\255/\233=l0\250=\216|b=?\301~=\250Y\361\274\371\n\354=\247Y\t=\214I\305\275<\213\303=T\254$> \331\275\275\234\317\233=R\372w<\324\001\310\273q\276\300\275\201\345U=9\374\257\275\227\326\024\276\335\t\272=Z\270\253\275)\371z\275\036p\t=\350\376\001\276*\031P\274v\037\352\275\025j\365\275\305Z >\277\356\262\275\224\342#>\001\376\320;O\207\263<E\3109=\255\t\312<U&\221\275;\272\220<\t2\252\275:\314\321\275\221\300,\275J\3466\275\364l\'>S\203==c\262\261\275\220\252Q=:?\253=\014\335\213;\311x\025\275\021\221>\275H\361\233=&M7\275\300\246\023\276\253]\026=$b\263=\347n\347=\272\215\273\275=\020\300=M\004[=\335\251\t>T\221\331=s\324\237\275W\266h=5O\306<Z\372\013\276\364\233\305=\302@\247\275`\343\310;\363\"\270<`7\302<\341\213\245=\375\034\373<\016q\323;\335\262\005=l\323\240=\321Z\373\275&\010\347\274\250\361\000\276\002\354\275== \273=NI\\\274?\236\205\274\353qK=\275%9\275\317\217\321\275wz\311<+8\213\275\231\263\326<Bq\241;;\351\305<m\336\252=I\256\237=\014X5\276\217\3007>\307T\374\274\343\023\270=\313\265\303\275\366\t\"\276\306\244P<\344\025f\275\323\207\323<{\333\270=m\220\021\274\2668\200\275\344];\275\274\362\206=s\232%\276t\350\260\275*\253\361\274 \373\177\275>\002\004=\017\260\256\275\331\224\355\275\230\335\261=\336\316.>\250\240\220=b\247\r>x\351\023>\r]B\275\026JP=w\265\323=\320\317\247\275\301P`=\312\253\375\275P\223\t=\223c\263\275\022\341\345=_w\"=$\252\310\275)\031\332\275*\027N=m\274\034\276\310\332\214=#Uj\275a\000\321=\361\222.<\353u\016\276\272\221\233=\357Z\002>]\376\216<\357z\204\275\234\353\336=\247o\034=:\033\231\274\024Z\n>f\312Z\275Be\034>{G\330=g\377\223\275\253 \303\275*\267F\276\000\000(>P\342\017=W\206\225=\254!\317\272K\222== H9;\271J$=[\277\324;\265\364\017=o\217\332=o\006\373=\324]\325\2758g\004=\257\351\006\274\244\204\320<Q\355\251\275\211\340\241\275\365\241\344:\021V\\\275\343\\v\274\2018\326<\276\210\r>\001}\031>R\2524\276H|\204=\360\337\037>E\202\022=NY\007\275J\271\013\276\234\227\276=\252\271\337\275\013\241\335\274\231\277\340<\0353\242\275\216\311v\275n;\263=#\000\257\275;aZ\275\224m\023\276\006\264\235\275\316$\335=\350\321\264=SM\376<\366\337\017>\\\265e=\201k2\275*<.>\2466X<\373\204\275\275[\273\234=\206\027N=\244\354+\275oT$>\264\355\346\275x\003\031\276\340\016m\275\215\3270=\243\364$>\374\337s\275d\335\024=+\363S=OJ\034>\037{\030>\204\340\232\275\027\tc\275i;\037\276\355$C=s4\217\275F_r\275`\373\360=\017\200\256=\304\020\370=\007\372*\275\226\025\246\273Q|\350\275\033\020\024\274\311R.\273$\301\003\275\337\002\313=bG3\275\321\302\357\275\302\023(\273\306\024\367=\205\250\032\275\316\320\364\275\375\002\'\276\307X\266\2757\016\n>\214\352\340\275\362}D=#u\351\274Kq\224\274\314\034\256;x\272\206==\323\000\276\2114\364\274\331\226\356=\317s\253=\225\224z\275\260\267\"\275w\t\262\275\2077\022>\224\236\353=\246\273\213\274\007\274\024\276\204.\344\275s\025\'\275\325\240\201=\3357B\274N_\233\275\204H\246=2\315W=.\364\203<\372\327\007\276\253}\256\275\303\353\017\276wo\036\276n\001\347=\255\271\216=\330R\233\274\213\316\226=\237]\016>3NM\275@\250\265=\240\243P=\002|\370=\377\225\220=\265\201V\275W\346<=S\342\023\276\360GI\275w\200\221\275\236\'9\276\213\244\350\275[\001\005>\333\225\031=\032\223\334\275\021LI=\375\223#\276\034e\n\276\313\3408\276\266M\010\276t\364\020=\030\251%>0\263\324\275\351\375|\275\221\245$=\205\n\t\276\223\n\226\275\3672\242=\350\3743=7s1<3\236\304=\327L\322\275Kk\375\2755\024\261\275\010)\336\273\0362\035=r\216\353\275\016\2638\276bj\326<\005`\236\275\244\264q=\031\266\212=\tQ\310\275:\177\327=\273\313\245<\306\251\013>\354)\017\2764\263\331=X\317\311\275p\325\345\273\301\007\334\275x.\317\275\270F\372\275+\314o\275\033\350\214\273G\331\035>e\240\207\274V;\351\275\220\203\271=A]\021>\004s3\276\004W\035\276A) =\014\322\242=\241\223\274\274J\244\021\276v\352Q\27588d\275\3149(=\177v\215=\333\257!\275\006\227\303\275\003\374\237=\262\272\271\275\216\270\247\275\371\027\236\275R9 \276\211\336\206=\351\247\264=\360\311)>!\254\235=Bc|\275\273\3502<\3005\261<)\2275>\245\002\325\275\036\t\207=\261\376\307\275b\361\t=\004\262\304\275\005\275\020\276\316\306\007>\237\020\250\274\342\222\200\275\223v\340<\355R\323=~@\214<\245\000\254\273\230\276\002=jx\266\274\255U\354=PdF=\271^\"\275*4;>WC\354\275\342s->\330\374\004\275\035\331\316\275m\357%>\313\257\002\274\013\007\257\275\351\265\001\276\325\256\302\274\000D\335\275\360\340\270=\347\243\253=\323h\337=\016\365\007\276/\255\261=H\262\323\275D\253\304=\344J\315=+f\257\275\013\251v\275\0013\277\275\2153\266<\230\362I\275\311\364\307\275\251\264\004\276u\336\253\275\276g\205\275\3601\257=i\226E\275\237\355\037>\334\343\027\275.i\352\274\221P\245\275\376r+\275\332\217\350\275>0\267<!\246\256=\023W\365=5\000\345\274\243\020\n\276\222\307\346\2756\242\t\276:\200\021>0\227f\2750\216\013\276\245\030\t>\221\255\010>\037\254x=\203_\032>,y\371=}.;\275\252\001\'\276\343O\374\275\r\2239>\313\323\264=_;\265\275\035\276a; hL\275WJ\273=!y\232\275\0249\t\276\'\020u\275cD\025>vK}\275\344\000\210<\276\315\244\272n\361\035\276\255\303\306=:\224W=\r\004,>9\264\313=(\201\265=.\263\252\2756p\016\276j\r\337\273\3518\000>e\356F=yw\020>\213\212\310=\321\200@\2766J\226\275\302e\334\275>}\272:\265I\000\275@\324\307=\246(\335\275\263\266a=\3675\276\275\342b\262\273\213\007+=\260\021\270\2758l\306<es\205\275\270\332\330=\016Qu=\023M\360=\033[\364\275r\203\253=\371\311\326\275\202.\026\276\021\033\345=$\027\253\275\360\252\201<6\364!\276m\035@=u\343+\276U\337\256\275:\2726\276\\m\265\275\253\366J>\247\206\003<\'\203\377<\236m\306\275B*\255\2759\302\014\274.6\t>e\227\004\274,s@\275\271\2734=\032^\351\275\031\2756\275\026C\270\275\035\027>\274\264S\320\275{\262\326\272\274\346\002=\243\036\261\275\212\241\346\275`s\006=~\213\232=\366 \322=\252B\265=\355\257\262<\352\177\245\275\013\2250\275\014\362\325\275LY\027>\255OD\275\010\247\003>rD\255\275F\302\017=b(6\275\224\321\375=\217Iv\275\271\241\016\276}M\314\274\003\246<>\224\277\300\274\330\314\210=\020:\353\275.\363\033\276\331\344/<\305 \010\276\3038b>\235\304p=\343R4\276\333|\233<\346\036\260\275\335\356y;\217*t\275%\334\345<\234\341\331\275\3404n=\347\301\306=\242\373\310=\237\306F\276T|\037>=\nj\275\306\313\306\274y3 \275\330=X>\270\356\224<\317\225\311;\233\226\226=O\265\345\275SG\017>\237\2173>\255K\367\275\226\242\245=\222\374:\275\376\3659=\263j\032=\212\246\352<\205\225\014\276$\333N=\355\210\207<\232\276O\275\347:O\273\004Q\004>\244\021\022>?\355\300=4\245\255=\377\275Z\275R\017\223=m>\266\274\357\013\030=\300{2;|\377*\275\241\275\017>\353\276\234<vJ\252\275\207\271\021\2766$\374\275\311\231\353\275\217\037\t>\330b\035\276n\216\"\276\204\324V={0/<\201\305#<p\r\023=\034\246*==F~\275\371\234\177=\226J\314\275q\244\241\275o\337\206=\007\325\357<D?\260=\363s\344\274\001\213\303\275&o\360\2742`\313\275\335f\267\275\232c\251<\222\265\203\275\023d\025>t\221*>\300X\'=\271D\360=\217e\017\275P\204\000\276\224!\254=Aq\211=\274P\367=`\375\307\275\305\020\243\275\177Y\014>\266\372)\276\355\337=\275\013\242\252<\312\332\336\275\344_\272=\350K1>+\031&\276U\014\364=\206\370\023>X\376%\274\311{\030=\273\303\365\274\005\2708\276\234\310\245\275\206I\354=\241O\021\276\352S\213=\327o\371<\223Hv=\263\253\243=\243(\326=\256\331\013>\276\016\003>\273G\276\274\016\0364\275\225\217%\275t\304X=12\242\275\300\202%8\357\363t\275\365\213\322\274\330\n\321=@\"5>\247\016x=Y\315\006\276C\2174\276\237\341\345=6\"\026\276\201\235\004>\376\232\301\273b\036\004=*:\025\274\273]\306\275\273\033\232=f\371\026\275\242h\321<m\254\334<\242\036o>&*\"\275\260\3138=\327a\234<\333\372#\276\231r\005\276\342\347\006\2767\232\270\275\354(\346=\377\226\021\276\226\267\324=b\227\311\275\235\204\t\276\315g\177;\334\010\037>n\325\r>Sn\323;\024\304\264\275\017\271\326\275\t\037\033>\200X>\276\350\224\035\276SD\361=\327\3578\276\365&+=\03135\275{\222\021>Pt\345\275\235\230\023>\315\332\274=\341\215\227\2750\023\252\273\253er<\327\223\001\274\276\227\254=\331\235,\275\315G\351=\"\303\353\27582\262\275\177\025\016\276D\025\334\274\235Y\025\276\263X\323\275$\"\242\274\353\344\233=5\010\367<\235\264B>}?\032\276\231 \315\275P\376.=~\237\324\275SZ\016\276\303\000\375\275\347t\r>\277\325\331=\253\376\263=\000}\254\273\344\243\000>h\035\025>\311\265$>\240\212\263\274\352\347%\276\014\377\244=\021\245]=M\332G<Hq<\275\254\317\245=\316\324\016>\2645\024\275(\212\025=\371\302\227=\257b\246=B`\336<;P\274\274\356\334\321=p\217\201=\202\234\356\275\366u\375=\255\321\001>\177\010B\276\211\3560=\244\030\232=\036\3237>[\367\002\276\036.\275=\343\"|=\212\227t\272\346\263V\275\202*\231\274\277\215o<\276Y\320=\326S\277\274f\211\354\275\300;-\275\005\205_\274Z$\032\275|d\322=\257p2=\253_\227=\006n\033\276YS\234=\224\377\317=\0326\367=x\374\311\275|\3260\275I\306%>\010\255\014\276\215m\213\275\224\026\315\274l\036\220=\273\333\344\274D\005i=\274Z#<\207\2149>\345\223\371\275\365]\024>\026\276\346=\350v\264<f\034\006>:D\014\276\216\3722>\205p\350=\021\331\037\275\374v!=\303@C=\276\304j\2738\025\367=U\3207>\274\356\r>\347m\210\275z\037\277=\212\305\024>\247\2763>\030\312\201\275\257\204i\275\353\271\004\276%/\253\275xE\376=\247z0\275\230\024\r\275$\376\321\275\245s1>\203\201\'>\275\002a=[\326\263\275h\342\242=\260\356\t\276{\016!\276\033\3036\276\242S\025>\ra{=\312\361@=P\301\'\276\260\0231>q\235\232=<J\000>U]H>\225.\026\276G\353N=\3173\316\275\224\210\244\274\267M\242\274\373a&\275+\365\235\275\253\220\342=#\231\026\276\372_\023\276DR\355\275\326\370\025\276\322\202\334\275\002\225\007>\020D\244\274\3328\345\274\243\354r>pF\243\274\245!\250=\3005\r\276\377\344\246=\2139\002\276HJ\2269a\324\330\274\003\017\342=)C\322<\205{+>\343(\003>sG\033>\221V\351\275>/\227=l\341\036>\317\024\010\276\353\032G=\020\334b\274em*>\200\"\215\275bi\226\275\177\340\240=\224\201\237\275\251\362\022\274\360/l=\312\372\347=\255\272\336={!\270=\347i\256\275\205H\023\275\314\347\002\276h\360+>A\356\252\275\254\005\272\275\267\r\202<>l >\003\030\377=\365G\207=\3625\323\273+\016%\276\271\376*\276T\034\025\276v\253\203\275w\216t=\276\274\342\274\202\210+>\024\240\254\275\371\351\205\275\325.\007\274\337\346\375\275\373y\362=\276\262==\250c\224\275\024S\260=Z\254c\274Ma\243=\212\277\247=\220\376%>\305L\241=D\001\312<\207\373\260<\346\340_\275\030\010\325\275k\301\275=Yo\031>Y4\265=\356(\210=Ry\t>\257\322\257=?\223=\276\322x\177=\231\034\361\275\364h\365<\374\320\326\275\262\210\277;G\272\351\275\330+\274=\216\201.<\177\277\227\2754L\271\274i\002B>\20524\276\026\332\006>\213\342\357=\332\342\226\273\236\033u;\344\366/=\365\031\222\275\304\246l\274\204\226\357=\333Sb\275H\251\310<!>\010>*\205s\275g\271\374=\354\232D\275\344\"\351=?<\225=\264V/\275\005\365\275\274\325v\232\275W\336\002>\340\355j=\267h\211\275(\345n\273\260\242%\276Z\254\024>\267\226\271\275\265\256\344\275\017X\371=0(P\276\327\234=\276.\327\303=\343u\273;.\230\300=~\351<>\301u \276\346\n]<\276\2176>\231H\362=?\020\253\275\252V\377=<\021\215=\\&\030;\336\243$>\341u\207\274I\215\014=tl\'>\3273`=2F\'\276\333\000\311=\307\362\260\275\rj\265\275\005E\207=i\241\305\275\021\200\374\275C\n\203\275\2166\246\275\275\313+\276\210S\332\275\031\210\000\276\367\".>JP\244=\346\022\322\275\242\345\'\276\330n\000\274\001\234u=IT\005>U\302\203=-,\003\274/t#>\347\233\002=\'\263.\275\307I\311\275\367(A=E&\220=#B\t\276P\322\360\275f\351O=\262\032\034>\035\344\334\275\321S\021\276$N3>\214r\360\275\200\230L\275\215\316\363\275&\207\032\275:\314\014\276\025\033P\275T\367.>`\241\305\275N\321\014>\312\007\177=+\033\307\275`*%>\237\006\361\275\366z\307=e\232\362\275\205^\223=\354o\364\275\262\337\276=<}\204=2^\033\275\016\372\007>\216\\\353\271#6\371<h\022\033\275=\275\205\274r\254\276\275T\\\215\275\264]\200;m\216%>\n\312\217\274vg\251\275\341\236\212<g\217\346\275y\r\'\276\316\351\364\275pW5;\0027\017\276\237\3768\275\233\230n\275\235\377\343=p\205\n>Z~\256\2758\307\322=\213\241\242<MM\206\275\004\314\200=\030z\236\275Q\337\317\275N\213\240\275C\346\030>k\364\317\275\207\t\017>\335Kz\274\273l\036>\327\321S>\335\372\274=\207\211\214\275\345\253.\275\245\302\036>T\345$\274\313\352\356\275\261\343\345;6#\027\276o\244-\276\\3\377\275\345\367\232=\322\361\331\274\341i\375<\352\312\036\276\036\223j\275\265\013\022<+\210\303\274+\021<=\221\340J=\300\375\313\275\204\356\256\275\377\336a=\321d\314=\370~\254=!\321*\275\\\237\217\273J\014\341=7Iv=\026_\327\274\231\370\215\275\201\232\036>f\000\016>\375\325-=\005\364\340=B<\207\275iF\254=\244\361a=I\236\025\276}\263\r\276\020\021\027\275\305\027\342=\2031|=\"\002\010\276\365\210\315=Zo\031\276\330\220\330\275e\364\017>jG\247=S\300\334\274\031\245\330\274\345E\n>\322\310\234\273:c\033\274.\273H\275\332\223\336\275\221\260\226\274\237\213\367\275Q\254\024>,\026\325=\212s)\275\323\013\215\275\321\366\305\275\363\363\364=\037\225$=14\307\274\365\t\014<\324u\311=|\336\354=\351\337\316\275\206S\r\276\021/\036\276O\272:\276:M_\2757\202\325=+\027\300=\207\311\251\275\273\277\375\274)\370\341=\334\031\343<Mg\264\274\2106\177=\013\021h\275\203\342\200<\204H\023\276\000\311q\275D\216\021=\360T\207=\210\\>>)L\213\275\0034\013>\217\201\207=\033{\005>\2139\227\275\016,\236<W\226\317\275\273\373Y<\016!\301\273p\235\001>\303X9=\375o\234\274v\346\225\272\242\023F=\303\002\036>\225\324\347\275\346\244\037>\357\r\262\275G\247\006\276\254L\320\273\276Y\321=\253!\365=X|\260=R\263\242\274G;,\276\000\r\260\274m\360h\275j\272\214\275_[\341=\347m\365=\351\317\373=\344\261\357= \303.>\233\253\032=r\007F>\200w\024\276\327\201\360\275e\272\031>\302I[>\274\375@\275\327z\003\276\367fA\276\336\270\230\275\334\230\314;\362I\003\276RH\357=\371\302/>\320L\314\275\"p\026\276Oi\352\274\315\367\000>\222\267\230\2720\3618\275\306\314\365\275\332\353\302=\005H\330=\371&\201\275z:\222\275\202\326\024\276\247b\001\276k\302}=\302.\025>\220\307R=\362\337\021\274\3072\314=\260\356C=\272\235\272\273\0235\031>4~l\275\236\306\036>\210gP<G\367\217=~\003\360\275\226I\326\274Q\331\241<\254\305\027>\350\357\020\276\005\361m>i4\200\275\326\232\003>\270\232\365<\332E6<\312Pv\275\247\1775\275l\0315\275?\314\004\2767\274\253\273~P\023\275Z\266 =)G\022\275\232$\340\274\273nb=k<i\275\320s\320;p\002\361\274?\'\311=\332\3171\275w\230\336\274\237q\374\275\212\257:>3\221,:<q\016\276\340\260X>\303>s\275\303\\\031\2747\267\327<\250t\227=\344\030\255\275\234q\007\276\310\257\220=\344a\222\275\350o\024\276\331,\326=-l\262\274\257W\024\276\261\364\034\275o\325/\275\3732\236\275\240\024\334;]\241\343=\032y\324=BJt=\372\266\265\272\356\357\371=\303\2351=\002\0374\276\317bE\276\332FB\276\354\\\001\276E\354E:\220\354\255=P^\020>\010);=\257\252\257=5>\001={\254\337\273\177(\014>\265\242\230\275\036J\240\275\\\327\024\274;[3=M\353\240=\345\320\365=\263>\255=\265d\312\275\0257\027\275\352=n\275]n\007\276\224\210\310<\025k\365\275^\3567\276s=$\276\017\214\225\275\235\345,>\377\365\331\275\rXS=\374]\311\275\331\263U=\326^\003>\273A\r\276(\024\311=\301\327\247\275n\355\014\276\253T\373\274\230v#<\253\367\314\275\320\270\006\275\243\322\370\275Yl\032\275\307a\262\275\267#3=\034\213\014\276\214\243\035>i\336\034>[\3258>\255\326\370\275\235F\347\274;\217\005>\322\362\337<\214\200->\362\353\213\275G2\255=\201-\247\274\007s\'>\253\237\035\276\270\202\377=~\337\030\276I\204);\254\007\002\276kRW;\210\325\005\276\334sR\275\237\225\326\274\215\241\360\274\245\373\212=\322^\'=\221\005\335=fg\313=\261\202\233\275WM\327\275[hK=f\351\002\276{\273\324=\267C \275\225\364\332=\365\035\206\275\311\020\017>8i\355=\374{\261\274\357\251\002\275B\332{<3\223\021\275\233\2659\275\303>P\275\005\275\343=\360Q\271\275\326\024\240:\214\236_=F\220\032\275\205\213I=\215\316\355=\251K\220\275\246\351\326\275\275\005\242\275\0240>=\034\373\341=[\361\236=\003*\030>\256{\026=\212{\326\274\031@\036=\3421\020\276\022\033M=\177:}=\346g\005=\366$\326<X\373\316=\255.\366=\321H\247\275p\3023<\351g\241=Z\363%>\010\000\007\276\354Y\002\276\347\300\307=\221V\031\276K\357\226\275TL\367=\250\304\325\274\344\027\004>MV\263\275\027\266\336\274\307r\222\275{D\236=\205\252\001>2c\240\275\322\240\016=jS\004\276\3338\343\275d\305\013>\306\317]\275\336\250\223\274\321\362\333<A\0367\275\271\233\340<\263E\345=\377\364\272\2747P\331\274\343\337\310=\205\364\272=G\367\200;\005\223\313\275]r\006=\217\201\360\275s\277\325=\360\320i\275\020L4\275\272\274\031=\325\' >\023\235\376\2730\3437=\273\326\031<8\346]=$\356A\275\261\006\177=}\\]>\303\264K\276\272;\353=~\252\224=bvg\276\235\303\347<\2626\367\274,\003\031\276\260k\251\275tx1=m0+\275R\311\003\275L\252\006>\374\021\376\275\256!\236\274a\243\313=\317\256>>\313\373\326=\367\365w\2758\272\271=\203\006\360=\316!\256\2747\2120\2755\260\253=\257hE\274~\317\376\274\367\361\000\2763\321\330\275\366\342\360<[\"\205<\350\220[\274\273_\377\2752I\344<\001f\257\275J\324\374\275\200\366\263=\247\202\276=[\200\r\276\2558S\275\326\263\034<\260A\330=\0251\323=\332\374\254\275y \177=\230p\306\275#\267\335;{y\002\276\213\250\305\275\340/\323\274a\3544\276!\376\336\273\345u\305=\232\350\211\274T\344\n\2765\325q\275\316%4\275\010\017\364=\237\210\263=\354\322\244:\310\226T\2745\211\207=k\256\205\275V\300\202\275#\254\010>\317b\352<\340\370%>i\001\361=\255J\313\275\020b\314\275\035\0257\276\\5\324<U\345\016>\243K\242<\371l\207\275\243P\204=8\263\334\275\277\205g=Z\220\325=HNA\276\220\026\376\274\377\035A\276;bm=\317\013\027\2751\337\034\276\030{\216\275\366\373:\276Y\235w=\365\3419<+A\020>\271\223C>[ \033<\247\016\306=\035\300\240\275<\004\217\2754\226\266=\232\343\'\276$\324\234<\236\377[\275\216\025\344=;\273\343=6\310~\275ku\2629\324\315\023\276\300nf=Lb\344=\013BR\275\333\365\027\275\377f\325=#\244I>\223#0=\023\234\311;$\351\336=\245\332\020=\026\023\"\272j\325\250<\234y\325\275\035\033\215\275Q.\371\274\303\276\331<\002\266\210\275\te\020\276h\301h=v\360\203=\002\344\252=\257\242\342=\360\252\354\275\214=G=3\035\365=G\003\r\276\316\250W<\346}\250=\217M-\276\320\3020\274\302q8\275\357y\r\275\335M#:?\321\233=\020}\233\275\003\346\257<nV\266=W`\026=<}\017>4\277\035\273\200\236\035<5\300#=9{\325=L\200\264\275\002<w<\006\t\351\275\r\022$>\226Ia\273\327\010\036>7\243\201\275\304\375&>n\350\203=M!\002>\002\345\034=\272\276\024\275\375\027\216:\2052\246\275\370E.>+\031L>\007{\306;\312\333\216\275q?\362=\321\245Q\275y:g=\224\026\244\274\300\240\315=&^\343\275t\237\002=W7;\275\234WR=\277\330)=\340\014\202=J\254 \2750\223;>\313\313(>\307Q\327\274\224j\030\276\372\016\026>\214i\332\275p\247K>\243v\356\273\237\017\013=\004\252m=\247\357\301\275\212lJ=\0025\257=\037\022\311\275\032\335J\275\366\244\366\275\356\237\352\275\342\305\036=\234,\215\275\017\315\254\274Du\233\274E\314\001>1G[\274\340\314\204;H\375X=[\325\341<\325\233\277=\r\t\377=\267P\342\2742}\365=\201\306\221=W\264~=\243\301Y>\370\367%\276\232J\262\275i\301/>n\300I\275\013\242#\276\231-\223\2753\021\314=&\231\017\276>\360\371\275\276\314\270<\232\\\340\2757\371\033\275\271\037R=n+\177=D\'\341=\306\332\021>\362\331\033\276\n{\261\275\nK\227=\344~\227=\325\265L\274\222\203:\276k\351\210\275Z\342Q=I\372\016\275\234\266\214;\221\221\224\275\211\361\033>\276\306\234=\276\274W;\002^\031\275:.n\275\220\263+\274$w\251\275=<\'=~\252\252=\356\300\213\275\252\204\320\275\234\206\275<\315\335(>)\224\033=\241\221\312\275\013\250X\273\224\001\376\275\331\352\026\276\333t\276=\211v\214\275\350Cd\275#r\006>\212\361\325<\375\373\026\276w\003\345\275\007\330\004>\227\365/>E\312\244:\315&\010\276X\335H=.!\211<\260\212\037>X\376\006\276\021mz\275\354\030\033>\302>\336\275\'\374\340=\364\037H\276\336\345\272;\346\1776\275\274\362\031\2751\372\307=XI\005<C\247B=1\305\310\275AaC<\213|f>E\273\210\275\322\325\026\274\371\272\316\274\003f\265=:\274\030\2761\357\337=%V:>I\365\313\274\354\250\247=|2\303<V\207\027\275h!5\276\243\361\202=\267\2739=\215\305n\275\375\252\331\275_\241#\275\235\256\270\275\006hP\274\253\235x\275X\201\351\275\356\355\265<\256\347\227\275\341h\343=\213u\275\275$\231$\275\036\276D\273S\327\030\275\302-o\275R\234\310=\351\324\302=\236\366\030\276*\274\274=<\224\203=\222\361\240\274\325%\021\276\363\2346=Ok >Cmq<\310+\014>*\030\234\275v\022\352<$\353\334=\310\006\276=\227\350\336=$\367\267\275y\022\204=d\205\265\275\223\256A<m\212B>\372L\356=m\230\035>8v\005\273\341$\355\275\007\230\330=t\253\031>}\030\n\275\1779\330\275\251-\356\274\312\2023>\302,\251=\217\307\367=\230\372\t>\314\\\013\276Ln\240\275p\217\202\274/P*\276\'d\027>*WH\275\340\3216\275\207\204\235=\276\353\246\275#Y\207\275\316<\303<\311 \035>w\207\257\275\250\010&\273\237D\032>3!\312\274\336\2579>\372\214#>\316\025\036\276\0243\027<\032\217\246=\373;\350<\214\242p\273\025\216\352=W\370\366\275\274Y\033>\311\010U<\256\207\222\274\204\222e<\333\000\357\275\311!\260=\214!\002\276(\244\273\275\363\221\277<\333]\356\275|\213\300\275`l\364\274\264\002\216\275R\022*>\004\215\022\276\210\002\202=\303\365\026\276I\013&\276\2012\023>)\003\301\275U\347\337=Z\202\212=1\224@>\206(\363:~\007\r\276\334V\004=l\345;>u\322\356=\312\205\354\275\3646%=\037\232\356=\233_\'\275~`\221\274aE\017\276\225\013?=\276\375\016=\330U\356=\304@\373\275\315\002-\276q<\311\274\311\016\013>\344{\005\276;\244\032=\353\311m\2753\254\013\276\257\223\"\275\222\014N>0\022}=\tw\277=\375=\316\275\014\335\'>\2708\313\275\235\3367>k\017\232=\0175\023>\253\260S\2730\316\3758\034\202\024>\031\332P=`\2325\276\373\370\n>\354\373\036=\204Y$>Co)\275\342\221.=\365Y\312\275\035\030\007\276\351\270\366<XC\300\275\005\"\344=\262\271\004\275\235\375\r=}\260\035\275\023RU\274w\322\305=\273\222\355\275\331V~=,\253\254\275l\303`=\217v@>>\332}\275Q\003\227=\344\315l=\346=\001\276A\014\215\275C\310&>f\001L<\366\030b=\277%0\275$\255}=\346\010\234;\354\206P\275UnT\275,\304\326=\320h\277=\366\003\017>\202V\227\274\023c4\276\263j9=\277]\273<\303\323\016>C\235\255\275\261S\323<\314C\'>\254\377j\274\213<+>\236\330\230=R\327\021=\353>\027\276\235i\004>\tH\250\275c\352!\276P\377)=>\307\201=\343B\014\275\r~\300<\220<\331\274C\355\202=\256Y\245=\324\265\326\275t\217\270\274K\303\023\276\353\017%\276\200Y\r>\364Em\275;\244\014\274S\230\354\274\007::\276\353\340\233<s\224%=w\344x=\355JW\276\010/ =\213\010\202=)\373\323=\201\203\244<\030\223\334=\334\2425># \032\276f\211\236\272^}\005\276Y\352\272\275\354\221\236=J\305\223\273\367z\357=\225@\022>~@\200=<\022\222=\014\230\350=\372\325\034>\034\\.\276\373\210\211\274\323\366\253<g:\302=\276r\327\275Q\353\005\276\023G9\275\r\353\224\275\256\245\314<s\334!>y\212\340\273D\311\213=y\017\313\275\227\324\247;\314t\"\275\342J\224\275\341\315\031>\376\377Y\275\275\322\336<\016\205\036=`!\377=\024x0=\305\330 \275@!#>\346\356\271\275tH\003>\036\265\352\275\372\210E=K\312\265\275T\320\315\272@\331$=^\311\347=\036\007\275\273\242\203\357=4o\212;f\273j=\353\257\276=\024:\232\274*\275\327\275\353\267\000\276k\n\024\276\373@\273\275\252\235I=%BG\275S\\\000\276$\331X\276\220\325[<\372\300C\276T\226\230<z\222~\275\217\035\002\273\315\272\367\275\274\365\t\276\253\017\250\275\243\021\010\275d\260j<~\217U\276\215\322\376=?\303D\275d \032\275\342\324<\276\243\362\323\275\274&;\276\256\1770<?\'\006\276iQ\022\275\336\216H\275\264\304\257\274yt\004>0\246\013>\337\302\005<\0323\237\275:\357\336\275x#\226\275\204\'p\274\263~\025>\354\177J<\215\324}\274oM\336\275J\007Q\274\374\200\326\275\375\342\024\275\336\006\306<+yQ=\001\224\313\275\032\035\237=\365b\225\274\223\317\355\272\253\335\n>\207\270\006=H\000\321\272x\372\217=3\036\013\275(\243\266\275lb\206=|\261\370\274\315 \031\275\227\2257\273~\020\036\274\313\305\206\275}\223\301\275\235\234\323\275\366\244\002>\306\226L=\314\375\270=*y\006>\330\217\r=\211J\224\275\336\354\272\275\304\273\364=T\210#>I\375`\275\374\3561>\340\212K=\374S\213\275\007B\027>\027\367`\275\274\3447=\342\323%>^\221\354\274\234\227\354\274\367\314\332=\023\363\267\274\354\212&\273L\205X\274\030\224\257\275\222\307\223=#\221\006=n\231\036>V\221A\276AfY\274\030hu\275V\361%\276t\303\356=tN\252\275\230\347f=\020x\005\276\333\231&\276\201\034\275\275\357\300\314=\321I\250=\346&X\275a\324\325<p\023\252\273\365%@=\342>`>a~\007>\235\207\372\275z,\225\275\377U\005>k[\021>\222o\321\271\353g\266=>\242\237=\203\353\223;WAo=W\215\364\275\255\317H\276\376\353\307\275\356#c=\200?n\275T\031\361=\204l\000>FY\351\275\202y\352\275\327\371\\\274\236e\010\276J\352\316=\372\321#>\270s\261=\177\334,\276R\026\245\274%\340=\276]\023\240\275(\r\201\275Mv\254<\016\351\373=\200\367+\275\257\'!>\246\370\'>\225K0>\000\261\311\275\005\346\236\272Aw\340<\320\224\305\274\263\272\031\274\240\245\t\276\331I\274=G\305\312<Fy\225=\370/m=\004\0161\276\326D\255\274P\002\347=\341\317\364\275\242\235G\275\254}%>\242\020\212=y-w=\007\232\331\275&+$>0j\312\274Ok\272\275\205\241\n\276\313<\023=\243\316\321\275W\225\362\273>\233\025>\037J<=\331\025\022>fv\">PN\036\276\273\305\370<\035@*=\346\340\022>U\272\024>>\310\204\275}\303\306<\337\242\223<=\230\252\274\263\313@=\364\252\262=\362\313\322<\rt\341=\233,\024>\231:h=\005\375\033<\250\277\337=\r\244\244<F\031\027\276\026\000\377=\016\020U\274]\234\334=\267X\224<\371\230\225=\030\252\032\275\237\247\014\275\017g\032\276XK\007>\253J%\276i\276\321\274\'|\350\274\206a&=\352\315c<\261%\317\275\257\355\003\276\021V\347=L/\030>\236\313\341<Q(->^\315\036>\345~\323=\330\025G=\007.\004\276y`\272\275=\n\251=\254\204\274<0[\342=\307\205\022\276\273\005\216=BA\002>\270\317\274\275\020\036\235<^\233\322\274\236\006\231;SH\305\275uP\304=Y$\374\274\35709\276\355\271\013>\365Y\234=\265\324\000\276\2542)>\300w\007\275\374\036\004\276\367\037\372=\032E?>t\360\016>Q\340\236\275\266j\256\274\037\237\036\274\333\204\240\275d\331&=2\224\304\275\334\260\"\274\313sF=\240\036\204\275O\"\212\275u\213\355=N\204\203=A\344\360\275Y[\034\274\320dY=\001z\341\275\352\r\224\275\004\016j>\312\022\245\275;V\243=\1773\273\275\030~\242\275\227\215*=\3236\006>{\245\005>r*\206\275\267\036\371\275\221\t\352\275\035\023;\275\313A\251\275v\036\003\276\001\206\031>\273:\266\275\272CL=)k\370\275N\240\024\276\221\315]=\027\374\233\274S\202\205<6\276\241\274t\244\316=\314+\322\275vM\377=\r\271\240\275%\312{=\275K\022>5\335\321\2755\265\336<\005\346E\275\344;.<\210\235\373=:\311{\275\226\236\234\275p\267\253=[\022\311\2751{\223\275\321\350\021<\306c\023>,q\n\276\"\000\037=M~Y=Pe\003>#b\234\275L\355\234=r\207\337=\363\342\037>>\262s\274\004\323\221\275\343$\031>\234k\254=H\320\024\276\375A\211\275\240\254\r\275Y\315E=\347)\224\274\323\313\210\275\372\205\344=\200\245\366<\322\303T\274\225\026\006>\26536>`\206Q=\003>@=\2243\311\275R\031\321\275\353\250\212=0\225\360\274\205\367\337=\326\341!>\273f\">&\250\000>\303\256y=\234{\023>?\033\245\275\274\260\005>G\246D>\233A.>\314\221\353\275nR\331\2736\3743>\235\201p<Q\314\343<P\266\021>_\276|=a\313\256\273\"\333\022=[2\346\275y\213\017\275Q|$>\371tg\274lC\275=9F\245=\3647\230<6\347\301\275\240\247\340\275|sY=\337\341\017\275\205\325\363<\306H><\244F\220=\002+>\276\236z\226\2745b\020>\214eb=\336\2746\276\322e\340\275\2140\355\275\365l\345=@t\363=\276\205\373=\267?\021\276\235\030\n=]\230\036\276\235xj\274X\324l<`\314\n=\340)#>)\221\347\274y\324\r>\304\257\370=-\231\347\2754\273\254=\311[L\275\034o\006\276Y\327I>f\361\277\274V\275\217=\252\2469>\314N\033\276\"y3=X\270\264\275n\230\241=Z\202\245<3\244T;{\251\001>*v\217=\224@\334=\261\332\301=t\227\n\276&$\266<\334Z\271=\201Wu=\260\372\214\275p%(=\2650J=\t\303\256\275\246\274\033>\352\004\207\275\265\276\007>d\375\224\275V\202\274\2757\005\271\275\335\006\314\274\370E\276\274\252*\r>CB\334\274d.\034>\263W\366=\235\356\350=-h\321=\200\035.=8h[\275\201{\n\275n\250\036=F9m=*\243\252=\226{\005>R\322\026\276\352\273\202\275<<\025>\274\227\330=\315\2244=Hi>>\007\347\333\275$\030\346\275\320\371\275\275%_\276</\210\021\276\225\342\003\276\"bT\275:-\302\275\364]L\274\3103\273\275\024\251.\276S\375\313\275\376\203\037\276\000\036\036>\324\371\306=\332\305\315\275\237\254*\276\004)\003\276<F\304\275q\216\t>\\y\004\276\310uA>\234`\233\275l\202q\274\230\241\326\275,\000\226=\377\277\036>-\030\242\272\306>\000\275@C\034>\250\023\377\275\234\220\030\276>[_=\\h\002<\302\221S=2H\024\276\254/8=/]\200=\327(\031\275R\273\260\275\212\272\346=\275:\326<\341\242\242\275\240\315\225\2749Z\">)>b\275\361\253\323\274Pt\343\275f\326\2249\001\255\013\276\3251\373\275\r\021)>\016\3114\274\007\245\337=\210(\n\276\200r\026>8P\276=\355\334\010\275\332O\204\275)\305H\275\207\262&>\264K\274=O\032\016\275\203\025\350\275pm\353\273\001\342\204=\340$\356\275\335M\024\276g\323D\275\177jU<\212v\370\275{\010F=\n\277\304\275p\255\217\275`\232\220=\n\264\371\274:o\215\275\340\245\246\275@\337\261\275\345\205\234;\363b\233=R\317\324=\237q\313\275\237o\214\274Q\245\244=\022\362N>\265\"\364\274\252\267\373=o\370!\276a\345\236<zb\026\276\373\217\031>A\375\357=\312\0267\275\376\247M\275>\202\000\276\346\355\262\275X\177v\275\323)\356\275\315S\214=\004\032\277\275\223\231\327=Mh\301=4I\355\275v\225 \275\327\016\021=%\371\315\275\335\327\343\275+\216\211\275\000N\302=\304t+\276s20=\034XI\276\333j\367=>DH\275p\230\376=\364\227\262<`\204\267=\237y+\274\255\257\305<Q^\273\275gJ\356=\235\3013\276A<\016>\226\332\327\275\236^\306\275\3738\274\275*\251\356=\334\261\326=\253U\017>`\237&>\035C\006<\376\315\006>6\342\343=k\024\027\276\253\026\266=\224\001^=\303\275\014>\322A\251=\0146\346<\004E\323\274dq\235\275E\337\010>\335\337\222=Ql\345\275K\204\r>\\\376\323\2756\002\275\275\224|\373\275\013\333\365\275y\211\340\275Dz\324=\256n\231=\253\025\'>\320\2437\276\303\333\373\275\373-S\274\216\033\355=[8\025>]\247\331;\205\205h\274\366\302C<\324\037\232=FtF\276\365JB\274\320*\254=\253\216\256\275\034\021\006>p\037\304=\341\324J<\214[\366=`D\335\275\031\232\306=\311\261^;\367t\260=\177\236\022\276\340JH>\213\377\236\275\351 N\276\276dx<\2670\337=\006\034\005>\344\0209\276\311c|=\3377\006\276\'3\251\274\217\377^\275\201\027\246\274\033f\336\275v\317,\276*\231\037\276@r!\276vx@=\024\245\245=\'\006\245=\276\266\316<(0\262\275V\000\025>\316\014\307\274\207\177\221\275\000\306\303\275D\323\334=\256F\253=&E\026<\227\377t==\034\010>\341\n?\276\027\261\224=\333P\250\274\026#Z\275h\276$>\312\230\222\275B\010\035\275\224\024/\276\325\364\017\276D\200\007\276\0003/<.+\300\275#\353\275\273/We\274\241-\236\275\256u\207\274:~\336<-\033\023\275\264/G\273\020|\373\275\2272\323=\222\245\215\275\330u\305\275\326\013<\273\014e\234\274n\0329\275\031\306E\276\033<\352\275\324\253r=*\317)>\325_\356\275?\253\301<J\0078\276\016\260R\276\005\245\326=r\231\033\276\244\307\220<hN\333=\250y\217\275\334\262\337\275\361\352M=>\201R\275)M\265\2754\235\021\276\261\333\206\275\330\337\275=\376;\232\275s\361\355=b/f=\215\374\016\276`\3600\274\'P;=\017\330\216=K|\326\275\204H\026>\2213\034>\264\266\010\276`\222\216<\250f3\27533\251=f\350\033>\014B\230\274Cze=\010k\001\275\351\324$\274995\276\263y\213\275\255\250\t\2756\364\370\274_L0\274x\336.\276\030\243/\276\267\215\367\2744\322\362=\325\276\262\275\013\315w=)\261L>;x*\275\343\232\233=\236\230-\274e\267@<\341\"b=\362\253>>\005n\307=\365\311A\276cp/>d+?<\244\r\302\274\242E\215=\021\315\003>\344k\331\275\313\031\303\275\300\326\246=\030\251\'\276\334P\346\275W\302\246=H:\353=\031V\355<\352P\'=.\006\373\274\352\202\366=\352D0=\242\\\264=\032\251\333\275#\237\220<\302|\323\275m\302\032\276!\204\240=Pn,=d\323\263=-7d=\2349\310=*/\025>C\374\'\276tW\246\275\265@\027>\374F\234=\217\300\220<\242!\375\275A\375+\275\366\270C>@`\032\275\343\022\210\275U\027\221\275W\257\360\275\302\341\301\274\300cI=q\257\362\275v\0228\276ZQ*\274\333>\274\275\246\006\335\274\347\376?\276w\324e=cH\022\276T\214D\276s\233\020\276\354\327\022>\022\242\264\274\217}\235\275\301\263\220=VEM=\237Z\010\275\362}(\276,\355I=\266+\301=\246\371\255\275\332\3135>|-\346\275Io\r>,o\261\275\033\321\027>\345\377\314\275\221)\'>\253\2044>\326\365\004>\257\264%>\034\270\267\275Jh6>[y\210\274\002-R\275\023\235\320\275\337V\323=\362\276d=7\337\022\276\243\203\314=\000\2750\276\326\177\325=\022z\243\275\302\360\276\275\243\023Q\275\226\001M\275\202\025H>H\235\017\276%\246\334=\211\302\005\276\256\335\326=\320\266\307\275\273w\251=/,\372\2757\223\030>\262j\010\2766\255j\274\t\267\342=\372\371\331<Lv\364;`)\007>D\242\244\275\242\257\306=2\214\326=\301\006G\276\2118\237\275\347\245\322=\3454B>\374\327\234\275O\202\t\276\352\003v\275\306\224\036>\331\356\274=Z\211\273\273\344\365*\276c\343\356<\366\237\034\276\365L\365;\257\237\025>A\254\233=\026\353\271\274EL!\276\214v\250<fG\322\274\346\362B\276\377e&=t\370\336;\246\004N<J\306\204\275\374\206\'>\026\026\331=\234\365\272\275a\245\250=\215\367\022\276\332\014\326<\273\251\204=\030$\321=\223_\377=\263\215\313=`C0\275\n\230}:\341\236\006=l\346:=\366\315\307\275\003\307\250=\014\2224=\344\261\017\276\345\2002\275\317\344\002\276\210R\341=\274UP\275\215\305\343=\356\222\347=y]\201=\210\004\331\275Z\245\342\275\351\305g=\271\373\217=\"~\253\2752GN\276\205\321\334\275/A2=1\230<>R\374?\276\302\035g\275\363\246\221=\312Z\246\275\334\336\256\275;\335\246<\322Q\005=\377\271H\274b\237\332=m\034\301=\350\361\316<\277\265\237\275z\262=>H\373\024=\341S\'>\323\361\036\276\215\266=\275\232\003\263\275}\323\022<\'\271?>\n5\323\274.\n\364\275l\033\242\275[]y\275\004\002;\274P\352\364\275\366Jl\274\340\005\270\275Ox\241=\345\207\250\275\276E\312\275\210t7>\341!\205\275\237c\005>\351\260\'\276#\337\202<\343\377\264=\032\005i=\253\350a=R\3078\275\207+\033=+\204\022>\373\375\262=/\311%\276$O\216\2746\312\221\275\307\252\312\275r\006\343<\210\346\270\275\320\377\323\2754\257\250\275\025|!>\315S&<h#C=n\277\202=pI\237\275nh#>\006\341\273:\356\006L\276\312~[=\003\323!\276l\330x\274\235\246\004>\nY\371=9\353N\275\270f\252\273\323\272\335\275\327\266\317\275\215*\344=o1\373=\250\r\307\275\302{\371=p\230\311<\373\025/\276\233\220$\276@f\362=\022\234\005=u\301\017>\013/\013\276G\365\345\275#?\224=+l\273\275,t\262\275\036\nM\274\223\245\371;+\313\022>\017\006\361\275\324\t[=}:j\274\337\315f\274\330\246\300=\032)\256\275\210\\\350\275\346\370\321=\221p\257\274\354l\340\275X\262\032>QN\003\276P\356\321=\014V&\276\325\266\262=\216\354\202\274>1M=V5\345\275(\253\036;\006+K<c\270\273\275\355Y\272=\212\203\001>7JH\275\2604\342\274\331\305\227=\030$\336\275\351\342v\271Y\313>>\366\204M;\200=\372=\034c\320\275\365\352b=\225k\014\275\232\222\r\275\271X\205\275\216b\026\276\010\342s\275\343\033\262=\312\312\010\274\213X\350\275\252\255\037\276\365\224(\276\253\370\303=.\313\230<_\027,\276\\\032\211=\\\"\376\273\366\224B\273\225\016\250<\035\230\t=\036!\313<V1\353\274\276\356\254\274(m\242\275\231\027\366\275\337\313\317=\356L8\276\363\211|\274\335\350\027\275h\267n\275*\237X=w S\2757\034\204\275G\312\002>\271\224\002>1\203\035\2767\243\034>\317t\t\276\302\004\270\275\035\310:\276z=\312=\256Y\004\275\205\222\003>\230\365\242;\377y#\276f\3371;\361M$\276g^\000>\374\227\213=\236v7\275]\341x\274o\377\031>\030\216S=D`\025>\003\215\025\276N\021s\275\277=\346\275\267\035\326;n|\255={?\264\275\314\273\316\275\036a\260=\345\370\302\272\235\355\355\275\253\215\373=\035#\006\276eu\217\275\030\321\005\276\317\266~\274\324i\375<\024 \350\2749\352\352<\371\351O=\255\036#>L~\343=\334K\">)\031\260=\342\013\202=\r\363\017>\241\250\037\275\272\032\250=\347fx\275\314\316\374=]&\326=^\330\304=\302\341\032=P\225\025>\333\016D\275\r\177\255\275\261\363\303=\302\343;=\377\351(<\372\361\354\275\327\336k\275G\322\326=\240\274\203\275\347|\353=(\233;=<\245\207=*\356\027=\225\030\363\275\361\254\202=R\032\260<F\0226<c\377\271\275\362\001\r=y[\324=\312\251\307={,#=(\240\n\276\367d\225=\010\261\226=\340\243\263:\245\234\212\275\362\034\325\275Z\311\\\275\240\303,\276\335\013\227\275\312\306\371\275\330\201,>\322\341?\274d\254\006>z\275\020>a\217)\276Sw\210\275\002<\033\276\371\377\266\275\211\177U\275\232P4=\036a\023\276\206\004\314\275?\372+\276?\372{\274\265\032\371;\256I\227\275\350\345\r\2754\212\255=Gx\273=\177\355\017\276\205\263\365=bj%>\265\311\204\274U18:EK\277=\335\304\213=\362\207\341\275r\n\024>W\240\312\275\316\371:>\244\014\245\275\361\332\001>\017;\235<Cq\253\275\232\204\002>\207\307!>E\270e=\303\020\025>\210\307\324\274\037\032\311=\350-/=\220U\035\275\222\003}=x\370\324=oQ\305={\270\032\276\231\317\026>\255q.>\263\224\272=m\244\277\274\020\336\306=\332\220\320\274\204\305\305\273\337\207\210\2751A\352\275\027\204\024>\"\221\330<\266i\251\274\262v/<q\261\355\274\375l\003=\256 \014=}D\014=\331 \250\275\013\005\024=\207/A=\353\214B\274\366\370\351<j*\221\274\'\177L=`\227\266\274\021\250\332\275\017\006\026\276Q >\276jH\"\276O\226\021>\006\302\261\275\340\244\007>\346U\220=\361\352y\275\025\335\330\274\256&/\275\203i\022> \031\304<\374\361\032<~\347\336=Is\215=Rk\023>H\035\342\274\0179\223\274D\301\234={vJ\275\244\320\365\275T\361?;\"\210\024>J\307\017>\032\335\004\276\027\204\371<\336A\352\275\n\250#>\336\004\330=\364S\023<O\213\215\274GW\025>\277W\277=\210l\226\274\335vH=\372\216\027\275\370i\214\274\234{\274=\252\201N= \362\021\276\277\311\331=Q\355\007=\344\360\035=yA\014\275<G\261=\010e\377=\305\'\n\276\374pX\274\275\203\365\274?Qq<\267j\365=#\261\225=2L\033<\265\256 \2763\214\203=\315\004\'>\352\211\315<\246\306\255\274\031\223*\2761\364+\276\346\244\'>|\356\232=y\264c=:5K\275T`\241\274\214\242\253\275K=\r>\257c\006\276\222#&\275z\026\310=~\225\016\275e>\004\276\316c\334=\271r\204=\013\305S>\212g\224=q\2552\275\305\343/>Ir\000\276\2622#\275\234\035\304= \334(>\322\342\360\275\007\374\300=\210\331\003\276[\302\334=n\257\345\274\341\255@=j\r =f\272\023\276k\r\335<\362\207+>i\314\372\275\300\354\303\272\251=#=\037\\\033\276\276\211\377\273\032K\234=d\007F=L\r\263=\257\006\303=\333R\256\275\"\200\005>\324*\355\275H\244\327=7\317\020>\207P\247\275\300\364\001><\026\350\275\366\324\313=\362/\001=\260y\332\275\023\274\202<F\372v\274ScL\275\311\310\310\275U\022\035>\004\211)\275\256\347\201=\"\306\207<~\213\263<8\014\003\276\347\341\216=\245\210\n>\213~\243\275\020\367\026>\230\342\317<\243S\017\276\270\034\251=\023\377\221=A\3265\275\246\337\340\275\027\221\206=\207vX=L\003-\276\377\226&\275\330z\371\273\002\232\251\275r\324\347=\212\344->\037\260.\275\355\001\022>\241}\037\276k\027\217=\023>N=<F\227=E\355\347\275\377\347\337=^f\032=u\365\350=Q\250\353\275\361]\r\276\304\243\222\275\350\300\002\276\273\261\235\275jA\226\275I\212\027=\256\032\212=\250\212.\276,\004B\275\325*\022\276\261\001\020>6\324V\274\231\222=\275\263\340\357=\306\3345>\363\247\016>\267a3\276\266\202\250\275Ng\361\275:\325\010==\222\277=\207\221\344\275$\254\326\275X\263s<=\353\266=\3110\021<I\254\002\276^\013\336=\233\210`\275y\017\316\275\367\371\355=\247@\362\275\264E/<\375\3408\276\324\\\016\274%_\203=B\263\353\275\245l!={\025g\275\314\230\004\276/a\024=M\215\245:\265\237\352\275\202\020\366<\255\203\320\275\221A\237\275r\375\250\274\346\220\240;f\213\202:\211\017\021\276!/\340=\030!\030\275\352\014;>\003\312\216\2759,\023\274[D\277={W\023\276\316\343\344=\366\352\024\276!\243\025\276\240/\014\276;r\375\274\227\305:\274\307M\222\274pB\314=\301\317B>\316\021\033>\002\263\016\276\323\202\372\275\004}d=\313|\016\276x\237!\276\272\323\224\275\332\003H=A\307\000\275\267\361\331\272\254m\315\273\266\275\004>\351\'\016\276\202\315\263\275d\275C\272\013Dl\276\273\340\207\274\355\222\241\275X\016\026>\321\234\355\275<M)=\000\334E=\275%\355\274X\371/>\264\341\304\275lM\233\274\243\224\342<\233\177\020\274\')\320\275\362S+\276\r\362X\276\203kD>\001\340\005\276Xl\321=\305u9\276\203v-\276\301\367\212=\316`\014\276\212_\235;\267:@=,\327\303\275x^\\<\352\007\305<\t{-\274\305\227/>\346\033\002>\317\312\326\275_\341\360<\357\024\262=\231tJ\274w\317z\275q\006\037\276\207\321\003>^p\335\275\345\245&\276U:\301=p\305\005\275u\260\004=jo\303<\0160\027<\253\301\232=:N\017\276\336\277\000>\014\007\277\272\330\026\372\275\271_#\276s\005u\275\336j\315\275\340\227\303<\367\320\313\275<\307\220=\217\234\002<\304\214C>}\233\210\275B\372\246\274*\022\233\275\332\021N\275\354\034\034\276\032\033Q>\316\211\031\276i\240*\276\'wE\276\350\003\351=\213\243\355\275\375\000\006>\315\317\325=GG3\276\321\245\376=\365\205\313\275\220\016\274=\177\013\265\275?%\246<r\224\026<\253\n\006\276[\327\225=W\307\320\275D\033-<\013JX<\240\023\250=\310h\275=\305/\303\275*\306\310=\310\262\272=G\003\265\275\301\333\260=\377\031\350=:?\211\275\006\325\215\275\364<\021>r\311^>\236\275\251=6\270>=\230\355\225=\213\330/>\000\245X=T\310V\275m]\271\275\031\3139\275\347\213\016\275\343f\022\275\315!\301=\314\010[\275|\353\204\275)\372\021\276\330\255\"9\016\321\262=\'\200m=\350\032 \276\337\213\217\275`\367\245\275\"\253\316<\030\311\007=\236\226\020\276W\000\361=\016\017\007\276}\3706>K\246\n\2762\360\036=\'\361\335\275\312\253\247=\340 \324\275\3725q=,\265\026>\214c&>EVI\2755\006\310\273\255M\256\275t4\204<\304\242\010<\320\016\265=\260/\263\275@\236\305=pI>>\333\320f=pv\021\276\362\326\216=G\342\325\275\215\023A>\032\375\315=\321\273\372\275\360\245\275\275\231L\255=2\032\352=+\205;=<Wg=x\355\241\275\r\020 \276\033\377J\2752D\321\275\034.\332=o\203\257\275\014Y\250\274\266\306\331<\353\235\\\275\003\255\233=\366\264\032\276\322\016\377\274\3006\316\275\\\215R\275+\376\025>\241S\341=\232O8<\277\277\016>Eq\325=\3256\243\273 v<>\351\320\370\275\244c\242=ig\247\275\222\214\245<\004e\005\275\035\211\331\274\220\334U=,\030];\247\034m;t\262%\274\022T\221<nF\305\275\236s\231\274\342\005\235\275Xd\322\275\243=\237\274\342\2214>\375\035\272=W\024\260\274\345X\271\275\322\232\022\275\374W%\276<,w\275\275\322\251\275\263\243\342<p\211\r=\274\337\350\275K\017\r\276\200\333\251=\017\252\003>(%L:\2439\240\275\2255\006\276/\202\367=\340\242\323\275K\216w=(]/\275\220\235 \275\214\210 \276\270\337\023>\275YX<\271f\361=`\344\001\276\334\205\n>\361\323\210\274\304`\364=Z\243`\275\\\2220>\336\371\204\275+\323z\275\021S\030\276\025\224S\276\277\212\007>\355\0044\273~$9=\261\264\030=\2177\323\275\032^%\276\347\224\204=\253\002,\276;\270\360\275\211\314P=\004\332\306\275\230\325V\275)\332\334=\227\316\237:\200iw\276O\334\217\275\001\345=\275\325?]=Wom=\261)\025\275\246\247\237=\270\207\351\275k\320\214=\302C\022\276[\270\344\275\017\336\005\274\224\021\006>\235{=>T\302\374\273\021|#>Q\204O\275,\375B\276\271L\264=_\256\023\276\013\003}=\2023C\276\334\330\024=\221\267\317<\375Nk=\250\325\263<K$\371\275\2079\225<\330\320\306\275\021Ye=\020\365$>\315\234\010\276\331S\211\275\r\300\033>\246;!\275\3269\031\276H\275\267=g\346\255\275\006\237\313\275!c\300<z\360\t>c9C\275\362\376\312\274\022\316\n\276\006\366\010>d\030\241\275G\337R=:\003\327\275\301.\000\276\273\354\030\276\002|6\275\3242\243=\323(\034<3\210\345\275Q\352\273=R\243\367\273P\344\222<6].=_\204:\275\225p\206<\346H \276ud/=\355\303\021>\200\356$\274jq\312<\030\226#>v\006\017>{\363\032<PF\253\274\313\326k\275Jk\370\275\220\224V=\313b\323\273B\231\344<\342\3438\276\266\246\220\275\013\314F>\272=\027\276(\000h\274\374\250\t\276\257W\202\275\363\2070=P\226\235\275\3363\230\275\202C\225<\221\212;\275Xd\033>7\036;>\326\276\200\274\267\243n=\002y\023>w\215>=7\3252\276@q\312\275\222\030l\275`~\345=\244^\006\276d\304u\275\316\316\224=\206\362\t>\0358\002\2763\352\036\276W\265\375\275\255\016\006>\245\243@>@de=\376\324\020\275\237\351\376=o\202&=\230\302m=t\'\002>\017\002S=b\274\340\273\017\354\300=\375\254\370<\245\216\245\274\360\213\234:f\364\325\275\212c\244=\324\202\n\275\212\267\177\275\377\362\347\275\253\340R\275\300^\365\275sG\204\275\006\372T\275\313:\264=\260\203\177=X\236\376<\343\022 \276?G\017\276_\302\376\275\325\363\204=\247\374\350\275\356\r0=\305\232\n=v0\t>\242\217/\276/\376d\275\303)!\276\006C\233\275F\t\270=i\360\211=\276\347\305\274\327\034\203:\214?&=h\213\272\275y\320\022>\257\016,>\362F\003=\027\316p==\013\242\275\177\315/<\"\262\016\276\317\001,\27661U=)\224\027=\233c\000\275\234v\265\275\2761\212\275\2335\210=\006=\361\275\0334\221<\257\377\206=F\356\340\275\212\024\217=H\324\206=\303\232\257<\360#\022=\345\270\311;\255\263\353\275jz4\275\255O\"\276\225\0247\275\336\242\014\276I\230\'=\234.\354=\323\376T\275j\263\206=\343:)=\016\213\003=\355\311+\276\220_\216\275;\322\302\275:\335\256\274\"Ug=\326\031\201\275b\277\242\275]\330\234<\250\274\001=\257\311\243<\201\376\005\276\367\243W\275\257X\222\274\200\0223>\254\334$\276#W\t\276\371\3772:\217c\243\275\317\351\224=:\253\351\275\233\365\007\2758\254\016>\250>\252\275\324\254d\274J\210\244\275\032\243\032<\035\301\360=\362\346\230=n81>W\313\232\275\322\322L\276\352\230\227=\2574\021\276:\225\037\276]l5=T\374\202=3d\315\275\264\003\013>cf\'\275d\017\221\275\035\264\032\276Ij\t\275\326\247\343\275\263\376\030>-\311~\275\356\370\246\275\177\205\206=\367\273\216\275\231\274\335\274k\230\305=\030K\304=\3263\002\276|}\320=l\016\231=\365\337Q\276RC\005>\324\244\334\275\200t#<\256NM=]\262r\275\345:\204=\367\0345=!\312\r\274\336\007\267<6\362l=\374\332\273\274\231\375\353\273\330\375\263\274C\327p>\3466n\273\360\213\007\275\374W\327\275\353\350\005>\204\177\320<\346\223\000\276\237\226\345\273X\037\240\275\213\027\335=\365S\233\275d)\302<zN\201=\037\342\245\275\004\017\342\2747:\276=\215\024\026\275\000\177R=\332\220z<\2166\027=0\232\243=\332o\361<\354\230\327=\274(.>:z\302=\266S\254=\004\021\223\275oF\216\275\331\361\362=\033\376\314\274fZ\220<\226\002\014=A\001\200\275\277\303\024\2762\226\276\275\337\216\272\275[$\335\275c\343\025\276\266\360+\276x\316\261\275\250\361\215\2725\2760>\355\343\036\276\317\342\033\276\265$\205\275\222\260J\276\273\002\216=\352\350(\276\272\2467\276QJY\275\251n =\2163\326\274oY\266\275\230\370\211=gA[=;\362o=\221\211u\275P\262\345<\027\325\004\275Xd@=\rU\306=R\306\006\276F\271\036>?s[\275J\214)>\031E_\275\3260\341\275\337;\031>\351\223\353=b\366\007\276\232r\302=\024j\210=B\344\246\275\340RH\274\236&F=\244L\013\275>\332/\275\236/\271\271n\307*\274h_\031\276V\256\331=k\017o\275k\250d\275\331=\375=\335\033\353<\231\370\337<\316\313\023\275\215\2312\276p\201\225\274\235\246J=mB\232=\236\266\377\274D|\032\276\257\t\334\274n\217\001\276bwb;v\033\035>R\352\366\274\203\025^=\210\262\231\2752\\\027\276#\322\244=\366\230*\276\\\362\016\276y\324\037\273\'\216\004>\265\302*<\232b\017>,\312\017>\306\312\035\275\272\356\265\275\241Jm<\226R\205\275f\327\320\275\342T(\276n\337;>G\315\220=7\304\305\275X\276\000\276\254y\024=\376l\024\276\221`\340=9\350 =O\214$>\024\361\200\275\023q\225=w\212\013\275h`S\275\330\223\222=,\232\325<\003\252\020\276\374\356\003\276\\\371\204\275C\025\374=\225>\010=\345+\217=,y\021\274d\271\230=\023\372;\276\240\025\324<\243G\332<8\300\264\274\273\007\371=\307\234:\276\350\300\027\276\365)4\276\363\3525>\361\234\260=h\0054\272\271\225\005>\336\312`:\356\252\365=\222\001)<\026\323\023\276\331\227\002\275\230\335l==k\271\275\252\016i\271\023P\326\275\210N\030>\0025\022\276\024O\265<#g{\275\324\365\266\275cj\031\276\351\316\002\276}6\267=\347M)\275\320e\257<\227z\254=\350c\377\274X\236\211<4\233}=\005\354\321<\332\272\326=\347E\330\274\025\267\301\275o\216\202=\334>\037="
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "\035\021\245\274\330\332\244\274K\375\375\273\234\207\231\274y7\267<Y\231\005=\262N\377<\036R\010=\'<u\274\277o\036=\313\377\351;\032\232\020<\010\321\211\273\357\202\025\2754\223K<\241\332\037\274\344E\271\273T\265A\274\203\017\007\274\365\336-<\253t\023=\3201\240:\362i\374\273\256!\203<\005\rA\274)b-\2741\347\352<\373^\265<\\\200]<\251\002\270<\275!\355<d\206\323\273\032\301P\274MK7<e\";\274\375\032\270\274~\2129<\336\213\033\274&\317\013\274~\346.</\251\215\274\215\247\'<\270H\211\273\243\351+\274z\343\214<r*c<\357&B<\332\215\034\274\253?\032<w+K<\375A&<}\037\354\273\207\367Y:\235\320\023\274g\345\030\274\301\003\347\273\r\327\002<\032\373\205<\342:\005\275A\304\304<]G\030\274|e\255\273\0205\264\273\262\223+<\242\341\235\274\216{\230\274\366\351\027\2746\251\242\274\340\256\312<\210\337:=J\230\t=\304\222A=_\034~\274\224\000,=U\021\003<S\332\265<\032\327@\273\354\207\003\2757B\177<\240\222\'\274\274\322\260:\247*\023\274\322\010*\274\223\375\242<)KD=\314C\363;S\257\'\272>\240\213<Q#M\274\260I\030\274\374\210\376<\273p\307<\005\345T<\017\276\304<1\310\346<Hb\246\273+w\217\274wq\236\274w>\r\274\376\232\243\274\364\217\243<\253hN=\235\310\373<\317\314\017=\356GS\2749[\'=b\320\033<\344G\214<\341\323\312\272{\353\340\274<(\223<M\347B\274C\201C;4\362\036\274\\\366#\274\227!\213<\354E==\232<(;au\227\273\342\272\306<\2646w\274\347\203v\274?V\030=<\343\315<\025\345\026<\220\255\262<\022s\343<t\032\223\273"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "split:1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_1"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "split:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_2"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "split:3"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_3"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_3:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "split:4"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_4"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_4:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "split:5"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_5"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_5:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "split:6"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_6"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_6:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "split:7"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_7"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_7:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "split:8"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_8"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_8:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "split:9"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_9"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_9:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "split:10"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_10"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_10:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "split:11"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_11"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_11:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "split:12"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_12"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_12:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "split:13"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_13"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_13:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "split:14"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_14"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_14:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "split:15"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_15"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_15:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "split:16"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_16"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_16:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "split:17"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_17"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_17:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "split:18"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_18"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_18:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "split:19"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_19"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_19:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "split:20"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_20"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_20:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "split:21"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_21"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_21:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "split:22"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_22"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_22:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "split:23"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_23"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_23:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "split:24"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_24"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_24:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "split:25"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_25"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_25:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "split:26"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_26"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_26:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "split:27"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_27"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_27:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "split:28"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_28"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_28:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "split:29"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_29"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_29:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "split:30"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_30"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_30:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "split:31"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_31"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_31:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "split:32"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_32"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_32:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "split:33"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_33"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_33:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "split:34"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_34"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_34:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "split:35"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_35"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_35:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "split:36"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_36"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_36:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "split:37"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_37"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_37:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "split:38"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_38"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_38:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "split:39"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_39"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_39:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "split:40"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_40"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_40:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "split:41"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_41"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_41:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "split:42"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_42"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_42:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "split:43"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_130"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_128"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_43"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_130"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_43:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "split:44"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_44"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_132"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_44:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "split:45"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_136"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_134"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_45"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_136"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_45:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "split:46"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_46"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_138"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_46:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "split:47"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_142"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_140"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_47"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_142"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_47:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "split:48"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_48"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_144"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_48:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "split:49"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_148"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_146"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_49"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_148"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_49:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "split:50"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_50"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_150"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_50:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "split:51"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_154"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_152"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_51"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_154"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_51:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "split:52"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_52"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_156"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_52:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "split:53"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_160"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_158"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_53"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_160"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_53:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "split:54"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_54"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_162"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_54:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "split:55"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_166"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_164"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_55"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_166"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_55:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "split:56"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_56"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_168"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_56:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "split:57"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_172"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_170"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_57"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_172"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_57:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "split:58"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_58"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_174"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_58:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "split:59"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_178"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_176"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_59"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_178"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_59:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "split:60"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_60"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_180"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_60:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "split:61"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_184"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_182"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_61"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_184"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_61:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "split:62"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_62"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_186"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_62:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "split:63"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_190"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_188"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_63"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_190"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_63:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "split:64"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_64"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_192"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_64:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "split:65"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_196"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_194"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_65"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_129"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_196"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_65:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "split:66"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_66"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_131"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_198"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_66:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "split:67"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_202"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_200"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_67"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_133"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_202"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_67:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "split:68"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_68"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_135"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_204"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_68:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "split:69"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_208"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_206"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_69"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_137"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_208"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_69:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "split:70"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_70"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_139"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_210"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_70:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "split:71"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_214"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_212"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_71"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_141"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_214"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_71:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "split:72"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_72"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_143"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_216"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_72:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "split:73"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_220"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_218"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_73"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_145"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_220"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_73:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "split:74"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_74"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_147"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_222"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_74:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "split:75"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_226"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_224"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_75"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_149"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_226"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_75:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "split:76"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_76"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_151"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_228"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_76:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "split:77"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_232"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_230"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_77"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_153"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_232"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_77:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "split:78"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_78"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_155"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_234"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_78:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "split:79"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_238"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_236"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_79"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_157"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_238"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_79:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "split:80"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_80"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_159"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_240"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_80:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "split:81"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_244"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_242"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_81"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_161"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_244"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_81:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "split:82"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_82"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_163"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_246"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_82:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "split:83"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_250"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_248"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_83"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_165"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_250"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_83:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "split:84"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_84"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_167"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_252"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_84:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "split:85"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_256"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_254"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_85"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_169"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_256"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_85:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "split:86"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_259"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_257"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_86"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_171"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_259"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_258"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_86:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "split:87"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_262"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_260"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_87"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_173"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_262"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_261"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_87:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "split:88"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_265"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_263"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_88"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_175"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_265"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_264"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_88:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "split:89"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_268"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_266"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_89"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_177"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_268"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_267"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_89:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "split:90"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_271"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_269"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_90"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_179"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_271"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_270"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_90:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "split:91"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_274"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_272"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_91"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_181"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_274"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_273"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_91:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "split:92"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_277"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_275"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_92"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_183"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_277"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_276"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_92:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "split:93"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_280"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_278"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_93"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_185"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_280"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_279"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_93:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "split:94"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_283"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_281"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_94"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_187"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_283"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_282"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_94:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "split:95"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_286"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_284"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_95"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_189"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_286"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_285"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_95:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "split:96"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_289"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_287"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_96"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_191"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_289"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_288"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_96:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "split:97"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_292"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_290"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_97"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_193"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_292"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_291"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_97:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "split:98"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_295"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_293"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_98"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_195"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_295"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_294"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_98:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "split:99"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_298"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_296"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_99"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_197"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_298"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_297"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_99:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "split:100"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_301"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_299"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_100"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_199"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_301"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_300"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_100:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "split:101"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_304"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_302"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_101"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_201"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_304"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_303"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_101:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "split:102"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_307"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_305"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_102"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_203"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_307"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_306"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_102:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "split:103"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_310"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_308"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_103"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_205"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_310"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_309"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_103:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "split:104"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_313"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_311"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_104"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_207"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_313"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_312"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_104:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "split:105"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_316"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_314"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_105"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_209"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_316"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_315"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_105:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "split:106"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_319"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_317"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_106"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_211"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_319"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_318"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_106:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "split:107"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_322"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_320"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_107"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_213"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_322"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_321"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_107:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "split:108"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_325"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_323"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_108"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_215"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_325"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_324"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_108:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "split:109"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_328"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_326"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_109"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_217"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_328"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_327"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_109:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "split:110"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_331"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_329"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_110"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_219"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_331"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_330"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_110:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "split:111"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_334"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_332"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_111"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_221"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_334"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_333"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_111:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "split:112"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_337"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_335"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_112"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_223"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_337"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_336"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_112:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "split:113"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_340"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_338"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_113"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_225"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_340"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_339"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_113:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "split:114"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_343"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_341"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_114"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_227"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_343"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_342"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_114:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "split:115"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_346"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_344"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_115"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_229"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_346"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_345"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_115:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "split:116"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_349"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_347"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_116"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_231"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_349"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_348"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_116:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "split:117"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_352"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_350"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_117"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_233"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_352"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_351"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_117:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "split:118"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_355"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_353"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_118"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_235"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_355"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_354"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_118:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "split:119"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_358"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_356"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_119"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_237"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_358"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_357"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_119:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "split:120"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_361"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_359"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_120"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_239"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_361"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_360"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_120:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "split:121"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_364"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_362"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_121"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_241"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_364"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_363"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_121:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "split:122"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_367"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_365"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_122"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_243"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_367"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_366"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_122:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "split:123"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_370"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_368"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_123"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_245"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_370"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_369"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_123:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "split:124"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_373"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_371"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_124"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_247"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_373"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_372"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_124:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "split:125"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_376"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_374"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_125"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_249"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_376"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_375"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_125:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "split:126"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_379"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_377"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_126"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_251"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_379"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_378"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_126:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "split:127"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/concat_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_382"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_383"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_380"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  op: "MatMul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/concat_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  op: "BiasAdd"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul_127"
  input: "bidirectional_rnn/fw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  op: "Split"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_253"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_382"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  op: "Add"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_381"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  op: "Tanh"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  op: "Sigmoid"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/split_127:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  op: "Mul"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_255"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "split:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "bidirectional_rnn/bw/bw/Shape"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  op: "ExpandDims"
  input: "bidirectional_rnn/bw/bw/strided_slice"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/ExpandDims_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/Const_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/concat_1"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\310.\312\274Yk\262;\t\245\341\275\230K\337=j\250\341=\357Y\214=\003\271\271\275J\233\324\272E\332K=>\2601\275\026j\322\275\022\335-\275\030)\003>Mu\013\276\033\271t=\337\366\n>\264\202w\274\304\035\330\274%\301\005>\r\237\224; \300Q=\0029\013>eX\206<\036j\227\275\212\224\324\2756\024$\275S\314\211<\322B\360:\003)\360=\nY\026>\301\251M=\010D\346\274^X9\276\250\007\272;\2340\303=\305\342\320\274]\217\204\275\003\241\234\275\226\316\013\276\300\244\231\274\r\004\025<pF\204\275kP\215<\036\251\331=\031\220;>\356\340\202;\004\272P<8\001\236=\304\207\343\275%\030i=\207\207\304\275\310\316\r>bw\247\275\252\225\027\276g\305\027\274\035\257\016>~6\357\275\360\343\215=\222c\266=\30173\276\217\036\033>\253\234\363=\324kA\275f\347\010\274[D]\273sqo<\231\311\205\273\265j;=\032\3411;\362GW:D*\265\274l\347\243;\332\014s=\266\265C;7j\210\272\255\026\323<\322\305k\272\237\371T=1\277\353\274\222K\327\274^\252\3359\224s/\272@\003\370\274\253;*=\264;\215\274j_\021<e\351\004\275\'\302\243\273\025\200Z;\002M\273\274\364\022\225\274\234z:;=u\t\271(\273\271\271Q\362\206\273\017\037\014=\271\207\210=;W\255=a\333%=n\201\\=p\362\013\275gT.<\373N\217=a\224\t\274\274\205@\2763\341s=\306\031\212\274\007CU<\200\211\\=W\022\201\275\266y\020\275\343\016\213=\256\360\364\274\274\360\264\275\212\247\r=\031\037\250<\375\223\274\274\030\016\363\275_\345\344\275n7\024\275\231\241z=\315\312w=h\232\216\274,\257\020\276(8\356\275\335\013\344\275a~D>\025 \031\276\026\236\273<\371\325\370=\375o\210=\037D+\274\251\277,\275\336\264\022=B}\305<\216C\247<\275\242\3229 \241{=s\345\340;h\277\302\274\375\2009=^\233\224=@Z\207:yJ\277=\315\031y\273\325\247{\272\311\251\224\275\306l,\275\254\242\266=7\220\232<\307\242 =z\312\220\275b\013\215<^`\216=8\034\255\275^\014\032=\023\321\324\275\355\202\213<y\254\311;\215\266\341\274x\255\243=\326\210\210\275\036\010V\276`\247*<\027\326\324;\342\'U<\267d\031\276\353\037r\2753+\215\274\243k\345\274]\247?=\307|\201=\264q\230\275\263M\262\275\225-\334<Fc\020<\353\375\363<\276H\206=\275\344\274\273\256G\266\275}\300u;\340\340&>\347\333\037>X\320;=p\310\030\274\323\236\271\275\304\214\237\275\024\177\020<\323M\227\275,[\374=\353\221\315=\2136\323\274\350\032w<|X\377;;\025\006=\207;\005\275\224\202t;E\377\010\275f\265|\272R\010@=I\306\355\273\343\241\201\275\366J\025;q}\017\275~\320Z\272\270\252\223\272\225\332\222\272\246\013:\274\\\347}\2758\014%\270v\234\220\273l\251M=\242\217\234\271&\006\207=^\275\370\271\367\n\200=\226\272o\2730\2627\275\30533\271\2228\225\273\230\030d\271\007^,\274\376o\204\274v\245\360\274l\262\206\273V\'\254<\243y\255\275(Ng=\343\315\342<\316\007@\275`\224\350\273A&\245\274\256\244\371\274B\3169<\222\274\330\2746\027]\275\000\315\300\273.\235\223\275\365q\361<^\232\207=\322@\340\273\235\212\177\274\365\370f=_\320\031=\347\301\336=\3104\277<=\250\242\275\361j\237=\326\333\'\276\225U};\225\222]=1\375\254\274\343\267\212\275\351\013\373;\337g\202\275\274\372\3429\352\301\352;-N3\275\027\367\233\275\002\352(=(\265\254\273\265)A\275*\361\027=w\211\353<\327\365\207<Z\337P=\t\303n\274.\022\336:\317r\023=\227\253\013<\034\032\"=\026&\215\275\340\354\375\270K\036\312\274#\302\333\274t\322\n=\321\201\310\274\220@g9\200\272\212<B[I=>\204\350<\211\340\027\275\000\221\350=\013]|=\357\303\241=\261\'H=M?\226;l\266\373\27569\237=\026\374w\275\204<*\276\206F8\274b\266\225\273|\010\023\275\320\263b=\206W\304=\037\330\371=\226|l=\247\312`\275\265\036\207\275L\217v\274\256\257*>\363q[=\37373>\007\377A\275\313\357\016=\236\240\277\275\354\377\233\275_\363\226\275\214\211\325=Ze\021=P\020\305=\337\377\247\275\234\360\266=\376]V\275\023_\224\274V\037\236=\340#<>\360$\001=B\331\257\275:\320\2249\362%}=_\257\216\273\tyv\273\363\202\254:\r\325V\275\002V \272\032\374\363\274\222\353\3238n\315\243\273f9\026\275\271K\037;\366\032K<7\311\205=v\277-\2726\271\342;\254\201\302\271,v\215;lq\234:=\363\025\275\231m\271<\241\355\206\275!\230\227\273\221D\037<\306\3107\273\334&h\2755c\204\273\266y\'<\322\303P\274=\251\006=\302\003V\275\2065\202\271p\342j=\363\363\275\274\360\005\345=\2155m\274\212\327\251\273\377\230\273=@\340j<\374\242v<\303&\216= \327\314;\"\2570\275\212\016\033\275d\004\321\2745\032\275<q\350\257=1\260\304=4\247x;\"<\202\275\222@\223<\016\322\225\275\2349q\275;d\213=\237\032z\274\236\342F=\212\010\256=\0036\330\275P\250\020>\3634\343\274i\227\205\275M\033\334\274\233(\205\275\327 \037=)\223\035=\214\337Z\275\240Fo=\031\036\224\275\233\315\335\275\224\240\360=\006\244\n\276\204\363\370=\376A\001\276\211}\203=S\177\302\274Cs\031>\017\304\236\271\342\203\214<\305\264\364\275\204\217v<\251\361%>\2051\235\275\234\360\200\275R\314\002>1\351\277=\001j\036>\342F\356=h\333\356\275\316\023\023\276\266\242\361<p\236f=\345\177\000=\361KH;\342\325\001>4\005\234<M\210\205\274\333\215.\276\377\013?\275\302%\227\275C\246\202<G\244\000>\242#\272= \215\260=\027\367\020>\241\233p\275fw;\276\361i\255=,\222u=}!\001\2763\321w=\335\031\262\273\335\220\306\274Pz\010\276\226\243\350\275\214\313\335=\3047\376\274\330\265\252\275\303*\032\276\217\351\326\275A#\275<L\217\000\276VI\323\275~\320\231\275\213\364\352\274\014\241\351=\021f)>\341\000\266=\004oa=\277\004\232\272*\220U\273c\344\2169i\337\302\274\022\377M\273\234\035f=\034];\275\374\300n:\270\270|<qy\354<\320&\211<\224rQ:\362\334\275<v/\213\273\004>\234;\337\365\021=Db\013\273\264\353U9\260\237`=\242\305!\272\320gY\274\356|\252\274a\204\r=\356U\2039\270\021\002\275\370\2525;}\347\243;\252\356\304\271)i\235;L\023*\275\344\007\275\274\330&\0319\310U\324=jM+>Q\006\302<\226\030,<m\363\2219,\356\001>\272\311\017\276r\260/>\336\0256\274R\260\321=\010_\346=^\346\275\275d\327\300=\270\026\027\276d\021\215\275\266\312\355=\221\265->\006\332\t\276\2422\004>\242\237x=\034\355\351=$B\001=\207\307\246=n\200\356<^F\376\275\201,T=L\260\305=\274,\327\274v\271\250\275\323s=>\377\340\313={\006~\274\365\334I\274\303}Z<$-\273;\244\271\220=O\020\010\275\023\307\002\276\026Gd=\n@\223\275\302wb<-d\021>\212\352\254\2751Z\333=5^{;4\303(\276H\340\376<\346\245\347=\006v\\=)\274\235\275\007\3676\274\222\211\367<\\\2050<\r\240)\275\213B\031>\371\241e\275\263\265\211=n-\006\276\030t\332=V\225,:\004\302 >\370\212\305=oQ\332=l\305\265\275\372\211\305\275\264/\250=G`\334=H7\306;\324<\327\275\330\343\313\2733J$>\370\204\022\276\310K\236<\226}\355;\341\"(>\372\026@\275\315y\371\274*\317\341\275X\306\010=bH\t>\326\364m>\025\311\263=Ry\376=\273vT\275B\304\004>\253\2254>\376`\371\273$V\325\275\220\245\026\275\246\314\030<\035\365\360=\003I\244=\326U\000>o\016\030\275\201b\307\273s\374\200:\304y\202\272\272?9\272\206C\237;a\357\234:\323\337\326\272\232#C\274\334\002\230\273\326/r;\351z\211\273\267\240\'\273\243\277\243\273\034\264\264\267\266\311\314\274\252\031\203;Z<\233:a\323\213;6\247\200<X:<\274n\320\033\272\222\274J=\030(\203\275~\354\013;\243\247\234\272&\021T=&\330\207\273\216\020\377;\300q\205\274\367ta\275\346\344h\273\266\300w\273\324\303\020= \221\"\275z\3760\274O\227\275\275\250j\037>\220\035\004\275\224\352\346=\215?\245=\031\227\202<\334\265\342=\027)q<\2031$>\233y\262\274j\273\020\275\017\2123\275\350\212\374\275\213\304\311=\375\336\240=lK,\276\362%/\275%\361\205\275\216\026\216=\240}\031>\025\223\275\274Zb\t>\036\013\216\275c\026\352<\221\000\001\271\026\264\341=\372o\210\2751ZI>0F3>\024Z\256=\330\202\034=\225%e=\0256&=\027\377v\275\037*>\274\014?\306\2753\246\"=\364\273\265\275\000\315\342=\350\270\355=\021\236\220\274\021T\343=\250\365\223=\266\025f\275zSp\275\277l\177\275\025ub\274\241d >\215S%>\315k+>\343\205:\276\225\224\027\275At\014>\310o\023>\255h\353=\214T\235\275l\200%>\031\274\363=\304\024f<!^\r>ZZ5>\\\245;>3\276\032>\003\2475\276N\0035\276Kh->\000V\214=A6\005\276\227\304>\276\021\240\235\275\301\023\342=\000v;\276-\"s\275\324h\250<8\r\021\276\203\231\350=\241I\005=\271\030f=\353\003\224=\372C\r=\301\3040>FH\013\276\033\247\r\276\355\013\325\2757F!\276\217\346H\275\341\226\027>4\250\t>\273\300#\276{J2\276+\365\332=I:\">*\037\224\275\345\035.\275\200\'\361\275\310\361\235\272af\243;\254\255\251\274t\331\032;2J\206=/N\200:\256\273<<=\363\373\272r\0366\274\260\026m\272\250\207\201\273\365\2573\2755\217\213\273\352\3367:\226vJ\273%\264t\273\261\353\010<!0\370<\236@\006\273473=;\032\226;F\225\026\275\276\n\262:\212\225k=U\327c\275\3450\206=\212\341\035\270\023\245\237\273\274\350v:\350\332\031=\321\331\201\275\"r,;\t~\276\275\212\377\r=\303\322\022=\275\036h\274\207.D=+\244\336=T\n\t=\212\215\010=\014\024\001\276\0228:>\214o\372\275\207\2124;\305\225\323\275\367\035\355=\343Y\376\275f\342\037=\037*\004\275\264\1773\276\335\337q\274\212L\244=V\242\313\275\335\303\014\276qNw\274H\376\217=E\235\001>gY\261\275\252h\354\275>O\036\276M\022\213\274J\332\363<.\310\020\2760$F\276\n\252\347\274\253lU>\351\273\342=\365\305P=Ur\312\275\266Cx\275\361\274\206=^\365\026\274\310f/\274o\376\221\275;%f\275\227u7=\n\265 <\326`\203\275\342\220\317<\260\330\004>\342\035\376<\273`\023=6l\275=m3\005\275\202\341\263=&m\233=\032\0253\275\373\223\235=\364x\366:o\252\245=\340\212\251;\376\366\270\274>\257\032\274\025\013\352\274\277\337\354<\321\230\330\275zb\035\274*\020\210\276\367\177\204\275\320\274\016\275\2711+=.\006b<\300!\323<\236\213,>~>d\275\317\351\034=\337\335\201\274\276\333\260\275\214\203\242\274]_\272\275~\2410:\030\270\233=\340\272\203\275\237\215\n\276bOa\275\030\335j<\353\026\312\275\'<\017>\305`\202=xe\320\275\271\261\262\275zRV\275\001-R=\257\310\346\274\030\304?=\316\362O><<Y=\246\321\r>\037Z\205:c#\235;\306\323\205\273\357S\373:8 \232;u\004m=\236\t\315\272il\242;m\346\r9\021h\231;\327\014{\273\353I\362<R\223\201\272\3440\2549\365~\036\275\203\262$\273!-v=C*\373\274\276\2165\272{\273\030=Q\337#:P\236?\275O\rz=\341\205R\273Dt\311\270U].\274\322\361\333\272\255\336\203:\373\346\233;\334\233\323<\007\036+\274}kn;\264\356\021>\213)\">\224R\354=\034\252\006=\267X\362\275S\342\004>i\223N<M\002\261=Y&\255\275yz\201\275\300Y\372<,\222\244=\207w\252\275\237\306\223\275\371N\237=R\232}=\014\327#>#:\230=x\305\210\275\245`\353\275\375\272\277\274d\353\r\275=\272\342\275\3222\006\275\231;\004\276\221\213\205=!\016\224<\031{\245=u&\010=\261j\216\274\370Y\005\276\2753\005=\360\233\023=N\203\361<\350\216\233\275O]\372<4\037g=\321h\033\276,\206\335=\200\315Z\273\234\n>\274oH\004>\357al\275\\`\231\274\260X\276\275\177&\215=k\2475\274\365\222\245=\355\327\017\275\242\355\014\275\361\271$=dwq=\304\260\021\275\273.4\274\232\306&;\300\203\220\274w\356\232=,\342\016=\373\366\226=\251\252\245\274\357\3053=\342\314\036<Bg\364\273\t2\003\276\365\2526=\250w\004>y\302\257\275\031\006\272\275\353K\230\275\027\327Q\275\331o\355\275\010\211\251=\001\263t=(\230\220\275T\"(=(\371\212\275\355n\027\276\002\n\264=\002J\243\275#W\262=\273\204\260\275\354Rl\275\235\253\245\275^\324\371\275/\200\253=GC\350\275i|]=\201\277\"\274\353:\256\275\377i<\275;\326\230=\300\177\245\275Q\2779\2750\364\315\275\353\'R=#\2370\274\334\007\220;m\271p\275\341\264/\275\006\0277\274\020\302\370:\3121\240;Gd\001;\020c\224\273\332%\n\275\365\232T<\254\025\231\271K\360\\:2\335\034\272\260\303q9\240\036\200=p\367\035\275R\304\326:\313\277\312<\320\n\236\273*\177l\274\006\016\361:\244\326\361\271\3533\234\274\360\254\217:\310\247\241;E8X=\261\240A=\256\003T\274\225O\013;\356\255A;\265\371\034<\310L\2179\020\303\341\275\263\251\352<\262\265\240\275\336\216\013<\014Y\251<X\202\246\275\271\245\333<\r\276P<\377\376\001\276<\223f\274\325\217z=J\265\363=\271\273\024\274\351F\220\274\030\340\377<4\217\016>\344\221\362;m\213\330\275\211\\\363\275Y<\306= \337f\274\306\275X\275\330`\327\274D\326\313<\317\305\236\275m\023V\275\374\311\265=\026\264\207\275V\207&>\241X}=;.\336\275\021P\206\275\347\025\310=\021\360Z\275\"\233\250=\302f~<.\211\323=\211S\261\275\203fg\275\337\3643\274bG\274<\371\206\263=\271\313\271=3\357\355<,p\264\274\020\267r=\236\252\333;\237\331\226\275\204\274D=\014\336\300=FH\003>x+\304<\300Q\254<@\'><q.\013\276t\324+\276h\003\212\273\304\344\247=5~\357\275\204\034\013=\024\372^=\231*\014\275D\312\037>\221\316\030>\321\350\255\275\344\3210\275\264}\031\276\035\014\336<\023\204\006>\264^M=\314\213\003\276^\256\027;\205\201\352=:(\001\276\"\341!=\355\177,\276\355\201\021>x\326\010\276\261(\032\274\353\354\250\275c\353g=\344 \266\275\370\223!\276\210O\365\275un\247=G\3546\275h&\007>\266\022\r>\272l\333=\256.\023>\367D\327\275\226t\237\275\354w\350\275\022\016&\275\031$\022\275~\331\364=\240\200\316\272\034\244{;c\335\211<\265\026\230\274\213\177z\275+\234#:p\020\2127\367\207\214\274.2\357<t4_:N\007\211<v\224Y9 \374\030;z\370S\275g.\353<\004F\023\274\025\374\232;\n[\003:$\257\005=F\277X\274T~\230:\304\321D\275\236S \2753c\003\272\350\320\004\273kk\014\273\342\225\233\273D\\5\272\255S\2748]\210\267;\022x\332\271#.\013\273`qP<\210q\253=\2470Y<\354\244E;\222\023\005\276\320\350\344=\025<\320=q\212\031>\017~\000=\036s\227=}S\016=\3767\021>\253\215\234\275\\\036\302=%l\344=\343\235\362\275\257\325\211\274\030\360\335=\353\343\362\275h\000\001\275 \246i\275\337\305\003\276\234B\266=\220\325\226=\312\273/\276Ym\340=A\262\031\276L\257\'\276\304\370\r=\266\335\313=g:\361\275\223\205\020\274[\265_<\227\030\240\275\342\367\342<\"\003\241\274\351\203[<\317v\'=+4\032<~\r\033\275\233#\357=?Q\'<\254\020\233<\274\026\016>\tZ0\275\305\025\310\275rD\370\272\264(\306\275*\0143=\230:\215\275\177\005\352\275\207\357\351\275\364[X\272d\344\204\275\255\032\225=cS?\274b\251]=\"|\027=w\260\250<\352\023\201=9[\262\275\237\332\t=|!x<5[\006\276\217\'\334=\240\323\240\275[\275\032\275\212\344\206\275\323\034n\275\355\307\377\275\025\311\250=Y(\202=\233n\265<7\'\275\275j\323\033\276\303\037\032=\224\256\312\275\314\\\222\275\027\252\006\276\312\304\017\276m\302\255=/;\267=P\003\221\275(\373\354<\">K:\365U\023>\203y\301<\367\016P=3\325\271=\360u\214\274\254\204\215\275\004Z\236<\313f(>`\251\301\275\336\322\300=\346M\357=O\213&\275\232i}<\204_4\273@\026\006\273\301\353\313;\027\234\214;)\010,:\316\207G=\356\340v=\230\364?\271\030\244\231\270\004\350\243;\377CL\275\256B\242\273z+\252\270<\\\222\271\370\246\r<f8\027\274\361\374\206\275\030d\2319\322\025\350\272\300Cl=\370\301p\272\355/\303:|\032E=\340\245\014;\354\204W;i\341\346:\020\362\213<x2\236\273G\t\224;c\372;<\303(\264=\367m\036>\005J\254\275\264c\016\276\201=\367\275!\243\342\275\230\031\246<#\032|\275%J\336\275\302\323\367=\223\223\022\275\225I\253\273%W\254=\270/\000\272S8\261\275\274; \275Bj\316=gQ\351=\347%\325;\361\304\010=2v\005>\371\216\303\274\304Wq\274W\r\027>`\232c\275\341\t\322\275\205\324\272=\330\227\017\276\204\366\234\274l\256\316\275C\367\007\276\2225%=7\374\325<\203&B>)2E>\226\024\344=\033\rT=\301\344\227\275\214\263\372=\271.\260=\333\355\307=P\2679>\021\010P\275\207\356\014\276\004\361\031\276_\305\220\275\301\267\356=O\353H\273\214\354\350=s\314\024\274\325\361\311\275\364l\234=\005\217Q\274\004a\364=7\232\200\275\362\213\356<&\316\354=\033\2133=\274E \276\327\307q=T\341\037;\032\035\226=\376*\213\275\"<\235<\360\264\r\275z\017\267=\351 \331=\037s\317\273\353\005\255\275\224\321-=\361\242\024>\315\236 \275\017+\030>\215\252|=\234\341W;u\006\033>=\352\240\2746\232\025\276\006\324\366=\253\362\r>\2651\244\275@\252\026>=\377 =\367\025\227=\200\223\r\276]\304\036>\212\365c\275\035|\r>\241K\272=\250\261\277\275B[\346\272M\013\023\274\242~#\273],\227=Q\301\274<p\340d\275\244O\005\275}\222\206=\373\305\225:\201i_=j\375\376\271\362Qk;\247)\014\273+\2330\271\263\245V\273\030y9\275\312\355\241\272\354\177\344:\257FW\273\026\371\202\273vs\003\273\321\306\237;X\313r\275\020\302?\270\3403\215\273\234r%;\246\247\014;+}3\275 \333\003;t\370\335:\262?\246:{\225\225\272\n\306\267\271n\0000\275\311\211|\273\373O\232\273\2116x:\214\022\326\272qv\370<;\327\355=\225E]=\253\310\020\274\004\237\032\276\3000\032\276fl\257\2759\246I\275\001\204&\276\242\006\036>\223M(\275\211\357\003=\026#\331\275o\201k\275\243\024\353\275\233\343\240<)\025j\273)\351\334=k\230\217=>E\243=b\376\270\272V@4=mm\327\275Ia]=\343b\226\275\036\325\355=\037\222\377=\307\304\344\275S;\304\275k\255`=\264\020\205\274v\217r\275N\t\377=\325Q\343<\033F\274=F\n\223\275\"Q-\276\022\321\252\275\036\343\224\275\340.\017>OI8\275\330*\375=q\320\200<\200`\214=i\367\342\274\025\320\261=\325\320\352\275\247&\310\273\266\017w\275S*\004\276~\001\262=;\036\363=\325U\265=g\321\207\275RR$>\260\330o=:\203\032>\273\nh<\263\003%>\254)\210\273\267&L=^;\246=\227U\374=:\242\271\275\025\004\203\274;P\373;\1775\277;\017^`\275\374\232\262\275\035\273)\276\355\240\020\276\231/\200\275\005\331\261<e?\034>\351\243\222=-J\212<\333\211\301\275\253E\227=l3\361\275Pd\366=?\010R\275\221\223R\274\215\332->\347\177\364\275\246Z\220=\365\335\311=\224\357-\276\001\236H\275\275\200K>\2655\024\276\270I\031\276Hq\003>U\340\031=\274\033\023\276\207G\210\275\007\233t\275\312\214\2709\375;\002\273vJ\213<2QP=\031\247G\275\232\347\020\272g\317z=1\340\005\275\371\225_\275(\244\2208\277\t\232;\030\216\376\273\007\342?=h\306\0179\033\223c\275|\371\t;\037\363%\275^0\233;\007\215\244<\320\202\230;\211\266\031=\334\203&\275=O\323\273j\223\233:f\235m\273F\213F=RDi=\272\242G\275<\322\r\273\346\305\30590[n:km\337\272\'\340|\275\244$\250\275\307e\030>\021\372p=\370\335f\274\375\351\"\276xJ@=\243j\334=+ \207=%\221\370=\tsw<\347B\010\276\234Z\264;\343\336x\275\215\252F\275\303\0230>n\224#\274h\352\237=\273\274!<\222\367\002\276\210\255\300\275\327\227K>;\350\211\275\205\210\371=\337O\354:\203\307\026\2758\306\000>\261\nW<\352\214\013>\013v\332\275\021\004G>\257l\026>.?n\275\304\200+<F\207\221\275p\274\024\275\277\032\177\275m\316\375=S\242=\275\301\231@\275\"~m=\266\351\257\2752\3145<\243\355*\274\270)\252=AU\360\274\342\'P=\366\034`\275\205\354\235=\354\004\276\273\232l\205\275e?\n\275\333\263\313\275\225I\331\273/\271\217\275\271\207s=\355\315p=\027\267\324\272\356\344\250\275\343\371\236<\201x\351\275#~\250=\372U\265\274/\326J\275\3751\315\275\271v\346\275!\262\372=9\r\007=-\305\253\274\320\304\240\274\336\251)>|-\006>\277e\261<1\331\215=`\324\251;\227\330\211\275\225\212\024\275\355:!>\217/\373\275\351>\203=\227\235\005=\216\033\004\276]D.\276\263\337\252<\255\n\303\275r\306\010;8#\205=EJ\004>\r\314\305=%#\332\275Y[\017\275\340\n\023=\301\t9\274J\024\024>V\025\021=/5w\275\240\332K\273N*t;t\343\243;\230\372\352\273Y\244\222<\005\257z\275\375\263\205\273\261Z5\274\340\022\030\271\376\203w=\210\216D:\014i4\275\305\215C\272\0267\241;l\020\004=\"\346*\275\3762\031:\220\371U=d\254\r\273\352\242\207\272\022gk\275H\200\214\273\364\000\255<\253@\216\274p\225\233<\350\222\224\272\344\203\033:\211\334\225\273\220\326\242;\24306=E\347|<\t\327\202=\304\034\265\275\236\322\027>\364\270\325=\025<\264\272\336.\034=\027\362\271\275\366=\023<>\222m=\233_\273<\3562\201=\336\342\325;\3171\014<\331\261\222=g\325\313;\275\n\300=\027>W\275\347A\264\274~\326\n=\213\247*=(e\356<\033k\222\274L\375\306\275\017\376\214\274\\\035Q=o\013\r>u\201\202=\332\027\361\275\345\377\274=\222\325\003>\362\245\202\274\264\353\231\275\355\006\000\276\014u\013>\376\255\267;\260\273\035>\035\014F=\222\241e\2749\364\332\275\020\321\246\275W\214$>\177\201v=\330Q\233=5\337\321\275\356\217\232=\353t#\276\310:\021\276x\310\333=\306*{=\334\301\367\2759\217\240=W\322\252=\205\\,\276\006\315\262\275\330i\024=OC)=\242\311a=L{\013\275\246\234\213\275wm\260\275y\302\200=\016\024C\274\030b[\275{\345\036>%\277\210=v\340\030\276\321\357 \275\256\267\253\275\360\331c\275K\276\005>\236Q\034\276\376\366G\274\374\322\303=\366V_\2755k\233\275%\345\361\274\274\333\327\275?\0201=\234i\223=F\014\010\276\253:\032\275z;\201\275\214\202\271<\007X\025>\223\214\036>\355\2417\27698\371\275 \262\342=\2250\261\275o\242\200\275Z\242\337=~\274\234\274i\260\267=\177\233t<$7\006\276\241v\262\275\340\021\241\274\225\001==\222\244#;\243_\212\273~L\325\272\341\337\017\275\334k\371\272\352+\345\271\352et\275 \225\215:N1\237<x@\0378\324}t\273_\021J\275j7\333<\n-\036\275s2\375<Z\023\025=\006\346\360:Q\376\267\272\265~\241\2736\256e\275f\320\211;\204P\014:im\211;\336\026\221\273\313)\2669ny\345<\351\272\037=\356&\035;0\337\242\273\345\022\323\271y\217s\274\"\2451>\305e\367=\210\222\236\274\020\342\267=\301\013\271\275\271\354\255=\r\300\305=\240w.>\315\010\264=\332>s=\013\336(=V&\013\276\357\311\211=\240_\356:\270\3156>R[\244\275\320\025\343=\367;\245\275\325\375\300\275\344_H=\251\346\002\276\036\332\230=\3444\346=~7\t>\274=\030\276j_\372={~O\274\014\201(\276\033W\t>\262\036\372=\235\306J\275\305+L\275\n\312\274=f\265\032>\250\213\251=\002m\031\276\332\006\337=J\372\233\275\315\367\313;\211\344#>p\350\272\274V\250\035>Z\340\246\275\001;\244<r/\224\275\211\302\366\275\357\251\005=\267\273\014>\340\005\267;\340l\2629\tq\001=\231\017\330\2759{\253=(r\237\275\240\261\361\275\376\314Q\275\205\371\377\275!\265\304\275)c\227\275\202\261v=\3417\023<\312@\302=\223\326\367=\014$\014\276\265#\335\275\342\021\205\275J\207J\275\304\221\365=WT\004>\005Z7\276\"\236\345\275\"\233\002>\205\267%\274\214\330N=\242\316\n\276 D\007>\n \360\275\372\213\003==\374\316\275\366\354\234=?k\230=\310\306\231<\254?`\272\354Oa=LP\n=\275\242\003\276\363\374\013\276;n\255\275\342\230\032>\024y\370\274\0351\225=\375\3105\276~G\261\274\373\017\237=\327^\267<%\020\365;\311\300\004;\354\226t\273\342\037\016\275\231t\001\272\026\3138\273\241\032g\272\277\344\241\273\272\017\r=\326i\024=;\005g\2758\351v:D\363[\272\345\360\027=\024\242\242\273\n\346\243\273J\2171=\224\271\240\273\217\360\216;\362)\332\274\212\234R\275\332\212(;j\262\025\272\023\350\005;hDv\267\030<\324\274\212\'\376\274.\252$\274\000\023\002=hO\315<\305\320\243\2734\350\000\272\215\234\205\272\305\367&\275\302\322\002\275\t\263\337<\347\200\227\275|\220O\2757C\214\275Z,\030\276\202\247\t>!\245Y<*\264C=\302\205I=\306\2728>m\014\262\275/\205\025=\264\203\002>\032\336\226<\312\372\035>\224\277\366\275\2601\030<\336h\337;k%\230=i\227\354<\022\177\207\275c\257\363\274\022\220\252\275b\001\002\276\254Q\262;P\'\006=M\235(\275\2408$>\322,\337\275\002#\320=\210\350\256<\000u\000>\256:\272=K\"\006\274\235\243\200<\314\274w\275W\227\020<\277\324\226<\236\370\237<\220|X=\240\352\'<\376[\264\275\021\306_<\333\315\272=\250j\021=\247\022\024>\253\207F\274R\230[=2t\326\275\027m\261\273\323\360,=\233\210$\275\337\256E\274\371j9=\246\340U=\232\244\005=vq\002>\271\220\223;`\246\017>\"\276*=\360j\036=\250h\273=\260\365\032>\235&\360\275\253\275\317=\031`\220=\311\341\002\276Q\214t=\354u\254=\3455\220\275\214K\263\274\330sG=\362#\356\274C~\013>\tm\260=\006\375\177\275Q\333\315=%q!>\201\006J=\206-\210<;\022\354\275$\236\014\276\300\276\371\275 \320N\275-\216v=\232,\317\275-z\361=\277(\226\275C\316\021\276\257b\347=(\n\227\273\217\275$>\376t`\275\210\312\236\275Ek\354;\366\024\r\273\223\211\301<\207\177;\272\034\021\r\273\032\342\204\275L\276\234<\227\322\275\272\010d\032\271`A\222\272D\037z\275wi\233;\r\364\330;\330!/:\344pA=cc\261\271M\233\304\274)\312j\273p\277W\272\370h\3158\334\274};\003\020\263<^\034\221;\330:O9_\271\t\273 \343\257\272q\335z\272&\317\010\273\331\342\241<2\2732\271\035Z\200=@1j6)i\233\275y\340v=T\340\276\274\266lK:9|A\275\346M\260\275\\\022k\275\202@\037<.?\315=\337\331%\275\223\261\001=T\350~<\367O\373\274E\2634\276_X.=\364\221\024>\t\030\000\275][\244=\351\225J\274v\214\'\275\267\257\314\275f\357\013=|\204\266\275D\030\207\274\222!D>\355\005R\276\307Q\250<\356*\006=Y\004\207\273\025\267\021=\247IR\275\033\332I\275\332\373<=\035\341\004>\263\n\360\274?!\221\273\340\221\303\275\344\022\311\275VU\256=cb\277=#\034\201<6k\272\274\330\213\236<\277\021\002=\2576\346\275\373\261\213;\224\356\326<\207\314\025\273n\022\002=\'\231\233\274\257\206)=b\212\337=\n\005\010\275E\346e=\024\203q=]\005P=\220\233\335;\307\216\341=b]\'>\3106\210=V\367-\275\224\364\367;*\330\214\273v\352\312\275[B\347\275\341\026\260<bP\277=$|\235\275\253\302\333\275\205H\243=\251\265a=N\263\351\275\031\206\212\275\244i\022\274n\025\260\275E-.>((\332<\336\2601=\204\235\033\2767\231\264<\367\350\274=\274\325\311\275\244\211#\274j\273\202=\r/\\\275\222\325\357=\t1\210\275\235x\346=\032P{=\225\337\021>+\223\341\275\340*\303\275\010\201\037>\207k\225=`\005\370\273,\322R\275vQ\226:\270\267V\272F]}\271u^\265\274\351qA;\240\325\256\270\237\221\241\273](\033\275\002y}\274\351\302\202\273XY\2659A\340\374<\250\224\241;\2475Z=\317\257\016\275\034\356\245\274\212\007\036\273\2446\031\275opJ={\020p=\267(\225\272\327\277\027=\026\274\216<T\323\3648\014\023t=\003\260D\275&\"99\203\346\240\270\243{_:\255@\255<\353\253\020\271\375,K<E\035\243\274q0U=\347}\321=\260\306\024;\227\220\245;o\310\325<\177\361\217=\305\305:\275\367^W\275\303SK\275wd\263<\267oV=d^l<\267M\356=\334\236\010=G\234\366<\377\335Y<K\361\206\275C\335K=\314\300\342\275\274\220\247<!\250\200\274e\243\013\274@4\\<\350%\344=\217\334\036\274\215\274\321\275)\336\213=\240\020\270=\370\251\231=\022\240r=\350_=\275\361\206\005=\217H\330\274\371_H==\327\323\274=\257\267=gh\307\275Zd\'\275+\177\211;e\207\213\275/\353\003=\222\353\242=\217/4=$\2065;\343k\357=\255e\334<X\217\330\275u\222\204\274\tZ\251\275\324\213\350=\321\264R=\351\201\313\275\354S4=\204\255\347\274\332\244\334\275\210t\206=\213\260#\276\367:P>Z!=;\210u\377\275(o\025\275\177\244\241\275J\225+\276\014\224\\\273\007\301\226=\026\201\243\275\362\220<=\nn\252\275\030>\r=Ed0=\360\016\"=d\r%>w\361\027>\237\346\272\275:\256\013>\006\243!\2769u\005=\323\204\304=y(Q>\032\017\263<\313\351\305=\030\376\364\275\350\034\030\275)qs\275\3321\267<\203D\243=\200\001\342\275vX\221;2\272$>\317Sm=\320aP=\362y,\275u\\\006\275\362\234D\276\276\351\332\275e\232\347:\033\313\003=f\270O=\350\325\013;\330P\201\2736\267\205\273\3601\312\266\023\345d;\307{\371<\240\334\035<\327\227m;^dq\275\212/\357\270GG\001\274\323\372\224;\260\253A=&\374\314:\020\340\243;\314q+\271d\007\302\272\364\200\234;\331\267\271<\240jC\272]\274s\275KS\201=\373PD\275\206\271\013\275\"B\266\272\222AX=g\350\260\273b*\035\272>r\342<\272\247\301\275\223B\033>\274W\016>\025\327*=\340\177==Yj\017\275\220\323P=\025X!=bc\\=\021,\032=\tq\014=\220\301\t>f\\T=\314\260\021\276J\265\365<b\001\216<=+\224\274>m\216\275\353z\215\275nyz\275\024\346\272\275FRi<\344S<\276$\233P=S\200\004=\031\t\231=\340\\\013>\212\352\025\275\206\365\001>\315Z\242=I`\245<!\242\266\273<\022@=\324\224\340=$Y\033\275x$\002\276\031\245\236;> \241\274S\r\354=?\316\357<v\317\345;;\306\217=\223\323\220<\276\234\260=\351yB\2753\265\254\274\211\032\214=N\314l\274\362*\264;-\372\254=\277\244\237\274\014\363\220=\002\346\334\275\214f\375<\002T\223=1=\n\2768\021\202=ED\301\275\305S7\276\217\315|:\247\206\023\276h\002,=\266\025=9e\006\213=\334\277\022\276\275\363\235\275\240H?\276C\240<<\272\240R=\227\266\311=\020/\t=\350\250\034:\334h\024>\014\373\322=`\216\252=t\037\270\275\272\250\r>\322>S\275}\263\272\275\300`+=\262q\306\274k\'.\275\274%\250\275]\3771\276W\277\231\275\352\332Z>@U\241=QP\275=\360VP: B&<U\253`\274\227#\226\272\377E\310\274\202\317\020>\t\251T\276\00599\275\003\031\210;Q0\267<\025~\r\275\317\237\236;\260\340&\274;\036\216\273\344\324\360;LB\002\272\326\344\010;\326`\217<qb\200\275T\367p<?\276\203=_\032\303<7\\\022\271f3\3719\020\256\201:>\323G9*\016\340\274\373W\201\275\366\222\004;\257\244\261;\3535\023\274\021m\016\274oL\307\273\014\177Q=j\323J=\306\263\216\274\321 v<\366\"S=\342\333J\275\300\200\341\267\265\014\345\275W\241\327=\330\240\254=5\352@\275\203M\340=\353\320H\271P\357\333=Yo\324;\024s\366=\266`Q\274\032\220}:vCz<\214C\253<\271@\177=\217S\026>Pr=\275#\262\234\275\221\365.\276Ln\231=\215\003.=\205l\231\275\273\241\252=)\267\360\275\000\027e\275?\302f\275U\014\234\273\005\244n\274N\221z=\311\247\225\274wzr=;\215\373=\265U\010<\234R\\\274\274\352\350=f\317\013>\034\256\270\275\304W:\275}ZY=\275\231\201\275\267\304\n=\232r=\274\372\210\332\274\356s\001\2751Dz=\274\276j\275-$\211=X\202\235:KS\017>(\355\226<^\006\211\274\001\222\237\275\312\3711\275\321x\327\275\341V\r=\243o\231\275\033&\351=\317\035\203\273S\304\310;\263\214\362<\372\251\216;\236V$\275\0378E=\243>k\275\231\332\\\275\251\333\306=\247\375\232\275\261\357\227\275\0041\213=\3568\004\274TA\370<gH\036\276\255\300&<0\242\267\275V\223\242=\034\022\273:\336\307\276\275\265\335\220\275>\240_\275\341\263\262=6\020\007\273\236\377\372\274 \003\253\275\203p\213\275)\021\250\275-O\215=\320\244\013\274\253\233\252:)RX=x\251:\275u\352\017>\356\256\231\275\005\230\216;Q\314<\275\017V*>\232g6\276\376\224\325\275\301\226\264\274Y\2478:\'o\014;\212\003\304<\364\216\255\272\3654a=\333\005\243;7\207\200\275\177\204\337\273\352\266\r;\217\2053\272<\312j\270l\263\353<\265\034\200\274}\025\303:\211~T=Z\025J=\226\3328\275\007\262G\275l\341E;4\022@<\2225\357\272\214\333\243\273j(A<\310u\235\274\220\250T8\343_\366\271\300\230k=\302|\n:\266\217y\273\244\264w\272\032\\+9\300\275C\274\326\026\212<B\006)>\331\272\333\274\324\324b=\023&\005\276\312{\215<\273a\377<\234\254[\275\206$\t<\r&\023:e\377\201\275!8\262\274v\022=\274:f\026\273g\330\345=\216\214D\275\345 \355\275{/\201=\274\226\272=\256t\035\276\306?/=\210\004\204\2754_\222\272^\\\252<\252\272\035=C\207\374=K\220 \275\013\336y=Q\004\232<\3619\354\275#m>\275nT\004\276\021\247n>\327\200\247\275\272_b\275\207z\036\276C(\021>\236?\360\275\230\013\005>\032\230\260<+\324\275\275\341\222\220\274\277\207\211\275b!:\275\242\341z\273\271\212\376;\367\tk\275\3605\256=\236\221\372<\233\360|=\352\370\343\275q\354\017>>\214\256\274\233\016O\275\247\224\323\275\217\325\340=k\311\203\275\213P\007\276\315\322\320<\231\205b=(\345\252\2751\261\252\275\230al\2751\374\273=\031AN>\206\374\034>\362\016\275\274c\377Z=\354\241\260\2752\n\024>\021\342\202=)\233\002>4\230\260=\333\300m\275\020\365\016\276\017\275\030=\211-e=\352\027\277=rM5\2759\235\270=^\326\014\276b\r\302=<j\346=\307R^=\014\212\235\275$\205=\276\317\312\t\276\2674\316\275\273\r\260\275\025\306/<B\223\224\274\301\313k\275\202H\023>X\333\343\275\326Z2>\367\247\235;Y&\325<\210\177M=ly\27789\027\020;\330U\027\273\340\200M=L*\324\271`\027T\270b\350e=>\220G\270\034\213\004\272\023\347\224;z\025\\\273\rKD=\207\207[\275\004\010:\272\251x\203\273\322\022T;\3133p=1d;:9x\357<\262H\320\2739\2302\275{\230\275\272\242\323a\273|x\226;\270H\026\270a\276\003<T\263\240\273\307\356y;A;\231\273\360\013\030\276\260\355\376=\262\363\316=+\362\350<\371\301\224=\361#\232=\220E\r\276\222\356\320\2742V\352\275d\331\002=\331*\347\272\3210]=\265i\374\2750\017\210=\356l\005=\203\362\224\275o$\017=;\267\307=$_\001\276\262\242R\2756F\226<\252*\363=#L\005>\376\005\230\275\2052\334\275\r\022\034\276\242[\347=H\313\002\276\"\305\212\275\322 \001>U`\305\275\260id<3\245\354=\215.\317=R\317\313\274pJ\t\276zT\226\275d\250\314\275O\203\311=\321\307\222\275E\340\347=\343\326\201\275dq\276=\271\366\023>\247(\025=\301\330\023>\312D\203\275\027\240\242\275\260v\277\275\\Z\250<\353$\020>\\\235%=\254\365\340\275zo\223\274\267\337\246=\254\272\301=\034\347\207\274\003&Q\274\375\006\216\274\353z6=O\237\301=\202\212S\275X\312\007\275b\360\037\275\251\373\r>\\&\224\275\317=O<\355y\010>\022\340\237<-<\205\274\034.\366\274\377\242\033>\227\315Y=\215e\257<4\336\034\276\006\345\014>\375\267\324\275<\273\213\274\322\003 \276\205\002\357<?\377\342\275\326J\230=\307\267\014>\250\230x=%\267W\274q\222H;R\312/>t\2405>\266W3\275}A\220<g\254$\276\305+\274\274\225LQ<m\025\363=\356\345\224=^6\346\275C\\\214:C+\n\275\002\0265=\241\313@;\2163!=d\033\200=:s\245\273\213\332\"\274w\241\236\273\315c\013=\033dE;h\270z\275@\312\362;\202\376F9\306s>\2725/\221\273\202\267\235\273E\001\270<C\330\201\274J\310\026\272\023b\000;\351z$=\315\350\260\274]\026Z\274t\211%=\320\275\234;c\234W;\252\267:=)\037\200=\275\220M\275\345:\033=\013V\n\275\213\303\324<\233\327\357=\215\371\237=\363\275\361=\364\252\016>-\270\251\275\n\226\335\275\254\017\224<BN\232\274\376\371\250\274=\246\314:\341\r\306=*\313\374\275\352\210\340:\344\227~=L\320\242=$\360\215=\247\375\030\276\2532l\275\020\362\254\273\005H\037\276\366\321\250\274r\305\262\275\216\031\213\275\213n\362\275~\207)=\377\317\t\274\036\344\256\275^\255+\2750wI\2731\360\346=7\323%\274\357\034\206=\347\013\035>\3000\331=\005\300*\276R\002\020\276\215,r=\246\350\307=\027\347\202=cZ\007=\234\302\314\275n\325\207=~|i<_\305\200=\341\356\234\275\250Mp=\276)\251;\307\214Y\275\256M\345\274H\264\370\274\240V\250\275\223\357\207=4\216\333\275\002I8=\262\204\253<\257\241\264=\234\255~=\370H\024>\355\"\273;\266,*\276O\244\352=m\333Z=,\313 \276&\026\350=\2442\266\275\253\302\231\2753\0311\275\203\270\020=\017\'\t=\370\314\252\275~UG\275\341<3=\370O:=\013\220\310=At\r\276\3156\013>1N\311=6\232R\275-\274\340\274\240\265\n\276\235l\234=\276:\035>l\326\004=\273\342\352\275\020\222\227\275v\364\016\276)\274\362\274uU\205=J\317\333=cDG\275\272\0309\275\2578\331=n\321\375=q\320\364\275\3400\371\2741\226\301<\2777\206\275\244\221w\267Y\245\007\273\263\272\376<\301\2424;.\036Y=)\355:\274@p\3718l9\237;\324]v\2757\356\206\275\312\301\236\272q\374\201\273\333\231,<\013\221\014\273\004N\236;I\217\031:K0\3339s^n;\001z\n\272Wu\333:\360\030B9\302\344M=L\350\327<h\020\234;\004\222\020\273\3009\256<\336\\\270\272;\262::\364\220S;|\275\333<\325Z&>\342\313\370=\266MG>\262\254\320\274l\376e<\231n$>\212\034\271=\036\342\006> \352\\=\321\204\250=\000\006\231\275NX\010\276\037?e\2755\201\337=\362J<\274g\267\001>\tf\006>)o\334\274B\273^\275\t;\240\275\373\375\371\275o\013\323=\357|\007\275\217%\376\274\302\245\241=\326\\\331\275\274R\032\2765\014\t\276\345\216\016>@|\265\272*\'\304=\\N\000=\331\261i\274\270\246\303;\355\237d>\260\372\013\276E\360\301\274(#\013>\035D\237;\036\371\037=\003\357\202=C\304\035>\026\272N\275\313\303\231=P*\221\274E\221-\274\200\375\264=G\212\231=\201\231W\275{\027\006\276\031\333\361=\027\240\031<\353Ls=\020\243\376\274LZ\023\275jv\006\275G\227,\275\t\271B\275\367\366\343=\305\003_\273\314\007\000\276P\246\273=\333\370\314<\354\272\"\2751\3342\276\221\375\214=\273\216\035\275\245\025\024=\330Wi=\"&P\273\007%\202\275\333\226J\275\217\347\371\275l\023*\276\214\263\317\275)\300\253\275m\373Y=\0168\036=w.\253=!\177\236=\221\214K=\202@\231=\246L\216<LV\252=r\307u\275\225l\300=\260\307\331\275\375\375\375\275;\004\345\275\321gV\275\352\304s=Vo \276i]\227\275\030\332}=\253\313\201=\316V*\276\320\221\240\2740\246\320:t\3469\272<\314\353:\214J\314\272|(\001=\020hp\275\220\002\2119xy\224::\0131\275P\227\'8D\237F=\2660{;=\244j;x\245J\273\267IB:G\316\237<\270o\243;i6\347\273\251\312N;\305\250\014\272o\243\237\273\340\'A:ps\375\272\271\342\001=Aoc=\343)N:4EP\274\000f09\031\034\232:\240s^\2750\317e\272\210\227\014=\237\237\275<\005?I>\312;\276=Z\023\221\275\261\364*\275\207\033s=\316\351\022\275|C.\275\233t\244\275n\002I\274\306\372\375\275B\201\246=\035g\341\275;0\207\275\317H\226=.\223\223\275z\232\216\275\033\356!<\325\327\302=\241U\236\275\345P+=vQ\001\276\006qr\274N:\307\275\316\212R\272<+\230\275\317\r\217=\362\321\000>\024C\027>\326q\010\276\264\3662=;\212~\274\312\227&>\205\317J>/\021\022\275\243\352[\275#(\033>4\204\352\274\3000\006>\252\357\314=z\306t=\365F\202\275\304\016\000>ys =\351\333\r>\203\316>;{\244\332\275,\341\353\2759k.\275\357\247\354=\357\306\327=\027\276\360<\325\332\035>X\267\006\276\035\326\026\276\206R\316=\312!\010\274\237q\006\274\023\326\020\274\030e\037>\000K9>q\352\215\275^W(\275\361\032\266=\266t{<\201\274\366=Z\213\301\275\013\253\n>\353\000\376\274\352\220\006>\213{o\275s\211\032\276\030*\211\273\362~\224\272i\003\005>\026E\232\275\267\177\362\275^\010\256\274{\211\264<\350\351\023\276\\\200\032>\033m}\275R\232\003\276\371\302\371=\351\211\037>\266\\\367\272\225\261\">\030;\023\276\023|->\242\212\r\275\271\253\021\276b\316->\025%\227\275b\247\270=]\001\n\276\036\265K<v\200\021=\21287\275L\253j<\034\203\247\274\346c\010\275\352f\353:}\231\367:\246\366\234\273n\371\241\273*I\241;n\247\010=\221u\177\274N_N:B\313L\274\003\234\205\274%\264\014\273\201\372\232;!\030e\275\202>^\275\234\305\014;\270\314\337\267\332\n\214\272\010\256]\275 \314(<\266\006\257<\234\'\037\273\221s\324<\227\247\302<\025}t=\262\331c<\000\000\224\273w\302\243=Y\225\000>\010\2729=\337\252t=\220<\367\275\327q\206=\010\225y;v\246\344=\240\245)\275\024 \245<V\3663=\214\255 >S\361\333=\262\353\n>\361Ot\275\034]\353\275\276\001G\275Q\262\017>\351\3340>LI\354\275\255)\346\275x\347\214=4\351\036>\253k\260=r\322\324=O\002\362=(\367\324\275\353\307\203\275\272\335\337\275:\376\241\275\263\000e=\337|\272\275H\027\332==\2601>\211\026\354:>\211\213\275y\371\233=\233\370U<Op\260\274\255\262,\273\352$_<*\324\334\275\026\321\212=\233l\330=-p\360=\230\237\021>J\264\204\274)\206i\275yI\264=+\271\023\275^s{=\3410\032=i\313\252\274k5\310\275\274\013\213\275e\323\256=!\255\256\275\315!\235<\202\006\007\276\301\025\223\273\303\336\000\276@\336#>\037\262\321;\365j+\276\270\026\256=gt\033\276WL*\276-\330t=\277\333\222=\037_\302\275\016\211?\275\033\255\034\276\362\216\301\275\3601\202<\302\001n<\023\nB=\222\260\277=E\307]=\256\\T\275\250\222\376\275h\364\370=Zy\360\275*@\t>\346\202\327=\025X\315\275FM&\274\307\305\032\275\233\233\002>\326n0\272\213b\326\273\025\362a<v/\016\274\326@\003>h\321\257\275\263p\275=\262\250\227=\343#\023=\316Af9\375\227\357\2708}l<I\350;\273\355\310\322\272\322\303\2359\025\241\265;\200H\200;\200\026E<E\351\222\272\n\276\'=\351\342\200\275\246A;=\340\016\257\267C\314\034\275\260>\250\274\232\312Q<|\257_\275\330\351\2249\271n\202\275AZ\322\274\351\326\243\273\\\337\226\273\3115\341\273L\312\315:\356\317\013\273\315u\246:FZ\203\272\033\220\261\272\365\341O9 (\336;\331P\372\275A\317\230=\271\345\204\275I\335\332=\277+\006\276\242\376\276\274KDv=\207,\t=\337P\372=\247\311\240=\033\0071\275\213SI\275\367#K=\272\037\231<n\266\254=\251@\001\275\">e:\371\256\333=\n\350\032\275\261\243\033\276\241\002\013\276S\315\226\275\211f1\275\300\344\336\275D\025\333=C\265$\276\314\346\036>\244\210\310\274v>h\2742&\244<I\267\035><\222\n\276\235A\323:G\343\n\274\322_B<\335,f\275\\g\032\276\334\324%>\302\271\362=\350\\\330<z\243\307=\222z\332=\004$\235\275\020\021\031\275\257\030\277=\206^\232=\020\363(=@\305d\275-\177\017>z?\006<$W\363\275\200\347\200\273v\330-=[\031\265<zs\271\275UD/\275\274H\307=wj\020<\347\177\222\275\225\245\354;JV-\276\241\322\210=O\347\020>\24254<\354\373G\276U\337V=\377}\037\276\353\220\304=\035\222\353<\331\220/=a\207E\275\357\226\306\275lF\315=\316\0254\276\\\327\035\275~\236\213;\317(\244\275\023~\n\276\256\203\027\276\243:\316\274\270\275!>dC\033=\006\315\277<\213k\031>\340t\021>d3\211\275}f\010>\005d\277=\025\214\204=\203Z\346=\034\317\014\276$\247\002\275L\031\367\275\304\225\r=\364x\252=\237\353R=N\232\3459#\'9=M\216\213;\336\014\206\273wF\202=\220\356\240;\343\363;\275Z\272\023\271\241\321\245\274\273\365\r=\275\326p\275\263@\t;\227\324<\275\316\275v\272\266\302\235\274\000\304V\274\244\342\340\274\024\303\321\272\007s\373\274\177\254j\275\206q\211\274*X\232\273\306\234\010=6\024Q\273-U\315<\333\266\212:\220\211F:>\232\347\273\231\355\226\273uO\277\273\323\022\010\273\207\273\265<\005\253\311=\277J2>\013\002\213\275\035\004.\275\230h\365\275\355\030!>\313\244\001>\343_\005>\342\027\264\275\360=\316=\262\337\301=a\232\272\275\342 \327=\3550\243<!\376\316\275,V\223<~\322\234\275N\302\t\276M\210\204\275\315/\232\274\245\347\003>+\346\023>\305\317\226\275\316\205>=pT\325\275\377q\353\275\\A\243\275\202r\274\275s\033!\275\235\0314>\360\277\372\274;\035g=i\334\030>\234\311\323=\026\374\274<q\303\226\273\347Q <*5*=c\354\031=\031vq\275\'3\372\275w\231\006>>\257E<\035 0>\210;\247\275\237$\324=\217\354\013>\375>\024>\2057&>\351h\003>\232\001F=\007h{=M\352\177\275\0371a\275X\203\367<K\035\361<\306N\321=B%\021>\036\\\220=x\206\320\274!I\374\275\352/\357=e\013\213=\034\264\363\275\"\035\007=\027\371\377=+7\027\276\302\203\"\275@\231}=Pw\002<\376\255B=\366\346\324:\236`\032>\021\224\t\275\r\357\022=v\336/>\241\223\r=TK\223=N?R<\311\020\254\275\255\203\020\276\213*\352\275Q\013\006\276\270r\215=\225,=\276\321\361\033=\374\275\357\275.\346H>\217?\261=\251\312\212<\000^\001\276\310\005C\276\371),>\325\371\252\275:G\253\274X\265\330\275\001\343\362;\241\262\336;\306\323\243\273\326BP\275\r\323m;\316\036\220:s\367\313\274@N\221<\022\037#\273\202\310\372:9\006/\275*\2165=<\223\2558I\024\237\273s\304\243\274R\225\346</Ga\270\245\246\200\275\311;\201\275\240\200\240\273hI\234\272\267\0068;8H4\275\241\254);\270\177\302;\027S\020=\301\246\230\272-3\n=y\275r\275\320h\013;hxy;\215\033\206\2743\323\300\275\027\253\020>\274\000\002=\363\2030\275\207\324#\275\246\344\342\274\232T\013\276S\0032>\362\251v\273<u\264\275\301\261f\275\303]\310\275\000}\034<\364\006\204\275\213^\333\275\202\250\035\2766\210\270\274$\'N\275\366r\315\273\251Z5\276\203H\365\275\004\254\244=\342\037\244=\250\236\002\273/\346\207\275I\225\205\273\272\367P<0\020+\276\3263\265=\232M\347=[\3546>`\233#\276\323\313\370;e\322\347=\246<\033\273\352\234=<\315\005\363\272(\030\265<3\300f=+c8=\347UJ\275\354\276x=\264+\220<S@\232;c\363\356<Z\3750\275\271b\263\274\005r\001\275\033\340\230<\214\2353:\230\253}=\266\312)\273E\326%\274\2500\005;\222#\301\273\332\324\256:\214\265z;\304\037\2549\332\251\262\275\255\226\326:%\310,\275K0?=+\266\222<\232h\'=\273zH\274\304\273\254\275\301\266\337\275\025l\341\274r\033|<\nh\020<d*\363\274\206\224\"\276Kx\212=\035\300,\276\333\275,<\375\003\002\274\016\033\202\275?J\374</\351\315<\t4$\275K8\177=v\202\264\272*\217\226;5\331\022\276\327_E\274\243\334T=b\030\260\273zrQ:\305\344=\275\372\255\030=\202n-<G\014\232:2R\263=5\314~\275\373\327_<t\024\204\275\023\367\207\273\026\3613=\223\233\024\274*\324\216\271\272\356\327;HG[;v^n=\031T\006=V!r\272`\321E=\347$\267\272\304\353y\275\261\222\225<mc\243;rI\342\271\354\025|;\352\203[;r\200\003<(b\347\273\321\331\234;W\2216\2755\202\243\273a\327L\275\235\336\026\275\244l@:\354\301S\273\302\315\";\366g\243\273\201#A\273=\212w\273^\316\261;\036\323j\273Ir\357\273\204\311Q=*\004\216\275\020\313\306;w\242t\275\340\034\236<\252\016-\275;4\004\274w\000\373\275<\246&\275\006\322\251\273\370$\216=V\320\376\273B\314\265<\223>\016\275\355\216\250\275\255\215d\275Cat<\244>4=\366#z=\364\326\215=\304\001\351<.\274=\273\253\314E\275$Z\243\274\030]{<~\275\035=\004\234\026\275\215\031\207\275$\275-<\242:x=P~m=\202\201]\275\302\353\357;\033%\360\274S\333\t=\3038\326<\241\034\003>\327M\020\276\263\245\366=n\266#\276\250\265\211\275Jg\224\274\317\246\350<2\3264\275C\021\331\275jH\352\275c\361.>\031a\213\2752\316\375\275\313\271\372\275\364\361\037\276\017\347c\275#\301\016>\313\365\340=\031\222\373\275\000\264\010>`\037\233=\243d\004\276w)\245=\261\201\256\273\027e\210;\250T\251=\261q\304=\275\266f=D3T>a\030X=\027\037\362\274)m\373=\014\222\013>I%}\275\347\263:\276\353,\037\276\271)\303=\210\351\231\275\350^\275\275\005\204)>> \225\275\017\204\032>{\366l<\246\222m\275=\376\341<)\203E\275Ef\036\276\205\2336:v\327[\275\021@\026\275\004\032\032<\226b\337\275f\236W\275\255\276c=\252V\214=\343Sl\275 P\356\275\331\302&>\004\201\366\275[\337\027;\267(\222\272<\274\241\274\367H\224\270\027\232\233; \323\2449l_\373:\320g\3568|\274\207\272\212\212\037\275\231H{\273\372\0365:\304L\305:\376\026\250\274\217\204o\275l\027\372;\330\007\375:+\245\210\272\310\256\322:a\014\231;\024MC:\346+ =\021X\2109\264\005F\273\337\333F\273\023\333M\275\262\275`=\032\"\203;\333\256\203;_\373\2569i\205V=B7\373\274\357\007\222\275w\025\204\275\246: \275A\264\325;\334<W\275\212\002h\274\266\262]\274\220\217\377:]\315\367=\323\014\375=.p\214=\224\336\023>KT\016=\024(\373=U\374\257\275T\355\260=\346\307\205\275\246\266&=\352\2516>#\377#<_\024\327\2757\246\026\275\007\n\'>n\312\366=%Z\252\275\331\365m\275w@\356=\202\033%=y\231\353\275\352\303M>&u\272<%\215\023>\210\251\265;\315\302\344\275\335f\307==\254I\2751\341n\275CA\205=\200\273\264\275G\206\204=\242\025\234=\247\354\331=\247\020\333\273\253\023\365\275\350\263\322<fM\226\275`\'\225<\306%(>\025\212\017\275\251\210\260=\271\215D=\022\036\221<\224\021\236\275\316)b\275vv\006=\212\023\265\275#\312\272<\277*\252<\346\205\010=\206\337Y\275\177[\223\274\245\316\262\274\3427A<:\252\316\275\002\275\276\275,Cj>\263dd>\223\220\257=_.^\275=V\265\275ogw\275h\357)\276\325\304\336\275\031p\302;\361\t\256=X@\335=\350\3637\275\264\274\374\275dL\202=\023\\T\275A\305\306=\332w\373=6FI\276\314d\217=\203\316\262<<\270\355\274\002Q\000=\032\324\300=\207\014Q>\310\273\263<\231\213\317\275x\353\231\275\315I\314\275A\305.<V\333Y\276W\004\233=h5\2478M*3\273N\332{\275\200x\302\271w\337\000\274I;n\273N\251\256\274\216\024@\275\261\233\351<^<\363\271\313\007\234;\265\260+\272 9\247;\271\220Y=\235\310`;\032\360p\275\266Q\203\272\205\370\274<)\n\002\275\370P\243;\006\324J<`iz\270\034\371o=\017e\367\274\273\321\276\274\324\23098\250\2208\273\322\303\274:\353_\004\275\241\352\"=\301P\376\272\261\021#\275\313t\013\276\006R\333\274\366.\203<\202\001\236\274:z8\275\210k\222=l\3277=Vu\023\275W\344\275\275\226\234\234=\353\275\030=0\272\"=6\207\202\275\335(7\276_\330\205\275\203\230\002>f\300\013\274`\222\221=\311\302w=\010H\213;\017\2456=v\264\020\276]\347\317=}\ng;\037\300\014>\303\351J=\215}\326;\302\"\004\275\300\202r;\254\021L<ab\230\274\3759\257\274U\374\347\273dG\324\274\336_\010>\230\216\002\276\272\006\006>\272n\304\274\261\341\212\275{~\305\273hf\271<\256\374\'>\347\035T\275\202\275\317=~\306\351\275\0040\214=\366\301\331<U6F\275\306\264\007>Z\305\351=\346\322\306\275\332\001\246\275\027{e\275\223GV;\200\304\352\275n]8\276\304#\262\275\372\212\236\2758\245\000<\225\263\001\273\203C\023\276P\361\014;\007\232\211=\361~\342\275\220\006\247=\016\326\037\276q\372\372=\327\227\300<8\330\215<\365N\325\275`g>>\347\367\007\2761j\264\275\331\306\372=\357\233\200=-V\340=\361\274\006=#\317\377\273\334\205\320<f\243\002\2767 \266\275\355bF\275\370\251\026>\206\001\\=}J\023\276f\224\221\275\303\220\325\275\244>\217\274Tw\031>\227u\r\276xc\217<\306P8\276\2174g\275\246\030\364=P\010\030>\3439\313=\334>\217\273\256\003\215\273\357\260\213\274\264\207\t<\237B\237;\n\2506\275\326\2601\275d\224!;\3430\220<$x\245<Z\300\272\274\240\245\221\273\300G\336: \203\322\266\237\2631=\033\213\r= \225\2349\214\213(\273\265\345\000\273\354\262\006\275\336\215\365;AM\204=\326\021\223:P\367\203\274\300\217~\273\371\270K\275\301\3527\272\306`9;@?\204\273\257\264r\275\343`1=\025\3760=\264\004\036>\201\261.<H\326\340<\255\002\311\275\030\373Z\274\353\177d\275\002\235\247\274\212\350V:\344C\340\274\3317\032>\335\263\270=<\245F=\357\367\212;m\217)\2769\367\207\275;\350\001\276\311\024\360=_\246\250=\273\201\334\275Dv\264\275~\002\317\275\230\251[=u\334\227\275&\315\226=p\352\312\275\250\260\366=X\026\032\276\230\373\177\275\241\344\325=\213YS=M\263\033>\323\354\272=\243\252(9\264q\225\273E\334\356\272\270\010\005=U\377+\273@\236\013;@\251\250<\354\000u9+Y\370\271f\364u\273\336\266\221\273\357\300\332\273\244\311\223<\210(\242;\224b:=l\305h\272\224\302o\275\r\022\204\275?\272\n\273\334L\000\272\356\325\225\273\242\271\230<F\210z\275:\017)\271Ro\357\273\377\371\311\272\253\005\233;8+\207\272\353\255n\275H\206\234<\242\3456\274\003\310\002:\361N\203=\375\260\022:\356\326\247\274x\255\204\267f$\200\271h\345\306<\371+\236\273\002\022}\275\225\033\370:\027\004g\275WZ\343<\221\255\346<4\2414\274\342\226K:k\240\017\274l3\215;\261M\034=\200iX\2759n\260:\202B\3159\255Q\356:kJ\344\273\345]k\2736\004c<\371\331\327\272,s\243;\254\225\2039\021\274\341\272r\225\233;\331\300\"=\016\227 =+\343\330:P\035\321\267\232G\224\274\203\230|<b$\213:W\261-=\365m\030=\310\201V\273\325\344\326<\270\213\240;6\223{\271\343e\242:m\357\234:\200\031Q;\217C\007;9\311\332:\212\233\315\274\356\311@<Y\204\025:y\312\243\273SVM=\320\372\205=?m\223\273F|\233;!\275\276\274\330Q\374<\244Q\272\272\030\214P\2723\343\275\271\315\364\313<\276\277\004<\206~|:=\275 =\036G\361\272:\215\210\272^\243u:#X\023=Z\330B\272\356\360w:\247Wc=Xw\004\273\311\305\007\273~\241\317:\250\375\371<\033\276\224\272}x\305\272\351#\313;d\376\353\274\002\371,\275\310|t=\320B\2668\177%@<\230\263/=\315No\2755\207\035;\367\360\255<_\350.\275\333\021m\275\336\226,\273\311\323,=\242MG\275\022\267\r\273\232\302\375\272\377\371\023<$\377\233\272`5\363\274\206qj=(\346\371\274u\005\032=\236\242\212;\364<\223\273\260@]\271\375\004\360<T\376\2569\304\354\3629\257Q\200;\373\037f=\376\314\026<\254S\375\271&\341\000\272\215{\230<\232rj\275>\r\361\2712\301}=\r\333r=~9\032\273j\217\200\275\301\254\271\274\027,\232:\370@\376;>c\361<\303\030R\273\313\347\004\273\274oa<\2214\215\272\262:&;\374|a\271\nhx\275\263\371V\275\tQ\004\272M\026\327:\026\200m\272n\222\253:\n,5\275\217\270\350\274\240\233@\272\344\253?8&\252\027<\352\332\220<\233\3411\275\230\367\233:\326.\266<\344\265\3319\322q\020\272|\017\341\272>R\n;\272\357@=c\005{\272\363\2136\274\274U\033\273\244\\[=z\306\'\275\215\027\221\272Q<\234:3\014\204<^\362\264;]\223\216\274\337a\223;i\357~\272/\327t\273\325\217B\272?\2474:\036\300\243\273\367\335\227;/\r\216\271S\241j\274\327\010*=\302\233\205\275K\233-\275\303\334p:\"\357\371:x3\004;\256P%=`\n\022\271\004\270\254<\214q\376\273\300\275\236<\360\024\2639\002\007z;\002\013\307<%$\212;\372\274\206;7\300\303:\3748\234:\274@\232;\323\035D;=)\361\271J\221i=\265o\\=z\'\025\274\363\'\301<W\373:=\302\350\234\273j+\240;\013>f=\372a\370:\"{\222\270+\232\037\273\215j\235\274\261\313\007\273\230\t\351\274\312\264\2138\366S\211\271\365\010\234\272:f9=\337\236F;!;\020\273x2,<\261]\232\273\333\020\254:\231\377R=\250c\013=\352 4\275\211\221z=v\361=\274\261\374\201\270E\025\212:\25712\275,\304\362\273\263\203[=1\214s;$\243\206\273\266\031\204<\\\336\202=\357Ww<g\252\243;\344\252)\275y$8\273~\304\211;\272\350\227<+V;<\262E\203=8i\205;\211\327\241\273\314\003%:\240\t\236\273<\236\304:\263\364n<\250\\\020\273\362\032\231\272\343\373\354\274\246\326\243\273\327\261\205=\3328\206;6\347 \275\301\262h;\237\007\006=S\033\243\273\270\265\201\275m\030h\275\320`\033\273\345E;:>\366\264<r\265\213:\343\"\3668F\022m=\321<\010;\230\013q:\225 V:\225\\\243\273\260L\016\271\247v\205<\252\240\241\274\r\327\002\273\205\002\240;F\351T;6\237\016=\257\367\034\272\2725`=\242\217\233;&\"\031\273\033$J\275\'\251W\275M\205\255:\277\017m\272\241\006\014;\026Q\010;1:+<\004F\"=,\333\234<\3358\006;\377D3=|5\374;\231y\320\273f\206\010\273\231P\t<\226\256y\273\370x\357\274KJ#=b\273\232<@&\031:\242\276u\275\376y\221\273jg\225\272\240\202\302\274J\250\014<\374:\222\270\332\375F\275X4\244\271\276L\242;U\331\243\273V\337|<\366\225[;\331\017e=v\200\221\273G\300\246\2746\005\234:P\235\326<r7\267:\344\377w=\312\245\007\2752\"E;i\t\236;\031\203)<\r\247E<^\242J=\344C\t9\177\\g\273\311\3352<m\3118\272f\\C=\272\227\310<\320\235\3039\274\035D<\226H\341<\213\242[=\306;\327\272N\217?=\2216\013\275\217\215Z;\244\325,\273W\354\312:I\367w\275\260\273\3708\313\267(9\263\337\014<$~V=&\367\t<\021zi=\020\357i\275\220r1\270\'\254(=5\0200\2756\342\000\272\022)\205\275\354\246e\273$\330\226\274\037\2267=\255|\243;T\352\367<\303a\214\273\376\314z\274H\037h\275\320^\2579\313\223\222;\206\207\006\275\001\t\260:\270U\3209\310\204[:B[\214;\214\227\234\272\241\006@:x3\3009\207\250\321\274\000\340\025:=)\031\272\344r\252<\037\237\237;z\306\177=\240>\211\272\031\362\346;\351\301\227\272\242\375-;\003\365h\275\336\276\237;\226*\026=\274:\014;\300RR6\203\251\241;\311\341D\275\031l\233\2725cQ<\234\234\'\275\351SB\275!\311\010\274\026E\260\272,\030[\2744!\201\275\317\345\243\2739/\3739.\314\007\273\264\304r\273\224\375\367<\315\263\213;\006\023\222\273<.\222;B\220e=\216\212f=\335\301\350<\355\215G;~[\204\273\312\340><Q\231\270\272\356\256\243;3\335\033\273\224\203f9\307\375_=\025\257\232\272\031\003\230<\364P)9\222\340\001\272\274\331R\275\214*\024;\t\"\252\274S\360\340\274,\002p<\216\256:\274Tu\367:\324\272B\275.\030\023\270\220\300\301\273B9u=\364\'\024;d\255\2119\234\005q\273\250\310\311;\321{\243\273c\352\000=\346\002g=\227y0\272X\374T\270\333`;\272\206\322c=\313\272\203\2714\257-\271xR\007\273F\227\200:O\030\227:(\032\376\272\300Y\3637\254xW\274\317\3160=\276\323\327\272\r\326_:\325\3634\271\266fN8\014\314\220;\375+\227;\205x\230:\024\314\010\273:Y\014\275\2207\223\273\331\026\014\273)\017\205\274\232\265\253;\207q\017=\272\270d=\241\352\347<i\310\024\273\323\314\236\272\234\200r\275M\003\220\274\267\345\t\275\211\354c\275/ke\275\272Tp=:\002\033=\243\234\003\271OW\233;\324|\202;$\214\226;\376\352}\275\314\370\0329/\363n\273\207\275\023\272\270\320\001\273\324IQ\2741\356\313\274\2224\023=\316\262\032\273\025|\233:j\033,9D\2547\273\254]\216;y\277\016\275\201\357\017\272y\2642\275\220\330\320\272\315\273\222;\270\343f\273x\322\204\275~h0;\264\022\345\2730\312\234\271On\025<[\262\233<\320\007O=\221\367\016=\0020#\272\225#\342\272\370\341\205<\216\263\241\273\342\206\272<\031\203j\274\004\336\034\275,\221\214\274\026\023\303\272(-\255\274E\020H;\010s\201\275\312_h\271\303\310\215\274\\\\\324\267L\270\361\274\033\031\363<\265Y\034={\223\245<\nD\350<\201\232Y=/J\020<2\355 :Qo\246\274\000>\3659\333\242\016\275\002\275e<\364~\013=\031\364;=\026\301\2169\227_M;\214\0212\275\337rD=w\306\336\272\363N\342\271\246I5=~\3609\272\266&\234\272\331V`\273\210#\223\273p\254\033\270\255\311\203<\255p\360\272pK\320\274\334z;=v\253\\;P\016\220\270\305\351\303\273\340}=\275AHu=f\310r9@\235d\274R.\270\272\013\300\214\272$\267\203\274\274\202\267\270\3220\220\272\256\n\023:\273[q\273\010\357Z\272B\255O==Oh=\334\233\271\274\230)\2448n\r\234\273!5?\272\255\246\001:\356#;=\250\34429\371\304\001;\236\037\3339\'\353\220\273\326\347\243;P\035\275<\252\000+\275C\3267:tzb<l\014o\275wU\004:\3757\211;\264+\331<G\345\002\275\262\357\274;\370|\254\272\351\022Z\272\204\006\210\274\325\241\360;\001\255~\273\362\204\026\274Li\271\274\337i\2459$\217&<\226nj=\354\022\211\272e\222&\273-\367\032=\264\371D;\317\322\332\271\214\320/=\377Y~=\376\315\226\273\037\2433<\335<p\274S\2151\273\2075^=\214\355\035<dd?=K \314\274\000\3510;\245l\n\273\217\216\t=Qk\003\272\006\301\344:\373\221\001:\374\033\231;\246\205\356\272\341\312\347\274\307\302\231;n\300\3648d\335h:\024P\004=\236\201\301\271S\026\013;\363\327\252\272\205\217\022\273\230\261G\275\332$R\275\375\204V=8r\2509}\310u\273U\271\362<\201\275\372\271\210D\327\272\000\350\243;&\002>\274\327N\2178]J\031=\030\217h\273A\346\3119\320\2758\275\316\003\376\271\332\023\241;\356\014\277\271\312\3407=\3304\300<:\216\302<\321\tc=\315\321,\2729r\351<\247\014m\275\264\302\247:\345\2266=3h\025=\314\t\020\275uA\213:\220\003\256<\022~\263<\351\307a\275\374\223\215:2\371z9\273[\207\273\366O=\272\272\351\026=\322\327);d=\313<\316\r\262\270\301\346\243\273\252.`9\216\236\245\274\242\266P=\340L@\273\246b\240<n\326\250<\r\250\013;\322J/\274\242 \204\273\021\314\021\275/6L\274\277$t\274\330\200v\274K1\307\271E\215\235:\025\247\237\273o\312k<\305-C;\250\213\265\271\365l\347\272\014wx\275R\031\237;\246C\263\272h2\367\274\013\033n\273\ro\213\272\037+\242\2737\311\013;\370\322\036\270\361*\036\275\267\004\222\273\276H=\275\010\301\224:6\223\251\272\257\250\237;gY\217;\327a\002\275\277\357\206<\232\216\317<\205J\323\273\023X\233\273\346\252\316\271%\021\233;\360\030\250\272\370:v\275\260+\254\274T\205\234;\224\267\231\273\036l\376<\356\230{=#\373k\27325;<\343\366l\274\346\331]\274D\024T\274\366\010\2749\206\342|\270_\177\240<\364r\307:\2709\016\271vs!=\270g\322\272~K\221\273\244~|\275$\036\024\275\274T\333\271\310W\3608\3200\246<@\001\237\273\017\220\007\275X\215\306:\201\274Y=8i%\272?`$9I\221`\2730\335\270<=\243J\275\365\3603=\344\314\033\271(\375\236;\360\242\351\2745\340\026\271\260\251/==\371\211\2740\036\021\275t\254\220\272c\366c;\014\215\206\2728\233\r\275Z\330\226\273T\226\243\273\266\3137\272G\212\035:\032\203T9\316\346k\273\260m\215;., :)\205u\275\261ne<`\201\013:\312\027N\273t\350\252\270\3565J=\357\001\205\275>F\t:j\020\341<_`\347<d\016\000\273c\257\335:A\270K\272tN\241\274;\211\241;\205\032\024\275(\256\014\274\005\271\241;;\250\214;k\212\000=\030\002n\275P1W\271%3;;\266I(<\345\330\203=!\020\010=~Zp\275\036\037\3559@G@\274\374\030\226\274\357^\337\274\005\376\010;Xn\\\273K\273]\273\001^\217<\375\352\235\273\215\236\363\274\357.\r;\322$\013\271H(h\273\374\n\014=\320\242\315\271\341\215\214:\344 \230\272\260O\033\270\354\261\322\274zM\241\274)B\233<\2009\2575\031\275\222\274\346\262\376\2717_\243;\275yu\273k\365G\272\270x\202\274|@\177:\013\222\035;\350\352G\274xO\226<\233\317\311\273\216\236\211:#M\357\274x\377[\275\200\216\306<\212\007\330\272%^\233:\346\322W=\250\233\223<\246\346U\2753w\204\274\256\201\256<r\254\373:$\227@\275\340{\006=\006\345\205=lt\035\274\324L\226\273T\025}\275\332\361\325:\376\311u=\327\263:=\350\263\302<\231\234h\273I\342\260\273\252\275\004\273\224\312I\271\327:\007\273J\271\226<\253-\236\274`\351\206:?\252D\275\254++\275\220@}:=l7\272d\255\2359\031\374\241\273\307j\314\273\253\026\204=\234\2621\272\000\374\334\272\275\342t:r;\255\274\331\221\2359#6\177\273\224\255\203\273\212\000\210\273\024r#=\355\016\367\274\037\272\350\272%\270\3168vF\245\272!\007W\274\233\323$=\017\236\r=\023r=\275\1778\201\275mX\"\273\210\337o<\022\223|<s\365\020:\254\'\2619\221\315\2548\032~}\275\301\327C=({\251\270Z\205\273\272p\212\'\274\213n~=}\030\t\273\270\224\2427\320\266m<\366\350\230\273XJ\237\272l\266\r;\346\234\241\273\3016\211\273h\316s=\276\221\000\275a\r\301<\346\r\362<x\242\2238\327\347\243\273 UN<!\227\2329\"\002f;\273]C\275\203\256\026=\230\305\217\267\267\307\002;n\363\275\271\343\2304:C\365\375<\t\364%\275\341\014\025=/\301\324:\334\245%=\313\223\233;1l\2219h\206\031:t:\221\273f\'\023\273\307/|\273\312u\202\2730\314B;\222\205!\271\013\203\r\273\366\353\340\270\326\225C:\252\314c\272\220\347\010;\014G\305:B\2634=O\246\231:+O\337\272H\036\323:\225\246K=\265_\227\272\357Ry\273\377hF<\370\344\':\224m\260;\312\225\334\272\356q\200=\021\222\273\274\333y\211\273\304\245\001\273T\023\240\273\t\323O9\335\201\037<\031yf<\355\243}\275\313\224=\275\233\215#:\006\300\014\273\273\264\027\275\316R\023=M\366S\273\373/\2059F+7\272V\311\244<\200p$\273v\032\3229\236\256A\272\317-\354\274\223\001\354\270\352\243J;\016`><\014\222\221\270t\247\375\272\306\365\212:\221\010\313\272\201\025\210;d\345\t;d3;\274h\032+<\317\tb;x\007\227\273\305\010\207=\002wZ:\r\010C=\033\312(\274\300\252F\273\242\327\322<\255\\\242\273S\347\243;\032|z\273\224\223>\275\272\351\204:\220\371\000=-eW\275\324.\237\273^\305\227;\022\014\330\273R\352!=YJ\001=\230\303T:Y\240\234\272\256\210>:\275\275\204=<\002?\272\t\013g=\207\224j=;\\*:\265\340\355\273\326\313\327:\263\367x\272\202>\203=\036\357D\273c\205h\274\227\230\r\275v\2446\272\240}!<\242\231\026\273O8\261\270\t\010\247<\212\373]=*\312\016=\301\237\2378\200\317Q\273\013B/;\307P\226\274\306\352\207;\256\215\021\274)\030K\275o\224K=L\003j:<\354\243<\014\275\224:\376\344\230\273\224\320e\273\216\341\327:\247G\032=w\323\214\271\313\250\003;\243\206\220\272\301\003V;[>q=\272\271\347:$\244\t\272\004A-\275\212e\325\272sO+\274)J\236\273IGu\275\200\205\215;\003VG\273OJN\275\313\354\021=\242\235;=\031\177\010\274pn\205<*bC\272\213\331s\275\005\260+\273\317\027\210;4?\3078\203\270y=\\g\216\274\224\302\243\273\302\255\357\274\320\213\241\273\002\231C\271a\252\t\273\215J\004\274Ar\000<\332\205\304<i\267\364\274\276\314(9\002P#\275\213\376\002=\273\033\240;\024}\264\272\226p\210;i\340H=\272bf=(\221K\275\037\331\033\275\234\237\244\274\364\255p=CI\217\274\300\317\343:\340\266\242\273\'\014\2048\250f\031\271C\nQ\274\375iZ\272\254\372\257:\017\251\332:\252cJ\273\026\257\241;\240Y\213;o\23099U\330\315:r\206\241\273y\247\020\275\265\310\016\275\017\250`:\312 \224\273\253$\251:\360\032H\271\261\244\332\274\000C\236;\344\333\002\274\327\262\001=f:\027\272\016\274\020=X\273#\274\262t\023\275\371\357\013\273u\212\370\272D\223\r\273S\203p:\255x\315\274_\tu\275B\273a\273\177f[=\356\246#=\220t=\270n\311:\273l|\3139\276\241@<g\005$\273}\357\202;\010\022A\274\351\021\355\274\222y\316<@\032\210;\223ya<\260E\204\273\356\2116\272\316\331j\275dVq=J\327=\275\023M\220< 9\241\272\223jW\27500\336;\347\361a\274ni,9\000\256*\273\000n\211\266\3522\317\272\343\017=\273\312\234\276\272\245\0301:\357\265\016=\014\361\303\271\266\316\034\275\035\304!=\324\026\351<\020\013\0349=Z\022<9\177\205=\262\240\n=?\322m=\355[T\271<\216\032\271\032x\253\273\365%\r=\310(\037\275\r\331\214;\022k\247\270\211\367Z=\240\275\251<6=\310:\374W\'\273\224>\t;\037\t?;\250\004\34584d\230:\"\210\240\272\253qo;\256r\207\273\343\243\371;m\350o=\274!\032=\017\235\031=:\253\235\273\016s\'\275&4\307\274\353\2770=\026\006\014;0\276\202\273\320\021\315<\212\224a;_\307\206\273\256\356\247\272\035\003C=\006\200\017;\324\355k\275\324eA\275\242u<\2721\357j\272\227\\D=\330\270^=}\246\251<B\334\\;u/\235\273\213G\3759\242\001!;\326,\206=\242\r\202\275\241\273H\273t\022\006;Ov\214\274U\024e\275\n\261\245\272>\036\217\273\225\241!\2713\326\206\275h\3349<\333\205\303\273b[\n\274\322\254?=\233+\361\274\213\365\200:A5\204:\222\313\365:ZCT\273\246\203-\274\013\334\003:k\322\371:\033\231\'9\365%\207\275\034\330w:\225\333\243;\232\320\014;\362r(;\373:\204\275\241\265\000=\312\276\202\275:M\230\273\204\377\242;M\363f=\335\253L\274\251V\216\274L\371\230:\261\014M;$\346\243\273\2479\257<E\205\254\272\330\246\3617\354x\203\275^1F;\276\2430\274\214\200S:\264\201\365:QDj\274\317\003\323</\001\r;\001g\251\274dJM\271\374\023,\273#w\026=\311\022\226:\014;z;\244\013?\275\222Z\241\273T\336c\273K\311\244\272\274it\275rU\326\271\350 \220\272\212\377\264;\\S#\275\310\376$\275\255\275\003\273\370\362\342\270$@\375\2746\373\200\272&\322\3569\n\336\260\271}\374\225\2738\257\r\273\340\203\027:\037\006\242;@\345\'=\266\272\255\274Py\026:L\017!=\360\320\375\271\276\346(\275\020OW\267\013\231\242\274\342\004\220<\007\214\304<L\005\026;\234\236|8\236I\243;\363L*\272x\235\3568-\303\377\273\206\326\206\271\320gO8+W\245:(\370\004<X\025h\270\363\351\214\2722,S;:P\014\273\327\273>9\325\005\r\273\350u\214<\365\326b\275n\354-\272\263 \250\274=\263[;\262\243C;\344m\331:\367g\001=4\366Q\275r\255\247\272\211\273\007;\010\254l\275_\376\n\272Q)\350<\322\006\207<n\330\007<9\022\007=w\256\':%\343>;\310s\202\273H\037\242\274\202\0029\275\266\"\001=_@7\272\244\225\276<\246Y\222;\273o>:\220\020?:\227\307\305\272\313|\232\274@\313\2177\034t\203\274N\r-\275\330\221e=D\t\"=\006\n\344:wn\242\273\372M\306:@\000\0319*\003\221\271\346\226\303\274S%~\275&\337\223;\273\202\2439\332\250\271<fn\352\272\254m\344\274\r\315g<>g\273<$*V<\263\373F\275L7\365\274\250\371\':\033\265\033=\2411\240\273@#\2717\275\031\262\272Nh\204\274\361\207\372;\000\315\025\272\0344\231:\370\361\002=l\350+\275\220=\0168\"\261p\275\035+\017\275\243cD:u\031\234\273\264\313\310\272\334e\206=\333=x\272\266\240\370\274\375\342r\2746F\034\275\257B6\275\376\027\372\270\351`&=\227\274\323<\027q)\273\027W\017:+e2\275\356\020\227\273\224X\210;\315\213\023\275\236@\t\274\220\227\3138}\336\202=|\231\007\274:\226\234:\204U[\275\343\305E\273##\311\274\345zu:\342\014\276:.B\023\272\274\010Y:9U\376\271\357oR\275\232\360\004\273&:\237\271+\302\326:\233\274H;G\351Q=\256\355\232;\016\352,\271\210\213]9\021\320\211\273\300&\201\275,d\212;P@\371<\377\267\033\274\222\353+;\213\267\026\275\017\331\r\275\355\026\202\272\332\267\213\273\006\300&\275\304\364$:\266\377G=\200\345\233\273\003\310\004\275F\303\363\272\267\006\003:+.5=H9M\275\231\023_=\317\324^=\322e+<A\325\021\275\317~B=\001z1\275-J>=\325/]\272\034\373\265<\203#\262;\264\030I:\250\353\256\272>D0\275fJ\003:\215h@:\331X\243\273\020\274*\274\200\2044\266\304\314\\\274\204S\2669\306\213n\275mo\324:\262n\330\271\032\250)\273T\274\237\272\370\374J\272\300\336N7\223\027\243\273\271\031A\272D\236\365\270O\240\202\2727Y\243\273DD<\275>\330\243;\364g\2509\336\224g\272\334\303\2779\360_\264\273l\335q9\215\345\243\273F\215\243;}\202\244\270\337a\316\273a8\277\273\013\325\211\271az-;KF+\272r\342q=\\\261\237\2744U0\273\253\016\207\273\222&\273:\3625+;?\244^\275P\342\017\275*\344q=<\334\241\273\240\"\351\267b\216\034\272-\344\035=\006!\0209\352\262\267<h\344\235\273\"dZ:\300d\007;\360\331\204;Mc\227;\257<\214\271\340+\323\272p\351\206\275\302=\302<\271\033U=\334\210%\272:\250\2559\263_S=\360t\'\270[]\344;h\342\307\272\006\343\316\274\366y]\272\024\247\345;\033\313\362\274\221\264\231\272\331\217i\274NE\006\273\242d\325<\r\235\274<\237:h\273\024Uh\273\247B\203\274\323\241;\274\211\204\232\273\2622\276\273\300\271\023\273\213\203t\2751\274)\273\034\013\262<I\217\234;\234.4=\342G\363\271\331\002\016\275\001:\206\275c\355\000\275Ns`\275\311gl\274\373\n$=\030\216\371;)mz\273\213\022\002\273\302V\014;\205\314\007;\315|B=Z\t\007;U\370?\272f\2578\271\2245\002=\222\005\0209\035\t^<\322\2431;P\2254;Q\264\034\274\2544\213\272\330\377k\275#\376@:Q\345>\275\tZ\347<1Z\255\274^\241i=>\373\213:\334\032\223<\312l\203=o\207\006\273\222T\231;\247>\242;\375\247\245<x\370s=:\037r\2713\343.=l\306C:\233\\\334\274\270yL=lr\231:\344\375\003<\346\271\3709\355\274\n;\007q\371\273j\304\363<1\305y\273\340\372\351\274\022eY\273\216\352S9\222T\201=\256\2424=j\3759;\363\303\237:\200\372\025\275a\224*9\250\324O<h\234\005<O\230\005\275\367\031\344\272:\362\204\272\304A\215<Y\334\267\273\312\331\204\275x\240\204\273\272\226T\273*\215\270\274\351\306\2359y\200\265<\320\333\2159\034\362<:\016\271l\274\033\023\004<\333\023:=#B-=\330\006c\274=\304k\275\366\n\233<2|\303\274\\D\212\273\323x0=\014\250\372\271T1C;\010\216\215\272\001,\264\271\212[\031\275W\326\022<\370MO:0\346\227\273\240\221+\273\335e\n\273\216\263\223\274n\311x:\265\217|;g\2552\272\304\n&;w\016\270<\270?\223:!;3\272\037&\241\273ja~\275\311\323\205=\356\326;<\266\375\356<\332\327\377\272\335\354[\273C|K\272\226\226$:$\201\237\273\370\360\277\272\374\323\"\273\317Mv\275n\370z=\331\247\212\271\200\347\2169\317|^\275\\\004-;C\315\210\273\321{\352:\036\355u=tQI\275H.\242;,HP=Z\371\203\274\002\343[\273\230\247=\275\014\352\225\274/\301\3548\344\266\r\273\266\216\347<D.\002;P\004\243\272\333\217Z\275\200\226\3266\016\0160\272]\365\226;\2376\324<\233\242\024;*q\232;$\336:\275b\356\200<\021_\212;w\345L;+d\235;v\002\234:\032O@:5\277\0279\374\325\346<\036rF\272\300Dh=\301\t\206=\345\256\004\273\2601\222;\317\273\033:H\226\240\273\354\317\";\022c\233;D\365\230\273\200?\353\272\\\010J:,\213Z\275\013\216\377<5\261[\271%\315\226\274Xk\233:\204\322\251\272\271d\023:\204U\027\273<Z\273<\276\340\243;t\2156\272\302\021\226\273\020\324H\272\2644F\274\217\363\377:Q\276\036\273\270vC\272\241\311\235\271\265\370\373\272)_\225\273\225\020s;p\006g=\275\323r\271\371\336\t\273\010\320\3647$\216\346\270\250\271\221:w\343\343:\304\261\234\2726\010\233\2734\316\316\274*i\023: \323\033\275\004e\007\274>=\004:\036\253\037=\002\004\231\272^\323\036\2759-\214;r\216\364:\035N\035:W\345\'\2754\200\243;\361\234\366\272;\227?:JF\262\273/B\203=\251\246\276:\225\\\n\2720\030\200=l\273\241;\225\023\254\274\266\264\r;\260\243i=\355\351\013\275\214Wr;0\016\002\272yv\232\272m=z=R%\266\274(O\014\273@%N=\000\277\233;\246^\030\275V\t\227\273\265\327\241\274\360\343 \271\177u\236;\327\236\354<\030>N\275\362\264o9\204\276\014;\242z\007\273X\330\213:Q\220I\272\327l\013;#\350\210;\014\271q\272\325\316I;PF5\273\355\361u;3\211\006=g\034\272\271@{\264:\237D\216\274\306wH\274\017\364M=\n\250f=\307\201Q;\020\260~\275e\026V=\212\324\006=\217\244\347<r\264Z\272\017[6=G\007\242;\367E\363\271P\325B:.\352r=\260\230H\267.\244\025<\372\224\204\272\347T\204=\006(\"\275D\025\206\275g@\302\270\3741?\270\225\3107;\301\270\212;\263Wh=\274\265\334\270\312\300\205:]\033<\271\005n\367\274\002ei:\004\217\346\267\356\261\037=t\264\364<T\025\020\2752\037\315<\226#\357\274\207z\371</\245\251;,\'\205\272\220\300\235\274\353\031U;\200\246\234;u\334z<\n.\334:\305_d<\333\225H<\003\\.\275\316W\\<L\374\344\273L\371\3627\344\313\321:\352i8\273\236\017\346<\217{s=&~y;\347\237\221\273E%\231;t&\324\274\340*\373\272a2\230\273\014\324\2529\320\216v=J\214\r\275\361\320d< \312q=\r\261M=\026C8;\3137\\9\022\334\347:\205\204\310:\266=\251\271\374\306|=\266\222:\275\357<\031:\272\247\022\273B\013\277\272\372\303\016:\270!y\275&\3571\275#\345\323:\230\026\310:\222LD\275A\036\220;\336hS=6\254\000;\250\267\r;t\363\016;\034\217\030\275\353\346\353<.\353o9\314\217W\275\371\211*:p\202j\275\232\200\2558\343\327\211<\324\375\232<\256:o<\014\364};@.\325\273\330\300j=C\373(\273Q\"B:[S1\272\201\276\n;!\227\322\274\232\352\260:>\33419D*=:M;&\275\310k\014\275D\016\203:0\344\022\274\273\264\372:\025yX\273\013\037?:j\300N:\367{\037=\347%a;*\255.;V\235\226\272\"\233_<\262\034\215\273\203\367v\273\031\272\243;\230\306\240\274\343\317\003:(?*8\332\220\305:\356\335\036;3O\346:\360L\013;!\256\214\272\300\326\233\270\325!\242;\246C\245\272\014J\301\272^^;\272\324/\335\273\230\224\243;^\361\232\274Q|\2249\217\0326:\227\245\314:m\255\004<b\250\233;\240[\200\272K\221\243;\006\023A\275i\234\"=E\355\205<\302C\203;\247\244\230\271m\031w\273\010\326\025<\342.\242;P\347e\274\330\204v=\'\307\255<\226\327\235\273$\260v;\304\263\320\272\346\024\\;\'~*=\374\347\243\273\035J\226\272(\324\017\273\276\372\220<c7{<\206*v\271\334\263+=m\021\240<\361\013@\275\356\313\024\275n\024s:2\361\352:o\341\244\272\353\363\t;wY\307\274\017\242\037\275Xb\2458\333\201(=D\372$\275\324\223\306:\335{\206:\337!0\274\177\026\214\273\330\300.\271\267ma9\214\216\235\2731s\375\272\020Q\204=\347\237E=4\374\010=\024y\2679|\034s=3fv=\016\034\362\274b)V\272\302\365\355\272+)\277\272\374\325J\275\234\315\322:\\\0168\272\216\325O=\200\005\2675V\267\033\2758^\2239LkV\275\021\316X\275.\304\201\274\020LY:6h\234<\003\302\243;\340\347\030:\256\372}\275\360cW\275\005\325\007\274\326\265\"\274x\005:=\322\260S\275P\016&\272B\353k\272w}I\274\345\333\211\272#\320\201:L\257,;\214\241b\275\003\216\341;\226!\226;\350\376!=p\264\361\267\030W\335\272\317\245\366\271h\330\023\274\307m4=\200\203[6\004T\204\273\237kW;<\233\225:q\312l\275?Z\272<\376U#=\271\205c;\024M\203\274@\220\354\270B\353\372\271X\264\266\270\354\347\243;\234\322\375\273\241I\205\275N\275\321\274dK\3239\224%\005\272f\247W=7\024P\275\362\\\224\273\251R\006;\007\271\230\272~[\377\270$\345;;\215\004\256;l]\024\272d#\336\272\216\333\3049\\\017\326<\267\340\243;\r\302\342:\202\005\272\2749 \237\272\276\003\251\271k\276\2029\346l\n\273\233r\264\274\256`\204\273\211vA\275Lp\371\272\020\357\2678F\307@;\277-\344<u\177\010\273\255\301\n\272\264\200\237\273\366\210d\275\372\303.;T\247\t\275\332\342\016\272\005(\325\273!\3166=\367\305\240\273\201\231\240;\323\260\346\274\300\257\2338\376\037\3349\220\342\037\272\200\340X\271\320\004S=t\032I8\002\204[\271j/*\273N\243\027:\273\362><Pz\235;\205\021\204\275\310\021B9\311QN=\320\004J\274x?\350\272a\304P\273\316\373Y\275\360\342\251<\213(\240\273\242\340\\\274\363\217\370;\235\323[\274\361G\t\273\014\246\340:F)a\273q\002\260\274\\?\265\274\030\300\274<\234W@\272\363-R:\256\t\344:E\307\212\271\214l\'<#1-<\215(\242\273\241i\014\273O\375\027\275kQL=U].\274\271\276\346<\240\353\221\273\'\362\n\274t\202Q\275\216C\366;W\342\275\271\251e\310:\207\3551=z\276\272<\310\034\r:\252[{;:\013\214\274DQ\231\272\374\264a=9l\240\2707o\332\272e\222\017\275\213\255\265:\346\333\213:.\331\200\272\013\314\231\272\251g\205\2731\271&=\267\310/\272\201\317w\275~\007\321\274\311\343\243\273:\327\010;\r\266\373\273L\032\234\273\003\350\032\275\003\"\013<\230WR<\300f\2768\344)\210\271\342*\225:l\237\214\272\244\322\010\273\272[k\274\260\277U\275\324\205\370;\367\213\033\274\240\001\3449\000^\355\272h\371\332\270\221!\017\275\364\210Q\275\377\016v=\324x2;@\300\t=\033\354V=\024\353\227\273*\222_<l\373q\2753{}\2750\253\3459\272 0;G\341A:y\333\274\274_ \216\2740\234j\271\243}\205\275\313\324\225\273\356\346?:\324\021\317\274/\032\247\274\367v\204=\370s\203\273\212gy<\001\014p\275\327TV\273%\307\236\273l^\002;\377*\216\273\010\232\340\272\010\336\226;P\344\347<Pf\013<^\256\2228\017\346\236\274h\320G=x<g:\222\220\255\273\376\203\234\272\372\275\226;\354d5\272@\0160<U\330\034\273\366\327E\272zr}9\351\311\374\2742\304\032;\235\332j9\n\246:\275\214\277\361\272\364N\3258\216\212\237:pB\255<\000\221O=\320Sl\274\006\343\"=\212(\306<.\312r=.\3715\275: \277\274\022e?\271L(\3109\013\225\377\272\342Yw\275\271\220 \275$\201\314:\220H\336\274\322\035:=n^;=-\326|\274k\262|\273\301\255D\275\264-B=\340\243\256<\340\246::\250\277[=\252\2508:\302R\247\271\230iR:\246[\013;\017\231b=_N]9\270`\177=sq\273<\353\246y\275\354\341H\272\2719\005;\335\364m\273\205@\342\274\204mU\275\315\"\214\272\024\341\356\274\232J)9hM\230\273l\010\2469I\245 \275L8\2469\226q\034\272\016>\234\273\236\032\336:\264\026\233\273\271\353~\273)\204<;\214\010\367;\265\311\367:`C7\275X\336\2018bO=\273\025\021\n=t\217\022=4\303\'\274(\004\3177\234\330\357:\326\344\"<\233\340.\275\203b\r;j\002x\274*\361\002=KK\271:\226\375\351\274t\253Y\271\310\321\005\275@\224m\274\360\373\244\274\244t\026:\303L\0059\267+\213;ia\022;N\312\030;\312\022\360<$\346^=;\263\217<\261t5:\006\243\2348\241\211\r;-\344\323\274\331\034\253\271?\211\247:\207Q\361<^P\004:\356\025\324;\346\272\3349_\312\241\273\2610Z\274\000s]\271\260\262\200\274Xp8\275\030Q\357<\316\036\2359:\346\273\271#\223\n\273\204\031\2739w\021\007\273\240LX6\253\266\t=T/\352:\252\377Z:\266\304\2059\201\030\214\273\003\264\034\275b3\364\271\375_\236;9\262\300\272v\016$9\371\223\205\273\277\025p\274\351F\230\272\313\177\252\271#\371A=\026\2357<\032x\213\271\324\277\000\273\244\'\n;\277\027\302\274\001>\r;\373\t\270\274\340\002\221;\274\333P<\301\002`=&{\023<h\324\222:+\023\302:\275\364\232:\207\277\242\2738T\241;\364$\027\275<BP=\316\360\001\273(`r=\310D\341\272\376+d\275\026o\010\273x\241&\272\004g\234:Bj:;\335\366\034=\010\224R8\203\372N:#\366\225\273G/\234\274\334;\206\275\267(G<\357\353\212\272\360;\2138;{6;\232\213\206;@o\3547\363\353\336:XL\2508,\2632\275\304\304\242:ExQ=\262+*\273\200\310q\271\220.`:\320\026\3407\031\206\315<\260M*\272\241\273\337:\302\205\234:l\202\374\272D\222\r\273@\351\244\274\007\351L;91\236;j\347\243\273\304\000\257\2749\366\\\272\242\344\233\2733f\226<7\033x;\025\372\362\274_\034\235\2739\260\235;yrk;\312a\342\274\242s#\272EZ\013\273\202\227\336;\310]\3429\311^\211\272\252\317o=^\313Z\275C0j;w\244\234:2A\361\270%\275\365\274\202\236\2369\006[&=S\210\230\273\235\372\233\273\341\376U\273\256\n\267<\216\2079\275H\263\233\273\306U\027;\007\312\220<C&\236;a&\305\274\267xA\273n\177\303:\351\264W\273\207\232\237\271\000M@:\014\304#;\035\'3:\2302\223\273\304S\217\272\301\024\200\272\033\023\213<5v\203=\372q<\275B~_;\273\307J=\266i\0339\216\346\"\272j\242\251:\310<z;G\341\241;\0003\201:\331\334\356\274\216H@\271\203D8\275c\304d=\356\230S\273|\225\242\273\244\003\n\273Pi\241\273\261\204\031\274\231vr\275C\013\326<\r\000?\272\240\177r;\222\302p:/\177\013;F\350\341\272\220=\003=\365yr=F\350\n;\010\351q\275A\366\373:\274\217\225:&\002\332:\211\246\007;\330\274\275\272\022N\270:\020\033\243\273\346\336)\271\271\273\211\273 \303\220;\320\023\0079\0251\034\273\260\342y;=G\333\273!\324\251\274\363Y\300\271\360\357T<I\330\000\273\242\237\270:\252\310;<\204W\2439M\007&\275:I\211\272\251G\356\271VA\357\270XSd\273)\205\242\273|T\250\273\237<\220\273\364\007!=\267\227\205\273V\357\302<\02312=\235\247U\272\245f\006\273\244\n;\272\210\322\341\271\t\033\270\274\277\3356\271}Q\363\272\322\013T\2758\302h\273\333$\304\272\261\007\231\274\364\016?;wYb=f\274\236\273\204WU=\347\204\217:\t\013\205=I\214\243;\334\211\201:5\036;\272\005\005\303:t}i\271\370\001\206\275K\032\253\274\310\240\305;\3252\236;\rx\222:\025\254S\275\262\250{:{4\271\273\252\230\220\272\372u\"\272?\274\243;\326\247\0339U\272\221;\330{k<\013\030j;-\254\347\274\002\341e;\357\266\030=\234\230\t\275\232\226\032\275TC%\272\255\330\332\274/1\306\271\357\365c\275k\334\221:\002\017\325:>\246\243\273h\254\266\273z\242A\272\3064X\274\254\330,;!l:=\263\247\356\270\320\032\334\272\003\031\001:X\305\211;\365/x\272 \253\212:\270\305\344\2727\376\035:\247\232)\271h\270j\275\322\310\242\274\370\036Y\273Y\017\237\273\324\203\262\273YP\327<2\272F\273\250[T\273\323\316\r<]_\014=\367\252\031\275.J7=uG\234:[\362\326\274\3431\016\274\240\256T\273v`B:\205\300k\273\261/f\271\r\316\230\272M\257J\275\235J\t=\010\347G\274\372;\004;\003\222\272<\005\227\205;\035\007R\275n\\\212\272\\2\201\273\001@\247<\266}\321\2727\023\351\273\033(\211;[\302\222\273{\340F\2753O\337\271\327\301\234;\343X\202:h`\306\272n\224\177:\364\306\241;Ux+\275r\244\230:\350\207\210;\260\210{\275s\251\242\274&\017k;\225[M=.\341\371<\222\347\223\274\354\375\202=2j\317<\021\341\353<@\306S\270\267\202\r\273\237/\203\272\236\007u\272Vwd\275~\030\016\273rB\021\275\013M#\271\013\006\2539\232U\311\274\243\013\364\270F\212 =\1778E\275\340\031\240\273\320\326\010:V/\336:\324\326\003\272\307\307-=\033\351\201=\201<k=\326\360\357<\367\235t<\026\000\2037\316\241\215:<V+=~\334m:\023~\226;\273\342\336<\252\264\032=\240\370\241;\346\254i\273-\243\006<\202\211%\275\212\327\313\274Y}\203\275\"1U=\260\321Y\271\356\005\214\273\364\022\013\273(\035\235\273\254o\033\267\326\013\2419\343\322\034<`\321\207\273\200\337\006;I\'\213;o\035#\273gpl\275\265\312\257;bq\342<\273\231\'<\250\322\020=\"\206[:\253\336\222\272&&\235:\240i\243;\322B!\272\010;\337\271{\242\364\272CRM=V\0249\272\274\305*\274\322\260\322\274\245\205\332\272\031:\263<A,\242\273\310\342\376:b1\201:\003]c=\244\205\274<\224P\217\272\251\357\251\274\264\002H=\234\215(\275\016\347a\275\327\272\353<\343\230\002\275\371\364(9\250\252\310\270\206w\037\275\r\260\223<\330\346\200=v1$=\201wB\273\031]\3558\352NB=T\216x=B\254\205;1%\001\273\234X\036\272d\3271\272\t\202\263\272M\214\261\274\236\214\027=h\321\275<S]\242\273\032\247\r=\037\251\316\274\340>\331:3\214\234;\302\"\033\271\346R\205=\357\007\242\273\235\222\321:Cu\325\271{\367\315<J\027g\275\004\277\217\273\300\002\366\272\217\277N\273\247\037@<\001\035\022:YZ\303\273J\210.\271\306\346\204\273\335\007\020\275\275$Q<\374\325\n;\364\304\231\273$\272\347:\273\225\273\271\036J\203<\374\304W\273\2223 \274-!\235;\207\346\255\274\316Ed\272\376\205\007;\243\'\3449\013\3255:l-\354\267\210\020@\271`@o\275\n\225\222<p\315&\272\"\254h\273\260\017w<\3413\230\273\273i\265:#\246E<\212\357P=\205\214\014\273\340v\245\266~\346\034\2754[4\272e,\243\273r1C\275\246\320X\270\277\316\227<]\250\332\274\315s\030\275r\201<=\342\232\364\274\264\033\352\272\016M+\273\036x^=\252UM9\240D\310\273\211\273\035=\314zF\271\313\004o=\310J\373\274\274\n\006=I\313\243;\224`\204\271\360\357\201\267\014\t\307\270\332\323\203\275\202`\346\274`\363\222\273\"\025\032\273Y\3667\275\231\2213\272^PD<\2574\377\272G *\275wR\236\273\000#\221;\276\336\2759\207\364\206;\010`\243;p\244\r\271\237\242\372<\275?V=\225%q\2749.\033;\366\262\317\272_U\371\272 \352\235\273\343O\242\273\277\242\2238e\177\225;m\t\200\274\24236\275\227g\206\275\010\265\232\2731o\234\271?\374 \275z\300E\273GF\254:5m\'=\022\026\215\273\237\\L\275\322\274\022=B!\217<\001t\233\274\017cv\273<\033\3748^\250\233:\240#\211;\307z\354\272\035O\003\272\032\t\220\273:\005\315<\335\243\232\272\3026b\275C\004\007;gf\177<G\355\242;\3779\013\275\361\230\335\274\317R\243;\310\007\224\273iR\2368\022yU;\2375\240< {4;\363\033\242\273&\035\357;\220sk9\222\013\3068\220w5:\357+\305\274(Z\3449\2620\n\275\010X\033=R$\001;\346/}\272\252\277\026=\016V\030\272J\277A;\016\276\364;\272$\341\274\227\220 :\355ql;9\244\252;1\225C;\304\246\356\270\224\004\230;$\307\315\273\000\256\021\275\356\352\030\273\317\3635=\324-\004<\214\n\361:1\306\202=\274\307\236\273\332\337o;\2332E\274\313X\314\271\3275\200;\307\344\301\274\220\322-\272}e\332:\240Rb8=\232/\275\320\260\223\270\362]S\275\224\327}\275b\344X\275\200=\233\272)\241\002\271\t\356b=H\253\201=\337\215\320\272=o\241:\032\036\210;i\343\256\272 \251\315\267\n\273\2669poN=\364\343\357\272\204N\243\273Z\323\210:?\333\226:\2558\273\272\253\223\302\274\367\007f<h\204T\271\213\323@\275@\331\005\273\313\361x\275o\214\350;tu\"\275\324lo\274\311\210\222\27369\331\274y\243[;ox\232:T\311\0059\352Fi=\345\r\307<\203\017\234\273\237X\351:\315q\243;\\\247N\273\246\303z\273\003\2341\274\020\317\032\271;\217\242\274\321\224\206;\365\200\244\274\205\326w\273\324\360\006\273v\030Q\275\237\332\306:p\331\n\273\351\3672\271\342\212\233\273\310V\2468n\3657\275k\263\360\270\264<#=\367\237\353<NA\265\272\341x7\275Nj\241\273\314\013\n\274G\307\3139x\205\211\270\036\307t\272\306`\230\273\254\344\312\273bS%\275\352\257\263\272\370`\243\273\374\357L\272\222i\325\271a.\014\273\322\350\237\272\364\303\223:\335z\220\273\014\2051\272\246\234|=g\203\300<\302\254\232;\233F`\275\260\027^\274\036\344w:\344\353\2119D#G\275-Y+<\205g\016=\235[f\274G\233H\271h\232C:U\355\004\275\207)E\274\247\367\233\273W\306\016=\324+\265;N\271\234<\2543\206\275\253as=N)\203:\260\217\023=\276B\002:R9\3159\354E\363\274\351\231&=\225K_9\370rc:-\251\013;\302\226\256\272\007B?\273\236\204\231\273d\2513\271\301\212\2679\256\035\311\270#4\257<\237u\r\273K\213\224\273\366\020\231\273\301\000\001\275\256K\262\273v\345\021\271\221\026k\275\340M\375:\331\242\\;\301\357\3739\267_\214\273C3\004\272}Y\345:\'\313U;\021\243\243\273\254f\320<6\260\341\274p\331\0179g$P\275\222b\346:\330\n\257:\277\243\r\273\006*\020\273\355<=;!;\032=\3156\014;\265MT\275\373\321V<.\364x:\350^f\275\2743\372<zi?<\353\335\214:\252\356\230;\305\371\242<\206@\206\273\315\305Q=0g=\272F\253H\275\365t\017\275+\330\347\273\302\300?\275!T-\275\020\347\362<W\032\201;\256o\323\270\326x\027<\034p=\273\034QB<\274\013\2059\264\322\242;-\274\232\272G9&=\035\226\003\273\326\001\r<b0-:\320\233>;\027\267{;=\235\016\274\t\274\033\273\314C$=\250b\205\270\371\251\277\274u<\224\273\366\220\307<\304\0360:S\373\216\274\232\026j\274\'\256\241<\273\215R\272)\202]\275$\276\223\2734>\210;]X\023\275\000\237\230;b\343\370\274v\221\257\270w\017d;&\004v\274\257\022E;\336 K<\343\326\021\275\310\003\203:\010_\262;P\373_;\267\371/\275\334&\331\271\276\215i9\371\254\241\273?f*\275\230\212x7^\323D\275\026Z\215\2719\242D:\034\212\213\273\266\236\024\275\257\370\240;\325Q*:\325\031\242:\245\307\252\274\227r\315:\236\001\210\273)8L=1nK< \264\2308\367\210f=\244d\255<\310\322[=\236s\247\274B(\322\274\367nC\272zw\243;\344\223\320\270\213\325u\274\274\014\3077\235\346%=\260D\340:D\201U=\"\302t=K\322\374\274D\263\252\273\242_\377;\354\303\233;k5\014\275\262^\000\273\rL\t;\321\227\371\2731\243\3779\210N\241\271\251\273\202=\r\350*\272\272g\326\273\003\333\034:\312\354\376\273\226\316I:\321\177\206=G=j9Y\037\r;\202L\231\2732:\2459\242\322\3549\370\177\250;B(\000=@\243I;\232Zk;\300<\244\272K\234\317\274xKR=y/]=\330\027\3709\243j<=\251\356G\274pv\201\275g\326\222\272\306W\203\275;w\010\2758\022\245:\265\306\223\274\001I\233\273\242Cs=\014\306x;\215\006:\273Z\305\030\2724\016\235\273,\377\206=xN3=\301%\337\270J\313*\272m\204`;\221\205\375<f\315\203\273\271\315\260\274\371&\222;\232rZ:\2465\236\273\331[\032\275\'\326\005\273|\026\276;f\242m=\'\337s\275:gv:\010;S=\207\234/=\330}{\272g<\203\273\301db=\2369\247:\007AC:K\257\005=.\364\337\271\241\217\005:\325\371\200;\336\225\223\273\374[\205\2672\013\207\273\265\226\203=\323\322\346<x56\275./\356<\235\222D\274P\2308\275\274S\350\272\006$\3249\231M\264<\347\244|;\325\253\227:\324\036\2459C\311\202;\026M\025<:\371\235;\276\273X\272\3619_\275\270\204\022=\227\033]\275\256\304\017\275\000\236N\270\216\026\035\275R\202\210\273\201\205\334<\004.\220:@\356\217\272\350\312\245\271\311\001O;\354to\275\346\346\316\274\374\262\3639\205b\225\273\324v\032\275\r\205\255\272\252\376\205\273\316\026X=;\227\255:_&\2719`\014\014;\222\013\021:5$U\275K[\237\274\310BP\271L\037\237<\n)\344\272?y#<\036D\301:\333\205z;\311k}\2749)\223<}N\275\274O\324\207;\032\367\245<\327\3576\271x\224\200:E\376\315<8\354\206=\021\354\236\273\207\220\304:!\310\361\274!\004\234;\275\220\234;8aQ\275\323$&\275\304\247\2549\355\215\207\270\330\027\036\272\0343\207\274d\331\205\274\237\303\272<Q\'\0329\306U\037\275\260\276`;\332\021\027<\227r\022\274R\026\227\272\024\316f\273\231\360\3639\326\321\004\275\005\252\350<\361y\203<\216%\234:\2220s<\347D\276:N\354p\272\241\336s;\355\007\236\273f\223\243;\206\264\0219\030\300\223\272\233\002\211\273\367\260\211;v\277@\271\341\026\233\273\2153N=\307\275\005;\\\034\n=#\250\265<\004\204]\275\263\003\022\274F\372\037:8\206\036\275\302f;:x\233\314;%\274\355;\331\354Q9\334$]\2731\277N=q\243\004\2732\004$=b\230\261<\\\316\236<I\263\254<c\254\273:$\315+<n\327\354\274\264\325\203\273\037\333v=\235YW=\350\020{8>\302\211<U\007\t\272\361\007\222<9\032F\274\350\316\370<fN\225\273\0025\305<\206\t\004\273\354Dw\275\272\302A;8\217\037;[\261\016\275\3143\244\274[BX=\261Xf<\372\274\024;t\344\010\274\\]\264\272*_%\271d\204?=\333\267R=\255\250\030\273\'\006\212\273\nR\236;S[\023=\027\360\013;\311\020\300\272\025\245O=\256.\036:>\034+<\353\\>==tT;\301t\351<\275\343\243;\326r\252<\354\257\356\2722\267\244\271\306\355\2579\244y\322:]W%\273\010\017\311;\\e\\<\030\266Q\275\364k\204=\266\313$\273\212\020\005:9G\320\274\231\225\020:e\371\250;\222\222\351\274\337Fd\275V\273\202\275\376\363\372\267\267TZ\273a\250N=\251s\213\273\326py\273\370\235\227\271\356\307B\273\255r\021=Z\366\007\274\340Y\3358a}A:\257\017\t\273\3058\005\273\230\034U\274#\324k\275\233\325\222\274\240\003\026\274NM@\271\026\224\276:\215Aq=\333\350L=S\347\313\274q\356\022;\226\250\217;A\272\257<\275\021\241\273E\013:=\250\377\235:\342\255\3018:z\303\272c\312\243;\341k\004<\361F}\275s\234;\275\024B\234:\352\303\243;\300W?\275\257%r\275\327\rq\275\267\237F\274\303\367\3668K\033\233:n\275\31294\323`=\334\255\312:\326@g\273j:J=h\"\3218<\002/\275\2673\2539\344\214\246\272xZ\236;\277#\031;\205\006\220\273jn\r;\r\007\220;\353%\034\274Vs\000<\320^\0347\225\275i=\275\263 \275\344\014\177;\303\0247=\024$\004:\207\231\013;\240<=7kc\032\275Pe@\275\205\350d=}\362\003\275.\256\260\271\305l\177\275\326\216Q\275\351T\242\273\224\335\240\273\334#\3069\246F\242;\0173L\273V}G=8\234\3609f \276:\203\350\2529\337\202I=\277T:\271\036\323c=4/\3239\360\365\237\273\265KI\273^\323\000;\362\2753\274a\270\t;\304\2217=n>\010\275\221\200\005;\231,\330;@-\3739 \r\241\273|\231@\275\006\014\275\274\370\334\025\275\3653.;\r\033\241\273\253\233\231:\235>\202=\272\004V<=\244>=G\360\205\274\'s\331:\310\037\304:\214b\306<\324\n\215<Q\253g=YN\347\274\272\345\243\273\300\327\352\271\022\'5\272T\264\224\273\322\202\243;\201\207\266<\020x*\274\320\202\014\2731%4\275\364\347\362:rD2;\211\375\002\273\246\"\2658\351|\024:\320\000\206\274\323K\003\273*\224\315\272\315<\246\273\261\221s<\231\364f\273#\320\327<\342X\226;1a\036;\361\376\034=q\\\314\272q\275%=\302\3600\271\331\021\306<\232\226\361<tM3<\257\244\24396\245\366:+k!\275\376\025\225\272\340\313@\274\356#\260<\366\266\r;\306\002\007\273 -^\273\023(u\273\322\257\230\273\037\222\3539\335\255=\274\212\370\237<P\234~<.$\233:\024\003_\273\035\253F;\365D\t=W \214\272\327\036?\275\221\347\243;\343\351M\2738(\236:1d\201\275\200\244\215<\353jr\273\263\2719=m\221\213<\302O\000;0\021c\273\027\261K=\277\031\335\271c\210::\206M\334\271\177\315\323\274n\340\036\272\270\264\200:\232\323\362\271xe\222\271*N\0228\371\226\206;(\014\351;\254};\275\263\330\\=Ol\223<\320\361$<\311\314\201;\323\256\213;M\323;:r\316\031=:\275\203\272\3467\243\273k\273#;\021\275D=\237\016\235;\253)\314\272\225\327O\274\\?>9C6\201=fJ\362\270l\323\231\273$#\234:\005\\\375<\033\351\254\273\321\367\013\274lg\216;\213\364x\275\200J\3078~>\037;\253\334\212\274\233=\202=$Z,=f\275]\272t\177[\272:r}<\346\200\013\271^^1\275\232\016\254<\257\263\003\272\234l\001\273\266\337\3529\327\373K\275\3327\341:\3520\007\272\016\353p;\303\236\216<\332\204\2439\010\366\035=\313\003\377\274x\241\240:\270u\000;\262\221\200=\250\203J;ON\004=\222\010\213;Hq\220\274\243q\204\273|\311\236:\321m\\\275O\177\243\273\274{\344\273@0?\274d\0061\274^\232)\274\274\320\3259A\225\2319\350n==#\343\036\275\030\323\246\270\377\272C\2758\231\205;V\276\364<\303\261\226;v\332\215\273D\343V\272\366\262\014\275\014(\314<Wh\217<5\302\204=\362)\367\272\224}\231:o\322:\272\333tU=J\030\226:\242[\222\274\236G\014\273+\206\r\273\240\276\242\273\"K]=\2015\205;x\376\242\273\225\3334;w\222H=\003\025\006<\212D0:\317\375\241;\206\310\016\272\333H\000<\276\t\024\275!\220\241;\377\245\2109\035\312\311<\231&\035\275\254\255\275\273^q\232\272\220X\355\270\356xC:W\270/;S\214\243\273\027\242\020\272\323[-=\'\256\240;\324U\236;zZ\325:\212\326\031=\326\235B\2722Q\351\274\006{\246\2742\211\224\271!^\212\274U5\204\274\213@&\275\000\302\n\273\365\360180\363\231\271\264\rD<\010\336\023\2742\241%=\036H\21496 }\274<B\200\274\337\326\367<\n\260\344:v\035\007\273\375\201M:\364\341|\2703\t\207=A~G=\234\202\367\274\246#\274\270\221P\305\272=<\243;\370\233J=t\360\225\272\351\326_;h+\2309\002\326\001:\311hD\275%\217\234\274!\275\346\274\224\355`\273\244\013\26376b\377;\304\263T=*\244\243\274\202\264\206\273\303\350\212\273\337QP\275\013\034\205\275{\245\r\273\360$`\275\352n\306<\343w\322:\221WA\274\355\325\235<x\226<\275\220\203\r\273\314\017o8=8\306\272A\035\267\274.\300\204\273\016\035\206\272\303[\204=\370`\243;4\232\0178\257\250\r;{\355\325\274\252\221(;\376\266\243;\326\'%\275x\365\036=M|\252:\241\242\201\275\305\"\006=\246\331U;\372\343?\272\3109\223\267\237\360\2628\235\322\255<peq\275B@\351\272G\023\241\273U\270E\275)!\211<[\355\305\272\025k\207;\224\26069\017\237\263:bZ\234:\206\260f=3\257w\274\310}:\274\342\235\303\274Ia\'\275\344\016\0209\321\204\211:\307\306\201\274\321}:=\032.\217\272\256\022,\273\315e\204;\364HF:?\227\242\273F\275\230<-\3145\275\004bA\273\335\237\312\274L\366\351\272Nu\215\271R\260<<\216$\346<D\214\2608\"Cf\275o\213\233:\217\004z=\357\033\212;dHm:#\007\361\274\334O\177<\274\341\242;\031>\361\272D\276\205\275b\235|\273\304\n&\273\226\026\233\273\272\251\3048q\'\212\274(x\262;\031P\000\273\024\347\216;:\034\035:u\2606<\021Y\264:\372UB\272\032\347\336\273\360\030\0038\210\377\3509\030\343\234\273\250\241\3249\337\307;\275`\336\220\274W>\225\273\006\315\243;{3\245\273m\363\r\275&\360b=\026\347c=R\243\007;K\376\371\271\264\266\r;\340^h6n\307p:2\3044=\373\257\232:\004\357\223;\240\017e\275\204\177N;\213\216[\275\327\376O=`a\243\2736\305)=Y\372\211\271\033^\031\273`\221\3729\n+\341\274\346w\277\271\363\003\243\274\003\214\021=H\342J\275\312\n\206;\361\362\226;\316\275E<\016*\005\273\\B\342\274\250>\005\271\013\007\334<>\242\271:\212\316i\275(\257\307\273\000\341S<*\205\222<\365\334X<\207x&\274L\214d\273k\2040=\336\005\032\272\350DR\275\275\004\330\274f\325\020\270\226\325\016\274\370P4\274\212\362\203\273U?\362\2718\301\231;\247m\'\271\036\352]=\212\250S\275_9\200;7qH=5{y\274\337\300\240\273\rZ\031:\034\322\225\273\2468 \272b\022\031\274\311\003\201=w`\035=\303#\t<F\001\2669f\304\031;\307\277\222:\302Y\352\272{&t=\224\205\315\270\245\246Z:t\351\235:\nd\021<\351\024\033\274\312\335\233:$\231\245;\022\2401:\272\032$\275]\366\343:b\313?:]x\303\271l*\337<%\245\317<N\2228\273\376\252\365<\205\313\243\2734&s8\035\017\220;u\n\350<\303\315Z=\367|E\271\030\272A\272/\200\201=2\206\205:e\312\331\274\214\027K\275`F\023=0K\322\274\376$O\275\366P`\274\370\326;\273B\255\322\273N\363\264\272\273\366w;\251V\235;\221mh\274\202V\213\273\347\366\266<;\341p;\n^)<[jn;\305\371\272<\373\000\214;,\326P\275\345C\205\275R\260\'<.1\240\272\326\261\367<\312\215\357\272\255\2574\275CR\222\274\337\3044\274\215{\000=\261\207&<z\341\027\274]]\240;\247\377*\275z\326\014\273\324\330\2149\363\340S=\313\257%=m\333\204\275F\335\014\2756\304\211<\000\004\2148d\377m\275\230\325v8f\244\222\2735\347S;\'%B;\347\246q\273\257 \200;h\365\r9\345\252\306\274\367<\314<vN\205=\353],\273\2569\376:u{\234\274\235Tc\275?\222\237\274\344\237\202\275\216u\271<w\250\014;\305S\205=\r\332\231;\026L\235\271\215ih<\265\315r\275\340\177\224\272\273\316A;\273\265%\275x^\000\273\010\271Y=w\227\315:\325\374n=\0136\025\275\232T\004:$Z\213\272\313&\226\273;\305\237:\255tB;a\016\201;\361\032\2519Km\356\274\304\2645\272D\226\240;\260hc:\2354\316<I\354\250<Y\323L\273G\226\246\273\006\002\014\273h|`\273\345\320\243\274\256\314=;\000f\023\272\223$\002=\252\244\210\274\2647\264\272l\367\201\275\352\245\017\275\266\021b\275\021\301\231<\022\375\';\306\242)=\332\270h\275\361\247~\273\242_p\273US&\272*\310\206:B\'_\273\241E\204=\211\212\24292_-\2757\227v;p\367\300\272\355\264\r\273\006\373\021=F*\010\273\330\223\0248\267\333\n\275!\356&\275\213\364==\366\353\246<,5z\272d\331\202\274\322\364\200\272l\246\346\274\002\rD\271\300S\340;k\031H<K\253\202\273\005\032\225\273\025\021J\275*\023&\275V\336W;ak(;\r0\200;J\242\205\275e\244\r;\20736\272\177DY\275\177\242\234:\363X\326<\204}\223;r\177\347<\316\203\206\273DR\202;N\263\003\272(\230::\306\336\243;vH5;\033\325\202=\235\315;;T\210\"=\312I \274\032hB\272\326\250\206\272\3454\334;p\376U\274\356e\007=L\370\027\273\232\302t:\177\307\213\271\230\260\234\271\355\357c=#\323j=\325\005\236;r\205\341:X\373&\275\362\254\216\274\223w\007;\347\360\236\271\337Nm=\252\027\267\271\327\332\301;P\313\331:\315\nV=\205.\360:\273\035\025=\036\360J\273\210\035r<U\020\231\274\014\004\325<M\2637\275\216\r\243;\354\020g\275"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "eM\033<\276\030\262=/\"z=\006(\314\274K\177i\274\304\321e<l1\005\274\354oM=v\2622\274t\267\342<\212\230_\273\030\307\244<\001Kv\274\333\341%\274\224\226\235<\366H\366;]\205T<\nO,<\264\250\232<\370\335h\274u\212F;\360\324\341<\231L\303<0wx8\212\251\204\274|\205\036\272\2329]:\334\275\036;\231\313!\274n\341;=\210v\024=\006\005i\274\234?\203\274q\316S\274d\036\024<\306\'\225\274/\306e\274P\314B\274{LG<\"]&;,\363\235\274\202\010\246\274o\241D\274\340]\270;?\355\247<>\376=<\002\264V\274\250\037\326\274\363\262\261;\374\222\273<\323\020\370\273hJ(<\230\207\220\274\n\027\370\273W\200Y\274fz9N\371\232={\352y=\375\234\230\274\253\337\177\274D\022/<\374A\357\273\251sU=\343\325\230\274\370\266\002=(\360i\272ZE\333<\230\2364\274i\371m\274d\233\247<u[\335;\366KY<\324S\001\274 \300P<\207\023\\\274\364\311\206\2728a\253<l\310\006=f\303\205\273\004>8;\320\\?\272\310v\377;\177\316\361\274~z\252\274\336\3771=\246\337\034=\000\261\201\274"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "split:127"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        tensor_content: "\371\363W<k\254\017\274s\325\233<\206c\"\276o\227\233\275&\374\255=/\220\216<e\362\020\275\351\261\375<N\250\271=\026v\204\275\020\364\314\275\356\335m\275\370\r!<\007\223\220\274\214T\272=\2127p\274l\373\244\275q\226\253=5\2076=\270\2445\274\216\340R=\0075$\274\221\360\034\275\230[&\276\365\262\010\275\350R\032<\350\200\363\274\215\341y=\236\241C\274-\202!\274J\337\242=\000[\363=\020\005\227\275\270(\004>\252\367\317=bY\3369S\035d=\360\322\r\276\346_\014>\210Z\357\274\222r\275\275\264\325\277=\231\253\260\274\324c\327\275\253\222\317<\034N$\276\224\341?;\026TN=\220\002\304\274D\276\356=\016\373\374\275\221\036\357\275\327\204%>\250\366\327=\366\243h<\016\365U>\232\2023\274\325B\272\275\2336J<6\223\022\275@@\325=\312\321\237\274\3013\226=\020%p;c\245\306\274\000\330\230<{\241\217\272\037R\364<\352\027<:\325\236\030\273\260\261\031=Q\373\002\275\260\001@=\301\t\320<C\362|=\023(\370\273\314f\n\273\311\315\016:\330\217\205:\0374}\275[v\242\273\364I\201=K$:<\372\334!\273\360\351\2126\026\336X=\177^W=\307+\025\271\254\201\220;\004 \246\274\230\2724\272<p\257:\206xT;\312<<\274\366\035\241\273}\267\022\276\340Lg\275\216\303f=\265\252\r\276\256\000\333\275\256A~=sm\347\275\335v\227\275\314jn\272ZE\r\2753\271\"\273\336\326\206=\024\007\327<U\201\363\275\215q\217\274\346\250Z\275\371\306\277\275\255\343\327\273\n\270\366\275\200\240\024\275\324.\362\274>LI\274\373\207\312\274c\350\006>MJ\244=\3141\324\274X\254\037\274<ni\275\236\370U=\250W\265\274\304\316\207\274CH\202=\310lb\275\254\267]=\006^b<\340We\270\305\272\204\275\375N\'\276\021\033\244\275l\201\231\274!\032y\274c\273\017=}\001\272\274B\n\246\275\273\360\020\275\237\207\030\275D\275j\275\022*\002>\347\252\202=\343\255_<7v\314=\'%P\275CU\355\2742\370\274<\315\243\206\274H1\013:\366\317\232\274)\314\363\272bo]\274\215e5\275\234\361\210<\206\317\271<v\260\370\272\335\214W\274=\017o>{\351d\276\361`\255\275S\2049\276\027\257\004>/\2018>\260#\242=\351q\007=\022+\321=O\225\031>\205\037\355=\\o\026<O\360\203=5\331\337\275\347\242>\276\332\244\214=R|\255;~\362F\275Z\333\032\276\340\361\303\274\367Y\037\275y\365\372\273`v\331\275(\030\264\2735v\313<\316\021\246\274\365\257\243=\306\r\237\275\026D\374=\017\215M>\321&\213;\227\373 \276\312\230\327\273\254K\337<\214O\003\273\363\344>\275\261\237N=\341\251\223;ai\"\275]\300i=i\265\020<XU\2578\224\360\205<\201|\3359\215D\271;\027\356D=Z\216\211;\310\2733=+I\330<Ld\241<ud\362:\000u\2065K\367\2139\312\030\342\270K\335\010\275:\314$=KDL\274\213\206\310:\231\232\264:rK\321\272\334\324\311\273\003<\201=\260\252\313\267(\244q;z\021B\275qU\277\274Q\367q=X,\027=\"\300q\275F]/\276E\341\244\275k\245\201\272d\3368=\323d\225\275+=\014<\243\3423\275\213\320\267=\272&\016\275\362K<\275,&W\275Gag\275\210\361f\275\235\232\251<\014\322\t\275)\027\300\274\253\346\244\274\r\200#<\027\366U\275\350\0058\276\236Df\274\313\036s=\303&\037\275\314\030\341;\300\270\033\275\324\206H\272F\307Y<\371\354,\275;\177\026=LDK\274\332\373J\2733\"p=\024\353\002>\273\212\032=j\017\370:\346P\030<\217\220\2239\240#\373;\221S\303\274J\265k<\302d\220=\321\213\210\274\361u\351=t\3128\275\272e\025=R\345d=\263+\"<\316\302Y=\342;\274<\366\030\265\273\351\256\001=\017\226\324\274\006;\313<\327G$<\002q%=M\234[=\002\373\016=\233?\017=\246\037b\275t5\230=Mg\355\275\001\243\267:\ro\002=\252a\317\275\004&*\276\264zh\2766\374\'>\006\370\025>\340\266E=\325\307b<G\225?\276\023\377\326=\344\253P\275%\362\244\274qQS>8\220\020>\\\352\230\275\"w^\276\343!\347;\307\204\213==V\257\2759_\221;M\3744\275(\353R=\243D\305<:\202:\276\371@8=\376\025\252\275\250\\F=\354\277\001\276(0&\276\345\326\014=\374D~\273\326!~9\267\235\242\273W\340\231\273\266\313\014;\206_\223\271:\035\030=\312\266r\271R\252[\272o\033:=^rJ\273\243\344\024=\031}\243;\345\244\223<\246Y\205\274\032Hz=%\310\014\275\204jN\275\225\372\236\272\251\363c:\256\370\370:|v\3659\265\274\026\275\\\351\334:\036\300\t9\356d\313\270|\231z\275\342{\362\272\323\330\253\272#@\312;9\313u=\r\032X\275\360\202&=\371\376\305<6@O\272Q\037b=tQ\233\2754\325A\275\r\202\326;f\277\365;\342c\237\275\216\222F\274\267y\275\274\256*\'\274\306sV=z4\234<\317\255\334=\343>\244\273\356F(\275%\332\007>\272\350\366<m\3202<\024\031!<\257\237\263:\261Tp=7\330\210\2753~\266<U\237Z<|\376\262\274\207C\330\273\356;\035=\255\260g\275\002\014B\275\n\356\022>\352\024U\274\231}P=p`\264\275\251\273\205\275\352\272\021>@\"-<\213\276<=h\005\020\275b\356\246;e\306G\275\177\367\027= 3\251\274\275|\"=\024\211:\273\t\353\316=:\245\220\275\234vs\275\026\234\360\275\213\027\251<\037aJ\274\314\372\241\275\335\332)=1\246\030\275I\220i\274Z\274\204;fr3\275Jn\256\275W\277\251=p\371\234\274\022\364E=\0251\002>\324Q\036=\336p\354\275\200\324D=Z[\330\275\r]\376\275\350Zf\275\246\263\361\275\341\215}=\026\214\335\275\272\302\332==\336-\276\343B\006>\235Z\324=\235\300J=\022;\275<vH\213\275\352.\271\275\267\232\025=B\256\370=U\023\353=J\276?\274\337\037\n>0\323\320;d\343\030\275\024\360N\275\367\346\020>B\370\347\272\033&\334\275\\qo\275}\202\004>\026-\003\276\264c\031\276\247|\205\272\320\212u\273)#+=\024\336\243;\001\326H\275\347\203\212;\242\020\223\272\353@\024\2753\374\247\272\257P\323;\321/!;\342\311\273\274\355\273\364< \314\364\271\035#s;\354lW:~)\202\273H7I9\235qE9\315\332]\275\337\2558=,\036!<Y,\241\27332\276:TY\001\275\340\300\202\274\350\306\034\270\305N\203\273\022l\232\273\372bf\275\320\350\372\274\343+\005=^O\205<D\270\017\275\345\376\273\274\210\313\213\275=\255\371\274\n\314W\275h \220=\370\022\207<\024L$\274\315\363\345=\312\236\317:\261\375\031\276~\301\313<\212\277\031=\260r\252;D+\242=\000V\263\275\244\372F\275\332\353+=\361\234\013\275\370\361G\272J\310\265\274\316\014\264;\377q\n=j\214E=?m{=\346\346\261\274\010rP=\260\024\305=\366dY=m\303\177:J\245\367=\330\332\314\275\357\366F\273\312\030S<\200\177\237<\370\261\n=\021S\246\275\276\227\027\275\034\367\035;.\021\302<\005{\253=_\276\261<\373z\325=\034\364\235;+\263\031=\352\320i\275\233\263\203=Z?\305<3\210>=U\"I=s\217\211\274\260\310\307\274\337\370e=\3329\3359\232\275\205\272\2338\010\274\014\306\026\275\365\350/=P\303\2009)\244\305=\260\335S;8b\254\270\305\370r=$gP=\007A\273\275\355Z\035<\372\333\226<_\255\221=G\233\216=\312\214\230= \025U\274\300\367\201=\360\376\271\275\336\t.:\\G!\274\315\374I\275\247\352\261;\306p\036\276\003\366\253\275\220)\254;.\241\240\275[\031]=\331\374\010\276\356D\246<\000\322\021<n\225\026>f?\256;\016\271k\275.C\254\275:\325\r\2761I,=\331 K=\307\307w\274_V\320\275MQ\343\274\227\232\025\275\020\361\227:@5\2477\023\261\342\274\304\273\245\270Nu\215\271Ch\214;\325\266f:\313\357n\275\211\243p<\350\014^\273\352\335\232\273\300\225+\275V\221L< \247\234:\006\202I;\013\331\353\271\323\367\021=\326\267B\275\021~\232<,\346\224\273eF\t=\260\226\233;\262\234J=;\267\240\273\204\241\312\271\2312\023;\004X\234\274\324q\274\274\346K\3659\251z$=[u/=l\210\264=\317ZN=\263\351r=\242@F<\360_j\275\233f\237\275\200Q\004=!c\n<\032\016\200=\250^\246\275\252\374\033;\r\306\367<\203(\030=aK\366<l\254\303;\022\276u\272Z*\000\275\216;\262\272\215\355{=S\337\305<\377\362\300:I[:<\260Fx9\330\233\t={\376\275<\002\372\224;=\317\322<\220\364\264;\303I\264\275ev\340;\315\010a\275\276u\275\273\255\270~=\206 \032\275\nqB=1\340\371\275/O\256=ub\223\275l\257\203\274\n\322.\274\354c\010\275\241\002(=\t{\022<\030<\t>\331d:<\343M,=\251\204\341\274\344\346r\275\017\236\304\274\031=\205=\\\261p<&\024\234\273\233\307Y\273\372\t\230<\252-Q=1<C=\007\023_\275\242\221\366\273R\005\004\275\220\273m=\374z\245\275=\320c=\000\336\027\275\311\006\262\274.\037%>\311\016\333=\221\2202=\006\371\336\275\000b\007>\022\030\232\275\023|\211;\202D,>\332X\316<\310\360\t>+%+>\341\t!>\364\336\010\276\032\343\004\274!\236\312\275\220\0141<\360T\375=\317C\361\275\207>\373=\023\325\361\275\377\025{\274\014\3231>\213\230@<\025l\223=W\225\215=\202\330r<\256j\231=\320L\342=RT\233=*\340\253<\214\235\371\275>\317 >\320\272\215\273\240\210\007;(\3772\274\311a\243;\336\r\240\272(\021-9\022\212M<-o\026\275%\250\000\275D\030\n\273\030\325\236\273\344\223\356\273X\004\332:\317\370\230;\337eM;\324+\243\273\240\317-8!+\206;9\272n\2730x?:+a#;\363\242\206;\364\245\222<I\223l<-\236o=\024\322\004:s\342\022=\227\347\243\273\351\316l\275\244\255\007\275\ti\251\2744\236\2058\004]\027\276\215\241\213=E\302@=7\347\325=\220\366a=\220\366\203=\310\020s=rS\022;\006\200q\275\333\311\302\275\037l\214\274\353\225\206\2743q\276=\265\376\'\274\202\343\031\275\225J\356\2759\030\257=\264\271\026=E\216\221=}\030i=\365}\227\273\372\332\303\274(\2129\275F\0242\274\004\311\032=\315\253h\274\232\335\370\272\372j\222\275\332<\031>\335\031\205\275b\031#\275G\206\321\274H\322\344\275\211l|<\016\352\031<\344\237\271=\252\220\200\275_\013\266<+\215\004=\376AE\275\026\013M=\301\222\252\275\265\271\333;\3047_\274\364\334\340<H\203\220=\377\3020=\307\202j=\314\311D<L\310\311<\225\341w\275\243{\345<@\333\027\271\344\364\021\273R\240\341\274\013\357;<\031^J\274|OT\272\225X\003<w\017\333\274I\321J=\247,k<\3655\305\272\3626\200=0\212\025>:-~\275\372\317\320\274\264\270_<N\006%\276\271\246F=\227.\245=(\227\016\276\350*\251\275\343n\325=\250\251\001\274\033|\277\275]\307\234\273\265\312\346\275\247\221P\274M\346\030\275fLE\275\262x\273=5\316M\275\030P)=\000\035\207=\302\353\331\275{=z\275\204X\037>E]\277\275k\'\002\276p\036%\275^*\224\274\361\341Y\275\375O\274\274\371\030R=\262Y\n>\211\210j:\313|\0379\037\342\026\274\214\220\023\275\353\267\236\274\316\t\305\273b\316/:\t\326Z<\021^\n=T\363\005\275\337\230\242;\310\366A=%\212B=)j\350\272\234]\223;\367ls=f\017t9*\242`\275\2730m\274\2325\261\274\320M\317\273\214s\300\273\230E\277\271\306\307\341;^\261\020\273\256L\2469uU\237<\210#}\273\026\264\204;X\347@\275\272\355\004\273\370M\220;[S\237\275\271\267Q;\332\034.<A\305\016\275\200\377\2766\362h\031=\026Q\232\275\274\031c=_\210\213;\222P\022\272\207\204\007;\t\2245\274\312\331`\2744\246\214=]=\330;\347c[;(V\034\274o\2619\275\224\362\022<h*c\273\207f>9\3209e<wy==\243H(\275\"0\000;0\n-\272#\211\273<\242\345$=\207\276\020=\257\372D<~DG\273|G@;)\272\233=\307\033,\274\337UF\275\341\312\244\275\350\'\251=W\324\270\274O\263h\275^L\244\273\300^\263<\226(\'\2750\0271<V\211\320<:\002-=\367*\023\275\271\001F\275\311\363\021\275\344\205j<1\300\003\274\r+\252\275\217t\357<\365e:<\276\332`<\315\001\333;\272QX=\327(\315=+\361P\274ifL\274\242t\212\274\340\246\252\273U7\340\274\t\276\327\273\372K =\253^Z<\342\341j\275\200V\235\275\031\345\026=\'\0333\276\177\306\216\275m59>\330>\215=\266t\n\276\341\214Q=\337\254l=\310F\264\2724\354&\276\337\324\304\275\323\267\303=\001\036\303\275\033\364.>R\177\313<\375\240>=g\n\310<\001\310\013\274\276\t\357\274\206\267\267=HK\300=\033w\202\275\313\250\204\275q\266\332\275\225\224\266=U\212(\275o\343u\276q#\231\274V=\354=\250S9=\227\352\244\271\235\234\216<X_\204\271\272\320\361\274\035\016\365\274d\272T:\215\310\243;p\346\3277\331B\333:\356`\225\273\315\246<\273\361\n\243;\335\206\r\2732\366\234\273c#\251\274\321^0\271l\222\307<\314/\204\275\010pw\273\020(P\272\270\373i9\024\335\263\272$\3741\272\340\000\006;b\014\307\273H)\t\275NWW\274R\212\234:\313\267\035;\277$\035\275\304\206\207<i\362\001=\026\247X\275\3066\212\274:U\231=\022\346\246=Z\346c=\333k\317\275\274\356\225=\273\017\205=L=x\275>\332@=\3021\204\275\231NZ\275\322^\324\272\341\326\347\274:\253)\275L\273-=8h\237:\343\322\346\273\032\255\001=i\307\250<\337_\334;w\013{\275\252\212\205\275\373}\235=\214\305d\273\274\262\332\273\rF\010=\266T\345\274\260\336\355<\250\225\026;x\021\211<!s\005=ga}\273\3701\177\274\204\\\323\275JG\203=r\262\'=\330\2178\274\222\220\334\273L\264\246\271\034:q\275\2613\227\273~\214\322\274\243\341s\274\371\230\245\275\350Y#;\323\007\206=.\030,\274b&\205\275#D\244<\010\227\322<\240\010\371:C@U<\251\213$\274\266q\212\274\364\231|<<\221\035;\254\301\246\274\354\311\241\274\027\024\230\275K\2355=6\203\210\273\310\373-<\032\341\221<)\354\016\276\301 \203=\340\226S\275q\347\005\276J\277\275=\255\345d<\330(@=$\364\254=\206\237\221\275{\336\214\275\217\027\242\274\362\216\006>r]\375\275\226\026D<\204\260\003\275\357\372\016\276\276~V<uk\334=\027\321\304=\256\024x=t\254 \276\336)\006\276\206+\034\276\007\353\"<W`\324=[6\376=\354N\233\275h\240\017>H\267\311\275\206\256\326=o\r\006>>\313p<\316\216\025:\357Z6<,7\251\274:\376\000;\213A\t\272%\332p\274\nZ7=Q\006Z=\346\245Q\275\214\\\314\271\253\266\371;\320\235\240\273\325\327\267\272\340=\004\273F\331\233:\304\270\024:\010\242\317\272\"&\213\272\306\264-;j\3451;M\251\r;B\246\220\273\366\307\013;\237\247\346\271\250co;\301b\n;m\374y=\327\225w\2714\264\365<\346\373\030=\275\035B:\337\020\005>[\342\035\275\232\267-\274\025\242\314<7\243*=\'\307\334<0s\211=]\035\226;;N\003=|d\323=\274X\'=\037\202\005\276P\2029\273\347\317T\2758\216M\2731\273\266\274\256w1<\346\333%\272\334vM\274R\037\361<\312\206_\273\'\376\353\273\250G\2339\372=g\274\320s\216;\004\266\305\274\306\023\025\274\225\027\324<\335\361\007\2762\360\230\272\322b\211\273\336\343~\2724\243\030\276\312\276O\274M?\204=\301\361\257=\014sR=\323N\234\275\202\215r=\002c7\274\373\355>=\005\212\003\275i\252d=%p\004\275h\311\027=}\374\230=\223-\262\274@\333I=\232\243\034\275i\266\272<\263\366\215=n2\t=/\t\337\273N\345k\274\375<\2268\203F\">H)B=\311\235\276<\370\367\266\274\005\305W={\274:\275\264\211z<\023#\367<\250\305{\275\022\256\342=\016\010\356=I\025\002>\316\226\231=\235u\365\275\036\370W\275\376\353\214\275pav\274\300\035\206\274\307\017==U\220\010=\026\364\310=\272\217\\\2755\240\360=[f]=\031\372c=\"7\034\276\3433\027\276z\227\016\276\333d)>$. ;\3327G\275\262\227)\276\303\'\205\275\356]P>\000b6\276\034 ]\275\335[$>\355\005\225\274\231^\227\275u\320\006\276\373\301\"\276e>\013=s\245\227\274\316\030\350\274,\270\303:2C\234\272A\335\2478\265\212\021\275\234|\226\273\377\004%\272\2260x=\341\027w=\236\026\014\275Q\223,\271\030\305K:\021_\032=\300\240f8GFZ=\256n?;\344\324\007\273\202SC<6\312\243;\300\232\377:agA;\270\360&\275\260\'\231<Wc\215\273\n\305w\275\000\023f=\025\200Z;;AE=\211>!\275v+\024=\223\326q\275\020Z\315<9\330x=\333\335\034\275j\356\315<b\010\260\275\352\303\031=C;\227\275\014\365\222=q\203\246\275&\027\235\274\367q\251<4_\344<@q(\275\006`R\274\022\021\232\275\352G\000\275/>\331<b\377\'\275\237*[=p\3528\274\206\303\201=1lb=/.\266=\027\240?\275\274\216\214\274\231\235\023:\036\352\203=/l^\275\225\251\210\275\323\321E=\362>b=,\014\265\275\370\327\222\273\264-\254\274\256\021\251=\036]=\275!m\210=Q\2144<\374\201W\275\356i\314\274(\373\204=\027]+\273#\350\373\273;Q\263;~\361O\272\2205\351\273\301U~\274I\372\\<\177\310:=\345\\\245<\004\316Y\275\366\210L\273\004\343X\274\276\0106=\035\311\217=\t\345P\2759\205\355<\320\272\335\273\202\233\201\274\2442u=L\272\235\274\0054t:\237#\223\275\t@\315\273\204-\244\275\252=d=\373\214\301<\226\270\306=\212\264t\275\351\322\356=8\235\330=\224%\320=\270%\003=A\345\254=\324\303\241=gt\217\275\355r\037\276W\3274\276^\234\004>.\312\020\276\355\250\003>%\300\351\2736\304\312\275\222jq\275yd\256\275v\205\253\275\274o\351=\213\211\363=(\332\024=\360\377\004\275RBk\275N\250q\275;\006T\274\253\275\'>S\352\220<R\242\034\275\350\303\010;\237\023&<d\352\244\272\202\313\216\273 \364><\360\226\024\272\260N\202\273\256\010\207<C\216J;\007\252\345<\307~\334<\035\373J\275S\215C:\207 \r;\332\357p=\376\321\211;\332\346\262\274\252XF9{\372);\333u\204\275\260\242\013;\237\331L<\0346W\271@\0349\275\227I\344<\341\264\004\275\260=\256\272S-\"=\303\351q\275\305)\232\272\256\020~\273}\361[\275\232u~;\\P\351\273\177\272#=\246O5\274c\220\311=\315Ng\275Jn\230=\007\344T\275\351\202\023\275\320c\213:5\202\345\275\002\036_\275\031;\006\275:\271.\274\246\212\036;\004\016\233=V\353J=W\325\272\274\021Y\205=g\265\352\273\303\020\340\273\231\343\212\275x\376\242=\311\337\224=mH\001\275\305\003k=\277%\372<\257\356\203\275\220\270\375<\024\235?<\273\256E\274\t\225\"<\362\263\213\274\233\\8=\3667\233;\020\345\246=.{\025>\005r\001\275\342\335\220\275\314y\214\275\301\365\277=jKN\275\231\363\254=\244\275\001\275\352\035\234=\212k <\257%\344\275\0000\013\273\324m~=\367\260\320=\224\020D:-+\r<\375Pi\275\247\345\322<\242\220>\275\325\231\030>\0271]<X\370\204<%\224[\274\006V\242\275\314x\004=\200\000z=8v\261<q\210G\275\344v\213\275b\013>\275\330\224\315=53\"\276\306\3325\276r\313X\275\317\225\021\276K\254\241=NJ>>\354\n\265=\264\255\302\275\307>\362\271\277`\'\275\230}\001\2768D\312\2751\2718>\034i$\276Kr\211<k\253\266=\315\276\201=\325\330\202;p\352\246=\031\325>\275pX\234=\355W\021\276\3556C=]5\034=\270\253\'=2{\'\274}u\267\275#5\337\275\374\340\233\272N\365\'\275D\023#\271\177\005\204<\200\312\n;U\301\004\273\270x\240\273$*\201=\344%\2349m\374E=M\037\357:`\033\013\275\3331\026\275@:\216\265\313\265\r\273\002cG\275\241\270<=\036\235\275\270\255\232\243\273t@\0279\014\322k;d{\016\273,\201\232\273.)r\272t\246L<\373\251F=\273W\361<H\"\207\274\333\035\222\271L\227-\274\360\265?=\004\370U\273\211\025\344=\250e\325\274\254\324==\262y\000>\303\344\266=?c\270=i\377L=N\310\362\273p\325\250<\377\213\217\274\020\366\266\273yF:=Q\210\236=N\243\007<<\313\243<s\001\245\275\313#\025=\302EW\275\341C\203=z\001\201<L\214\016<\367L\030<\273\252\003<s\252\267\274\215\374\202=D\3619<\005+b;\322l\031<\373\205\365\274\225\3077\275\211/\325\2748yw=7\377\303=EV\261;n\225\214\272\305\265\230=\261\242\010\273\366\212@\273o\310\302\272\322\274/;U\316\235\274\372\263\255\274\204\004\207<\210s\237<\026\231\227\274\221h\232\275\214\346\202=:r\316\273\022\322\226\272B\026E=\334\233\201;I\250\273;b\264\320\274\272\372\2309\241\260\2149\034nJ\275N9\'\273\342\320\252\274\252\216Y;r\271\300\274b{k\275\360\336\033;\320KP\274\306%\252\274Hv3\276\333XB\275I\023\303;\007-\367=V\363\241\275\344k\246\275B}\306\275h@\223=l\304\335<\211\327\347<z\r\376\275s\001\231\275\020D\211=\350\030\021>w\367$\275\256\001\302;\262\006\345=k\352\271\275\214_\031>|\265\257=M.\372\274\321\217\315\275E^\216\272%\232>=\304\217\206\275\306\331\221\275WN\037>Ex\251\274\262\253\316\274\023\371\341=`\312T:\310t\330;f\033C:Z?\032\272W\354\224\272\251\346\243\273\366mh\275\366\227Q=^\231O\275\271\315\320:\355\021\216\273w\324\222;\301\357\203\275\364!\235;\001\312\233;\210zL\271f\254#\275\232\277\366<\030\346i=\202\020\207:\020\031\346\266\274\262X\273<\007\014\275\266K<=\222{\3539\357\334\306:\3612\007\271E\330\n=R.\206\275\243\253\014\273\200\262\0329L-\242;\376\3470=\002/\004;\300\030\254\274\322n\205\272\010t\277\272m\343\316\275L\013{\272\tQU\274\037\t\374;O\315\246\274\263\037\351\274\344\202\263<@\317\263\273[L\344\275\355\342F;\261?\336\273\251\217\316<\247b\301<\225\217\022=\210A\345;\366\217\035\273\230\361\313;\037@\177<\0037\221\273\024\257~\271\304\335\254<\303;t<M@\332:\2513\232;\200g\211=\300\003!\275|x\251\274\262\272\225:\275}n\274v8X\275\237\214\321\274v\232g<\355\331\306<^\212\257\272\0015,\276\201\330\306\273\357\004k=~\017\367\274j\021\006\276hf\207=s\252c\275M\375\270\274Kk\213\274hW\205\271\314_\222\275\234/T=\315\324\267=x\344\303\275\216\0347\274\177\305>\275\324\362\273\274\252\233\273\275m\352\t>\032\\\016\275\263s6\273\315\306\263<!\265\221\275\314\230\371<q\357\243\274\244\304z=H\275\243\275\314q\236=a%\r>U\230\314\275=\202u=\303\010\302\274v\r#>\356Q\257=L\336\220=\202R\026\276C\320\325\275\324\335\264<4\021\022\276\356g\031=\361\300!\276\033f\202=\246\354\023\276!q\256;@\262 \275\\\024\250=\221ts\275\025Y\313=\2103\023\276\325\212\021>-\254\221\275\316OG\275\363\356\263\275\327\247\301\275\'\333\253=\265\340\031\276-\017&>\353\332\010\276I^\031\276\373\340\2029\240\361X\266\236\264\004;F\373J==\246\006=\331$\2169\210\366\036\271\331L\030=\322*\262:m\351\303\271t\002\007\273?{\036:\t\354\014;\364\214\204\270\272{\007=\036e\000:\300\335\026\275\272\216\253\273D\246;\271\336\276\216\273W<\214;Z\360\211\273c\230\322:\372\n\321\274\231\224\200\27575\237<-\241\316\271\2223\206\274\016\017\227\273\334\221\225\271p\2658<\276\001\001\272y\2139=74_\274n\333\326<>a\017\276@\023\266=\274\224\252<\332\322Q\275/os=\032\362\035=\301\247\r\276\257n\021\274\377H\030>\261\325Q<H\370\313\275\224\244\252\273\242\231\035=\257\322H\275\371\235\001<9\005(<\335\0045\2740E\361;\273\254\247\274h\215t\275\324$`\275\362S\330=J\225\233\274#\370\225\273x\022\\\274\023P\300\275^\353\370<\t<d\274\266\203)=\305C@\275\257\"9\274\200@\254;\221\021\024=\311n\007={\035M\275\334\2740\274\220\326\315<4)\256\273\204\016\333<\000\211\\;\261\227\020\274i.\004<\243\006$=\275\207:\274ZTw<F;\346\273\253\353\311\273M\257\325<T\222\324\274\356\352T<2o\030=\021^|=\212\222\351<`~]<\033\3736\2734\347>\275\303y\357<\203(q\273\200t=\274g\370C\274U\203\364\273\250\253\301=;t\300\275\221hG=ofK\276\020\300\224=d\001\270\274\302\275\225\275\375\035\357\275\225G\212\274Q\212\342=Tp\363=\243\250~=\227\034b=7^\035>\247\374\345\274\367\214\023=\232h\252\272\202.\313\275\274\313\373<\267 \t\276^Q\272\274\\\025&<R\350\230= Z\306;\004\325\037>\177\r\230\275u\303\252=e\306\233<\263\260D\275-WB\275y\350\250\275\335x\362\274\260i\003\275\350@\203\275n\017\2269\361@\353\272\303\257\003:\203\026\001\275\303\005/\271xyR;\0241\214;\300\230P9\330>I\272[\002C=\322\214\261:\334\002\230;\030\342|;8\335\237;\021\235\232;\304\227F\274Iq\216\272\027\231\3209\340s\034\275\230\364\3349\005!\240\273EO?\274`::\274\270\304\223\273\342O\t\275\220q>9\305\240\377<\356U\200\272\264\330\t\275\367UR;^\361\242\274Ok\321\273\306\277F\275x\245\243\274?g\217\275\tpd<\237\020\036=\233\354\331\274\226I\244\270\220\331\306\272C\261\270\273\256Mp\275\237\233\247;[\366\001\275>Z\006\275&\346\226<\265qv\272\333\306\237<?(o\275\273\rh=\345\\\253\274K\220\274:\303k\316\272\355\3154\275u\rL\274\016\312-\272\366\225\026=\306\364o\274\240\241\201\274y2\272\274\362\tT\273\002\202[=\260\007 =9@%<c%#\275\023\321\n\276\253\014\245;$\322\334\275!/~\275\335\232#<\314\233\035=\264\262\243=\246\355\273:\210\000 \274Ra\317\274\276\270\347=\344!\336<&,\276\274\247y\216=j\265\253\275\'\3254>b\307r<=\317\225\274{\3736\275G\255\246\275\332\366\022>3\341\224\275\016\316,\275\030x\335<\2328\215<\023\367\227<\022\220N<\032\216\'\274O\370\352==\3678\275\204\213\021>:\313\356\274%\003\312=\006\327x\275\001:\361\275r\013b\275\3234\272;\376\203\301\274\332?\263<\323?\331=<u\224\274\366\232\031=~\0370\276[c:=ke\353\272n\362\272;\317\336\004>\234Q:\276^\355\036\275\001\251\241\275^\224\023\2765\002\323\275d\304\034\276\013\031q\275\0330\000\2766\270\024<\232\203(>s\023\234:\307\375\014>\245g\"=\n&\263=\006I\237;\271\263\000\2731\030\320<\275\016\252:\340\223\031\271\234\014i=\370\355\260\271\214\326\235;d\317\365\272O0\202;:U@\275\215\316\201;1n\236\273\275\324\0339\234}\241\273\026\345\337;U[\263<\\\204\013\273\264\031\207\273\twe\2750\232\202=\2541\326\274\230i\t\274P\257\207\271\034\211\2269f$\3468&\t\355\270/\370\223\272\010\371O\275\232\257\201\275\007\224!;\334\340)\275\017l\236\275\0268G;\r\3576<+{\323\275\201\0353=Jq\231\273\344\213\017>\"\r\330\274\005\203\215\275)85=%+\r=\017\275\316=a\005\"=\204x\256=\374\212\002<\225P\222\274l\316\324\274\276\346+=D\256\234=\330\260A<k\270\267\272\341\317\241= \340\216=\032g`=C\002\240=\304\212\212=\020\014\014<`8\274\275\3454a=K\034\034\274\231\264*=\347\336\243\275\243\312\034=\000w\263\274\321N\346\274\3319\230\275\375w\204=l\367\324\275=\215\270\275\364\031\213<\3636\017;\204\316L\275\260;\001\275\034\2475>!\300!=\232\026`\275\023\377\210\274\353\317\030\273\337\243\3629\314\354{\275p\t)\275\355;\337\274\254\016\247\274#Hd\274\344o\026\275\002v\376=\024\214\374\2754\342I;\234\302F\274\200\333a<>a\017>7\315>\275\245iI=\200.X\274\303\221\021>E\262\377\275\242\226\253\275\211\221\201=\220-\277=^\311\253=\"i\037\276\327\230\312;\321\201\347=!\231\034\274l=O\274\037\335\337<\266d\305\275\344\225\034>\223g\032=\301^\243\274z\243\306=\205x\230=\354P\276:!b*=\340S\030\276\'\227\007>J\201\337=9\017\353\274\362\350U\273=\024\255\275th\376<\0165;>!\340P\271E\362g=\323\360\320\275\001J\326=\334>\203\275\350\342\354\272vT\025=\221\271\024\275\002\343*;}\206\034=\231\325\212;\234\201\227;6\227:<\2041\266\274\013\352\243\274\006\376\240;\257\033\346<<\017P9.\227\234\272\217\377\233\273\027\325o;LL~\275\376\375:=%\210\"=\340\323\217;L]q\275\014\312\243;2;\3029\306\361\2269\223}9=\200\253\331\271lq}9\321\"(;\322\300P\271\332\252\005\275D\266\203\273F\375\301<\334~\241<d\242\316\273s2\007\275\352\351\303\275\366o\237\275\267\274%\275\235\314\204=3\3620=\270\346+=#\3365<\332%\356\275\347\177\351\274\306R\301=8*\235\274\305\236Z\274\323\032\335;\300\033\001\2755~\245<5\234\237\274w\277-\275\202\231\020=\317\377\'\275\233~\277=\335\316\301\275,\336\003\275\227e\022\274\306>\340\275O>\323=\216M\033\275\210\373\233\274#\235\256=\227q\341=k\251A=\004\344n=i\247\337<\247\203y=\032\353\206<-\322\263\274\316\311\333\273\217\271\020<h\346\007\275)\373$<\345\365\344=\360\366K\275p\010q\2757l,=KL\031=\316E]\275\300\243\201\274\312\201\316\275\026\322\325<\304\030\375;\306\362\022=Y\n\003<\343\'\220\275*:c\275\333\340\245\274\267vn;\315\372n\275\210\256\210<\222\320\327\274\016\010\034\274\372Y\330<\220\251\313\275z\357\332\2743K\356=\242b\006\276\364\0373=\326\370\014=\316$<\275[\007\002<\334\r\203\275\264\241\021>.\235\362\275P=\322\274\230\277o=\234\363\030>r (\276A:\306\275H\300\377\274\310\024\023>\364\223\370\275\315g\"=F\214q\273\325Y%\276\224:\034>r*\265\273\002(\362\275\302l\321;\255\216\244\275\330\246%\275\235\3253\276\t!\357<\362\216\252\274\347\330\355\275\263\346[\275\205X0=\253\366\216;\337SP<\025\3732;\016a\t;\372\017\177\271\363\312A9\013\2266\272LU\226<`W\305\270~\300\232\272\214\021\3438v\361/<\211\001\331\274<\331p:\n\313M=\n_\237:\310c\3578N\024\3729;v\324\274\267\\\212;;\t\233:o\330\201=\243R\206;\372\367\243\273\303J\016\275\036\234K9q\020\253<\260D\2128QeE\273\323{Y\272\352\\\377=Q\023!=\2646\'\273\242\216W\275Y=\271<\301\270\030>\305\331\262=\007\342\332\272z\033e\275\207\301\207:_\017\221=8\322\032\275\240\314\371<7\364[\275\375\224\023<}\324O=\241]\035\275\020*\263=\250\306-\275\325\251d<\004\002\262<D\026\305\273\3447\205:)\261{=I \237=\r\210\002<)\2460<\341b\225\273\324\342\030:\236\373y\273\\#\205\273\347\3672\275\017\301\r>|\202\211\274\244\235\267;*~|\275_\035\333<\252\314J\275\026\2627\275[$3\274e\2554<\320\361g\275\257@\320;\220\305 \276\307\2244\275\n\212\341\275C\271\323<C\2433;\324\355\232<b^};\252\274 >)K\314\273d\264\027=ld\312\274\214g@<\372\315T\275NY\347\275\323\204\270<h8\351<\256\010\202\275e\220\031<Uls<\245\260i;\231\021\327\274\212\365\253\275\2767\025=\355\314X=7>\212\275\233\340\022>\206\2703=\002\001\317=bG\330\275iy}\274\212\300\241\274\271?\363\275\205\260\"\276\242n[=\337\276\230\275\354\251\343\275\321\314\341<\222!\353\274\364\034\027\276\241\301\320\275\0303\024\275e\333\331=\0035x\273\277\260\317<\255\255\375<\301\333\265=\260\217\007>\021\010\3759\216\232\271\274G,\300\275\211p[\275\272\025\353=\017\347\307\275-\274Q\275\314\r7\273\3775\242;\342RO\272\356\234\200<\3775\242\273U\036G\274g\027E\274\330)\2319\365\204p=\353z\337\272> \206\275\210<s\271V\273r\274\245w\201<q\277;\275^\377\356:q\325w\275\346\346(\274&\235R:H5\341\274\360k\304\271\274\\\004\272\007\277/\273d\3407\275%\356N\272z\370w\272\234\257\236;\274\334\240;\356@N\275\222o\r;\214\306\216\274Qi\215<\351\032\376<;\250\032;e\231C\275\0247\253\274M\254\354<\022\226\240\275\262f\257<\246\207\364\2748\017\323<O\013\031=\201\300\332={\335\364<\201\336\222\274\027\343\245<\021\241\311<\253$\n=\375\243\025\275\361\335\351<w\334\024\274~\246\307;uN\243\273\276\364r\275*d\236=\265MW\275\266\032\224;\217\327\211=\262\241\263<\346\240\331=\316\376D:\356K\212<\034\024\004=\314x\373=\376m\276<\020\213\003\274X\253`\275,.\344<\027G\375\2743\'\225\275\025\274\374;\222\257\017\273\265\353\265\275ri\034\274\235\335/=\177\213\307<\212\201\"\275\210\314\310<l\220C\274\353C\330\274\000z\230<dP\351\275\256\264s\275Y\216\212;tb1<l\360];O\031e=\335\250z=\212\023\200=\350%\373<UH>=g\304\334\275\237\243\325\272\340\"m\275\301\205F<\233\313\354=\3356\344\275\201\303[\275S\232\341=\226\024\225<9\330\273\275m\237\257=(mj=\005\236\230\275\177TD\276\367;\335\275J\313\300\275\206\244\262\275F\3132\273\351Q\013>>\215\332\274\252kx\275fc\237=e\302\215<\001\034\353\275\224\264\366\272\333\355S\274\030\343\326=\274c\214\275\334pT=.\'\310\275\310\"r=\013_\023><\310\357\275\303\177\244\275\241\274\204\275\010\302\t\276\217((\273\251\313\233\272\004I\310;\210\341d=\320\261|\272Z\313\3609\326\251\'=\"\223\020\275\036B\216\273\314\323\243;\343\223\005;q\344\214<b\033];\032\235\236:l[\001\272\031\306\007;\352\016\005<\221\222?\275\377%\024=\366\244W;\374\337\211\272H\276\332\272\010s\226\272\035[5\274\244\016\\<^A\216\272@\253\002\273\344\3511=G\216h=\340\255\215;\276\326E=^v8;k\301\253=\200\365 =\n\3714\273/\305\346=\263\320#=bC\031\274\031\003%<\013/c;0\270\343<\314\367\211\275\037J\201=\302=\001\2751.\007\274\033\306\204\271\354\\J= \320\n=Qw|\275@\236\353\274\352O\025\275\231\237\250;\314^\216;\374\271\013<c\373\234\274\321Y\232\275\013#\207=\374\352b;\000 ];47o<\257\375/\273T\241\270;8\203\224;n\n\006<yY\264=\025\271\331\273\226`\257\274$\362\244\275\036g\016=6\000x\275\234`\242\274\246\014\022\275\320{X\273PV\204\275O,\':\253\307\323=\016i\250<\336\371N=\375g\214\2741\377\025\273\355\3311=hei\275%\230V=\210\261\223\274\345m\322:\225,E\2753\256\211\275Y\303}\274\236\022\320\275T\034\206\274<\016q<\034\371b=}\217\266\275\307\363\227\274\270\274\033\274!\370\272<\2632\211\275\007\377\007\276\344\\#>xJ\000\276\376=\007\276\220\260\000=\357\270\375=Br\363\275\302\343n<\324\260\320\275C\003\314=CO\007\272\2254\260=\003\026\363\275@\232\361\275\276\274\036\275\010\225\221\275\270\263\227=\250\314\277=0\221\243=\327\214\262\275\343\365\236=:+<=\216\n\231=\236\377\004<\276^:\274!\307\035>\030\245->\237\227\355=\255\305\230\275\314\252\216\275\365x\262\275\236\204\203:dL\234:{\251\260\2721X\"<D\242=\2749\233P\273HV\207\273\233\211I=L\2329:\211s9;%c\241\272d\005\370<]\017\234\273\272l\022\275\231\270P;9k\227\273\3221\225\2738\313\237;\234\004\305\272\370\217\013;\033\213\3329\202u\262:\206\010P:\007\350\214\273*5\343\272\307\312L;\020\375u7~\002\237\274\347\323`=\350\324\035\271:\257\220\272zP\010;\266\t\253\275\374\036k=\212\347\203\273\353VC\275\\\033\230\274\3147\257\275\224\261O\274\234>\354<moO<\200\313Y\273\356#X;\217\211N<b|_\274\375\003\211=\014\370+\274\237]*\274\316\366\231\275Y\311?=\203\317\027=\326\001z\274\350n-;\267\336O=\034;5;\262v\323<\010\246\254\274\263t\277\274\200%\330;\305\\\r\275E\030Q=W._\275z\223\023=\035\303w\275FN\253=\021uS\275\004A\273<1\024\265\274\177WA\275\347%\013\276c\005D=\340Mv:\336%v\274\360\315\201<\351\371#=\301\366\221=(+\315\274\3560\253\274\234\306\030<\000\250\236\2737\255-\275\230\257\347:\211\034\242\275/\010\006:\312\006\213;$|\272\274\233\255\362\274\217\245\033\275!\362\'=\ru\251\273\010k~:\345<@\273\365\232\222<$B]\272\2634J\274\035\355e=LI\n\276(\324\005>\262Z\305\275n\322\244=\265\227\002>\032p\232=\347W1\275<?\274\275NTy=\025\227\322=\350\265\241=Y\262s\275\231\365.>6#\210=\336\016\020>\033\352E>\205\217\013\275\371s\234\275E{\362\275 \276\373\273\277\331\033=J\223z\275\301\034i\275\337\366\322\275\206M~<\334\326\244\275\244\226\212=\336:\263=\307\262\317<-\260Y\274<\243,\276f\016\336=,\377\237\270\231a\240;\312)$\273]O\230;\366\211}9\314\256k\271qK\274\271\002\017$\275\034\204\201;\361\256h=\005\315\245;\345\002\327<\267\240\024<\351\327\243\273\307\357\301\273\260l\333\2713\nR\275J\214\010\273N\030\304\272\177\307\204=\014N\214\273\020+\251:\210u\211;B/\307\274\0328n=\257\357a;\330\364\241;\000\265\203=\332\"\\\271\370A\306<%\202C\272\315\2048=\243\226\202<\037S\250<D\243_\273\356`\225=7\027\240\275\004\337\t\276\3563:=F\014\233;\347\275R\275p\005\220\274\301v$\275\337\270\235\275\347\007\244:\370\354\205\275\222\337\364;B\016\371\274\\N\261;\010M\211;Nb\216\275\320\025\n;\272L\217:\202\205\253\273\276K5\273\370\2335\275:7n\275,A\273\274t\342C<\304R\275:\225\'\246<\025\324\013\274\223\212\315\274|f\\\275\225TI\273o\033\\\275\327h\262\273|\313\250\275\270\033\000=v\344\002\276h \271\274\000l\355<\2547V\274\365\326r=^\300\260\274A\227\200<\203\0130=(\305}=\243&\030\275 \350|\275\360\317\027\274$\033\371\274r\233\252\272\3060N\274\263\036\030\273(\320\207\274\367\262\210=\313=>\275\277\351%=\232\264z\2751kO\275D\030\177=\315\204\374<\357 \342\274}\320\t=\220\204\026\275\263\335\347\275\351W\005>cd\030>\311\227\027>\373z\n>79\036=\240Y\223\275\355\264\3579\020\344\003\276\331p8\275\305\271E\274\325\226\331=d\340\362\275\364?\017\275j;B\273idV\274\243\323\326=_\033\260<z\310E>409>\026l\351\275xm\267\275Ex|\275\314\014o=\224\2210>\212rg<\370\r\306\275\000\310\234\273\n\023\241\275\273\352\003\276\212\'\034\276\260\240\255\275\372\260e\275\216xz\2736\204\247\272b\207\034;\202g=\274c\364\363:\235 \014\273\2010\3329\326<$\275\177\205X\273\\\234,=\242\351\002<b\030O;W\2036;Lq;:\330Q|:\203\250\235;\206}V9\245\032\232\272J\016\3669\271D\271;z[\233\272D\356c=\2108\220:\254dN\274\216a\233\273?#\024;=T\332:\006g\222:\024;\265<8\032\017;X\016\t\273=\235N\275\027\027\027\275\250`$\275\037a\247\275\321\321\214\275\303\226\342\275\377\275o\275\341lj=\207\274\331;\002\352\256\275\334\231\001=\3571L\275\211f\217\275B\024\370\273\031\205\022\275\200\265\357<U\242\325<\361\010\262\275n\272%\276G7\221\275\021\266\275;\233S\226\274z\341\025\275(\322c=\365o\017\275\267\254D\275\223\226\032\274#\331C\275\244z\215=D\034\340\274\203z\221\274\270\023Q<E\002\344\275r\231y=j\277\267;\377\235\216\275\247\264\224=l\376\363=\026\267\224\275\323;\240\275\324\213B\275*,J\274\356\374\006=\204\234\273\275j\376+\275\220\376\003=\032\\D<\226p-\274\206\233Q=>\227\301\275\336}\246\275\016/-=\311)0<w\304\226\274b\317\203=AQ\260\274m\254&\275\005\243\317<\361\337v<\221\364\250=\274\303\207=\352\035\026=\346\212\272\274(\240\001\276d\371\203=\032\277\230=\320\207\013\276\346x\227=h\242\201=\201\006\346\275\343\234,\276\210g\205\274R\323\203=\330\232\">\316\302`=\232c\035>\314R\016\275\364\tn=\257]t\275\327\361\317=\273`\000>\310\\\035\276\222z\200=8\336p=\\s\223=7\271k=\234\207\031>T\206\256\274J\345\341\275\'U\013\276\327\341\232=k:2\2767\356\340=vR\271=\367\234\353\274H\234\214\275\254MO;\327\354$\2756\331O=M\364\335\272K9\227\274\232\260\006\275\t\302\224;\031\246y;\017d\233\272\336\335\006\2742\205\203;v\330~=g\374e<\362\237\334<3\241 \272E\275\373\274\316\254\3679\262\351\224;*4\263\272\202(\205\273Y\245w\274\367\225\256\271]\217`<\306\024\207=\310\t4\270d\213\022\273]+\037=\367\030\024\275\311\267x;\034z&\274\020L\373:\313\013\224;\316\230\337\275\251\2704\274\330r\265\275~N\004\275[b\271\274\242\223\270=b\317 \275\363\313\r\275\274m\254\275t\322\316<V\026I<(\366\215\275\375\325C\275\265n\t=bb\243=,A\024\276U\037\236=\006MU=E\337\016\276N\222\227=\343\206{=\2360\300\275e\226s=\n\313I<\016\226\275\275V\275\277<\240\316!=\226\262\305\275d\370\344=pR\021=\221\304\214=A\212\273=r\332\304=\270\354W:L\371\220\275\276\321\201\275Kz7=\0167\360\274\2518\016=\025%\265\273\241\026\216\274\016\331\004\275(WN\274f\025\215\274D\005\010=\343\305\244;\216\tC=L\3019=~\330\367<Vz\367<zl\007=\230\325\307;.pL<\342\013\021=\\6\020;\220\037`=\222\330\177\275\363\335\366;\316\225\251;\344\315\201\271`\225\261\275+\032`<\261\350\'\275\310R\327=`F\375=\366O\265=6R\277\275z\302\n>\301\0271\275\335O\372=\307\034\303\275\206\010\241=,\261\242\274\32528>\216\303\t>U\361\033\276D\236\230\275\201\016\330\275\232\334\016>\266\335%>\005\237(=\201\205\335\275(\375\006\276q\366Z\274>\371a\275|\032d<\357\025\314\275\034\2545\275D\334\231\275\265y\211\275T*\003\276\276*\306<\022*g\275\201\330x=Z\267t=\225V\022>\362\256\243;@\323\330\270wX[\273@\\\376<\027p\322:\357\354^;\261\343\300\273\213\310W<\277?z=($f\273\026\300\3739\322\264\226\2736\234w<\007*\306<#n%\2722\264s\273\302\221\243\273\326\347\243;\316\204\326\272B\224j<\362\227\230\274g\276\224\273\274\376M;\342*6:\207\227\216\274\256\255X<\022\232 \271[\031=<ULq\273\332*3\275\204/\004\272\267\206\227\2723y\331\275\027o\023\275b\177\257\274q\266\275<\371,\316\274\222x\311\274\034\372\244\274\016v\314;]\370\r\274:\342\263=0\321P\275\306\272\004=6oI\273,\303o\274\233\356\226<\361\013n\275\362\202\266:\234\377i=\210\302\254=D\210\205<\000\240[;\264kU;\327\031e\272\372\'\261=\267\005D\275\307\375\215<m\3361;\303\342\263:\223wA\275\\\230\243<\362X \274\266Sx:\014\271\200\274r\225\317\274\354td<\305\005\220=\260\204\246=\003aL\275TE\341\275\232\374\300<;\352\235\275g\200\356=N\255\010\274\315\374\t\276\354~7\273K\255\200\275\033p\223\275\366\350\n\275\270Cx\275\030=\206\275\350\277\274=\014$m=\246/\336\273o+\342;\331\257\002=\354\017\031=b\253_=wm\017=\217D\212\273M\360\301\274$\335o\275\352}\022=\001\217\347\274x\220o<\320/9=<Z\235=\346,\231=#\225\326=\335\t3>\376/\222\275\r\304\031\276\307\033\030\275\266\253#;\270\031\264\275\002YJ>\262M\026\276\027\2179\275L]\002<0\203\233\273\360\006\322\275W\304\346\275\364\272\257<V\310\257=\237\031X\275\034\310\344\274K\317\221=\013].\276\014\226\211=Xy<>F\200\236\275$\327\353=p\360\002>l\034\034>\322\215\022>\301\225\371=ih\373=\334\367V;\276\035\336\2714\2321\271$\2622\271i\247n;\030\235M9\341\302\000\274XV\223\273\245\303\307:\035m\307\271h0\031=\204\262$=\017\036_\275\347y\033\274\3326@\273\316pG\273\346\242p\273E\3541\275\230\374\261\273\307#\205=\010\322X\272\203\207R\272\262\354?;i\240\253\272e\014\313<p\360%=\352\371\244\271\030!\0178\234\013j<\351\250q\274\202\310\236;\024\346\231;jp\247=\027y\216=\321\376\230\275\347\030*=J\350\233=\265\324\354\275\230F\375\273;;\260\275\202\340\232=\275/j\274\221\002\302<\332j\315\275:\013p;lz\247<F\0016\274\224W\305\275=VB=\274\344\262\275\020\030\003>\277R\223\274\337\2212\273\345\226\242<\340\207<\275h\323\027=r^\036\276/\226^\274\243\t9=\201c\253=Zh\253\273X\322\346<0\022\335\274=\213,\275R@\274\275\334\367\224\2742\376\333=\304Z\352\274\244\010\027=\240y\303=\032\r\365\275{,\256\275\326\353C=p\374\006\275\372g;\274\2373\235=(\036\305=|Z{=\237n\240\274\017*r\275\332\322l=rs\217=9\254:<\026\371\006\275\022\001\330\273\232\362p\275\350-X\275W\230j<\306\315\247=`\361\006\274\346\241g\274\0065\023\273\345\210$>\277u8\275\2464\177\274\276i)\275\342\232&\276PJ6\2753\362\236\275\252|\021>\246\330\030>\376\352\257<\271\266\307=\344D\033\276\205h\207\275\305W\243\275\260\241\273\275\032\036k\275\335 \275=&\0037>\264n\301\275\344\253\347\274\216<&\275\352G\211<\206\201\366<s\343\302<\212\004\371<\361\223G=\323)\255\275\014\016\247\275;^\223<\346`\014\275ptx\275#\324\302=\262\\y\274\322\237\003\275\232d\034>,W\352=T>\340:>o\026\2752\221\363<\025\275\032=S\305\004=-\tG<D\266\362\272qYr=\225\036P\275T)C9\2256m\275E\226O\273\236\226\375\274\237$\365<X9G\274\352\323T=`#\243\267\201\003\003=$W\320<\023\211\351:\027\233u\272\212\324\243\273\310\275~\275\375\303\302\273\304`%\273\333\177\307\274\305\320\006\275e\024\3179\360\234\343\271N0K=`\016X\274;.P:v\016\203\273L\254;\275QF\206=\235y\t\2761\025\322\275kl\235\275\2574\033\276f.\245\275\277%\211=\232\2160=M\250f=.\364k<R\207y\275:\2600=\352C\220\275_5\252=s~\216\273z<*<+\271s\275y\305\221\274\304\337\352<~\212Y\274\306\023\206\274#V\372\275o\327;=|\244\303\274\252d\345<7!\217=\251\362\257=f\205\"\275\035`+=s\215\333\274W\\O\274L\025\036\275\027\302\033\273\211\320\"<9q\272\273\326\244\033\274\r\306\275\272\253\332\206\275\022\230\267\274\256\350\215\275\373+\211;\276\'\331\273\261\245 \273\255\2144;qo\346\274\337y\236:<B\304\273x\355J=\013l\006=\335\231\314\273\22764\275\334f\025;C\253\274\272}\225\240<>\362\004\273\023(\206\273`u\234\271\007\231;=\016\tl\2756X\214\273+\371\r\273\331\236\000\274\354<\302<ZM\222=\363\034\204\274\342\250\032\276\231\365\226<\346_\037<\204r)<\303<\230\273\320e\311=\033!\007>=5\270\275\237\212X=\333J\330=\370\314\273\275V\200=;\270\005\236\275\247\026K;\251\256\217=\260\272\022=\223\264&\275-m5\274c\274p=\\AR\272_Et= \250[=\3210\330\275\000{x\275\217k\263=\2336\304= d\221\275\303\266{=\242\213\034\276^OV=4\214\327\273\266\347$:X\335\255\274\337W%=&\340w<\235(\366\271\344\350\241\273\024\372\221:\270\267\210\270[\220\226;zj6:H\276\200\273\330d\243;F!\n\273\221\350|\274~v\013\273\246\276\t=U0W;R\205s=\232\216\2579\267\333f\272\210M\201\272\323\343R\275\222h\3729\273\217(\273B7\266\273\244\262\233\272\214\241\353\272\352\253\323;1\304\234;\331\212M=-\374\224\275:\n\241\273a\014\002;G\320\301\273\371\270\274\274\217h\213<B\205&\274CL\376:\336e&\273F\276\371:\344\re<\337\355\202\273\271\303U\273\273\"\356<\232\034\205\275\2250p\275\223}\316\273$\302!\275\242\225\346;M\277n\273\265-\304\274\322$\221\273\232\023d\272h\2650\272\'\246\240<\276\3525\273\241\222#:\2435\037<\207\326\225<\323\245\270\274n5\233\274g\212\356\274\277x\243\274\030\262\014<\355\374\\\275i\355%>\340\001\254\275\370\234\323=-\363\024\275k\005X\275\203\257Y=\003\341\213<\312\243=\275)Ah=\013.;=\357\226\320=\343#\222<\034\353\266\275\365\007\026=1\232\242=\370\256\245\275\010J\364\272\024\262\027\275\010\337\264;3\\\001=\200Gc\274yT\330\275(\300\220<\250\312\236<8\024\224=\234M\035\276d\352\177<KTS=o\033\031>?\316D=\200\374#\276b\232\240\275&\236\370\275&+\232\275\370\336\212\275\236\376\020\276\021\251\361=\204{\n>\274\207\316=\252qq=\325U\203\275Z\375\336=\236f\253\275\252\215^<TT\315=\246\205X\275\323\376|=\314\313\330\275N\020F\275\240\032w\275\325\347\021>\271\252\361<G\3122\276\323]\016\274_Pi\275\320\343\255\275\204\231\032>\210\352E=;\347\251=F_\340\275\n\360=\274\324/\347:\034\304W\275\204\330\261<)\355:<(\021-\271\261\t\223\271\016\251\010;Y\316\243\273\013&\357:s\250u\275\007\220\235;BpS=\347\271\021\275\350\027\376<I\023\004;ay\022\275\302\200|;\244\242\252\271\320\207F\273\237\020\2769j\007B;,~\226;\267\323e\275B\227\033\274I\316\204\274\207\013\255\273\360\207\032\275\271T:=b\024\233\273S\0036\275!\245\232</b\350\274ps\031>\237/\307=[L\036<\255M\242\275\023S\241=\32590>\344Mj=\265\003\033=e\207\241<\237H\032\272H\023\250=\023\226\275\274\353\272\307=n#\214<\314\212\375\273\203j\376=&\231\211=C\354\016>\352\277\265\275v\376\242<)Y\024;\215w\216\275+]\005=)\366\245=\275O\211\274\021\251\325<y\027\235<Qc\027=`\243\301;^\'*\275*\352\212\275\035M\223\275\323i\350<\027H\212=\225F\260=\243})=\310\235f=+\252\t\276\274\347\366<\307C\252=\026\364l=\265\007\213=\202\237\3138*\2015>\376\237W<\351K\301\275\230\005\277\2745\017\260<\026\007@\275\306\254\253<Z\337.\276\005\'g\275\264\005\372<z+\255\275\251\3109=\210\020\375= #\262\275\'\277\354<\256\204\004\274\220\014\244\272\276\313(=\211\222\014\275\306\326(\275,\306\002>\232\260\027;ta\022=\006\233\366=0{A>\354h\t\276\271\271]\275\237\200D>\253\371\033>a\313\223\275\365\250\034\276\317 \324\274\247\241?\275\336q(\276m{\223<\037\275\231\274\336A\t\275\364\021\022>\364}U>\037\t\"<\334@E>\356y\271<\202\327\217=\030\242\210=)\351\014>\276l\322=\243%\002\276\254d&>\364h\214\274\225\177\024\276\013\003n=)m\032\276\003\227\254<a\035o;\251\272\226;p\270\333\272\3339\026\274\\(\001\272@\253\3659\030\263G\275Tm\271\273\252\250\036;G\362?=\332\311\207\274\037!\201\273\022\276\215\274\0363\370<\336\343R\273\000\206Z\275\242\017\3208N\013\007<^\234\247;Q\322\346<\222:C<\221\341v;\313\263m=+t\\:\t\216\371\274\355\001\2309\302\225&\274\304_\314:e]\211<*\356w\272\277\344\243\273\006\220\223\273\3156 >R\t\303\275\370\236L=y\242`=C\336R\275\205\025Y=\231w\257=\253\031\357\274\332\236\023\274\036\376\341\275\366A\r\274\376\365h\274k\272V=?~F\275U\241\211=$`\225\274\323\336(\275\375\235\021\276\213\301\036\275\345}i<$\256U<!\331\325\274-\003\276=\331q \276\354\340`=\030T\257\274\372\3632\274d\362\217\275g(\235=#\332\236\274`\370\217\275\360\256\355\274<\203\354\275il^=\004\017\242=\257\000\242\275\250\027\206=h\264\334\275\316\0008\2750\003\201\275\226\206\021\274of\203\275\nM@=\343\260\215<\235K\023\274-\300\243\274\021\235\022<\223d\200<\316\376\334<kg\337\274\217B\231\275V\347\327\274\347&\257\274\317\0318=\361\345\177=\3431\337=\223L\210<j\303\315;\305\226_<f\005\004=\364;_\2750\322C=\030\022{=\323\353\307\275a\2665=\313\026D\276h\021\r\275\213<\205=\260\026\177\275\306\242F\275W$&>v\010\330<\240;\035>\023\344f\275\303\350\007<\235\021\220<$\234\207=n\336\237\275&S\"\276\022\204\311=\205\306$=\205\334&\276=4,>\010\2110\276\230s\331<\242q,\276\021\357\343<\247\034\321\275\357\0240\276\370\302\265=a\037U=\337f\224=d=\271=\213\221e\274\302\367\t>\376\242\000=\214D\2038c`b;0y\036=L&\250<~v\267:2ck\273#\256h;C\226r;\316\274\357\271\\\321$\273\367:\224\271\030\344\223:\020\256\241\273\375p\244\274\305\005+\275g\337\313\272\270\010^\275[\271s=\202\377\207\273\270\316 \273D\025^\275,s\241<\'\343y\275$D\274<\225f\323\272%\2704=\301\177\234\273J\034\214;|w\231\271~\023\205=\004\035\3667\177R\213:\357\216\003\276\024\267Y\275L\343\032<\023\005\006>\244a\363=z\331\302=^\306\230\275!#\273\275C.[=?\370\207\274\265\257\000=\310\203\034\276<\341\303\275\337\236\304=8Iy\274\377(\241=\260\307\032\274\361\026\022\275\302Z >\203wP\275\250)>=j\346\325<}H(\275\250\261\327==\364\206=\366\340M\274\237\236\226<\200}\243\275\027\347\306\275;\276;;}E\213<\316\"\344\275#|\216=\364\250u=\331\024\225\274z\245\217\275\251\214Q=\211\313\344=Gm\330\274\374*\334\273\276x`\273\034\333\304\275\237L0\275;\244l=$\274M\275\201\003\244\275\036\353\332\272}\330b=\207\031\303\272@e\277\275a\037\364\275c+P\274\335\004\362\274C\343{\273\213iW<\032\301\355=N\313c\275\177\261C\274\313\307B\272\354w\336\273\304?\273\2755>\207\274\200\354\372;\224Ym\275W^@\275\326\016\351<nE\257\275`u\">\'=\035\276\024wO=\220q\020\276\234\n\314=q\000\251=\241Pe=\307E\025\276\024q\266\275\321e\350=_\221\336=v\2147>/\013E\276\332s\234\275\335>\267\274Nk\366\275\037F\231<\036\301\364\275\225\377\244\275\262\241\003>\204\234$\276\237\222\370<\303\226\320\275\256\377\277\275\236\330\002\275v\345\365\275\271\355\202=\205mw\275\204)\207<\032rb=?\031\017:\365\311m;\210\304\312<h\360\241\267\234\333!9\356M\211\273F9\230;m\210\301<Hj\325\274\240a\025:\350\343\302\274L\3268\271\233\362\t\274\235z\241\274\354\311\207;9\001\0059Y\016{=\241\211\360:J\240\201\275\273c\213<\270\340\321:\330\241\r\273\374\212V\270$\246\224\272\024\260.\273\345\210\023\275\362\022\223\274]\\l=\001\037U=\260\371\262<J\206\200\275\335\351A\275lpj;R\214\246\275\352\267J\274=\314$=a\037\233=\346\257:\275]\207\206\275\337A\200=\010\244\236\275\376\311\234\273!\332d=\246Zm<Oh\263\275\254\025x\274%\231\017\275\302\001(<.E\261\275\311\355\177\274\257\240\037\274\300\036\031\267-8y\275=\202%\274 $\375\274\210L\023\275\212\370\272\273\003\360G\273H\203\337;\355\2203\274\034\326\230\274\376\236\352\273d@z\275zT*:\343\031\206\274\027s \275n\310\204\274>\3141\275\252\245\':\212\261x<9\002x\272\257\335\243\273\025\373\307\274\233m\202\272\263}\037=\305\020\026\275\274s\3739\330\212\3358\177W\212;\315K\177\275c\265H\275\276\342\2328\236u\240;4\347\032;\355\177\243\273\005\242\002=\003\344\217\274{.\203<$\373k\273Rb-\275vj\374\273\033}\374<\216\202\206;M\243O;\351{\036\273\t\030\205=\377q\010<\026Y\314<F\002\017;|\257R\267\312\372k\272\253\'h\275\207\234\t\273\332\306\306\271/G\235;Z\032#\275\343[j\275\316\335Q\271\334\342#=\234\226\016=\013\3431\275\325\t\334<q;\323<@\241\3029*d\r\273\205\232\017\275\004/\200:\205\261\206\273O\342\213<V\220\243;\373\243w<\'L\370\274\275\303I\275x\274\000;OY\237;\374\020\247:\262\333\t\271\226\267M9RGA\272\r\007\2079\250\355\321\271\256\365\233\272\246\264\237\273\037\216\234\273U\035W9(\231\354\2714<\20377\347<\275\211\312\026<F\"`\274\034\375%\274Gw\322\274\206\357\202\272\341\257a:\372\330\002=c\346\307:\307\331\3038+{8\271\246@\n\273=\204%=O\244\365:\341Q\341\271a\\\242<:\362\236;o\016c=\257\360\313\271\371z\245\272\301g\350\273\260\002\202\272\271\010\233\273\302\307m\273%\237\206\275\026\247g=\246)E=\252d\356<\014\344\'\273\034\032\255;\n\221\237;&G\014;\252P=\274\327\243t\275~\016W\272\017h\321\273^\373\222<\320\0250\272\354M\214<\364M\345:\200\234\300\272\367I\225;\222\377\3379*\241B\275\334\343\216\273\374\365\337\272<\342d=\3744Z\275\231=\240;T\254\212\273\207\363/\272\256\264x\275<\331f\271\331\300\022=gA\244\270\3028\235\273\036\001p\272\276\312-\275w\373o\274m\347\324:\357/\r;\2121\3768\036\376d\275\226Le=h\314\274<\246\246%\272f\345\001\271l\345\206\275=\013\002;\322@$\270\351V\317\274;\016\226;\352g\n:\216\201{\273\002\255s\275e\330\237\273-\021|;\363\226\001\274\032\220}=\323\221D:n\335p=0h\2278\202\206\204\275V\373#\273>\336\212\273j^\236\271\314\250H\274\355\230\005\272.ql\272a\304\014;\204\"\206\274\331z\222:\301&\301\274\271c\226\273\271D\372<\200v\235\273\256\022\017=\212\347\215\272\030!\354;+Z\364<\241\274[\275m\010F<\204\247\3608\201kf;\017=\003<\300)\0249\302\3721:\001\034u\275\207[&\274\222\371G\275#]t\275Y\220z\273\020\3741;\352!\022\274\016\025\343\272@\325\211\265=\217\325<\351\253A:,\352\022;\301\373\037\275^\305\227\273\177\212\223;\034\232\372<\255G\205\2755p\r\275\241\332\177\273|\t~\273hJ\203\275\267\271\215:\224Z\273\271L5x\273\217\330c=\177\367Q\273\213\246*\275\022l:;\335\364\375\271\201=\377\274(J\214\274\277\267~\273\013r\201\275\236U\375\274\'\320X=\250\373\300\273%\374\306<\355\365;:\244\234\245:F\2153\271^Rk\275\244v\024\272\274)\000;\366\032\r9\350\034-;\205\370:9iT\264\271e\236\242\273\202\237U=qk7<8@y=(T\232;+:\312\274t8\235\273o,\203\275\340\315\365:\267\245L=\034!]=\354$.\274\250x7\275\211\210\212\273\377-\361:\3363\2749\271\004\007\273\332\034\3149\316\310\213<y\341\22092g\016\271\n\344W\275\354\232)\275\374Fj\275\002\020\013:\203\301\252\274_T.\275\337 \211\273\257)\276\271\226A\202\273\006\025\335\274\206LC\273;\037@\272W}\034=\370\212[< GU=k\364g\273\373w\330:\207\215;\275 \261\221\273\034\234\245\270 \341\3579\034z\235;\214\222\r=\373u[=S\325u;\206\221\2079\256)\206</K\007;\025\254\232\274t@^\274<\327G;Z\021O:\024\370\323\273\326\021\006\273l\037\010\274o0!\274E\317\026\275>\203\005\275\233\201\254\274c\256\324<?\016\030<\354\365\003=\254\002d\275j\353\021\275\260S/\275b%F\274\0130\243;\207\303T\275\005\204P:\2109\225;\030\332`<`T\006<5\202\226\273\314\3551;c>\220\272\277\232\014\273/2\230\273\210\233\014\272\003\013*=H\322\355\272\3457\202\273\315\267\003\271\035\007\210\273\365\325]=\360+\023\270\336\016\3739\367I\201=X\030\024\275\362\016\230:\010hC=}\320\001:\"\242\323\274\245\324\243\273\004\017\321:\177c\237\274\274P9==\2434=\323ee=\277\324\031\272\371\300.;\253\006{=\276Q\211\274m/=\272\374\332\251\272\"#G\275i\352>9\335\216\241\273n\317_=<\253\210<N_\375:\006\333-\274:\034X=\360\250g=\377l\240\273\032Bb\274}\363\204\271[\347\210\274\331\321\223<Z\243\371\273\000\231\306\272\203\352\300:\230\255D;\244\310\241<\005\211\201\275\332R\225:t\363j;\360\021\206=\337\375\210\273^F\006\275\037\264G\274\236\212\035;2\360\3769\035\311\026;Yo\300\274N\352\003;\201\277\227:\325\203\243\273\261Fg\273\007^F\275\204\331\360\274G6\313\272D\022v<\232\3155<bGF\273z\310\t;\376\342\245:c\345\007:\022\'\213\272f\200o=\350i4\274:\307\243;\365\264X\272\201dx\275\316\201\254\272\200lI=\341\263\006\2733\n\177\272\274\227\211\272v\317\204=\036\327\355\273\317\335\320\272\275\037\240;\374\003\002\273g\273\024=\321\365*:V!\023;\021\237\240;\271d\243\273\3655C:H\256\263\272/\376s\275%\212\021<\353\000\240\273\"\271\355:keM=}\232\323;8\2145\272\233\332y=\034\022m=Q\344\224\273\305\360\034\272A\017\026=U\343\224\274\010\014\210;~\377\350\270F?]\2754\\\235;\374\243]\272^\033\3509\030\315D\275\034\2536;\250\201\2369\256E\252\274\024^\032:K\342\374\272}\231\013=\356\353\214;Z\202\231\273\257\333\210\273b\270f\275z\253P;i\266\r;\246\033\304<\033HI=\"@\204;o:\375<3\247\022\275\177nO=\'b)\275;\276w=e\335^\275\001\211\205=\365\343\037\271\302,@\274\022\002%;^\215\t9d\236\215;\234\263\23080\355\263<\007N@=\004,\203\273\317\036J\273i\357\242\273\033Z\237;\334\346\006=\022U\r=\013\221\242\271r\360\206\274!\020\231;_\333i\2754\322\005<\374\352\2118\365>\266\274\210\220\234\272\214L\230<\027D*\274\214\330\2079|\215\t=\326\267Q\275\"a\013\273%\321c:@\264_\272\221\314\223\273&\007R=\227\013\221\272P\256@\274>n\375\272\234\300\217;\013\371z;\032eG<\2277\025<\376;\240\274+H\264\272)\232\234\273\237\204\223\273\220\244.\275\375\201\031=)0\3629C+\241;\370+d\273\233\005;=\361\344P\275\021\034\312\273\221\333W:\246\347\227\272\363EN\275]3\204\273\352\305\2379\262d\257\273y\316\033=@+\2067\376\177r\273`Vr\270R\212\222;@\034b\273\274\345\035\273P\364I\270 \265\210;d\014\215\273\355\261.<[\364\366:\3733\321\274\326A\210:n\014?:\271\367N\273K|\2059\246S\204\2734\302t\275~\354s=J\355\314\272\357\342!=v5\031=i\257\340\274,\001\206\274\206e\3219p\324\241\273\257\370\236;\222\263:;\036\r/=?,\227;J\201-=4\346r\271\003\346\243\273g\371\014;\352\273\300\273svw\275x\261e=,$0\273\217\265c\275\220\267\330<\273\372\371:\000:\031\275\304l ;R\002\000\2752\002A;\3075\':\207\211)\275\013\230\020\275\313\315\301\274P\266\221\273\002ce;/\326J<cN\202\275\360\"`\275\266>9\275\332Ah\273S\222\234\273 \350\31284\227>:\365\264\277\271Q\353{;\371\230\010;\227\373\262\274\220\337g=\366*\224<\234\262D\275\013\213\372\272\244B\\=\332\230m\273\301\350c\275\220X\252\274\2413Q=\022N\322:\326r\252<M\n\r=\330\367#\275\017S\225\274\022\331|=\376\364#\274X\357b\272M\305\273\274t\010\236\270\212\373`=\2610:<;\006\237;4\360\272\274\371-\020<\024\265\254;\223]s\274\247\"\001\273\310d\203;\352\301\271\274\2129+\272\357]\2649\023\005\373\274\265\321\364<2\t\221\273\330\236\027\274\222\325\276<\027\206\337\273\253\363\201;F(8\275N]4;\363F\230\273\2133\242;L5\333<\3626\005=\272\203\376\271\036\362?=\200\024t:Tn\n;\313\030\2219:8\262<\017TB\272\'61=9C\200\273\352\245\330:P\t\004\273\036B#\272\230\242\204\275`\330a=|\032~:\220\353\225;\220\243\320;)\220D\274\"-N\273\272\201\373:hRu\272x\314\031=\220\260\302\272\003\370\202\271\354\240\013\273\0201\235\272`f\267\266^w^=M\002\021\273{\350\236;\356\242\234:\001\233A=F*A\2723m\303:\340\234\3659\354\315\341:/&\224\273\237\022y=t\017\311<\376C\004:\302\333\006=A4\236\273\215\373\273\272Jo\323\270\356\333\204\275\232\241\232\273\357\304L;\274\277\"\272\274h\303\271y\346\352<H\222s\2754\255\177=K~\367\272\022=R=5\270\316<h\372!\275\3515\202\274/r\032\275O\350\t\273\375\213\306<\362\263I9 \370\247\272\242\016o=\243?\305:\312\346\305;\266\257\355:\232\223\304\274:W\337:\240\325a8\330\245e\273^\2516=47\217;\302<\206;u;\030<\336\306\r\275{|\241\2712\305\243\273+1M=\243\2337\275|\232\351:P\301B=e\366\330:\002\336\000;\022\276/=\3668\234\273\211t\004;\027zo<\032\344\312<\2768H\271~\213[\272\003\350\243;\310\272\355\274\354wA\275\031\002\007=B\225\r;\267|\237\274s\271\206\271|\226\3167\021\374\354\272\202\311\341\272\376\205\3639\345*b;Q\243\231\273\2149\333\274\305\026\265<`=\236\273\020&\245\273\017\275\362<\014\035E=GON;:\327\002\272\221\240\003=kjg=\267g\030=i\217\324<i-\360\274\356\'=\272\326\364t\275\243iW\274\340\261-<\231\274\345\274\313\025!=\206\310%\275V\177\313\274\211\253*=\020\020\3717\\\226\364<m\261\227\274l#\030:r\212\034\273ln\376\274\203\360\3629\016\307\002:\"\203\261\274g\004w\272=\344\263:\312\300\256\272\256\327\333\272ha\336\270\365j\036\273\247s\273\274\010P\007;\276\233\357\272W\271\356<V\032\213\272\2640\377\270z\025\023\274K?\001\273\375\000\177;(\360\234\271\300\275\0259(%L\272Un\027\274o\024\222\274.\225H;\313\256{\273\237~\313\272\376\334$\273#?\207;\214k\243\273\250\027K:\366\352$\273*\337 \274\240\337\205\275\243bT=\024\203\013;\021\177\010\273\'\207\334:\337\302\367:\242\026\021\275\334V~:\035\263\000;\254\2524\273\2443v=\245\374\n\273\221\032\310\274\352\016\305:i\214L\275&X\001;\273&/\273\024u\236\273\203\361\210<\303\366u=\365\203R<\200\277\231;4\236S\273\014\343\014\274\223\353Y\274\\s\254<`\257\272\270\350\323\033\270\344\\\014;Y:\005=\274\370=<U8B;\276\314R=\341\340D:m\276f;@\242|7\211 \032\272\237\353\200:@\346\003:\2547\354;\375}]=\022\266}\275\3555y=\266Q\001\271\364\177v\275\302\020\213\274\200\022\302<\340\211\325:\265s\201\273\371\227\272<0o\r\273\230\177e\273\006Yk\275\337\255\377\272\214\204\021:\311\010W\274\016R\231:\226\277\206\274L\240_8\022\034\021:\212\324\232\273p\355=;\260|o\272\301\226\024\273[\314\210\273\236\322 \271[\223W\272\267\374\004\275\300\317h\274\037\251\346\274(P\240:\215if\275Un\\;\306\235\002\275\364q\237;\202H\232:\023l\274\272oq\325<\207\027G=\231\r\346\272\250\245,\275\t\252\330<b\017C=\266\025\324\273\223\257\224\273\225\226\326\274+\216G\272\232\303\225\273\264\177\234:v\017\237\273,\023U<\2203\2616\212v\367:\267\014\371<\004\3147\272\231d@<oO\022=l\010-\270\267\262\001=w`D=\366\251\307\270\313P\243\273\017\241\301\274\262T2\275\371\3758\275\207|\r\273iy\013;\002\r\023:L\257\027\272uMv=5>\000\274F7\201=\315\307 \272H\361\344;Q\251{=\212|\017=\247\017C\272\217f\236;\202D\220<\344`\217\273\003k\273<:\322T;L\244\200=CW2=H\227\3459\346}>9\t\035\\\273R\326\243;\215\352\002=+\274@\2725\240\214\273\261s/9(AU\274\260\376]=\177\215\253\271l\257\2678\214nC=\r\306h:\223\321\224:k\374\025=.\020\t;~\361:=\224\237\277<\320Za=\331\246\234:\363}\243\273\301\376T\275\224=\201\273\205\242\355\274\351\361\240;T\205\235:5\3507\274\205*\224:\003e\031;:\345\226;o\022\"=FS\030\275:\251H;\010<l:-\177\215;\030S\234:?\343 ;\235\\\246\271\016\027\026<`\310\257<\342\305V\274\304\034q\274\272\243B\275\267\372\215;\"d\261\274\337\251\371\272\275&\255;\205\3035=_S\362:\262c_;\262\016\237\273j\030\242\274c\211\036=\357W\205\272\t\216\254;\203\326-:\375R\0209\216u[\271bc\265\272\235O\001\271$\'\242:\267Q\026\274|<\337\274\207]\2459\240\375\3568\276\006#;n#\3578\376|\242;\031P\241;\313\2603\275t\201M\272\356ED\272b\315\\=\262S.9\331!J\273.Z\360<\002d\300:;\3516\275\306\363\216;^\323\324:X\221\247\271\274\361\010\273\022\311\323\274\274\001X\270$\261Z\272\363\262 ;\3017\3209\270\377\345:\351v=<O\263\342<2~\026<=Hb\275\000\312,<A\t\243<~O\301;\\r\354<\206\273\027=P\234\037\272\221\245e\274\314pp=i\017\305\274\271\312G\274G\353\215:\2550j;2\372\005\273\236\312<\272\031\036n=\211\320\353\272\343fk;q\215&\271\354\327\234\273\245\213Q=oB\204\274v\315Y\273D\215\257\273\333\264\r\273\261\236_\273\372S\214\273H\200\n\274T\2219=\223*\003:o\267\205=\0363Y=\223;\242\2732\227\265\271l\321\243\273N\320.=\321\346\215\273\224\330\243;\274n)<\246\"\254:\037<\240\273\006I\266\274f\202Y<\307\302?=0Pu:\311\263`;\002\231_\273\366\304\201;\226KH<\212W\n=\253\"P\274\212\272\232\273Ld\236\273\036}]=\246\236\364:\313I \275\003R\230:Q\362\206\273\246\202\023\271\223K\206<H\231-\2702E\\\275Sw\253<\n}|\273\260\275\204:\374\315s=\346o\220\271\324(\271\272\232I\263:\232\273\034\275\366M\224\272(\207\213\273\233\356\273<\315!\212\273\017]\375\274t\257\356\274\341.\205\275\352\250z\275\264u\236\273T\243\025=\355\237\240;\"\032\263<\316\344u\273$\317\013=#\177\233\273~\223\233\274H>\031=\343#\261\274\274\225\205\271\002\033\200:\347?\t\271\266\351\324\274\371\207\037\275\345\r\243\273!J\010\273\214\371.9\231\377\235;;a\335\272Ch\340;SL\204=\250j\200\275%\026\252\270$\270}=\034\022\304<\324\322A<\"k\301:<\271\000=\343\r\265;\014\205\3639\310\2466\273\010\030\260:\367\305\007\273\234\225\233\273yO\36390dT\270`\230\262\267\363\026\242;\220t~=X\037\005\271\267\307\217\2724$\220:\306\243\234;\010s <\022\243i\275gNl\273\343\014\231;\326\325\252:\002\210Q;\222N\2159\256\031\001:zah\275\343z@\272\022\253\212\273\353\001\021\272\357\310m\275\025C\240:;\027\276\274`\262\r;\226\261\214:\000\r\221\273\352\216\215:\372\001B;\274\207\223;B\357\t:\251c%\272\315dE\274\223u\t\273\016Y\226;\350\\\343<x\303\331\274\325+]\274IR\242\274\261A\216;\330\304\\=%\212\242\273I\226\236\271\322\225\207\273p1j:\372c\r\275@\320\331\271\256\235\252\271\333-\010;M\247\035<\024\001\027\275q\031]=\244\307J<\270\203\230:\230\324g=\327\233\001=\262_\363\272y\277_<j\366\3218l\300\243;7\303\2759X\364\033=\306C7\272\2457U=\354;@=`G?<\240\033/=\212J\002\275\0376\210:0/{<$\354\274\270\206q\243\273\302\224\236\273N\031&\275\210\334O\274\214#\272;\335\217\377:S\351\235:\207\003^:\371\301\026\273\233!\365\271%\356\317:\237cG\275`D\214\274\025\250j=L\007\013\273\224Y\216\272r=5\275\200\253\240\272\274\027\203\273\210\2640<\270\377\031\272\205\2336:y\024d=\342\303<\275\341DQ\274J\233T\273z\215\243;\"\031v\2754\366\275:`!M\267B\312\374\272z\245\213;>\017\202\273\277\255\243\273^\005\264\274\333w\226<-Sx\273\023\310\313<\342$i=\021\272\210:\207\335R\275.\265)\273s\231\212;\303\356d=\267\325\351\274\211L\326<l\2157=\0379);\375\204\276<\'\035\207\275[\351$<T\0027\275\375\276\352:N\001\255;\371\300\3659\237\251\3049>\2565;\n\"\376\274\363\311 =\306a|\275\245\262\274<\033\375\227\272\275\336\220\273\236\316\001\274\014\262p\275L\024U;\202\247r=\021\277=\2736\371\2039\330\360\3259\357\2250\275\227\247*=;F\004\275W\030\312\272\030\275\201\273\020\202e=\311@\371:Rd\023\275$\355E\273\247\315Q=\210=\206;\035k\200\272\370Y\237\272\014\272\241\273\354\203k=o>\260<\373\252\252\273\177\021B:r\014\332\274\306D.\272\000E\225<\222P\205;\017\264\312:`\321\3206\340o\320\271\030@\211\273yx\253\274o\200S\274\265\242\200=\361\374\002=\001\036`\274\250C\2609\376\211\026\275B\221\266\270\022W\341:\344\316e=\361\n\024=7\340\020=5\241\001=\031z\027\275:yk=\354\366\035\274\243\231O<\1773\022=\022\002\364<\335\264U\275\2460\202:W\357\215;L\332p=\242\336\312\274\307\\u=|X\233\272w\020\321\274\204\274\276\272\225\017\t;\020\262\3358\350-!\275\342\023\201\275\312\002\336\273\344\334\006:\247W\242;\0037\224\273\014w(;\342=\201:\210\303\240\270B\017=\274`H\007\273\204\317\356;\247\2641=\226\361R=\2500K=,\342\2448\026\321\'\274\260\237\337;\003\334D\274\017\373\241;\342\235\r\273\225Y\037\272\206\301\211<\201\003\302\272\030\ts\275\350d7;c\326\207\273\246\330j\275\"\337\020\273~l\367\274\211e\374\271\236[\3679T\235_=QD\300:p\271\376:i\316\262:\366\225\021\275\265\177D;\361H\t\275\025\337\215\273R\016\242;\246\247\311\272\350[\362:\205\357\246\271\260Y\232\272<\213V\272\000\235<8\260;/\275\035\317\221\274\364\317\251\274\304\220\236;\244\033\343\272enk\275\027\240\237\273l\020\014\272\244P\340\270d\021\021\275\311k\241;U\241\004<\255/\232:(ST<i\354\241;3\320\242;\231\004\220\273\314-i\275/\240N<w\3363<\2455!\275\311\372\201=1\026$=\266#_;\017\275\322:\236_\232;\237\237\275\274bS+\272X_\322<jW\333;\310kE\273\2733r\275\301h\006;\340\262\257;\250\t[<\314\231\013\272\020\205O\273\177\237\212\272U5n=\034R\350;\327\205%\275\264\255\r\273I\006\344\274L\252{\272\247QZ=K\036;=g\305\007;A\377\227;D\224\000;\323T/=P\344`\275v\264f\274\274\217|\275\027\370\233\273<3?\275\t`\351:\234\375\2629\224\375\001<j\370;=\356\251L;NU\341\274qT\235\273\022\311C\275\024\314{=\364O\275\271{\363\202\272\027\202\016\272K\263w=c\377\237\273E\017]\274\367\306u=\306\252!<\203\273\311\274XpY\273\006\363\177\2730\205\267:\222\357$;;\031\227:@qK<\212OE\273\312I;\275R\343\2679\266\014\007=\236\025\007\272G]l<\263\316w\275\334\201#:\\\006\026\274\316\rX=\241:\005=\272\232k:p\026\271;_N\255\274\223/\200<\210\350\375:\266,b\275J\345\007;\007\035\254;\026\010\234;7|S=\004o%=\200\352\2427w,\220<%\356R\275\335\330\003\274\316\001\233;\037\341\226\272\336\355\\<\211e\347\274\310\326<=\377?K:\272)6=\356\205\276\270\006\344|\275\324\016\216\273y\330!;8\265\n:\2649\270\270\326H\203:\346\373\241\273\264\340d\273rZ\261\274s\306\215\273\251Ya=\350c\242\273\376BF\275!\205]=\234\221Q=\304$8<\264A\215\274\265\317\247;\201\0041\275e\3165\274\365\036>=I7\211;\347\270?;[\300<\274\210\216N\271\001\230\032\272\346\333\034\275\227\010\n=\336\027\204\274X\257\2029\371\nv=\310\272\375\272\353Z\220\273\003\254\234\273\243\260\246\271!\006F=0\262K=\377\264j\275\243_R\274\311\230\236\274\305\367\273<\353\024\t\275P\022\341\267\211\364\364\274e\255,\273\004;\243\273\360*\333:.\241Y=\234\217 =k}T<2S\020\272\0062A\272\333-y;\230.i\275zF\004\273\346\023.;\304\236\203;\303cT\275\357\251\334;\227\234k;3\325W\275\237C\254\272\226\212\207\273pB\020\274U\006\r\27303\211;\207\263\r;\004v>\272o\024\233\273yF\020\275u\210\221\274\242\037\300<\240\222\2738\210\177\205;\333x\275\274`\360\014\273\035\273\037=yv\030=\320\371\2047\366\224J\272\034\266\r;\346\232<\274\234\027(\272cI\205:\312D\021\272D\306\204\274\320\301}\271\342\347\230;x\014d;x\371t8\317P\234;\205\270\205\272\300\275\233\273\260\303\007\275\377d\r;\237\250\300<\356\034-:\nV\225\274g\n\303\271u\330/\275bL\340:\236\363U\275u\240\307<&\342\001=e\226\017\274c4\302\271\364\260\032\275\235\367E\274\361\026\252\274\307YH=\212\235Z\275\210\032\037\273\341\356\210;DK\211\270\252\227\204:\341\223\373\273\340\343\004\273\300`Z\274\026\371\2308a\232\367\274\341{-84\'y<@\213*\272\234\353\273\273\345C\234:\027mU\275\tL\203<\327\347\"\275J\370]\274\037%\343\274y\264E\275e\000\232<gE~:\335\032\315\274\347\335-9f\354\013\273q\214C\272\224\031\245\272@@\024\275\013\275d\275\306k\217;?\034\261\274\256,\362\271|$\201;\330\373\261\272J\361\020=z,\206=fC\237\273~\222@\274\240\223S\275\247C\361<\207\204\232\273\032\324d;$A\030<\204\\\001\272\200r\212\270\024.g=p\'\205\275P\004]=\211<u\274,{\2048\324\036\361:\352\327\257</\360\206;\370\337m\274\257\364\227;\324\313\363\270\271\243\006;\304\025\217:=\252U<\220\234\230\272^\365-=\226\224\017:\357*{\275m\251\014;$\333s;\006:^;\027%\000\272V%\320\270g\245\212<\263\022\023\271C\220\t\275o\274)\273,3\233:\304\326\216\272K\371\342<&\303\2518\306Dr\275c\006\207=(\346\243;\244\326\222\273\020\206\260\272J3}:P#+\275\356\034\207\275\230\245\324\271\220\34018\024,;<\364\321\025\275t\334\352<\274Id;\022U\340;\000\000\313\274\031\322\204;\332\031|=\212\300\250:\362\000k\274\000\250\021:\271\271\300<\303+l=\020\277i\275\376\014^=\345\214-;\223\253\374<k\004\232\270\236\222I<\250\370\036<k\330\003=\203\010\364\273\363\304\022\274\311\351\031\275\344\200\001\275\336\316\210<xC\235\273\273\304H\275\2239`\273\345\2726<\250\242\236<9U\256\274\037\260\206;\371\264\240;\343\312p\275\003\257\031<\200>e\265>\214\\;\366\346B<j\'\273\273>\314\267<\256\020\006\274\006\217?;s{\226\273\316\225\014;\246\313\\\272\202\231\221;p\340u<p\352/\275\251\003(9,\035\t\275;@\r\273f\0136\272\031\3249\272\261\246\234\272\025\225[\275P\025\304\274\230R\035=H\211\243;o\232\366\271\013O\375<\"\022J;\300WY=(\237\203=\262\313\267\270E3N\273\316\002X\275\246\022\237;\373\276\302\274\3476b:x\251\207;\377\033\345:\317\023 ;\366V\014<\024\220\201:\273\264\177\275<\243\304\271\020}\022\275\372|\231\273\262\314\353\271\374\232+:~\353!\274\204\212\215\2714\016+\274.\306\021\275\374\n\020<\356\3267\273\231v\241\273\2653\002\273\000p\r;g\034\204<\022\237\007:\312\354J\275\"!\213\272o\311\215;\226G\326<6)\214\273\300\275\001\275}6\366\274[]j\275e\354\226;\314#c=)2=\2758\224\346\271\225,\232;\257\351\020=y\240{\274\230Z\250\274\346J\0029\347\r@;)g\231\274\3560\251\271^\017\177\274]-\216\271\320\232\271\273?\003~\273\006\266\343<\270\310\205\275\275\234\2159\307\320\231\271\216\277=\275i\034D\275\037\016\035\273q\373\313<#\264\r;\373k\2349\266X\355\272\334k^\273\035C\017:\036\344\2409\360;\221\273\026Eo=>H\026<\324\262\243;\3221`=\207=\224\272_@Y\2733\3514=q4w\273\242\222\320\270 \254\210\273X\362\331\2707\260g\274\335\236\3548)j\177\275\366i\354:v\355\244\272y\013\206=\300\206\006\267\364\260)=YW\027=\352E#\2721\034\001\275.\234\234:\000O\203=`\204\235\273\024\227\3249qw\247<vl\303:\026\330\005=\036B\330\271\334X\260;9\367\201=)\235x\273\316\333a;\314\207\025;\211/5=w\t\240\273&\374\275<^\334\001\272U\230\2739=/\211\274\031\363c=C\344==\337\245\206:\210f];\356=6=\362\004\217:S\224C\272\022PU;\272\027a9\332\032\2749\312\316\333\273\346&\366<\347\006\351<\255\217?<\223\303.\273*5y\275o$\310\274\350\334\305\271\033\"~\275pX\271\271#/`9\214+\242\273\201\321\370\272DJ\014\271\336\210\236\272V\226\313\271\027\267D=\036\261z\275-\333\253\271\323\217F=!\226\r\273\354+\235;\200\2633\275rk\253\272\335t\016\275\355\211\301\270r\371\206\273 ;\2257\023\221\'9\214.6=\244b\"<\205E\032;\037]\204=!\032\021\271\311%\242\273D1\305\274\250\201\326\270\n\267*<\350\341\004\273|\257\324\274\252\023\215\272\3757\232\271\377I\247\273\253C2\275\313\030\200\2726\027\n\2713=\203\275Z\231\212:t5\227;)\365F\274z\203R<x_,\275\344v\375:\326~\325\272c\026:9\234\n\031=I\240g=\351\001\004\272\272o\201:\010s\243;.\024\027\273R7X\273\374_\217\274\001\352\200\275xP\215\273\3571\224<\t\255\027\272\236/\375\272rZ\016\275\217j/\271\371\234]\273c\013\014\272^\311\261<V\025\232\271\3034*\275\272\r~\274\353&+\272\2718/\274\326\260p=\323\246Y:Jy\'9\3070\006;q\314f;\367\200\036;\321\212\312;<\022C\273)\343\354<\022l\026;.N\3767\331,\256\274d\305@\272\263\314\377:\034\343\265:DBD;\336\226\373\271\362O\306\271$\214\336<ov\002=\232\317\'<\271\307\243;%@\310\271(\346d<\300\246\017\272\375R\204\275\350\320\r<\336u\025=\301\311\273\272I<>\272\376\376\336\274Cv\340;`\022\242\273&f]\271:\251\243\273\2266\233;\202\232\n\275\207`<\274Nkg\273\265\006\013\275\006\312\2218\224\317\242\272;\n\234\2737\246A:\010j\t\273\260\3329\2756\313w;\262|9\275\026sD=\266\3729:\321\237\202=\354\220\027=\376\343|\275!\230\377\273e\262\024<S\007v\272\374\262J\274\206{=<\332\2620:\036\341\267;V\274O=![\177<\326\201\004<^\362/\275>\31399\013\332\311\274Wd\"\273&\230\235:\3202j7d\353\035=D\244\013;^@l=\247\216\3239~\345,\271\372\272\370:n\341\034\275Y\304\034=\355,!\275Z\204t\273\3407&<\364S\024\275\251}q;q\301\242\274\242o\205=A!7;F\202\233\274\nX\275:\\\335G\272\226\272\200\274+@\000\272c]\320<\027<\013\273\321MC:\276\030\355:\020\3626:\331M\024\275\024\020\221\274\2657\224; \207\307\272\245\004E\275\202\025G;f\211\224:\304T\t\275p\265\002\273\225t\001\272\324U7\273\207W\214;\307\320\222;\027\014j\275\030B\271<z\350\356\272N\3667;\375\215O=GzC\275\364\304\35097\341J\271Y=\231;jp\024\275N\304\321;\257\017\032=\254\030\256<\320E\3628ywj\275<~\0039\212\314\t\2727NP\275\326j9\275\301\200\034:\311;+\275\326\325$\273\360\315\3428\200\\9\272.\205\213<\005\245(\275G\301\234<)\022\016=\017\307\336\272G\230\224;y\244\201;,9c:\245\372\351<\266\224x:\03375\274\334\354\264:\351ZM\275\266@;<\301\252\234<9N\230<O\215\033=\212\021\236\273\303\'\207;\311\022\203\275\2308\035\275\336\331C;<6\234\273\230\203\3259\035\327*\274cS\243;\2408\2267C:M=\037zc\275Q1\207\273\276*\2429N8Z\274d\363S\271\315\0179\275\304S7\271\320\307&;\000J\344\266P.\035=\361\203x:\213|s\273\237\370T\275L\376\003\275\353+2=p\031M=\311\350\2739`d\217:/\226z\272\020\216E;\0104\3118j\027\036\274\312\205\267:(<\337\274\215sD\272\354<u<P8\n;@\270\003<\2441\006\271\324\274U\275\312\024_9T\276\030\275\336R;=hV\3057\336sj\275\247\353u\275\313\025\014\273\321\326l\275b\311\246\272\\\323\225;\373?\316:ct\243\273H\241\235\267\n3\030<c\206\237;X\236j=\312\250}\275D+\202\273)\3666:\206\345*\275\312|\266<\201\327z\272U\326\036\275Z\342\243\273OXa=\252*\367\274\243\234\325:\177\325m=\020\257\001;\177V\241<\377\265\207:\274\240^=\232\347C\273 \274\274\274d\3255=\335\"\374\274rN\241\273&\027`=\215K\024\273Z\203\206\274\260l\237\271\245d\\=v\370#\272\264s.<Z6a\275%\336\3219yU\212\273\264c\220\273\326\354\036:\342\362\0109\232\356\214\272\007AB\273\'\201T\275\237t\230;\244\311\242;9\342=\275\255\024\231;\377\323\034<\345\302\034=d\371\271<\027@\035=\207[\206;\375R\023\274\212{\006\273\260\205\031<4\263\200\2726\272P\275%R\243\2734Z<\275\270 \275;\363\315<=\360#\007\274\t\303\000\273\002\031%;\257\303\014=\333M>\272\005\345\252;\231\334\020=\367\273Y=\345\211\215\274\3306\205;\310\377o:\033\221\230;F\234\205;f\377\316:4\206\355\274\036\302\240;\\\247x\273,.\343\271X\212\354\273\264\3778\275Zll\275\224\243B\273\266\017\235\273\254\343a=vnI\275\313c\243;\226\372`=\366\305*\275\342t\3779)\216\314\272X\321\330\274\375\013{;\034\224u:\034\363\264\274H\005\2769@;\026\275\307>t\273\270\035\257:\005A\224;^\334a\275-$g\274\342xL=\264+\262\2748\237{8\010\017\253:~[o=\'\235m=\324\001\013\275\331\246\025:\270\253\023<\310\217\251:\247:|=e>\233\273~\303\2159\371T\\\275Gp\202\273\030\031\260<\302\303\223\272\n\263\001\275<\244t<\223j\237\273(\260\031<\264(#9\3753\027\274\221\"c\273\367,\353\274\241\353O\275\355x\231<\332\343\252\274\3467w\274\215T\232\273u\246\022\273\205\312;=\226\306\240\272r\301\201<\242 \334:\001\377K\275M\211\031=\007zA<\315/R;p\323\r;\336\032S:\001!\177\273F\017\224<\200\336\025\274\204=H\272@\024]\275\305\005\027:\237\205G:Nss=\373\217\2449PVD\275\342\036\234;Dq\034<1\301U\275!\272W= b?:\352\365\013\275\220nB\273\346\213f=H\241\2349\223\272\236\273\3369\000\272\3171\343:\343\2663\273U\277l=\353#\215\273\0046\273\273xp\003\273\253\215\264<\227\346t:\t\240]\273\205\023\014\274\301[\206\273+\265\023\271\343\222\021=?\303X;\264  =N\205\364\272\267\332\032\273\026}\3569\220\203\214\274\302#L\272\0228z\272~BL9k\000\013;t\350H;\274HQ:\315\275\376\272@\222=\275\241\030\234\273L\332\330\273)\326F\275\210j\243;\330\275%\275\360\357Z\273W\036\273:\200\26008\313\264\034=\270\005S:\304/\340<=\366\210\272\037\340\300;#\243\022;w$$\272W\235\034\275\251q\224;\231n\037;\022\363\013\273\0359s\273\337g+<I \221\274\246\036\3679\3249 7\027Nl\273\314\270\021<\211\300\304<S\202\002\273WX\273:\330?!\270\211?f\273\252@$\273\000@?4\371Z\250\272s{\007;\304-\342\274\301\252\351\274\357]\005<\310n\220;\246\272\306<e\303a=@!\234\272\351.\217\272\230\033\240\273,\207\001;\007(F\273\2540\227\274\315\224\n=\022\241\207\274*c2:S\350\r:\253\016*9A\013\036=r\224\202\275Q\255 \275\363K1\2736\374\305;\021h,\273nI\014;\346\225\014;\223\270\001<\247\302\330<\317\351=\275\3661\360\270\265\223\000\273\2437;\272\353EF;\270\313r=\300\206r=\231\273+=\235\217*\275\376g\006=%\230F9\254Yg=iUk\275M\373==\013\002\035<\324\3501=\360\205\243\273\254#\377\271I\255\370\272\260\217\262<\\^:;B\364\201\274\313`\242;\\\013#;t\356\n\273/\337\227:*\014\367:J\373\317<\210qi\272^\212A\272\036\341T\274S\325\323\272\002\343^;\221\235\222\272\222*+;\357\025\002\273\274\\\214\270\250?b<5\241\335<x`\223;\365A\224\273\347s\002=-X\234\273JDA\274\363W\325\272\035\224\206<8\026*=\367\016\242;\262%R=\346-\316\2720\321\2239\360\313\353:\"YS\270\376l.\275\315s\234\274z\373\366\272\357\032 \275Ps\263<\236\316\234\273\326i\370:\204\277\232\273\2742\2518A\275\223<\371k\255\272\325\3030=\237\370\313\274\257\005\207\272\320F|\266;\024\227\274B\263\347\274QqX\275\026\336\032<\260[\265\271\206\235\237<o\216\331\274\246\203\354\2720\216\n\275\006?\003\273\224A\r9<T\273<\227l\005\273\375oc\273\274\211\024=\323\\e\275\321Z\017<\025\336\235;Ni\370\270\023y>\274\276\314F=\365\027{\275\202\'\253:\376\373\177;N\213\254:z\307\276<\032\201\003\275x\353\220:\024\033m\275u\\6\275S\032\3338\222\211\361<\023\277\233\273\'\217\213\2731\r\312\274\025\030[\275\214\252F<\263\027A\272\034\016\033=\033\243\232:\216~\232;x\341\353\272\336fz\272\250,;\274\001\005u=\215\224[=/\213J=1-\240; \2254<\311\013\2649@ho\271\277\001\010\274sYi\275\277\260e;\300I\000\275\244\305\206;P/\243;\017\275B:>\260S\275\327\017\014=\365$\323\272\221\250\177\275\000\252z=\305n\237\273\020\224\240\273\013\016\003\274\337\334\230\272I\331C\275\025\377\255\272i%\234;X\254\2629R\345\243;\004E\222\273\316\244\257:\310\326\035\275\346\232\232\273\334\202R;\273\036\307\274\361\230\342;P\252\2059\365\243_\275<\344\010\273\375\201q;\202\"S\273Qn^\2740\030\344<\277[\316\274\342Q\0068~R!:\2513\355\274\330\261\222<\300e\007\273\361\310\231<\351\200\325<\226E\223\273\246\004\266\274\244M2\273$\177F=A\216k=\010\210\r;\024\23409;\273K\275\315\241H=P\006\3609\300QT\272\016\312^;k\331\2759\301Q\366\274\244\366\263<\030Qs\275ZL\260;\2463I<F\337-\272\231\311I<\364VS\273\355\343\320;\337\\\202\273p4\306<\005\235\243\273\221\351;\273\240\201\3569|\360L\275\021`\341\274pGU<\264\250\224\274f\227N<\355&\241;M\277\201\275sRw=\340\252N\275\005*\214;b\032\273\274]6\030\275\010\r\371\273>\377\356:\301\206\342\274\032\2425;\344\234\000;:\313\315\272*\000\341<\027\230\200\272\252\267\355\274\244Z\234\272:\373\237;\335\005+;\245\343t;\220=E;|\321\240\273,\014\023\274d\035\331<]\241^\275a$\031=\177\265\\=\022\257\300:\321|J\272\032\016b= \246\277<\327\0273\275\214\224Y\275\205p\366:\236\234\203=b}\237;\301\245\323\2741Gl\271\004\376\001\271\246=E\274\3738Q=t+H<1\251`\275X\237q\272\236\350@=#\026\332\271I\243\300<-\376\2149\004\235\227\272.\032\241\273\023n!\274\340\356\364<\376\350\257<\211\006\307<\3065\262\274\023\344\032<0\253\206=pe\023\275P\242\200<f\037q\274\276\253Q\275Q\314M\275\321\345\202\275\303\037Q=\225\024\017\2759|\234;\2169P:\312/v;\271\363/=\250}q\273\266\251\243\273\347\017m=o\177\323\274\016\177\t\273\312\322u=\216\010\242;\326\241\0279\223\024\016\275J\375\214\2731\346\236\273\232i\206\267\342\215\3279\224_\022\270\366a\242\273\246\231\233:\240k\257\274\3353\227;\013\217\251\274/\036\363:\374\371\225;\035\'\323<\325\302\244<\\\234\344\274ve\254\270,=\312;\331\215\232:\252\246\177\2753\233w:B8\006:\213|+\275\344H\231\271d\216&9\034\034l\273(\206\243\273\020\342P;\366\272\010\275\324\t):\212\255\177\275\026lO<\210F\271;\355\307X=\365\265\r\273pl\231:o\344\222;Q\037\205=\330\"{=\335\027\201;!Mz\2758\205\243;\330Es7#\'Y\275_\225p\275c]\320\274\002\'\277\272G\007\006\273-\363w\273\321\260u\274\3618[;\235\tV\273\220\203[;\366\033\265\272\034:\017;\014\004\t7\2478\030;\237\017<:d<H\275\367u\3709\002\333\301\272\031}\254\274\247y\276\273\351\'T=\3314\233\273\205\303\007<\377.\r;\252\333\355:L\037,\274\236\024\335\274Ob\370:\266\246\315\274\211Z\010<*U9:\2405\\\273\256A\'\274t\002\271\272\026\301\216:gF`\270S\332\203\270\031\241\203=>B\036\271B\247[<\357\242\205\275\373\036\0209\214\014G\275\241\263\"<\014\273\214\273K8\231;-\266\014;\316>\203\271\204>\307\270\301_R\275W\332\004\275\341kU=\320h\216\273R?\035<\360\227\350<\313\303\232\271\367\341\236\273\272\320#\271\031\323\374:\312e\205:\274\0013\272G\204F\275\3654\276\274\363T=\273\274\313\361\274\302%\357\274\347l\240\273\354\337\362\274\334Z\203\273\365\024\201=_\327\243\271L\334\206\275Q\311\216\274\34078\274-\277\177\275n\177\r\273\256\025\202\273\2069\326\272:>\036={8N\275\331(\306\274\362\375\236\273\304\2147\272\313\342\010;4\014s=\003\216\016\273\307\272\275\274\343\265\225\274\313\017x\275\377\030\231:\242\266,\274\2611Q:\256GK8\224\240\360:\256_\252;\214\241\236\274|\214\3509\206\343\363:py\361\273\357iH<\324\265\001\273\"\200\r\273&\265\3769\310\343\204\275\320\350\r:z\246N=\224\214\007\273V\\9=?\215\212:\262\351*\2744\033\2008\345\370]\274\226\245%\273\323Q\001\275\364%*=\005p\243;5\"7;\310\274\204<\324\356\232\273\255:R;\317\004\036;d\332+;-\216\230;\263f\231;\260\243\277\273\333j\321\273\t\227?=\253\305\274\274\207\2153\272@&\237\271\360k\232\271\340h\222;\340Q$=&a\223;\274\325O=\271|\207\274\247[\022\275\303 \207\272\315\277o=CD\240\273\\\223\030\271\034.\232\274\364\3353<\374\262$\275\013\274\344:\377\303O=\026\245\034:?\332\025=S\310)\275\377\207\202;\253\313c\275vrH=y\202\343\274Qj\234:\002h0\273\031\027\201=\360\274\222\273\216c\234\273mkG\275h\326\241<n\344D\275J\347 <\360am\274\214L\214\273\010\302\242;#\274u=L\366#=\031=\244:\3369|\271\370G\237\267\300\277Q\2754L,\274\006\216\361\274\300\025/\275\316a\273<\266jn\275<\"\233;\271\006\207\275\350-\035=\316\377\367:\361\267\3459\373\300\207\273(\210\267\272\232\334\322\271\364\006x\275\226\000\212\272\264\323\221\272\374\334^;R\321c\275F\221\013:\276Ze=\310\241\023\275heP\271\025\364\234;b1\240\271\316nB:\213\236\243;(\334\2168Q/v\275\311\251\014\273h\216N=\277$t\274y\301\266\274z[0;\024g\017\272hs \274\202\024n=R\020\223\273:\277\254\274\377\377\333\271n\326/\275\334\220\003;\267\324\207\272\201\310!=\373[\235;\016\254>9\032\350\357<G\364d\275\207u\023=p\235\350\273M\234 <\273\213\206=\031\373\314\272r\375\235;\324\331\216\274\3230\204\272\263!\r;\375f\345\272$\345T\275\212h\255;\201\002\005=|\3345=8\316K=\242F0\273\376\307\263<%\260*<x\372\252:\201\374\013\273\204\213\375;\264\3253\275\244%\223:\036\302\242<T\202\257:\243\337-\275AX\226<\000\212\017\272\267\245i\275\326\017Y;\225\225P\272d\365\265\274\254C4=l\377\3658\200\237\023\275\360\263\214\267Z\264\322:\372\"\007<\357\205\277<r}N\275\225S\256<\344\316\255\273\211qm\275u[\305\272\207\n`\275\321\372\331\272s\037\226\273\263\341q<\2008\214;\202\263\2179b\205\226\273})\267\272\252O\213\270\261\023]=\354\235\200;\242k\000\272n\032\312\273#D\237\273\371\2561\272\212\343\025\273\265\215\233\272\242\314&:@\177\347\274L\374*\275\262\304\306\274;t\020<\027\315\353:q\225I=D]\024\272h\370I\271\220A\365:\314\265\371\2711\013\t;w(\352\274/\234\236;\345\301\272\274\266s\307:82\302:)\214\256:\301\005\275\271\366 K=\223Oo;MZo\274D\017t;y\335\234\271\232D]<\371\244!;\353\275*=Z\017\021\275\316\377\262\271T\365\177:\022\306\006\274\354\276\240\272\201~|\275\013X|:\263\311y\273l\004\351\272:\225h\275L\354P<\215 s\275F\342\276\272\231{9\272S\310y<\025\371\003\273\331$k= T\220\273\201\336\273<i\346\243;bn\307\272\307j\203\273\300\334\241\272n\230P=\303\254\273\273V\317i\275\270N\035=\360\344\3356\rSv=\333\363\004\273\300\330\3729\323\317\036\275\324\327\253;\3007|\275\210dF\273S\260v=\260\342\013\273D\320P=\250\202\243\273\351\n4=\021\206~;<\320\177\275\027Z\232\270c%\033=\214\302P\272d\240V\274\231\360?<\002\t\345\271x.E\272\342\021\002;9\204R\273@\204\022\272\205G;\275Q\254\210;Iu\342\274ED\211<:\277\334\274\024\312B;\227\326\002\275\031\311==\234[\001\274T\331\205\2756\245\326\272\220\010F\274\031]^\275?0\010;\027\341\301\274\270\214-=|\270\315\272\017RY;U+\3159+\017\266\272V\357\021=\220b\3708i\266\322\274\316\021\r;L.\031:\246\032N9&y\333<\3644\214:\026_\n\273`\330\243;r\306\203=\223\235\013;\021\034\255:\030\264\200\275\324dC:;\216!=\232,L=\036\244\t\2721\235\2039Gm<:\277\303\235\274\031\303\276\272\307M2=T\246\254<\327\020\362\273w\207\242\273\263\2301\272\362\273\305\270\234\341D\274(\031\213<z(\242\273R\220e\275$\256u\272\177\016\2229\256\273\010;\240\366\010\275\010\273b=]\337\235\273)`\333\271\277ht;\313\237#\275K\245\227\273/0\023\275\374@\334:#\320u\272\373j\242;3\303\237;\372\355\226:\034\226k\274W\013&\275\355\276e\272+\263\207\273!\027\204\2736\316 \273\377\006\233;\025\261\032\275.\207\351\272\n\220\227;\tK3\272\362xp\273\177\3447=~\251\030\275H\271\016<P/P\271{ \343;D\332\221\274\337\247\241;\226\310\310:\225\353\207\272W\021P=\370E\037\267o\035\204\271dhx=\255\267\r\273V\225\315<.YV\275\330\200\377:!-W;\262\3629=\\\247\274\273Ji\3059\313\245\234\272\251O\001\273Mnp\275\\\305\037;\004@\036\275\273@e\275\000\000\036=\231\252\013\273Wx5;\361\341\'=%\003\212\272\352\370\210\273N\337[\274\017\361\022\272p-?:\014x\220\273h\013\203<\010\242\r\275\037[\323<3\377\226\273\2203\255\271x@l\274\273D\260:\003\033 =\020\253{\272\231\347\265\272\'No=\216\253J\272\347F\334<\267\2114=j\232\222\274\022Xf=T\367\256:\310X\377\272r8\230\273\315C\225;\004\346\237;A\004\266\274#\362\272<A\214\334\271A\264\313\274fb\322<\301-\367<P\320^;\3245\3259bT\363\272\332\025\203=\242\306\232:(\265M\274\252\343\014\273p\360\'\2738\325\027;q\306X\273\342\021<\273\020\252\222<Q\213^\273V\366\230;\204u\204\275\207F\214\272\367\315\233:Zw\013\275\266\367\n;\225\2218\275\270\233\013\273\251\314\007\273r\316\357;5\235\r;\021\325\254\274\214\314\243;\013\273>\274j`\367<\307e{\273\022c\227:\327<\360<E\"\210\271B\177\210\273\246\023z\273\330\213-<\364\0027;\244\265a\272\347g?\275Q\251\036=\340\023\211\2730\306@<\337\354=<\265\343B:\004\212\026\275X\225\340\271?\311\331\274\036\003+\274\343\021\233:2\224(\274\261\263%\274\300\200\310:\226J\253<\031|\201=*\230}:dh{\275\014#\004\272\341\266n\2758S^\271+\273.\275\325_\205\275\246F*\271p\331f=\361Y\256;A\237}\275L\365~;\210\263\337\267|\306h<_\323G;\"\372\370\274o\357z\275\246\355\245<4\305{;\243\327\302:1\362\234\273\343\337\032\275m\336\243\274\354\204\321:UZu:c&\221<\254\207u\275ZZP=^\375\220\272\330\356\017;\310\004\245\272\263\177O\271\002W\315\272\216\352`\275\377\261z;\000\037\223\273\353v\255\272\206\226\366:\366\206\014\273\262\024G\275\317#\004=X\036C:\323\221\243;Z\213\227\272Z\301i;\315\370h=v\364\014;b\001\237\273p\006\226;\244\2703\275\227\000\0039\241\004*\271\014W\001\273\233\320\240;\207\330\\\275\334\241\200\275\333s0\271\314\032\335\274\337\236\3269\234\030\205<9!\2019M\177\330\272\312P\014<f\342):uq\006;;X\357:GYh:\237`\242;\220\3542=\264\261\216:\257S\r;HX\235\274&\314\343\271\371q\351\272\306\034\217\273[\223z=d]\260:\016i\";\331&6;\226\307T;c\262\227;\026\204D<\210\257\200\274\317H\203\273O.\326\274C\344\013\273\004\023\215\271w\306\202=\253\244g\274}\236z\275S\205\235\273r\343<\275X\014\243\273\212\357\021\275\301S,=\337\277\032\274\237$\036=\213\334\n<\\\344\302\272\035\355\217\272L\010\001:\270\t\330<\036NU\2706\341\313:_\337\367:\347\320J\274\263\024h=,\371\3058\214\342\t\275(\212\203;\333\227R=\36678\275\001\356\277::\243\260\274\374\215;\275OF\004;\034{}:\305\346&\274\034\233\225;\361\n\3669v\346\375\274zUE\273\024\303\3409h\236\2709\031\242\234;~\232\234\274\350\000\242\273\354(\223\274\324\201%=]\300\014\273\256\271\3479\220-t\273?\310Q:Q\336(=\301\244?=\274P\336\270E!=\275\246\023]\274(\212\233;=\204\006\273\346\033*\2755\001u\275z\233\2309\2437\037\275\032V\220\273\263\357)<\021>\334\274E\r\2669\304%\270\271q\300\013;\364\222R\273\260\025\230;L\177\377\274\331\260f;\024\357\024\270T\301\244\274\024\275\2129N\302\330\273\235t\223;&.\361<TF\242\273+\223\000<BF\212:\006\207\232;\217\214\204\275\010\272\242\273B?\315:)\211\r\273\261\000\222\271\036(a\271[\325\036\273)1A:\004}\310<m\177d;5\205j\275,`\022=2\021\243\273l\375\014\273<O\204\275\332\242\3129\357=)9\016S\001=\320 \021\272j\373\n\273\270E\034\271Pj\207\267>\367\231\274\250L|\272\237hK\275\366\333\311<G t=\0001\325\26502\300\274^B\272<\023\266.\273\244\207N;\022zI\275zz\312\271oQ;\272.\266\237\273\202d2=*4\207<\245\276\027=\312|\026=5\316\373:W\204\237\273\206\t\205;N\276\263;\371\213\222\274EK\241\273\224v3\275\244\007t<\210\216\220\273\310\231/\271\314\271\311<\207\261&\273\237\210\3369.O\2138\n\342\236\273\027\003s<\330\313\346;\254n\037\275\205C;\275\313kU\272D\314\270\270\364X\t;T\306\347<\034z\\=$\211\375;vx$;vTs\272\217\256m=\345\"C\275\036G\203\275\324m\002;g\232\306\272\202\356\356:f*\255:\\\204\231\272,\354x;\253\346\300<\255\343\004\275l\245\222;i\032\r:\262\311\2549\263V\242\272\010qO8\370\264:9\340\211b7\2441E\275\006\352\244\274\006\343\013\273\202\'\203;\0339\264\271\345#\022\272\036\375\006\275\2056\000\272\005\"\020:\032zo\273\022\024\\=\336\315\3508Z\364\301\273\206\247\230<\200\33668\004|v\2737\342\210<4?\024=\302\0030\272*)9=\005\213\221<\301V\002\274\306Ug9G\202\037=ph3\273/3B\272\267\233\210\272\035\276\003\275\017\305z\275Q}?\272\301\373\270\273Z\377\2479inG\275\225\026\020<\nr\272\272\002Y\221;r\275\000;uNV=\317\273\025=\"-\270\272\037\336q\275\032\353\216\273#\243\207\274\224\272\235<\020\213(\271q\241\032=x\201\235;[>\006=#:\217<\001\224\203=\002\263\203<\246\\\t=\tQd;r\214\274\273U\311Z;~\234\234\272\324\036\001;?dI<\250\374e\275i\320\201;N\006\002:\233<\234:\212ou\271\254&\2759\232P\241;)\200m\274\362y\364:\353\350\314\272\301\005/\274v\232\224;p\364\242<\210,\021\2757\260%=\037E\251\274\\W\376\274\277\344\226\273\366_\274<^\325j:sM\225\273|Du<\327\252\203\272>I\2229\242\357P9\024Mq=\252\263F\275\200q\367\271\352\272#:\r\325\372\2748\357{\273`Xe9\214\332\346\272\010\377\n=\353\370]\275\200g8<&\203\2339\256\010\360:\034p\030\275\331\010\242\273Y\376\321\273d\002e<p\225\010=\312\220\334;\332/;\273\250[U\272\314\223?\274ww{;Z\362\366:U\303\366<1Y\233\272\344\376X\275\316&\253\271\200g\327\266L\325L=\360\315\214;\334\362\377<\376\250?\275+\354\212\273iti\275\207\236\331\274x\235\364<6\3311:/\t\021\275\317\276\242\273v\302\3719GFQ=\204\213\243;0E\3028\265\224\305;@E\333\270\235\003\023;\373\'\177\274\332\345>8\245S\376\272\nr\351\271\257\004\241\273\335\020i9\362\323|\272\216\261B=\317\236x\274\272\002w;+\014\252<\257\333i\275k\337\202\270PD\r\273^\344V\274\036\255\014\273y\272\212\274\331e<=%;\r\273J\304D=/\3546=\210-\323<\357\354\021;H\274\322:\323\333\034\275#\362l\273m-$;v\347\211\271\234\316\242\274g \220<\377{\242\273\034\204{<6\t\343\270\nr\177\273\214$G\275\251\266\000:H\260\242\273\253\nZ\2720.\3306\212\036~9?\013j:u\222\355:8bQ\275\0027\362\272P\010\241;\025\251\n<\320rh\275\374\206\n;\364\021\341\270\377\346Q\274\236\317\270:\311\006\322\274^\307\303\273\000\302\0346\314-\307\271\341\330\001\273\270\311\3358\323\227\305<d\217\311\272\017sM\274`NW9\266J\243\273D\230e\273\003\222+<\366\026\211\274\255\362\221<@\037\235<\251\320\317\274\225\303\004\274\020\t\200=\244\250\334<\363\343\340\2749\312\242;@\327\r=L~\205\275\216\0271=hJ#=4\031o;\354\377\243<\013/\036\275\02023;\327\324\204\273H\3327\273\204e\227\273S)\003\273\302\014E\275;\275\340\273:\361\261\272\372\241\204\271\357\221\344\272\204\360\177\272\244\246\231\272\250\242m<\330\031^\274\001\257x\275\374\345Q;\014\373\202;\3778\000:#\246E<\3078\n=\013\230\037:z\327&=f7\2049\257`\366\274M\005\310\272\177\246~=\246\206a\272\225\025\033\275\321u\020=l\243\217<\270\rO=\304\037,\273%\252\0278\000\341\232;\265\264\013\273\326\024!;\305Bs\275.,d:\352\204A:O\n\325:\373(y=M\227@\275\303\221\216;\nJ\r\275@1\356;R\306\243:\306X\032:+\201H=~3S\275\344\327|\275/~\201:bvE=\362\036>\273Yi\023\275O\027\034\273\345p\332\272\251u\201\275\243\220\235<\251l\353\272\200W\243;\317\232\2279\224vJ<~\014\344<\376\033Q<Q$\344\272\236\222F\275X\003\227<\272\255|\273\005&\014\273\351\375\217\273\n5\206\271#,#\2753\227}=\373\366\370\272\306RR;0\020Y\271\355\236\r;@\035\005:i\262l=\222\230\275\272\223\310;\275GF\"\275S\367\007<\240\214\002\274R@r\275\204\306f\275\347Jj=lY ;|\343\323\273\036\376\002\273l:\305<u\333\002:\323\022\022<^\313\273<\222u\3109\255\323\251\272\313\r+;\344\257\355\271c4\232\2734\323~=\310\337\234;\314\021\2749kab\274\340\016~\275\334{\0208S\265\312<\374\337D=|\366\002\272,\tP=\214.\267:\2100\320\272\374\374\030\273J\317]\274\366\201\252<\036\222\205\272\302\002\207=\031\"\273\272\370\250!\271n\210\272\274\'2h;oEM;\260\247\2059^\300\241\273e_\021\273\272<\272\271\016\3259\273\304S\241\274xDN\275\'4\206\2748I\241\273\373\270\231:\002\021\0029\234\"-\270\253\305\260\271\270*\r\272\344\241\3368\357\343#<R\253p\275(\032\312\274WZ\355\270\333\203k\274$\374\027\275\030N|;A\023\224<\0309<=k\216{=3\272\034\272\026f\3708\243\003S=v\nx\275\001\035\n\275\200\221&=\256\233\211\273v2\356\271\306\\\021<\363I\030\274\266\2544;\003~\2219\211\3727<<\233\225:\315\3763;!S\2359O\333\251;\244\372\027:Q>\344<\255\241\241\273\307\336\305<\376\360w=\337\231e\275\232%\313<\365\006\227\273\014\251b;\251\037\337<DS\235\2738\033\321<\247-\220\273x\\\241<\021\355\037=\017q\323:f\361s=\352\202H9\017\247y=l5\027\270m<\364;[\033N\275\372\261\024=\364\347?\272\340\to\272a\316\342\272q\341\232\273\332}0\271\017U\310\272?\230\r\273D\236P\275pl]\275Q6\234\273+\352(\274\252\275$\273\252\211G\273Bk\240\273s}n\275#\336\243;/=P9*\367\322<\032\245H\275=_N\272\322\334c;\26600\272#r\004=\033zm\275\267\364::\377b\234;\200\272\222\2661\010\005\273m\275\244<`\330\021\273\0007\232\274\0347\031:\300\021\3608\020\207\317<\034ZY\275\371\3135\273\226DW\275\370\326^9\304\204-=\265#\364\272\n-\027=%\320.<\314\tg<\332hi=p!\213;\2339\264\274\264\203\200<\210\273}=\030\322Q9\327{q=y\032\340\274|+\30788=\243;\201\355y;\216\036\0059\006\200\321;\237\272\021:\306J\2149\202n\232\274}\217\022;\007\357\325\274dM\300\272]\251\205=\230iv:6\203\222\273\2430\324\274\305\372\345<\357a%9H\"\351\272\274\322.:r\365\2639\010>\205;\014\225\371\274p\025j\275\201\224\223;PCC= \374\030;3n\243;\234\017\341\271\235K#:\341?\241;<&\374:\350t\240\273s/\371<\217j\321:\214H\2269\256\205#\273\031ML\272\332pJ\275_\244\2469*+\206\275\321\342\013;\305t\357<\322\253\036=\220I\243;eE\367\274\276\303@:{\236=;\313\244\202\273\301\261_;\272\020\341\274|\273\341\274EX\374\274)\n\026\275\262\247\234:n9\017= P\313<\366\211u=\031\026[=\020j1\271\272\327\023=u\233\302\272\307yp=CC6=\361\224\220\273\224\226]8\311\014\335\272\010\241\202\275\310+y\274\230\320\004\272\004m\345;\260\214\2008\275\"\330\273\"`\2579\224\333\2119\342V|=\206\321\200\275\347T\024\275\222\206-\275\355\344\007\273\315\264,\272Y__\275f\331A\273)\316\\\273b\267\204<\216A\216\274\375\226\342\271\340\241\332\272|lw:\003\256\224<\334\024j:\0030\314:S\010\202\273\224\374\3239\336\315\223\274\337u6=\200\001Q\267U\376@=\271z\335:\363\251x=\335\363\241;!\265\263<\2504\234\273s\031\200;\260\0355=\340!\204=x\362\003\273\335\276\200\273\255\\A\274\271\252F\273\316\237\204\275f\331\241\273_\226\0149Q\223\263:\234=w=p\213\220\273\314\354\010\271\\\327:\273\004CB=\304I\014\274\251\330t=\017\226\232\273]\177\013;\350\271\035\273N`r=\315V?=r\363\201\272\261*\247:\367\212\230;\221lM=BeU;\241%\030=Z2\036\272\032(\025;b;Y9\370TJ\270\316\t\237\273\234\014\206;j\300[\274\260~\030<A#@=\260\030\365\274\270 \2428\215\255\213;\304\236\2549\037\022\225:\026\240\200\275\377\343\207;\311(\243;\350f\222\271 \301\3349\231\322\274\272\2063u\273\240z9\275\\^N\274\342\027\234;A\341\236\273\027\261\214\274\236\347)\274D\037\2578d\305\005\275\266\205\023:\300ZU\270\"\264Y:\002+*\271\3078\237;\313\244u="
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        tensor_content: "eK\001<48;=\375E\217\274\202vy<V\351\036=t\216\307<\362\216\023=R\256E\274\016\253;;\226\342\240<\336\303\2579\371\355\223\274\260\324\222\274Mu\221;T\2511\272\361\371\005<\376\373\024\274\242\206\004=\201F\313<^&\230=\257\234\"<F\376\201\273p\216e<!\237\204;n\257\250<\202\333%=`\313\307<?\322\265<\222\210\250\274Hx\005=cyr=\212,\224<\221\250\332;r\026\370\272\340\016\205\2749F\214;}\305T\274\343\005\211\274\336\025\371\273^\027\217\273\360\335=;6Ts<x\202\234\274O\301\202\274\220\343\254\274\033\3534\274\254z/\274\340\342\t<I>\231<9>p\274\246ka\274c /\2737\251\r<\225\246[\2740\"\251;\311\027\210\273\250\205\217\274\351.}<\234`$\274\315\t\245\274\321\000m\274I\341`\274h\220}<N\201\203\274\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\016\350;\205[0=\365\212\220\274\302\035~<\234\003\036=<\270\303<\362\004\026=\341m>\274\035\003Z;\243\321\245<\356\215\250:/~\222\274Yx\236\274\250T\251;(\332\240\271m5\030<\224`\035\274cl\006=\365\212\343<[\261\232=\254\363\035<P\3560\273\303E[<-\3741;\227\002\237<\354\253/=\314\347\321<\271\347\263<\267J\250\274\267n\007=B\224t=\000\203\231<"
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/concat"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul"
  input: "bidirectional_rnn/bw/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  op: "Add"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_127/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_127"
  op: "ConcatV2"
  input: "bidirectional_rnn/fw/fw/fw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_383"
  input: "bidirectional_rnn/bw/bw/bw/multi_rnn_cell/cell_1/basic_lstm_cell/Mul_2"
  input: "concat_127/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "w_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\031\336#\277i|(?^r~\277\327\342:?\302K\335\276\230K\025@\230\006\257?\0022\357>q\377\n?\207\301\365?\035\332X?\321\3576?i:\333?\r\2326>;\265\257?\222F\264>\021\206S?\240\032\324\276\273\027\344>\032Z\037\277\016\036f<\272o\026\300\356\307\035\277\362\330o\2779(\321=\1779\005@\257\014\202?\327[\256>\035y\362\275\215\212s=%\201s?+Q\000?\033r\023\277&\200\227?\003\304\247=\207\256\213?\014\265\354>\341\227\257?\006!t?\031x\222>J\312\202\276[w\214>\037\355]\276\267`\240\2777\017\221\277Q\263\037\276!\360\225\277\006\3613\277~\244\227\275\336_~\277\211%\375>7{\217\276F\264#>5\245\237>A\250\n\277\257\376N\277\300\310j\277\257\276)\276M\200\251>O\214z\277U,S\277d\316y>Y\1776\276=\373\"=\253&\277\276\020\000\261>\n\372\374\276J\001\210\276\346\335\326?\225\227\305=k3:?8\214\254?\021\357\026\277\273\253[\277h\257\000@\021\025\271?\312\363\307?\344R\030\300\246\240\317\276\230\240`?r\243\310\277\336R\266>RZ-\277fy\352\277\202vi\277\331v\252\277c\n\300\277.\004\361=!=\361=_\020)\277\207p\006\276ZB\256\275\224\022b?\331\331\320\276\\\240\025\277\351Y\220\2768/\305>\2708\303?\030I\250\2743*\256\276\360;F\277\203C\246\277\002\230\"?\312\266~\277\251\221\301\276u?\"?t\226\225\274\245d\017\277T\356\324\275\276\352\323?vc\365>\233f\303\276\205\374)?\205-\035\277\351p0?\r\270\034\277g\217\202\277f\314\034@\373\026\304\277\025\3002@\213:\031@c\262\343>\376\307\035<\375/\271\277t\001\225\277s\2267?\020\253\206?n\315(\277\3221W\275\0260\033?K\3543\277\210%\321\277?\037\274?\365d\241\276)B\t\300\"\326@?=\004\304?\275C\246?nn\200\276\030\214i\277z\000\003?\325\217\363>\274\027\347\277\"\340\224?\213{{?&|\216>\223\037q?\216\250\265>\336\234\346\275\335\372\347\276\274\212\223\276\326~\223\277g\033\222?\332\322v\277\340\035\025?\336\225\002\277e-\034\277\022M\275\276\240\215c\277G\3103=\303g\366>\364\357\212\276]\316-\277\262\317\307\276S8 \277\013\030\370\275\032\210\365\277\344,\027\277\t\254C\277\376\177;>2\373m\276Aod?\375\343I\277F\022\206?|\3758\275\002\317\237>\372\267;\277f\315\t\277u\213\245>[\254\241?\325\246;\276!\003_=*\202_\277\005V\r\300s\357\003\300\264\272\243>U\214$?\177\035m>V(\231\277\304\035b?\266\316\313>l\302\022\277T\217\361?ud\323?\245\243m\276\245K\007>s\020\255?\274=\'\300\314\346\361>>t\274\275\037\374\237>=5\311\276\320\301\001\300\224v\035\277x(F>\205\005\346\277\247\237\327>/C\232\277\271\323\005\277E\276\200\276\3761+\300\350(M>2j\334?\3201\203>\365x\313\276\204$\304?\200\344\303\2767\350U\276w\\\270\277\367AT\277\326f\254\276\022\221\030?\223\315Q\277u\233B>\377\334\254\276\231]E\300w\244\375\276\002D\307?\353\354#\277\001\274\273\276zt2\277;| ?2J>?\200\177\003@:\264\275>\302J\371\277\236\362\323=5\305\020\300J2G\277\026*\350\277\367X\263>\307\252[>\224\215\026\277\004gG\276\254\344\002\277wK8\277[\313\223\276wo\030?t\263Q?\257\321\355<o7\274\276\260A2\277\030z\243\276B\"\r\277`5\035\277x\212\305\277\344K\212\277S\202\355\276m\306\263\275\3336\345=\362Ux\277\2614\266\277\251\022\004<R\025\307?\357\277\245>\240\000*?\217\335\204?.\204\322\276\314\215\247?*\3745?\344>S\277\335)r\277\313.\020\300\005\271\342\276\336\360\217?DP\202>\271\036X?o\r\231\277*~\275\273qS\371>p\265\210\277\233\373&>\376>\221\276\002\\\007@zd\263\277\354\2230\276\225\\}\275^\235\366\275\256&\230>\202^9>\320;\315\276p\016\231?\356\206V=G\363F=;\217>>+\307l\277\017\275\033?\010-8\277\326-#\277\213Y\001?/\230\232?E\351I\300\231\373\326>dkT?\306\254&\276\316\3519?\236d\233\2778\376\003\276\320\340\033? \030\221\277\226K\261\277)\330\022\277\207\177+=W\373\216\276\204\032h\276O\231\317=\263\273_\276\346\364\203\276p\223\305>>A\243><?B?\35065\276\342\213h>\253\334\351?\267sQ\277M\267}\276\202I\360<\351\376\242>\375L\206>\312Y\317>\226\304<\277\3674\'>\341\272\"\276\241\275W?-gs?g\006\314?\327\367\352?OH\211?\365\350\023=e\265\212\277\304\362\211?\215\222\341>\336\306`\277V\3161=\2513S\276\2130\002?n:\220?\n\217L>b) >x\017\004>\352\213,?\254\001\221>\230\245C=\276L\224?P\\y>\343\327\030\277\251B\301<\r\027\236\277\203\034\254>\305\310\020>\024e\264\275\251F\316\276\302\030\035\277\340M\244\277\r\240\213\277an_?[\233\263>\320R\365?\231H\246<\337\033G\277I<`?My\017?\346U\341\276 \005\317\276\006\312N>\314\tS?\272&\270?r-L\276\300\340A?\327\206\316\276G\327\010@\220\213\004\277\272\215\320?\227\177\266?"
      }
    }
  }
}
node {
  name: "b_out"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\016Eq?\374\277\252>\263m\025\277PQ.\277CD\235\277\342\213$@"
      }
    }
  }
}
node {
  name: "output/MatMul"
  op: "MatMul"
  input: "concat_127"
  input: "w_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output"
  op: "BiasAdd"
  input: "output/MatMul"
  input: "b_out"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
